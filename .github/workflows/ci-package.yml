name: CI Package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install GCC
        run: sudo apt-get update && sudo apt-get install -y build-essential nasm

      # Install FFmpeg
      - name: Install FFmpeg
        run: |
          sudo apt-get update -q
          sudo apt-get install -y wget -q
          wget https://www.johnvansickle.com/ffmpeg/old-releases/ffmpeg-6.0-amd64-static.tar.xz -q
          tar -xf ffmpeg-6.0-amd64-static.tar.xz
          sudo mv ffmpeg-*-amd64-static/ffmpeg /usr/local/bin/
          sudo mv ffmpeg-*-amd64-static/ffprobe /usr/local/bin/
          ffmpeg -version

      - name: Install uv
        run: pip install uv
      - name: Create virtual environment
        run: uv venv
      - name: Install dependencies
        run: |
          source .venv/bin/activate
          uv pip install -r requirements.txt
      - name: Build package
        run: |
          source .venv/bin/activate
          python -m build
      - name: Install package
        run: |
          source .venv/bin/activate
          pip install dist/*.whl
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest src --cov=ffmpeg --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: backend,python,${{ matrix.python-version }}
          name: backend-coverage-py${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Build Mkdocs
        run: |
          source .venv/bin/activate
          mkdocs build

      # Run linting
      - name: Linting
        run: uv run pre-commit run --all-files
        working-directory: src
