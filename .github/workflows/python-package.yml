# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: python-unittest
on:
  push:
    branches: ["**"]

jobs:
  ci-codegen:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Install dependencies
        run: |
          poetry install --with test,dev
      - name: Lint with pre-commit
        run: |
          poetry run pre-commit run --all-files
      - name: Test with pytest
        run: |
          PYTHONPATH=./scripts poetry run pytest ./scripts --cov=./scripts

  ci-pacakge:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        pydantic-version: ["pydantic>=1.0, <2.0", "pydantic>=2.0, <3.0"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry & export Requirements
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Install specify pydantic version
        run: |
          pip install -U "${{ matrix.pydantic-version }}"
      - name: Install dependencies
        run: |
          poetry install --with test,dev
      - name: Lint with pre-commit
        run: |
          poetry run pre-commit run --all-files
      - name: Test with pytest
        run: |
          py.test ./src --cov=./scripts
