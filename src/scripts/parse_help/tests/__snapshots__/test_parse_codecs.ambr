# serializer version: 1
# name: test_extract_all_codecs
  list([
    FFMpegEncoder(name='a64multi', flags='V....D', description='Multicolor charset for Commodore 64 (codec a64_multi)', options=()),
    FFMpegEncoder(name='a64multi5', flags='V....D', description='Multicolor charset for Commodore 64, extended with 5th color (colram) (codec a64_multi5)', options=()),
    FFMpegEncoder(name='alias_pix', flags='V....D', description='Alias/Wavefront PIX image', options=()),
    FFMpegEncoder(name='amv', flags='V.....', description='AMV Video', options=(FFMpegAVOption(section='amv encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='amv encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='amv encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='amv encoder AVOptions:', name='huffman', type='int', flags='E..V.......', help='Huffman table strategy (from 0 to 1) (default optimal)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='optimal', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='amv encoder AVOptions:', name='force_duplicated_matrix', type='boolean', flags='E..V.......', help='Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='apng', flags='V....D', description='APNG (Animated Portable Network Graphics) image', options=()),
    FFMpegEncoder(name='asv1', flags='V....D', description='ASUS V1', options=()),
    FFMpegEncoder(name='asv2', flags='V....D', description='ASUS V2', options=()),
    FFMpegEncoder(name='librav1e', flags='V....D', description='librav1e AV1 (codec av1)', options=(FFMpegAVOption(section='librav1e AVOptions:', name='qp', type='int', flags='E..V.......', help='use constant quantizer mode (from -1 to 255) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='librav1e AVOptions:', name='speed', type='int', flags='E..V.......', help='what speed preset to use (from -1 to 10) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='librav1e AVOptions:', name='tiles', type='int', flags='E..V.......', help='number of tiles encode with (from -1 to I64_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='librav1e AVOptions:', name='tile-rows', type='int', flags='E..V.......', help='number of tiles rows to encode with (from -1 to I64_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='librav1e AVOptions:', name='tile-columns', type='int', flags='E..V.......', help='number of tiles columns to encode with (from -1 to I64_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='librav1e AVOptions:', name='rav1e-params', type='dictionary', flags='E..V.......', help='set the rav1e configuration using a :-separated list of key=value parameters', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='libsvtav1', flags='V.....', description='SVT-AV1(Scalable Video Technology for AV1) encoder (codec av1)', options=(FFMpegAVOption(section='libsvtav1 AVOptions:', name='hielevel', type='int', flags='E..V......P', help='Hierarchical prediction levels setting (Deprecated, use svtav1-params) (from -1 to 4) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='3level', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='4level', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='libsvtav1 AVOptions:', name='la_depth', type='int', flags='E..V......P', help='Look ahead distance [0, 120] (Deprecated, use svtav1-params) (from -1 to 120) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libsvtav1 AVOptions:', name='tier', type='int', flags='E..V......P', help='Set operating point tier (Deprecated, use svtav1-params) (from -1 to 1) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='libsvtav1 AVOptions:', name='preset', type='int', flags='E..V.......', help='Encoding preset (from -2 to 13) (default -2)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libsvtav1 AVOptions:', name='crf', type='int', flags='E..V.......', help='Constant Rate Factor value (from 0 to 63) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libsvtav1 AVOptions:', name='qp', type='int', flags='E..V.......', help='Initial Quantizer level value (from 0 to 63) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libsvtav1 AVOptions:', name='sc_detection', type='boolean', flags='E..V......P', help='Scene change detection (Deprecated, use svtav1-params) (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libsvtav1 AVOptions:', name='tile_columns', type='int', flags='E..V......P', help='Log2 of number of tile columns to use (Deprecated, use svtav1-params) (from -1 to 4) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libsvtav1 AVOptions:', name='tile_rows', type='int', flags='E..V......P', help='Log2 of number of tile rows to use (Deprecated, use svtav1-params) (from -1 to 6) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libsvtav1 AVOptions:', name='svtav1-params', type='dictionary', flags='E..V.......', help='Set the SVT-AV1 configuration using a :-separated list of key=value parameters', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='av1_nvenc', flags='V....D', description='NVIDIA NVENC av1 encoder (codec av1)', options=(FFMpegAVOption(section='av1_nvenc AVOptions:', name='preset', type='int', flags='E..V.......', help='Set the encoding preset (from 0 to 18) (default p4)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='slow', help='hq 2 passes', flags='E..V.......', value='1'), FFMpegOptionChoice(name='medium', help='hq 1 pass', flags='E..V.......', value='2'), FFMpegOptionChoice(name='fast', help='hp 1 pass', flags='E..V.......', value='3'), FFMpegOptionChoice(name='p1', help='fastest (lowest quality)', flags='E..V.......', value='12'), FFMpegOptionChoice(name='p2', help='faster (lower quality)', flags='E..V.......', value='13'), FFMpegOptionChoice(name='p3', help='fast (low quality)', flags='E..V.......', value='14'), FFMpegOptionChoice(name='p4', help='medium (default)', flags='E..V.......', value='15'), FFMpegOptionChoice(name='p5', help='slow (good quality)', flags='E..V.......', value='16'), FFMpegOptionChoice(name='p6', help='slower (better quality)', flags='E..V.......', value='17'), FFMpegOptionChoice(name='p7', help='slowest (best quality)', flags='E..V.......', value='18'))), FFMpegAVOption(section='av1_nvenc AVOptions:', name='tune', type='int', flags='E..V.......', help='Set the encoding tuning info (from 1 to 4) (default hq)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='hq', help='High quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='ll', help='Low latency', flags='E..V.......', value='2'), FFMpegOptionChoice(name='ull', help='Ultra low latency', flags='E..V.......', value='3'), FFMpegOptionChoice(name='lossless', help='Lossless', flags='E..V.......', value='4'))), FFMpegAVOption(section='av1_nvenc AVOptions:', name='level', type='int', flags='E..V.......', help='Set the encoding level restriction (from 0 to 24) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='24'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='5'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='6'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='7'), FFMpegOptionChoice(name='4', help='', flags='E..V.......', value='8'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='8'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='9'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='11'), FFMpegOptionChoice(name='5', help='', flags='E..V.......', value='12'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='12'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='15'), FFMpegOptionChoice(name='6', help='', flags='E..V.......', value='16'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='16'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='17'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='18'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='19'), FFMpegOptionChoice(name='7', help='', flags='E..V.......', value='20'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='20'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='21'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='22'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='23'))), FFMpegAVOption(section='av1_nvenc AVOptions:', name='tier', type='int', flags='E..V.......', help='Set the encoding tier (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='av1_nvenc AVOptions:', name='rc', type='int', flags='E..V.......', help='Override the preset rate-control (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='constqp', help='Constant QP mode', flags='E..V.......', value='0'), FFMpegOptionChoice(name='vbr', help='Variable bitrate mode', flags='E..V.......', value='1'), FFMpegOptionChoice(name='cbr', help='Constant bitrate mode', flags='E..V.......', value='2'))), FFMpegAVOption(section='av1_nvenc AVOptions:', name='multipass', type='int', flags='E..V.......', help='Set the multipass encoding (from 0 to 2) (default disabled)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='disabled', help='Single Pass', flags='E..V.......', value='0'), FFMpegOptionChoice(name='qres', help='Two Pass encoding is enabled where first Pass is quarter resolution', flags='E..V.......', value='1'), FFMpegOptionChoice(name='fullres', help='Two Pass encoding is enabled where first Pass is full resolution', flags='E..V.......', value='2'))), FFMpegAVOption(section='av1_nvenc AVOptions:', name='highbitdepth', type='boolean', flags='E..V.......', help='Enable 10 bit encode for 8 bit input (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='tile-rows', type='int', flags='E..V.......', help='Number of tile rows to encode with (from -1 to 64) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='tile-columns', type='int', flags='E..V.......', help='Number of tile columns to encode with (from -1 to 64) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='surfaces', type='int', flags='E..V.......', help='Number of concurrent surfaces (from 0 to 64) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='gpu', type='int', flags='E..V.......', help='Selects which NVENC capable GPU to use. First GPU is 0, second is 1, and so on. (from -2 to INT_MAX) (default any)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='any', help='Pick the first device available', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='list', help='List the available devices', flags='E..V.......', value='-2'))), FFMpegAVOption(section='av1_nvenc AVOptions:', name='rgb_mode', type='int', flags='E..V.......', help='Configure how nvenc handles packed RGB input. (from 0 to INT_MAX) (default yuv420)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='yuv420', help='Convert to yuv420', flags='E..V.......', value='1'), FFMpegOptionChoice(name='yuv444', help='Convert to yuv444', flags='E..V.......', value='2'), FFMpegOptionChoice(name='disabled', help='Disables support, throws an error.', flags='E..V.......', value='0'))), FFMpegAVOption(section='av1_nvenc AVOptions:', name='delay', type='int', flags='E..V.......', help='Delay frame output by the given amount of frames (from 0 to INT_MAX) (default INT_MAX)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='rc-lookahead', type='int', flags='E..V.......', help='Number of frames to look ahead for rate-control (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='cq', type='float', flags='E..V.......', help='Set target quality level (0 to 51, 0 means automatic) for constant quality mode in VBR rate control (from 0 to 51) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='init_qpP', type='int', flags='E..V.......', help='Initial QP value for P frame (from -1 to 255) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='init_qpB', type='int', flags='E..V.......', help='Initial QP value for B frame (from -1 to 255) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='init_qpI', type='int', flags='E..V.......', help='Initial QP value for I frame (from -1 to 255) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='qp', type='int', flags='E..V.......', help='Constant quantization parameter rate control method (from -1 to 255) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='qp_cb_offset', type='int', flags='E..V.......', help='Quantization parameter offset for cb channel (from -12 to 12) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='qp_cr_offset', type='int', flags='E..V.......', help='Quantization parameter offset for cr channel (from -12 to 12) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='no-scenecut', type='boolean', flags='E..V.......', help='When lookahead is enabled, set this to 1 to disable adaptive I-frame insertion at scene cuts (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='forced-idr', type='boolean', flags='E..V.......', help='If forcing keyframes, force them as IDR frames. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='b_adapt', type='boolean', flags='E..V.......', help='When lookahead is enabled, set this to 0 to disable adaptive B-frame decision (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='spatial-aq', type='boolean', flags='E..V.......', help='set to 1 to enable Spatial AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='temporal-aq', type='boolean', flags='E..V.......', help='set to 1 to enable Temporal AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='zerolatency', type='boolean', flags='E..V.......', help='Set 1 to indicate zero latency operation (no reordering delay) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='nonref_p', type='boolean', flags='E..V.......', help='Set this to 1 to enable automatic insertion of non-reference P-frames (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='strict_gop', type='boolean', flags='E..V.......', help='Set 1 to minimize GOP-to-GOP rate fluctuations (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='aq-strength', type='int', flags='E..V.......', help='When Spatial AQ is enabled, this field is used to specify AQ strength. AQ strength scale is from 1 (low) - 15 (aggressive) (from 1 to 15) (default 8)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='weighted_pred', type='boolean', flags='E..V.......', help='Enable weighted prediction (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='b_ref_mode', type='int', flags='E..V.......', help='Use B frames as references (from -1 to 2) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='disabled', help='B frames will not be used for reference', flags='E..V.......', value='0'), FFMpegOptionChoice(name='each', help='Each B frame will be used for reference', flags='E..V.......', value='1'), FFMpegOptionChoice(name='middle', help='Only (number of B frames)/2 will be used for reference', flags='E..V.......', value='2'))), FFMpegAVOption(section='av1_nvenc AVOptions:', name='dpb_size', type='int', flags='E..V.......', help='Specifies the DPB size used for encoding (0 means automatic) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='ldkfs', type='int', flags='E..V.......', help='Low delay key frame scale; Specifies the Scene Change frame size increase allowed in case of single frame VBV and CBR (from 0 to 255) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='intra-refresh', type='boolean', flags='E..V.......', help='Use Periodic Intra Refresh instead of IDR frames (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='timing-info', type='boolean', flags='E..V.......', help='Include timing info in sequence/frame headers (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='extra_sei', type='boolean', flags='E..V.......', help='Pass on extra SEI data (e.g. a53 cc) to be included in the bitstream (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='a53cc', type='boolean', flags='E..V.......', help='Use A53 Closed Captions (if available) (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_nvenc AVOptions:', name='s12m_tc', type='boolean', flags='E..V.......', help='Use timecode (if available) (default true)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='av1_vaapi', flags='V....D', description='AV1 (VAAPI) (codec av1)', options=(FFMpegAVOption(section='av1_vaapi AVOptions:', name='low_power', type='boolean', flags='E..V.......', help='Use low-power encoding mode (only available on some platforms; may not support all encoding features) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_vaapi AVOptions:', name='idr_interval', type='int', flags='E..V.......', help='Distance (in I-frames) between IDR frames (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_vaapi AVOptions:', name='b_depth', type='int', flags='E..V.......', help='Maximum B-frame reference depth (from 1 to INT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_vaapi AVOptions:', name='async_depth', type='int', flags='E..V.......', help="Maximum processing parallelism. Increase this to improve single channel performance. This option doesn't work if driver doesn't implement vaSyncBuffer function. (from 1 to 64) (default 2)", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_vaapi AVOptions:', name='max_frame_size', type='int', flags='E..V.......', help='Maximum frame size (in bytes) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_vaapi AVOptions:', name='rc_mode', type='int', flags='E..V.......', help='Set rate control mode (from 0 to 6) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='Choose mode automatically based on other parameters', flags='E..V.......', value='0'), FFMpegOptionChoice(name='CQP', help='Constant-quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='CBR', help='Constant-bitrate', flags='E..V.......', value='2'), FFMpegOptionChoice(name='VBR', help='Variable-bitrate', flags='E..V.......', value='3'), FFMpegOptionChoice(name='ICQ', help='Intelligent constant-quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='QVBR', help='Quality-defined variable-bitrate', flags='E..V.......', value='5'), FFMpegOptionChoice(name='AVBR', help='Average variable-bitrate', flags='E..V.......', value='6'))), FFMpegAVOption(section='av1_vaapi AVOptions:', name='profile', type='int', flags='E..V.......', help='Set profile (seq_profile) (from -99 to 255) (default -99)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='professional', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='av1_vaapi AVOptions:', name='tier', type='int', flags='E..V.......', help='Set tier (seq_tier) (from 0 to 1) (default main)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='av1_vaapi AVOptions:', name='level', type='int', flags='E..V.......', help='Set level (seq_level_idx) (from -99 to 31) (default -99)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='5'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='8'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='9'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='12'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='15'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='16'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='17'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='18'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='19'))), FFMpegAVOption(section='av1_vaapi AVOptions:', name='tiles', type='image_size', flags='E..V.......', help='Tile columns x rows (Use minimal tile column/row number automatically by default)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_vaapi AVOptions:', name='tile_groups', type='int', flags='E..V.......', help='Number of tile groups for encoding (from 1 to 4096) (default 1)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='avrp', flags='V....D', description='Avid 1:1 10-bit RGB Packer', options=()),
    FFMpegEncoder(name='avui', flags='V..X.D', description='Avid Meridien Uncompressed', options=()),
    FFMpegEncoder(name='ayuv', flags='V....D', description='Uncompressed packed MS 4:4:4:4', options=()),
    FFMpegEncoder(name='bitpacked', flags='VF...D', description='Bitpacked', options=()),
    FFMpegEncoder(name='bmp', flags='V....D', description='BMP (Windows and OS/2 bitmap)', options=()),
    FFMpegEncoder(name='cfhd', flags='VF...D', description='GoPro CineForm HD', options=(FFMpegAVOption(section='cfhd AVOptions:', name='quality', type='int', flags='E..V.......', help='set quality (from 0 to 12) (default film3+)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='film3', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='film2', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='5', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='', help='', flags='E..V.......', value='5'), FFMpegOptionChoice(name='film1', help='', flags='E..V.......', value='6'), FFMpegOptionChoice(name='', help='', flags='E..V.......', value='7'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='8'), FFMpegOptionChoice(name='', help='', flags='E..V.......', value='9'), FFMpegOptionChoice(name='medium', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='', help='', flags='E..V.......', value='11'), FFMpegOptionChoice(name='low', help='', flags='E..V.......', value='12'))),)),
    FFMpegEncoder(name='cinepak', flags='V....D', description='Cinepak', options=(FFMpegAVOption(section='cinepak AVOptions:', name='max_extra_cb_iterations', type='int', flags='E..V.......', help='Max extra codebook recalculation passes, more is better and slower (from 0 to INT_MAX) (default 2)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='cinepak AVOptions:', name='skip_empty_cb', type='boolean', flags='E..V.......', help='Avoid wasting bytes, ignore vintage MacOS decoder (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='cinepak AVOptions:', name='max_strips', type='int', flags='E..V.......', help='Limit strips/frame, vintage compatible is 1..3, otherwise the more the better (from 1 to 32) (default 3)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='cinepak AVOptions:', name='min_strips', type='int', flags='E..V.......', help='Enforce min strips/frame, more is worse and faster, must be <= max_strips (from 1 to 32) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='cinepak AVOptions:', name='strip_number_adaptivity', type='int', flags='E..V.......', help='How fast the strip number adapts, more is slightly better, much slower (from 0 to 31) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='cljr', flags='V....D', description='Cirrus Logic AccuPak', options=(FFMpegAVOption(section='cljr encoder AVOptions:', name='dither_type', type='int', flags='E..V.......', help='Dither type (from 0 to 2) (default 1)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='vc2', flags='V.S..D', description='SMPTE VC-2 (codec dirac)', options=()),
    FFMpegEncoder(name='dnxhd', flags='VFS..D', description='VC3/DNxHD', options=(FFMpegAVOption(section='dnxhd AVOptions:', name='nitris_compat', type='boolean', flags='E..V.......', help='encode with Avid Nitris compatibility (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='dnxhd AVOptions:', name='ibias', type='int', flags='E..V.......', help='intra quant bias (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='dnxhd AVOptions:', name='profile', type='int', flags='E..V.......', help='(from 0 to 5) (default dnxhd)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='dnxhd', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='dnxhr_444', help='', flags='E..V.......', value='5'), FFMpegOptionChoice(name='dnxhr_hqx', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='dnxhr_hq', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='dnxhr_sq', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dnxhr_lb', help='', flags='E..V.......', value='1'))))),
    FFMpegEncoder(name='dpx', flags='V....D', description='DPX (Digital Picture Exchange) image', options=()),
    FFMpegEncoder(name='dvvideo', flags='VFS..D', description='DV (Digital Video)', options=(FFMpegAVOption(section='dvvideo encoder AVOptions:', name='quant_deadzone', type='int', flags='E..V.......', help='Quantizer dead zone (from 0 to 1024) (default 7)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='exr', flags='VF...D', description='OpenEXR image', options=(FFMpegAVOption(section='exr AVOptions:', name='compression', type='int', flags='E..V.......', help='set compression type (from 0 to 3) (default none)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='none', flags='E..V.......', value='0'), FFMpegOptionChoice(name='rle', help='RLE', flags='E..V.......', value='1'), FFMpegOptionChoice(name='zip1', help='ZIP1', flags='E..V.......', value='2'), FFMpegOptionChoice(name='zip16', help='ZIP16', flags='E..V.......', value='3'))), FFMpegAVOption(section='exr AVOptions:', name='format', type='int', flags='E..V.......', help='set pixel type (from 1 to 2) (default float)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='half', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='float', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='exr AVOptions:', name='gamma', type='float', flags='E..V.......', help='set gamma (from 0.001 to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='ffv1', flags='V.S..D', description='FFmpeg video codec #1', options=(FFMpegAVOption(section='ffv1 encoder AVOptions:', name='slicecrc', type='boolean', flags='E..V.......', help='Protect slices with CRCs (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='ffv1 encoder AVOptions:', name='coder', type='int', flags='E..V.......', help='Coder type (from -2 to 2) (default rice)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='rice', help='Golomb rice', flags='E..V.......', value='0'), FFMpegOptionChoice(name='range_def', help='Range with default table', flags='E..V.......', value='-2'), FFMpegOptionChoice(name='range_tab', help='Range with custom table', flags='E..V.......', value='2'), FFMpegOptionChoice(name='ac', help='Range with custom table (the ac option exists for compatibility and is deprecated)', flags='E..V.......', value='1'))), FFMpegAVOption(section='ffv1 encoder AVOptions:', name='context', type='int', flags='E..V.......', help='Context model (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='ffvhuff', flags='VF...D', description='Huffyuv FFmpeg variant', options=(FFMpegAVOption(section='ffvhuff AVOptions:', name='non_deterministic', type='boolean', flags='E..V.......', help='Allow multithreading for e.g. context=1 at the expense of determinism (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='ffvhuff AVOptions:', name='pred', type='int', flags='E..V.......', help='Prediction method (from 0 to 2) (default left)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='left', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='plane', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='median', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='ffvhuff AVOptions:', name='context', type='int', flags='E..V.......', help='Set per-frame huffman tables (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='fits', flags='V....D', description='Flexible Image Transport System', options=()),
    FFMpegEncoder(name='flashsv', flags='V....D', description='Flash Screen Video', options=()),
    FFMpegEncoder(name='flashsv2', flags='V....D', description='Flash Screen Video Version 2', options=()),
    FFMpegEncoder(name='flv', flags='V.....', description='FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (codec flv1)', options=(FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='gif', flags='V....D', description='GIF (Graphics Interchange Format)', options=(FFMpegAVOption(section='GIF encoder AVOptions:', name='gifflags', type='flags', flags='E..V.......', help='set GIF flags (default offsetting+transdiff)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='offsetting', help='enable picture offsetting', flags='E..V.......', value='offsetting'), FFMpegOptionChoice(name='transdiff', help='enable transparency detection between frames', flags='E..V.......', value='transdiff'))), FFMpegAVOption(section='GIF encoder AVOptions:', name='gifimage', type='boolean', flags='E..V.......', help='enable encoding only images per frame (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='GIF encoder AVOptions:', name='global_palette', type='boolean', flags='E..V.......', help='write a palette to the global gif header where feasible (default true)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='h261', flags='V.....', description='H.261', options=(FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='h263', flags='V.....', description='H.263 / H.263-1996', options=(FFMpegAVOption(section='H.263 encoder AVOptions:', name='obmc', type='boolean', flags='E..V.......', help='use overlapped block motion compensation. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='mb_info', type='int', flags='E..V.......', help='emit macroblock info for RFC 2190 packetization, the parameter value is the maximum payload size (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='H.263 encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='H.263 encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='H.263 encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263 encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='h263_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.263 encoder wrapper (codec h263)', options=(FFMpegAVOption(section='h263_v4l2m2m_encoder AVOptions:', name='num_output_buffers', type='int', flags='E..V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h263_v4l2m2m_encoder AVOptions:', name='num_capture_buffers', type='int', flags='E..V.......', help='Number of buffers in the capture context (from 4 to INT_MAX) (default 4)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='h263p', flags='V.S...', description='H.263+ / H.263-1998 / H.263 version 2', options=(FFMpegAVOption(section='H.263p encoder AVOptions:', name='umv', type='boolean', flags='E..V.......', help='Use unlimited motion vectors. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='aiv', type='boolean', flags='E..V.......', help='Use alternative inter VLC. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='obmc', type='boolean', flags='E..V.......', help='use overlapped block motion compensation. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='structured_slices', type='boolean', flags='E..V.......', help='Write slice start position at every GOB header instead of just GOB number. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='H.263p encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='H.263p encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='H.263p encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H.263p encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='libx264', flags='V....D', description='libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (codec h264)', options=(FFMpegAVOption(section='libx264 AVOptions:', name='preset', type='string', flags='E..V.......', help='Set the encoding preset (cf. x264 --fullhelp) (default "medium")', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='tune', type='string', flags='E..V.......', help='Tune the encoding params (cf. x264 --fullhelp)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='profile', type='string', flags='E..V.......', help='Set profile restrictions (cf. x264 --fullhelp)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='fastfirstpass', type='boolean', flags='E..V.......', help='Use fast settings when encoding first pass (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='level', type='string', flags='E..V.......', help='Specify level (as defined by Annex A)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='passlogfile', type='string', flags='E..V.......', help='Filename for 2 pass stats', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='wpredp', type='string', flags='E..V.......', help='Weighted prediction for P-frames', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='a53cc', type='boolean', flags='E..V.......', help='Use A53 Closed Captions (if available) (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='x264opts', type='string', flags='E..V.......', help='x264 options', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='crf', type='float', flags='E..V.......', help='Select the quality for constant quality mode (from -1 to FLT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='crf_max', type='float', flags='E..V.......', help='In CRF mode, prevents VBV from lowering quality beyond this point. (from -1 to FLT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='qp', type='int', flags='E..V.......', help='Constant quantization parameter rate control method (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='aq-mode', type='int', flags='E..V.......', help='AQ method (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='variance', help='Variance AQ (complexity mask)', flags='E..V.......', value='1'), FFMpegOptionChoice(name='autovariance', help='Auto-variance AQ', flags='E..V.......', value='2'), FFMpegOptionChoice(name='autovariance-biased', help='Auto-variance AQ with bias to dark scenes', flags='E..V.......', value='3'))), FFMpegAVOption(section='libx264 AVOptions:', name='aq-strength', type='float', flags='E..V.......', help='AQ strength. Reduces blocking and blurring in flat and textured areas. (from -1 to FLT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='psy', type='boolean', flags='E..V.......', help='Use psychovisual optimizations. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='psy-rd', type='string', flags='E..V.......', help='Strength of psychovisual optimization, in <psy-rd>:<psy-trellis> format.', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='rc-lookahead', type='int', flags='E..V.......', help='Number of frames to look ahead for frametype and ratecontrol (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='weightb', type='boolean', flags='E..V.......', help='Weighted prediction for B-frames. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='weightp', type='int', flags='E..V.......', help='Weighted prediction analysis method. (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='simple', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='smart', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='libx264 AVOptions:', name='ssim', type='boolean', flags='E..V.......', help='Calculate and print SSIM stats. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='intra-refresh', type='boolean', flags='E..V.......', help='Use Periodic Intra Refresh instead of IDR frames. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='bluray-compat', type='boolean', flags='E..V.......', help='Bluray compatibility workarounds. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='b-bias', type='int', flags='E..V.......', help='Influences how often B-frames are used (from INT_MIN to INT_MAX) (default INT_MIN)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='b-pyramid', type='int', flags='E..V.......', help='Keep some B-frames as references. (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='strict', help='Strictly hierarchical pyramid', flags='E..V.......', value='1'), FFMpegOptionChoice(name='normal', help='Non-strict (not Blu-ray compatible)', flags='E..V.......', value='2'))), FFMpegAVOption(section='libx264 AVOptions:', name='mixed-refs', type='boolean', flags='E..V.......', help='One reference per partition, as opposed to one reference per macroblock (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='8x8dct', type='boolean', flags='E..V.......', help='High profile 8x8 transform. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='fast-pskip', type='boolean', flags='E..V.......', help='(default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='aud', type='boolean', flags='E..V.......', help='Use access unit delimiters. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='mbtree', type='boolean', flags='E..V.......', help='Use macroblock tree ratecontrol. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='deblock', type='string', flags='E..V.......', help='Loop filter parameters, in <alpha:beta> form.', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='cplxblur', type='float', flags='E..V.......', help='Reduce fluctuations in QP (before curve compression) (from -1 to FLT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='partitions', type='string', flags='E..V.......', help='A comma-separated list of partitions to consider. Possible values: p8x8, p4x4, b8x8, i8x8, i4x4, none, all', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='direct-pred', type='int', flags='E..V.......', help='Direct MV prediction mode (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='spatial', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='temporal', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='3'))), FFMpegAVOption(section='libx264 AVOptions:', name='slice-max-size', type='int', flags='E..V.......', help='Limit the size of each slice in bytes (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='stats', type='string', flags='E..V.......', help='Filename for 2 pass stats', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='nal-hrd', type='int', flags='E..V.......', help='Signal HRD information (requires vbv-bufsize; cbr not allowed in .mp4) (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='vbr', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='cbr', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='libx264 AVOptions:', name='avcintra-class', type='int', flags='E..V.......', help='AVC-Intra class 50/100/200/300/480 (from -1 to 480) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='me_method', type='int', flags='E..V.......', help='Set motion estimation method (from -1 to 4) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='dia', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='hex', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='umh', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='esa', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='tesa', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='libx264 AVOptions:', name='motion-est', type='int', flags='E..V.......', help='Set motion estimation method (from -1 to 4) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='dia', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='hex', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='umh', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='esa', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='tesa', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='libx264 AVOptions:', name='forced-idr', type='boolean', flags='E..V.......', help='If forcing keyframes, force them as IDR frames. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='coder', type='int', flags='E..V.......', help='Coder type (from -1 to 1) (default default)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='cavlc', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='cabac', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='vlc', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='ac', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='libx264 AVOptions:', name='b_strategy', type='int', flags='E..V.......', help='Strategy to choose between I/P/B-frames (from -1 to 2) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='chromaoffset', type='int', flags='E..V.......', help='QP difference between chroma and luma (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='udu_sei', type='boolean', flags='E..V.......', help='Use user data unregistered SEI if available (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='x264-params', type='dictionary', flags='E..V.......', help='Override the x264 configuration using a :-separated list of key=value parameters', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264 AVOptions:', name='mb_info', type='boolean', flags='E..V.......', help='Set mb_info data through AVSideData, only useful when used from the API (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='libx264rgb', flags='V....D', description='libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 RGB (codec h264)', options=(FFMpegAVOption(section='libx264rgb AVOptions:', name='preset', type='string', flags='E..V.......', help='Set the encoding preset (cf. x264 --fullhelp) (default "medium")', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='tune', type='string', flags='E..V.......', help='Tune the encoding params (cf. x264 --fullhelp)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='profile', type='string', flags='E..V.......', help='Set profile restrictions (cf. x264 --fullhelp)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='fastfirstpass', type='boolean', flags='E..V.......', help='Use fast settings when encoding first pass (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='level', type='string', flags='E..V.......', help='Specify level (as defined by Annex A)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='passlogfile', type='string', flags='E..V.......', help='Filename for 2 pass stats', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='wpredp', type='string', flags='E..V.......', help='Weighted prediction for P-frames', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='a53cc', type='boolean', flags='E..V.......', help='Use A53 Closed Captions (if available) (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='x264opts', type='string', flags='E..V.......', help='x264 options', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='crf', type='float', flags='E..V.......', help='Select the quality for constant quality mode (from -1 to FLT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='crf_max', type='float', flags='E..V.......', help='In CRF mode, prevents VBV from lowering quality beyond this point. (from -1 to FLT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='qp', type='int', flags='E..V.......', help='Constant quantization parameter rate control method (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='aq-mode', type='int', flags='E..V.......', help='AQ method (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='variance', help='Variance AQ (complexity mask)', flags='E..V.......', value='1'), FFMpegOptionChoice(name='autovariance', help='Auto-variance AQ', flags='E..V.......', value='2'), FFMpegOptionChoice(name='autovariance-biased', help='Auto-variance AQ with bias to dark scenes', flags='E..V.......', value='3'))), FFMpegAVOption(section='libx264rgb AVOptions:', name='aq-strength', type='float', flags='E..V.......', help='AQ strength. Reduces blocking and blurring in flat and textured areas. (from -1 to FLT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='psy', type='boolean', flags='E..V.......', help='Use psychovisual optimizations. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='psy-rd', type='string', flags='E..V.......', help='Strength of psychovisual optimization, in <psy-rd>:<psy-trellis> format.', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='rc-lookahead', type='int', flags='E..V.......', help='Number of frames to look ahead for frametype and ratecontrol (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='weightb', type='boolean', flags='E..V.......', help='Weighted prediction for B-frames. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='weightp', type='int', flags='E..V.......', help='Weighted prediction analysis method. (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='simple', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='smart', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='libx264rgb AVOptions:', name='ssim', type='boolean', flags='E..V.......', help='Calculate and print SSIM stats. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='intra-refresh', type='boolean', flags='E..V.......', help='Use Periodic Intra Refresh instead of IDR frames. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='bluray-compat', type='boolean', flags='E..V.......', help='Bluray compatibility workarounds. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='b-bias', type='int', flags='E..V.......', help='Influences how often B-frames are used (from INT_MIN to INT_MAX) (default INT_MIN)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='b-pyramid', type='int', flags='E..V.......', help='Keep some B-frames as references. (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='strict', help='Strictly hierarchical pyramid', flags='E..V.......', value='1'), FFMpegOptionChoice(name='normal', help='Non-strict (not Blu-ray compatible)', flags='E..V.......', value='2'))), FFMpegAVOption(section='libx264rgb AVOptions:', name='mixed-refs', type='boolean', flags='E..V.......', help='One reference per partition, as opposed to one reference per macroblock (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='8x8dct', type='boolean', flags='E..V.......', help='High profile 8x8 transform. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='fast-pskip', type='boolean', flags='E..V.......', help='(default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='aud', type='boolean', flags='E..V.......', help='Use access unit delimiters. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='mbtree', type='boolean', flags='E..V.......', help='Use macroblock tree ratecontrol. (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='deblock', type='string', flags='E..V.......', help='Loop filter parameters, in <alpha:beta> form.', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='cplxblur', type='float', flags='E..V.......', help='Reduce fluctuations in QP (before curve compression) (from -1 to FLT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='partitions', type='string', flags='E..V.......', help='A comma-separated list of partitions to consider. Possible values: p8x8, p4x4, b8x8, i8x8, i4x4, none, all', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='direct-pred', type='int', flags='E..V.......', help='Direct MV prediction mode (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='spatial', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='temporal', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='3'))), FFMpegAVOption(section='libx264rgb AVOptions:', name='slice-max-size', type='int', flags='E..V.......', help='Limit the size of each slice in bytes (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='stats', type='string', flags='E..V.......', help='Filename for 2 pass stats', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='nal-hrd', type='int', flags='E..V.......', help='Signal HRD information (requires vbv-bufsize; cbr not allowed in .mp4) (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='vbr', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='cbr', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='libx264rgb AVOptions:', name='avcintra-class', type='int', flags='E..V.......', help='AVC-Intra class 50/100/200/300/480 (from -1 to 480) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='me_method', type='int', flags='E..V.......', help='Set motion estimation method (from -1 to 4) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='dia', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='hex', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='umh', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='esa', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='tesa', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='libx264rgb AVOptions:', name='motion-est', type='int', flags='E..V.......', help='Set motion estimation method (from -1 to 4) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='dia', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='hex', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='umh', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='esa', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='tesa', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='libx264rgb AVOptions:', name='forced-idr', type='boolean', flags='E..V.......', help='If forcing keyframes, force them as IDR frames. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='coder', type='int', flags='E..V.......', help='Coder type (from -1 to 1) (default default)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='cavlc', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='cabac', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='vlc', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='ac', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='libx264rgb AVOptions:', name='b_strategy', type='int', flags='E..V.......', help='Strategy to choose between I/P/B-frames (from -1 to 2) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='chromaoffset', type='int', flags='E..V.......', help='QP difference between chroma and luma (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='udu_sei', type='boolean', flags='E..V.......', help='Use user data unregistered SEI if available (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='x264-params', type='dictionary', flags='E..V.......', help='Override the x264 configuration using a :-separated list of key=value parameters', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx264rgb AVOptions:', name='mb_info', type='boolean', flags='E..V.......', help='Set mb_info data through AVSideData, only useful when used from the API (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='h264_nvenc', flags='V....D', description='NVIDIA NVENC H.264 encoder (codec h264)', options=(FFMpegAVOption(section='h264_nvenc AVOptions:', name='preset', type='int', flags='E..V.......', help='Set the encoding preset (from 0 to 18) (default p4)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='slow', help='hq 2 passes', flags='E..V.......', value='1'), FFMpegOptionChoice(name='medium', help='hq 1 pass', flags='E..V.......', value='2'), FFMpegOptionChoice(name='fast', help='hp 1 pass', flags='E..V.......', value='3'), FFMpegOptionChoice(name='hp', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='hq', help='', flags='E..V.......', value='5'), FFMpegOptionChoice(name='bd', help='', flags='E..V.......', value='6'), FFMpegOptionChoice(name='ll', help='low latency', flags='E..V.......', value='7'), FFMpegOptionChoice(name='llhq', help='low latency hq', flags='E..V.......', value='8'), FFMpegOptionChoice(name='llhp', help='low latency hp', flags='E..V.......', value='9'), FFMpegOptionChoice(name='lossless', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='losslesshp', help='', flags='E..V.......', value='11'), FFMpegOptionChoice(name='p1', help='fastest (lowest quality)', flags='E..V.......', value='12'), FFMpegOptionChoice(name='p2', help='faster (lower quality)', flags='E..V.......', value='13'), FFMpegOptionChoice(name='p3', help='fast (low quality)', flags='E..V.......', value='14'), FFMpegOptionChoice(name='p4', help='medium (default)', flags='E..V.......', value='15'), FFMpegOptionChoice(name='p5', help='slow (good quality)', flags='E..V.......', value='16'), FFMpegOptionChoice(name='p6', help='slower (better quality)', flags='E..V.......', value='17'), FFMpegOptionChoice(name='p7', help='slowest (best quality)', flags='E..V.......', value='18'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='tune', type='int', flags='E..V.......', help='Set the encoding tuning info (from 1 to 4) (default hq)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='hq', help='High quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='ll', help='Low latency', flags='E..V.......', value='2'), FFMpegOptionChoice(name='ull', help='Ultra low latency', flags='E..V.......', value='3'), FFMpegOptionChoice(name='lossless', help='Lossless', flags='E..V.......', value='4'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='profile', type='int', flags='E..V.......', help='Set the encoding profile (from 0 to 3) (default main)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='baseline', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='high444p', help='', flags='E..V.......', value='3'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='level', type='int', flags='E..V.......', help='Set the encoding level restriction (from 0 to 62) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='1b', help='', flags='E..V.......', value='9'), FFMpegOptionChoice(name='0b', help='', flags='E..V.......', value='9'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='11'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='12'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='20'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='20'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='21'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='22'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='30'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='30'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='31'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='32'), FFMpegOptionChoice(name='4', help='', flags='E..V.......', value='40'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='40'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='41'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='42'), FFMpegOptionChoice(name='5', help='', flags='E..V.......', value='50'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='50'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='51'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='52'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='60'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='61'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='62'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='rc', type='int', flags='E..V.......', help='Override the preset rate-control (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='constqp', help='Constant QP mode', flags='E..V.......', value='0'), FFMpegOptionChoice(name='vbr', help='Variable bitrate mode', flags='E..V.......', value='1'), FFMpegOptionChoice(name='cbr', help='Constant bitrate mode', flags='E..V.......', value='2'), FFMpegOptionChoice(name='vbr_minqp', help='Variable bitrate mode with MinQP (deprecated)', flags='E..V.......', value='8388609'), FFMpegOptionChoice(name='ll_2pass_quality', help='Multi-pass optimized for image quality (deprecated)', flags='E..V.......', value='8388609'), FFMpegOptionChoice(name='ll_2pass_size', help='Multi-pass optimized for constant frame size (deprecated)', flags='E..V.......', value='8388610'), FFMpegOptionChoice(name='vbr_2pass', help='Multi-pass variable bitrate mode (deprecated)', flags='E..V.......', value='8388609'), FFMpegOptionChoice(name='cbr_ld_hq', help='Constant bitrate low delay high quality mode', flags='E..V.......', value='8388610'), FFMpegOptionChoice(name='cbr_hq', help='Constant bitrate high quality mode', flags='E..V.......', value='8388610'), FFMpegOptionChoice(name='vbr_hq', help='Variable bitrate high quality mode', flags='E..V.......', value='8388609'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='rc-lookahead', type='int', flags='E..V.......', help='Number of frames to look ahead for rate-control (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='surfaces', type='int', flags='E..V.......', help='Number of concurrent surfaces (from 0 to 64) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='cbr', type='boolean', flags='E..V.......', help='Use cbr encoding mode (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='2pass', type='boolean', flags='E..V.......', help='Use 2pass encoding mode (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='gpu', type='int', flags='E..V.......', help='Selects which NVENC capable GPU to use. First GPU is 0, second is 1, and so on. (from -2 to INT_MAX) (default any)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='any', help='Pick the first device available', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='list', help='List the available devices', flags='E..V.......', value='-2'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='rgb_mode', type='int', flags='E..V.......', help='Configure how nvenc handles packed RGB input. (from 0 to INT_MAX) (default yuv420)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='yuv420', help='Convert to yuv420', flags='E..V.......', value='1'), FFMpegOptionChoice(name='yuv444', help='Convert to yuv444', flags='E..V.......', value='2'), FFMpegOptionChoice(name='disabled', help='Disables support, throws an error.', flags='E..V.......', value='0'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='delay', type='int', flags='E..V.......', help='Delay frame output by the given amount of frames (from 0 to INT_MAX) (default INT_MAX)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='no-scenecut', type='boolean', flags='E..V.......', help='When lookahead is enabled, set this to 1 to disable adaptive I-frame insertion at scene cuts (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='forced-idr', type='boolean', flags='E..V.......', help='If forcing keyframes, force them as IDR frames. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='b_adapt', type='boolean', flags='E..V.......', help='When lookahead is enabled, set this to 0 to disable adaptive B-frame decision (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='spatial-aq', type='boolean', flags='E..V.......', help='set to 1 to enable Spatial AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='spatial_aq', type='boolean', flags='E..V.......', help='set to 1 to enable Spatial AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='temporal-aq', type='boolean', flags='E..V.......', help='set to 1 to enable Temporal AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='temporal_aq', type='boolean', flags='E..V.......', help='set to 1 to enable Temporal AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='zerolatency', type='boolean', flags='E..V.......', help='Set 1 to indicate zero latency operation (no reordering delay) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='nonref_p', type='boolean', flags='E..V.......', help='Set this to 1 to enable automatic insertion of non-reference P-frames (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='strict_gop', type='boolean', flags='E..V.......', help='Set 1 to minimize GOP-to-GOP rate fluctuations (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='aq-strength', type='int', flags='E..V.......', help='When Spatial AQ is enabled, this field is used to specify AQ strength. AQ strength scale is from 1 (low) - 15 (aggressive) (from 1 to 15) (default 8)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='cq', type='float', flags='E..V.......', help='Set target quality level (0 to 51, 0 means automatic) for constant quality mode in VBR rate control (from 0 to 51) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='aud', type='boolean', flags='E..V.......', help='Use access unit delimiters (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='bluray-compat', type='boolean', flags='E..V.......', help='Bluray compatibility workarounds (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='init_qpP', type='int', flags='E..V.......', help='Initial QP value for P frame (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='init_qpB', type='int', flags='E..V.......', help='Initial QP value for B frame (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='init_qpI', type='int', flags='E..V.......', help='Initial QP value for I frame (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='qp', type='int', flags='E..V.......', help='Constant quantization parameter rate control method (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='qp_cb_offset', type='int', flags='E..V.......', help='Quantization parameter offset for cb channel (from -12 to 12) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='qp_cr_offset', type='int', flags='E..V.......', help='Quantization parameter offset for cr channel (from -12 to 12) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='weighted_pred', type='int', flags='E..V.......', help='Set 1 to enable weighted prediction (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='coder', type='int', flags='E..V.......', help='Coder type (from -1 to 2) (default default)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='cabac', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='cavlc', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='ac', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='vlc', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='b_ref_mode', type='int', flags='E..V.......', help='Use B frames as references (from -1 to 2) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='disabled', help='B frames will not be used for reference', flags='E..V.......', value='0'), FFMpegOptionChoice(name='each', help='Each B frame will be used for reference', flags='E..V.......', value='1'), FFMpegOptionChoice(name='middle', help='Only (number of B frames)/2 will be used for reference', flags='E..V.......', value='2'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='a53cc', type='boolean', flags='E..V.......', help='Use A53 Closed Captions (if available) (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='dpb_size', type='int', flags='E..V.......', help='Specifies the DPB size used for encoding (0 means automatic) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='multipass', type='int', flags='E..V.......', help='Set the multipass encoding (from 0 to 2) (default disabled)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='disabled', help='Single Pass', flags='E..V.......', value='0'), FFMpegOptionChoice(name='qres', help='Two Pass encoding is enabled where first Pass is quarter resolution', flags='E..V.......', value='1'), FFMpegOptionChoice(name='fullres', help='Two Pass encoding is enabled where first Pass is full resolution', flags='E..V.......', value='2'))), FFMpegAVOption(section='h264_nvenc AVOptions:', name='ldkfs', type='int', flags='E..V.......', help='Low delay key frame scale; Specifies the Scene Change frame size increase allowed in case of single frame VBV and CBR (from 0 to 255) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='extra_sei', type='boolean', flags='E..V.......', help='Pass on extra SEI data (e.g. a53 cc) to be included in the bitstream (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='udu_sei', type='boolean', flags='E..V.......', help='Pass on user data unregistered SEI if available (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='intra-refresh', type='boolean', flags='E..V.......', help='Use Periodic Intra Refresh instead of IDR frames (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='single-slice-intra-refresh', type='boolean', flags='E..V.......', help='Use single slice intra refresh (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='max_slice_size', type='int', flags='E..V.......', help='Maximum encoded slice size in bytes (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_nvenc AVOptions:', name='constrained-encoding', type='boolean', flags='E..V.......', help='Enable constrainedFrame encoding where each slice in the constrained picture is independent of other slices (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='h264_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.264 encoder wrapper (codec h264)', options=(FFMpegAVOption(section='h264_v4l2m2m_encoder AVOptions:', name='num_output_buffers', type='int', flags='E..V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_v4l2m2m_encoder AVOptions:', name='num_capture_buffers', type='int', flags='E..V.......', help='Number of buffers in the capture context (from 4 to INT_MAX) (default 4)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='h264_vaapi', flags='V....D', description='H.264/AVC (VAAPI) (codec h264)', options=(FFMpegAVOption(section='h264_vaapi AVOptions:', name='low_power', type='boolean', flags='E..V.......', help='Use low-power encoding mode (only available on some platforms; may not support all encoding features) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_vaapi AVOptions:', name='idr_interval', type='int', flags='E..V.......', help='Distance (in I-frames) between IDR frames (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_vaapi AVOptions:', name='b_depth', type='int', flags='E..V.......', help='Maximum B-frame reference depth (from 1 to INT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_vaapi AVOptions:', name='async_depth', type='int', flags='E..V.......', help="Maximum processing parallelism. Increase this to improve single channel performance. This option doesn't work if driver doesn't implement vaSyncBuffer function. (from 1 to 64) (default 2)", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_vaapi AVOptions:', name='max_frame_size', type='int', flags='E..V.......', help='Maximum frame size (in bytes) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_vaapi AVOptions:', name='rc_mode', type='int', flags='E..V.......', help='Set rate control mode (from 0 to 6) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='Choose mode automatically based on other parameters', flags='E..V.......', value='0'), FFMpegOptionChoice(name='CQP', help='Constant-quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='CBR', help='Constant-bitrate', flags='E..V.......', value='2'), FFMpegOptionChoice(name='VBR', help='Variable-bitrate', flags='E..V.......', value='3'), FFMpegOptionChoice(name='ICQ', help='Intelligent constant-quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='QVBR', help='Quality-defined variable-bitrate', flags='E..V.......', value='5'), FFMpegOptionChoice(name='AVBR', help='Average variable-bitrate', flags='E..V.......', value='6'))), FFMpegAVOption(section='h264_vaapi AVOptions:', name='qp', type='int', flags='E..V.......', help='Constant QP (for P-frames; scaled by qfactor/qoffset for I/B) (from 0 to 52) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_vaapi AVOptions:', name='quality', type='int', flags='E..V.......', help='Set encode quality (trades off against speed, higher is faster) (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_vaapi AVOptions:', name='coder', type='int', flags='E..V.......', help='Entropy coder type (from 0 to 1) (default cabac)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='cavlc', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='cabac', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='vlc', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='ac', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='h264_vaapi AVOptions:', name='aud', type='boolean', flags='E..V.......', help='Include AUD (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_vaapi AVOptions:', name='sei', type='flags', flags='E..V.......', help='Set SEI to include (default identifier+timing+recovery_point+a53_cc)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='identifier', help='Include encoder version identifier', flags='E..V.......', value='identifier'), FFMpegOptionChoice(name='timing', help='Include timing parameters (buffering_period and pic_timing)', flags='E..V.......', value='timing'), FFMpegOptionChoice(name='recovery_point', help='Include recovery points where appropriate', flags='E..V.......', value='recovery_point'), FFMpegOptionChoice(name='a53_cc', help='Include A/53 caption data', flags='E..V.......', value='a53_cc'))), FFMpegAVOption(section='h264_vaapi AVOptions:', name='profile', type='int', flags='E..V.......', help='Set profile (profile_idc and constraint_set*_flag) (from -99 to 65535) (default -99)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='constrained_baseline', help='', flags='E..V.......', value='578'), FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='77'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='100'), FFMpegOptionChoice(name='high10', help='', flags='E..V.......', value='110'))), FFMpegAVOption(section='h264_vaapi AVOptions:', name='level', type='int', flags='E..V.......', help='Set level (level_idc) (from -99 to 255) (default -99)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='11'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='12'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='20'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='21'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='22'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='30'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='31'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='32'), FFMpegOptionChoice(name='4', help='', flags='E..V.......', value='40'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='41'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='42'), FFMpegOptionChoice(name='5', help='', flags='E..V.......', value='50'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='51'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='52'), FFMpegOptionChoice(name='6', help='', flags='E..V.......', value='60'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='61'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='62'))))),
    FFMpegEncoder(name='hap', flags='V.S..D', description='Vidvox Hap', options=(FFMpegAVOption(section='Hap encoder AVOptions:', name='format', type='int', flags='E..V.......', help='(from 11 to 15) (default hap)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='hap', help='Hap 1 (DXT1 textures)', flags='E..V.......', value='11'), FFMpegOptionChoice(name='hap_alpha', help='Hap Alpha (DXT5 textures)', flags='E..V.......', value='14'), FFMpegOptionChoice(name='hap_q', help='Hap Q (DXT5-YCoCg textures)', flags='E..V.......', value='15'))), FFMpegAVOption(section='Hap encoder AVOptions:', name='chunks', type='int', flags='E..V.......', help='chunk count (from 1 to 64) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='Hap encoder AVOptions:', name='compressor', type='int', flags='E..V.......', help='second-stage compressor (from 160 to 176) (default snappy)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='None', flags='E..V.......', value='160'), FFMpegOptionChoice(name='snappy', help='Snappy', flags='E..V.......', value='176'))))),
    FFMpegEncoder(name='hdr', flags='VF...D', description='HDR (Radiance RGBE format) image', options=()),
    FFMpegEncoder(name='libx265', flags='V....D', description='libx265 H.265 / HEVC (codec hevc)', options=(FFMpegAVOption(section='libx265 AVOptions:', name='crf', type='float', flags='E..V.......', help='set the x265 crf (from -1 to FLT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx265 AVOptions:', name='qp', type='int', flags='E..V.......', help='set the x265 qp (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx265 AVOptions:', name='forced-idr', type='boolean', flags='E..V.......', help='if forcing keyframes, force them as IDR frames (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx265 AVOptions:', name='preset', type='string', flags='E..V.......', help='set the x265 preset', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx265 AVOptions:', name='tune', type='string', flags='E..V.......', help='set the x265 tune parameter', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx265 AVOptions:', name='profile', type='string', flags='E..V.......', help='set the x265 profile', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx265 AVOptions:', name='udu_sei', type='boolean', flags='E..V.......', help='Use user data unregistered SEI if available (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx265 AVOptions:', name='a53cc', type='boolean', flags='E..V.......', help='Use A53 Closed Captions (if available) (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libx265 AVOptions:', name='x265-params', type='dictionary', flags='E..V.......', help='set the x265 configuration using a :-separated list of key=value parameters', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='hevc_nvenc', flags='V....D', description='NVIDIA NVENC hevc encoder (codec hevc)', options=(FFMpegAVOption(section='hevc_nvenc AVOptions:', name='preset', type='int', flags='E..V.......', help='Set the encoding preset (from 0 to 18) (default p4)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='slow', help='hq 2 passes', flags='E..V.......', value='1'), FFMpegOptionChoice(name='medium', help='hq 1 pass', flags='E..V.......', value='2'), FFMpegOptionChoice(name='fast', help='hp 1 pass', flags='E..V.......', value='3'), FFMpegOptionChoice(name='hp', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='hq', help='', flags='E..V.......', value='5'), FFMpegOptionChoice(name='bd', help='', flags='E..V.......', value='6'), FFMpegOptionChoice(name='ll', help='low latency', flags='E..V.......', value='7'), FFMpegOptionChoice(name='llhq', help='low latency hq', flags='E..V.......', value='8'), FFMpegOptionChoice(name='llhp', help='low latency hp', flags='E..V.......', value='9'), FFMpegOptionChoice(name='lossless', help='lossless', flags='E..V.......', value='10'), FFMpegOptionChoice(name='losslesshp', help='lossless hp', flags='E..V.......', value='11'), FFMpegOptionChoice(name='p1', help='fastest (lowest quality)', flags='E..V.......', value='12'), FFMpegOptionChoice(name='p2', help='faster (lower quality)', flags='E..V.......', value='13'), FFMpegOptionChoice(name='p3', help='fast (low quality)', flags='E..V.......', value='14'), FFMpegOptionChoice(name='p4', help='medium (default)', flags='E..V.......', value='15'), FFMpegOptionChoice(name='p5', help='slow (good quality)', flags='E..V.......', value='16'), FFMpegOptionChoice(name='p6', help='slower (better quality)', flags='E..V.......', value='17'), FFMpegOptionChoice(name='p7', help='slowest (best quality)', flags='E..V.......', value='18'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='tune', type='int', flags='E..V.......', help='Set the encoding tuning info (from 1 to 4) (default hq)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='hq', help='High quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='ll', help='Low latency', flags='E..V.......', value='2'), FFMpegOptionChoice(name='ull', help='Ultra low latency', flags='E..V.......', value='3'), FFMpegOptionChoice(name='lossless', help='Lossless', flags='E..V.......', value='4'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='profile', type='int', flags='E..V.......', help='Set the encoding profile (from 0 to 4) (default main)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='main10', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='rext', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='level', type='int', flags='E..V.......', help='Set the encoding level restriction (from 0 to 186) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='30'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='30'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='60'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='60'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='63'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='90'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='90'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='93'), FFMpegOptionChoice(name='4', help='', flags='E..V.......', value='120'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='120'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='123'), FFMpegOptionChoice(name='5', help='', flags='E..V.......', value='150'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='150'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='153'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='156'), FFMpegOptionChoice(name='6', help='', flags='E..V.......', value='180'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='180'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='183'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='186'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='tier', type='int', flags='E..V.......', help='Set the encoding tier (from 0 to 1) (default main)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='rc', type='int', flags='E..V.......', help='Override the preset rate-control (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='constqp', help='Constant QP mode', flags='E..V.......', value='0'), FFMpegOptionChoice(name='vbr', help='Variable bitrate mode', flags='E..V.......', value='1'), FFMpegOptionChoice(name='cbr', help='Constant bitrate mode', flags='E..V.......', value='2'), FFMpegOptionChoice(name='vbr_minqp', help='Variable bitrate mode with MinQP (deprecated)', flags='E..V.......', value='8388609'), FFMpegOptionChoice(name='ll_2pass_quality', help='Multi-pass optimized for image quality (deprecated)', flags='E..V.......', value='8388609'), FFMpegOptionChoice(name='ll_2pass_size', help='Multi-pass optimized for constant frame size (deprecated)', flags='E..V.......', value='8388610'), FFMpegOptionChoice(name='vbr_2pass', help='Multi-pass variable bitrate mode (deprecated)', flags='E..V.......', value='8388609'), FFMpegOptionChoice(name='cbr_ld_hq', help='Constant bitrate low delay high quality mode', flags='E..V.......', value='8388610'), FFMpegOptionChoice(name='cbr_hq', help='Constant bitrate high quality mode', flags='E..V.......', value='8388610'), FFMpegOptionChoice(name='vbr_hq', help='Variable bitrate high quality mode', flags='E..V.......', value='8388609'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='rc-lookahead', type='int', flags='E..V.......', help='Number of frames to look ahead for rate-control (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='surfaces', type='int', flags='E..V.......', help='Number of concurrent surfaces (from 0 to 64) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='cbr', type='boolean', flags='E..V.......', help='Use cbr encoding mode (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='2pass', type='boolean', flags='E..V.......', help='Use 2pass encoding mode (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='gpu', type='int', flags='E..V.......', help='Selects which NVENC capable GPU to use. First GPU is 0, second is 1, and so on. (from -2 to INT_MAX) (default any)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='any', help='Pick the first device available', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='list', help='List the available devices', flags='E..V.......', value='-2'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='rgb_mode', type='int', flags='E..V.......', help='Configure how nvenc handles packed RGB input. (from 0 to INT_MAX) (default yuv420)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='yuv420', help='Convert to yuv420', flags='E..V.......', value='1'), FFMpegOptionChoice(name='yuv444', help='Convert to yuv444', flags='E..V.......', value='2'), FFMpegOptionChoice(name='disabled', help='Disables support, throws an error.', flags='E..V.......', value='0'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='delay', type='int', flags='E..V.......', help='Delay frame output by the given amount of frames (from 0 to INT_MAX) (default INT_MAX)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='no-scenecut', type='boolean', flags='E..V.......', help='When lookahead is enabled, set this to 1 to disable adaptive I-frame insertion at scene cuts (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='forced-idr', type='boolean', flags='E..V.......', help='If forcing keyframes, force them as IDR frames. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='spatial_aq', type='boolean', flags='E..V.......', help='set to 1 to enable Spatial AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='spatial-aq', type='boolean', flags='E..V.......', help='set to 1 to enable Spatial AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='temporal_aq', type='boolean', flags='E..V.......', help='set to 1 to enable Temporal AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='temporal-aq', type='boolean', flags='E..V.......', help='set to 1 to enable Temporal AQ (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='zerolatency', type='boolean', flags='E..V.......', help='Set 1 to indicate zero latency operation (no reordering delay) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='nonref_p', type='boolean', flags='E..V.......', help='Set this to 1 to enable automatic insertion of non-reference P-frames (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='strict_gop', type='boolean', flags='E..V.......', help='Set 1 to minimize GOP-to-GOP rate fluctuations (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='aq-strength', type='int', flags='E..V.......', help='When Spatial AQ is enabled, this field is used to specify AQ strength. AQ strength scale is from 1 (low) - 15 (aggressive) (from 1 to 15) (default 8)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='cq', type='float', flags='E..V.......', help='Set target quality level (0 to 51, 0 means automatic) for constant quality mode in VBR rate control (from 0 to 51) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='aud', type='boolean', flags='E..V.......', help='Use access unit delimiters (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='bluray-compat', type='boolean', flags='E..V.......', help='Bluray compatibility workarounds (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='init_qpP', type='int', flags='E..V.......', help='Initial QP value for P frame (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='init_qpB', type='int', flags='E..V.......', help='Initial QP value for B frame (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='init_qpI', type='int', flags='E..V.......', help='Initial QP value for I frame (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='qp', type='int', flags='E..V.......', help='Constant quantization parameter rate control method (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='qp_cb_offset', type='int', flags='E..V.......', help='Quantization parameter offset for cb channel (from -12 to 12) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='qp_cr_offset', type='int', flags='E..V.......', help='Quantization parameter offset for cr channel (from -12 to 12) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='weighted_pred', type='int', flags='E..V.......', help='Set 1 to enable weighted prediction (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='b_ref_mode', type='int', flags='E..V.......', help='Use B frames as references (from -1 to 2) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='disabled', help='B frames will not be used for reference', flags='E..V.......', value='0'), FFMpegOptionChoice(name='each', help='Each B frame will be used for reference', flags='E..V.......', value='1'), FFMpegOptionChoice(name='middle', help='Only (number of B frames)/2 will be used for reference', flags='E..V.......', value='2'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='a53cc', type='boolean', flags='E..V.......', help='Use A53 Closed Captions (if available) (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='s12m_tc', type='boolean', flags='E..V.......', help='Use timecode (if available) (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='dpb_size', type='int', flags='E..V.......', help='Specifies the DPB size used for encoding (0 means automatic) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='multipass', type='int', flags='E..V.......', help='Set the multipass encoding (from 0 to 2) (default disabled)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='disabled', help='Single Pass', flags='E..V.......', value='0'), FFMpegOptionChoice(name='qres', help='Two Pass encoding is enabled where first Pass is quarter resolution', flags='E..V.......', value='1'), FFMpegOptionChoice(name='fullres', help='Two Pass encoding is enabled where first Pass is full resolution', flags='E..V.......', value='2'))), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='ldkfs', type='int', flags='E..V.......', help='Low delay key frame scale; Specifies the Scene Change frame size increase allowed in case of single frame VBV and CBR (from 0 to 255) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='extra_sei', type='boolean', flags='E..V.......', help='Pass on extra SEI data (e.g. a53 cc) to be included in the bitstream (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='udu_sei', type='boolean', flags='E..V.......', help='Pass on user data unregistered SEI if available (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='intra-refresh', type='boolean', flags='E..V.......', help='Use Periodic Intra Refresh instead of IDR frames (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='single-slice-intra-refresh', type='boolean', flags='E..V.......', help='Use single slice intra refresh (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='max_slice_size', type='int', flags='E..V.......', help='Maximum encoded slice size in bytes (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_nvenc AVOptions:', name='constrained-encoding', type='boolean', flags='E..V.......', help='Enable constrainedFrame encoding where each slice in the constrained picture is independent of other slices (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='hevc_v4l2m2m', flags='V.....', description='V4L2 mem2mem HEVC encoder wrapper (codec hevc)', options=(FFMpegAVOption(section='hevc_v4l2m2m_encoder AVOptions:', name='num_output_buffers', type='int', flags='E..V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_v4l2m2m_encoder AVOptions:', name='num_capture_buffers', type='int', flags='E..V.......', help='Number of buffers in the capture context (from 4 to INT_MAX) (default 4)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='hevc_vaapi', flags='V....D', description='H.265/HEVC (VAAPI) (codec hevc)', options=(FFMpegAVOption(section='h265_vaapi AVOptions:', name='low_power', type='boolean', flags='E..V.......', help='Use low-power encoding mode (only available on some platforms; may not support all encoding features) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h265_vaapi AVOptions:', name='idr_interval', type='int', flags='E..V.......', help='Distance (in I-frames) between IDR frames (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h265_vaapi AVOptions:', name='b_depth', type='int', flags='E..V.......', help='Maximum B-frame reference depth (from 1 to INT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h265_vaapi AVOptions:', name='async_depth', type='int', flags='E..V.......', help="Maximum processing parallelism. Increase this to improve single channel performance. This option doesn't work if driver doesn't implement vaSyncBuffer function. (from 1 to 64) (default 2)", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h265_vaapi AVOptions:', name='max_frame_size', type='int', flags='E..V.......', help='Maximum frame size (in bytes) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h265_vaapi AVOptions:', name='rc_mode', type='int', flags='E..V.......', help='Set rate control mode (from 0 to 6) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='Choose mode automatically based on other parameters', flags='E..V.......', value='0'), FFMpegOptionChoice(name='CQP', help='Constant-quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='CBR', help='Constant-bitrate', flags='E..V.......', value='2'), FFMpegOptionChoice(name='VBR', help='Variable-bitrate', flags='E..V.......', value='3'), FFMpegOptionChoice(name='ICQ', help='Intelligent constant-quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='QVBR', help='Quality-defined variable-bitrate', flags='E..V.......', value='5'), FFMpegOptionChoice(name='AVBR', help='Average variable-bitrate', flags='E..V.......', value='6'))), FFMpegAVOption(section='h265_vaapi AVOptions:', name='qp', type='int', flags='E..V.......', help='Constant QP (for P-frames; scaled by qfactor/qoffset for I/B) (from 0 to 52) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h265_vaapi AVOptions:', name='aud', type='boolean', flags='E..V.......', help='Include AUD (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h265_vaapi AVOptions:', name='profile', type='int', flags='E..V.......', help='Set profile (general_profile_idc) (from -99 to 255) (default -99)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='main10', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='rext', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='h265_vaapi AVOptions:', name='tier', type='int', flags='E..V.......', help='Set tier (general_tier_flag) (from 0 to 1) (default main)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='h265_vaapi AVOptions:', name='level', type='int', flags='E..V.......', help='Set level (general_level_idc) (from -99 to 255) (default -99)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='30'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='60'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='63'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='90'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='93'), FFMpegOptionChoice(name='4', help='', flags='E..V.......', value='120'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='123'), FFMpegOptionChoice(name='5', help='', flags='E..V.......', value='150'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='153'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='156'), FFMpegOptionChoice(name='6', help='', flags='E..V.......', value='180'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='183'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='186'))), FFMpegAVOption(section='h265_vaapi AVOptions:', name='sei', type='flags', flags='E..V.......', help='Set SEI to include (default hdr+a53_cc)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='hdr', help='Include HDR metadata for mastering display colour volume and content light level information', flags='E..V.......', value='hdr'), FFMpegOptionChoice(name='a53_cc', help='Include A/53 caption data', flags='E..V.......', value='a53_cc'))), FFMpegAVOption(section='h265_vaapi AVOptions:', name='tiles', type='image_size', flags='E..V.......', help='Tile columns x rows', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='huffyuv', flags='VF...D', description='Huffyuv / HuffYUV', options=(FFMpegAVOption(section='huffyuv AVOptions:', name='non_deterministic', type='boolean', flags='E..V.......', help='Allow multithreading for e.g. context=1 at the expense of determinism (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='huffyuv AVOptions:', name='pred', type='int', flags='E..V.......', help='Prediction method (from 0 to 2) (default left)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='left', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='plane', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='median', help='', flags='E..V.......', value='2'))))),
    FFMpegEncoder(name='jpeg2000', flags='VF...D', description='JPEG 2000', options=(FFMpegAVOption(section='jpeg 2000 encoder AVOptions:', name='format', type='int', flags='E..V.......', help='Codec Format (from 0 to 1) (default jp2)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='j2k', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='jp2', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='jpeg 2000 encoder AVOptions:', name='tile_width', type='int', flags='E..V.......', help='Tile Width (from 1 to 1.07374e+09) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='jpeg 2000 encoder AVOptions:', name='tile_height', type='int', flags='E..V.......', help='Tile Height (from 1 to 1.07374e+09) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='jpeg 2000 encoder AVOptions:', name='pred', type='int', flags='E..V.......', help='DWT Type (from 0 to 1) (default dwt97int)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='dwt97int', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='dwt53', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='jpeg 2000 encoder AVOptions:', name='sop', type='int', flags='E..V.......', help='SOP marker (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='jpeg 2000 encoder AVOptions:', name='eph', type='int', flags='E..V.......', help='EPH marker (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='jpeg 2000 encoder AVOptions:', name='prog', type='int', flags='E..V.......', help='Progression Order (from 0 to 4) (default lrcp)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='lrcp', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='rlcp', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='rpcl', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='pcrl', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='cprl', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='jpeg 2000 encoder AVOptions:', name='layer_rates', type='string', flags='E..V.......', help='Layer Rates', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='libopenjpeg', flags='VF....', description='OpenJPEG JPEG 2000 (codec jpeg2000)', options=(FFMpegAVOption(section='libopenjpeg AVOptions:', name='format', type='int', flags='E..V.......', help='Codec Format (from 0 to 2) (default jp2)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='j2k', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='jp2', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='libopenjpeg AVOptions:', name='profile', type='int', flags='E..V.......', help='(from 0 to 4) (default jpeg2000)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='jpeg2000', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='cinema2k', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='cinema4k', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='libopenjpeg AVOptions:', name='cinema_mode', type='int', flags='E..V.......', help='Digital Cinema (from 0 to 3) (default off)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='off', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='2k_24', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='2k_48', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='4k_24', help='', flags='E..V.......', value='3'))), FFMpegAVOption(section='libopenjpeg AVOptions:', name='prog_order', type='int', flags='E..V.......', help='Progression Order (from 0 to 4) (default lrcp)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='lrcp', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='rlcp', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='rpcl', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='pcrl', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='cprl', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='libopenjpeg AVOptions:', name='numresolution', type='int', flags='E..V.......', help='(from 0 to 33) (default 6)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libopenjpeg AVOptions:', name='irreversible', type='int', flags='E..V.......', help='(from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libopenjpeg AVOptions:', name='disto_alloc', type='int', flags='E..V.......', help='(from 0 to 1) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libopenjpeg AVOptions:', name='fixed_quality', type='int', flags='E..V.......', help='(from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='jpegls', flags='VF...D', description='JPEG-LS', options=(FFMpegAVOption(section='jpegls AVOptions:', name='pred', type='int', flags='E..V.......', help='Prediction method (from 0 to 2) (default left)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='left', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='plane', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='median', help='', flags='E..V.......', value='2'))),)),
    FFMpegEncoder(name='libjxl', flags='V.....', description='libjxl JPEG XL (codec jpegxl)', options=(FFMpegAVOption(section='libjxl AVOptions:', name='effort', type='int', flags='E..V.......', help='Encoding effort (from 1 to 9) (default 7)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libjxl AVOptions:', name='distance', type='float', flags='E..V.......', help='Maximum Butteraugli distance (quality setting, lower = better, zero = lossless, default 1.0) (from -1 to 15) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libjxl AVOptions:', name='modular', type='int', flags='E..V.......', help='Force modular mode (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='ljpeg', flags='VF...D', description='Lossless JPEG', options=(FFMpegAVOption(section='ljpeg AVOptions:', name='pred', type='int', flags='E..V.......', help='Prediction method (from 1 to 3) (default left)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='left', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='plane', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='median', help='', flags='E..V.......', value='3'))),)),
    FFMpegEncoder(name='magicyuv', flags='VFS..D', description='MagicYUV video', options=(FFMpegAVOption(section='magicyuv AVOptions:', name='pred', type='int', flags='E..V.......', help='Prediction method (from 1 to 3) (default left)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='left', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='gradient', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='median', help='', flags='E..V.......', value='3'))),)),
    FFMpegEncoder(name='mjpeg', flags='VFS...', description='MJPEG (Motion JPEG)', options=(FFMpegAVOption(section='mjpeg encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='huffman', type='int', flags='E..V.......', help='Huffman table strategy (from 0 to 1) (default optimal)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='optimal', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='mjpeg encoder AVOptions:', name='force_duplicated_matrix', type='boolean', flags='E..V.......', help='Always write luma and chroma matrix for mjpeg, useful for rtp streaming. (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='mjpeg_vaapi', flags='V....D', description='MJPEG (VAAPI) (codec mjpeg)', options=(FFMpegAVOption(section='mjpeg_vaapi AVOptions:', name='low_power', type='boolean', flags='E..V.......', help='Use low-power encoding mode (only available on some platforms; may not support all encoding features) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_vaapi AVOptions:', name='idr_interval', type='int', flags='E..V.......', help='Distance (in I-frames) between IDR frames (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_vaapi AVOptions:', name='b_depth', type='int', flags='E..V.......', help='Maximum B-frame reference depth (from 1 to INT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_vaapi AVOptions:', name='async_depth', type='int', flags='E..V.......', help="Maximum processing parallelism. Increase this to improve single channel performance. This option doesn't work if driver doesn't implement vaSyncBuffer function. (from 1 to 64) (default 2)", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_vaapi AVOptions:', name='max_frame_size', type='int', flags='E..V.......', help='Maximum frame size (in bytes) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_vaapi AVOptions:', name='jfif', type='boolean', flags='E..V.......', help='Include JFIF header (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_vaapi AVOptions:', name='huffman', type='boolean', flags='E..V.......', help='Include huffman tables (default true)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='mpeg1video', flags='V.S...', description='MPEG-1 video', options=(FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='gop_timecode', type='string', flags='E..V.......', help='MPEG GOP Timecode in hh:mm:ss[:;.]ff format. Overrides timecode_frame_start.', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='drop_frame_timecode', type='boolean', flags='E..V.......', help='Timecode is in drop frame format. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='scan_offset', type='boolean', flags='E..V.......', help='Reserve space for SVCD scan offset user data. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='timecode_frame_start', type='int64', flags='E..V.......', help='GOP timecode frame start number, in non-drop-frame format (from -1 to I64_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='b_strategy', type='int', flags='E..V.......', help='Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='b_sensitivity', type='int', flags='E..V.......', help='Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='brd_scale', type='int', flags='E..V.......', help='Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1video encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='mpeg2video', flags='V.S...', description='MPEG-2 video', options=(FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='gop_timecode', type='string', flags='E..V.......', help='MPEG GOP Timecode in hh:mm:ss[:;.]ff format. Overrides timecode_frame_start.', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='drop_frame_timecode', type='boolean', flags='E..V.......', help='Timecode is in drop frame format. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='scan_offset', type='boolean', flags='E..V.......', help='Reserve space for SVCD scan offset user data. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='timecode_frame_start', type='int64', flags='E..V.......', help='GOP timecode frame start number, in non-drop-frame format (from -1 to I64_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='b_strategy', type='int', flags='E..V.......', help='Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='b_sensitivity', type='int', flags='E..V.......', help='Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='brd_scale', type='int', flags='E..V.......', help='Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='intra_vlc', type='boolean', flags='E..V.......', help='Use MPEG-2 intra VLC table. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='non_linear_quant', type='boolean', flags='E..V.......', help='Use nonlinear quantizer. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='alternate_scan', type='boolean', flags='E..V.......', help='Enable alternate scantable. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='a53cc', type='boolean', flags='E..V.......', help='Use A53 Closed Captions (if available) (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='seq_disp_ext', type='int', flags='E..V.......', help='Write sequence_display_extension blocks. (from -1 to 1) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='never', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='always', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='video_format', type='int', flags='E..V.......', help='Video_format in the sequence_display_extension indicating the source of the video. (from 0 to 7) (default unspecified)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='component', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='pal', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='ntsc', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='secam', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='mac', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='unspecified', help='', flags='E..V.......', value='5'))), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2video encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='mpeg2_vaapi', flags='V....D', description='MPEG-2 (VAAPI) (codec mpeg2video)', options=(FFMpegAVOption(section='mpeg2_vaapi AVOptions:', name='low_power', type='boolean', flags='E..V.......', help='Use low-power encoding mode (only available on some platforms; may not support all encoding features) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_vaapi AVOptions:', name='idr_interval', type='int', flags='E..V.......', help='Distance (in I-frames) between IDR frames (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_vaapi AVOptions:', name='b_depth', type='int', flags='E..V.......', help='Maximum B-frame reference depth (from 1 to INT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_vaapi AVOptions:', name='async_depth', type='int', flags='E..V.......', help="Maximum processing parallelism. Increase this to improve single channel performance. This option doesn't work if driver doesn't implement vaSyncBuffer function. (from 1 to 64) (default 2)", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_vaapi AVOptions:', name='max_frame_size', type='int', flags='E..V.......', help='Maximum frame size (in bytes) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_vaapi AVOptions:', name='rc_mode', type='int', flags='E..V.......', help='Set rate control mode (from 0 to 6) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='Choose mode automatically based on other parameters', flags='E..V.......', value='0'), FFMpegOptionChoice(name='CQP', help='Constant-quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='CBR', help='Constant-bitrate', flags='E..V.......', value='2'), FFMpegOptionChoice(name='VBR', help='Variable-bitrate', flags='E..V.......', value='3'), FFMpegOptionChoice(name='ICQ', help='Intelligent constant-quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='QVBR', help='Quality-defined variable-bitrate', flags='E..V.......', value='5'), FFMpegOptionChoice(name='AVBR', help='Average variable-bitrate', flags='E..V.......', value='6'))), FFMpegAVOption(section='mpeg2_vaapi AVOptions:', name='profile', type='int', flags='E..V.......', help='Set profile (in profile_and_level_indication) (from -99 to 7) (default -99)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='simple', help='', flags='E..V.......', value='5'), FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='4'))), FFMpegAVOption(section='mpeg2_vaapi AVOptions:', name='level', type='int', flags='E..V.......', help='Set level (in profile_and_level_indication) (from 0 to 15) (default high)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='low', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='8'), FFMpegOptionChoice(name='high_1440', help='', flags='E..V.......', value='6'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='4'))))),
    FFMpegEncoder(name='mpeg4', flags='V.S...', description='MPEG-4 part 2', options=(FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='data_partitioning', type='boolean', flags='E..V.......', help='Use data partitioning. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='alternate_scan', type='boolean', flags='E..V.......', help='Enable alternate scantable. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='mpeg_quant', type='int', flags='E..V.......', help='Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='b_strategy', type='int', flags='E..V.......', help='Strategy to choose between I/P/B-frames (from 0 to 2) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='b_sensitivity', type='int', flags='E..V.......', help='Adjust sensitivity of b_frame_strategy 1 (from 1 to INT_MAX) (default 40)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='brd_scale', type='int', flags='E..V.......', help='Downscale frames for dynamic B-frame decision (from 0 to 3) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MPEG4 encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='libxvid', flags='V....D', description='libxvidcore MPEG-4 part 2 (codec mpeg4)', options=(FFMpegAVOption(section='libxvid AVOptions:', name='lumi_aq', type='int', flags='E..V.......', help='Luminance masking AQ (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libxvid AVOptions:', name='variance_aq', type='int', flags='E..V.......', help='Variance AQ (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libxvid AVOptions:', name='ssim', type='int', flags='E..V.......', help='Show SSIM information to stdout (from 0 to 2) (default off)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='off', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='avg', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='frame', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='libxvid AVOptions:', name='ssim_acc', type='int', flags='E..V.......', help='SSIM accuracy (from 0 to 4) (default 2)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libxvid AVOptions:', name='gmc', type='int', flags='E..V.......', help='use GMC (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libxvid AVOptions:', name='me_quality', type='int', flags='E..V.......', help='Motion estimation quality (from 0 to 6) (default 4)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libxvid AVOptions:', name='mpeg_quant', type='int', flags='E..V.......', help='Use MPEG quantizers instead of H.263 (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='mpeg4_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG4 encoder wrapper (codec mpeg4)', options=(FFMpegAVOption(section='mpeg4_v4l2m2m_encoder AVOptions:', name='num_output_buffers', type='int', flags='E..V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg4_v4l2m2m_encoder AVOptions:', name='num_capture_buffers', type='int', flags='E..V.......', help='Number of buffers in the capture context (from 4 to INT_MAX) (default 4)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='msmpeg4v2', flags='V.....', description='MPEG-4 part 2 Microsoft variant version 2', options=(FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='msmpeg4', flags='V.....', description='MPEG-4 part 2 Microsoft variant version 3 (codec msmpeg4v3)', options=(FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='msrle', flags='V....D', description='Microsoft RLE', options=()),
    FFMpegEncoder(name='msvideo1', flags='V.....', description='Microsoft Video-1', options=()),
    FFMpegEncoder(name='pam', flags='V....D', description='PAM (Portable AnyMap) image', options=()),
    FFMpegEncoder(name='pbm', flags='V....D', description='PBM (Portable BitMap) image', options=()),
    FFMpegEncoder(name='pcx', flags='V....D', description='PC Paintbrush PCX image', options=()),
    FFMpegEncoder(name='pfm', flags='V....D', description='PFM (Portable FloatMap) image', options=()),
    FFMpegEncoder(name='pgm', flags='V....D', description='PGM (Portable GrayMap) image', options=()),
    FFMpegEncoder(name='pgmyuv', flags='V....D', description='PGMYUV (Portable GrayMap YUV) image', options=()),
    FFMpegEncoder(name='phm', flags='V....D', description='PHM (Portable HalfFloatMap) image', options=()),
    FFMpegEncoder(name='png', flags='VF...D', description='PNG (Portable Network Graphics) image', options=()),
    FFMpegEncoder(name='ppm', flags='V....D', description='PPM (Portable PixelMap) image', options=()),
    FFMpegEncoder(name='prores', flags='VF...D', description='Apple ProRes', options=(FFMpegAVOption(section='ProRes encoder AVOptions:', name='vendor', type='string', flags='E..V.......', help='vendor ID (default "fmpg")', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='prores_aw', flags='VF...D', description='Apple ProRes (codec prores)', options=(FFMpegAVOption(section='ProRes encoder AVOptions:', name='vendor', type='string', flags='E..V.......', help='vendor ID (default "fmpg")', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='prores_ks', flags='VFS...', description='Apple ProRes (iCodec Pro) (codec prores)', options=(FFMpegAVOption(section='ProRes encoder AVOptions:', name='mbs_per_slice', type='int', flags='E..V.......', help='macroblocks per slice (from 1 to 8) (default 8)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='ProRes encoder AVOptions:', name='profile', type='int', flags='E..V.......', help='(from -1 to 5) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='proxy', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='lt', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='standard', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='hq', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='4444', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='4444xq', help='', flags='E..V.......', value='5'))), FFMpegAVOption(section='ProRes encoder AVOptions:', name='vendor', type='string', flags='E..V.......', help='vendor ID (default "Lavc")', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='ProRes encoder AVOptions:', name='bits_per_mb', type='int', flags='E..V.......', help='desired bits per macroblock (from 0 to 8192) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='ProRes encoder AVOptions:', name='quant_mat', type='int', flags='E..V.......', help='quantiser matrix (from -1 to 6) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='proxy', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='lt', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='standard', help='', flags='E..V.......', value='3'), FFMpegOptionChoice(name='hq', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='6'))), FFMpegAVOption(section='ProRes encoder AVOptions:', name='alpha_bits', type='int', flags='E..V.......', help='bits for alpha plane (from 0 to 16) (default 16)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='qoi', flags='VF...D', description='QOI (Quite OK Image format) image', options=()),
    FFMpegEncoder(name='qtrle', flags='V....D', description='QuickTime Animation (RLE) video', options=()),
    FFMpegEncoder(name='r10k', flags='V....D', description='AJA Kona 10-bit RGB Codec', options=()),
    FFMpegEncoder(name='r210', flags='V....D', description='Uncompressed RGB 10-bit', options=()),
    FFMpegEncoder(name='rawvideo', flags='VF...D', description='raw video', options=()),
    FFMpegEncoder(name='roqvideo', flags='V....D', description='id RoQ video (codec roq)', options=(FFMpegAVOption(section='RoQ AVOptions:', name='quake3_compat', type='boolean', flags='E..V.......', help='Whether to respect known limitations in Quake 3 decoder (default true)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='rpza', flags='V....D', description='QuickTime video (RPZA)', options=(FFMpegAVOption(section='rpza AVOptions:', name='skip_frame_thresh', type='int', flags='E..V.......', help='(from 0 to 24) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='rpza AVOptions:', name='start_one_color_thresh', type='int', flags='E..V.......', help='(from 0 to 24) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='rpza AVOptions:', name='continue_one_color_thresh', type='int', flags='E..V.......', help='(from 0 to 24) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='rpza AVOptions:', name='sixteen_color_thresh', type='int', flags='E..V.......', help='(from 0 to 24) (default 1)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='rv10', flags='V.....', description='RealVideo 1.0', options=(FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='rv20', flags='V.....', description='RealVideo 2.0', options=(FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='sgi', flags='V....D', description='SGI image', options=(FFMpegAVOption(section='sgi AVOptions:', name='rle', type='int', flags='E..V.......', help='Use run-length compression (from 0 to 1) (default 1)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='smc', flags='V....D', description='QuickTime Graphics (SMC)', options=()),
    FFMpegEncoder(name='snow', flags='V....D', description='Snow', options=(FFMpegAVOption(section='snow encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 3) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='iter', help='', flags='E..V.......', value='3'))), FFMpegAVOption(section='snow encoder AVOptions:', name='memc_only', type='boolean', flags='E..V.......', help='Only do ME/MC (I frames -> ref, P frame -> ME+MC). (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='snow encoder AVOptions:', name='no_bitstream', type='boolean', flags='E..V.......', help='Skip final bitstream writeout. (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='snow encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decission (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='snow encoder AVOptions:', name='iterative_dia_size', type='int', flags='E..V.......', help='Dia size for the iterative ME (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='snow encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='snow encoder AVOptions:', name='pred', type='int', flags='E..V.......', help='Spatial decomposition type (from 0 to 1) (default dwt97)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='dwt97', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='dwt53', help='', flags='E..V.......', value='1'))), FFMpegAVOption(section='snow encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='speedhq', flags='V.....', description='NewTek SpeedHQ', options=(FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='sunrast', flags='V....D', description='Sun Rasterfile image', options=(FFMpegAVOption(section='sunrast AVOptions:', name='rle', type='int', flags='E..V.......', help='Use run-length compression (from 0 to 1) (default 1)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='svq1', flags='V....D', description='Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1', options=(FFMpegAVOption(section='svq1enc AVOptions:', name='motion-est', type='int', flags='E..V.......', help='Motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))),)),
    FFMpegEncoder(name='targa', flags='V....D', description='Truevision Targa image', options=(FFMpegAVOption(section='targa AVOptions:', name='rle', type='int', flags='E..V.......', help='Use run-length compression (from 0 to 1) (default 1)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='libtheora', flags='V....D', description='libtheora Theora (codec theora)', options=()),
    FFMpegEncoder(name='tiff', flags='VF...D', description='TIFF image', options=(FFMpegAVOption(section='TIFF encoder AVOptions:', name='dpi', type='int', flags='E..V.......', help='set the image resolution (in dpi) (from 1 to 65536) (default 72)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='TIFF encoder AVOptions:', name='compression_algo', type='int', flags='E..V.......', help='(from 1 to 32946) (default packbits)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='packbits', help='', flags='E..V.......', value='32773'), FFMpegOptionChoice(name='raw', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='lzw', help='', flags='E..V.......', value='5'), FFMpegOptionChoice(name='deflate', help='', flags='E..V.......', value='32946'))))),
    FFMpegEncoder(name='utvideo', flags='VF...D', description='Ut Video', options=(FFMpegAVOption(section='utvideo AVOptions:', name='pred', type='int', flags='E..V.......', help='Prediction method (from 0 to 3) (default left)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='left', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='gradient', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='median', help='', flags='E..V.......', value='3'))),)),
    FFMpegEncoder(name='v210', flags='VF...D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegEncoder(name='v308', flags='V....D', description='Uncompressed packed 4:4:4', options=()),
    FFMpegEncoder(name='v408', flags='V....D', description='Uncompressed packed QT 4:4:4:4', options=()),
    FFMpegEncoder(name='v410', flags='V....D', description='Uncompressed 4:4:4 10-bit', options=()),
    FFMpegEncoder(name='vbn', flags='V.S..D', description='Vizrt Binary Image', options=(FFMpegAVOption(section='VBN encoder AVOptions:', name='format', type='int', flags='E..V.......', help='Texture format (from 0 to 3) (default dxt5)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='raw', help='RAW texture', flags='E..V.......', value='0'), FFMpegOptionChoice(name='dxt1', help='DXT1 texture', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dxt5', help='DXT5 texture', flags='E..V.......', value='3'))),)),
    FFMpegEncoder(name='vnull', flags='V.....', description='null video', options=()),
    FFMpegEncoder(name='libvpx', flags='V....D', description='libvpx VP8 (codec vp8)', options=()),
    FFMpegEncoder(name='vp8_v4l2m2m', flags='V.....', description='V4L2 mem2mem VP8 encoder wrapper (codec vp8)', options=(FFMpegAVOption(section='vp8_v4l2m2m_encoder AVOptions:', name='num_output_buffers', type='int', flags='E..V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_v4l2m2m_encoder AVOptions:', name='num_capture_buffers', type='int', flags='E..V.......', help='Number of buffers in the capture context (from 4 to INT_MAX) (default 4)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='vp8_vaapi', flags='V....D', description='VP8 (VAAPI) (codec vp8)', options=(FFMpegAVOption(section='vp8_vaapi AVOptions:', name='low_power', type='boolean', flags='E..V.......', help='Use low-power encoding mode (only available on some platforms; may not support all encoding features) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_vaapi AVOptions:', name='idr_interval', type='int', flags='E..V.......', help='Distance (in I-frames) between IDR frames (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_vaapi AVOptions:', name='b_depth', type='int', flags='E..V.......', help='Maximum B-frame reference depth (from 1 to INT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_vaapi AVOptions:', name='async_depth', type='int', flags='E..V.......', help="Maximum processing parallelism. Increase this to improve single channel performance. This option doesn't work if driver doesn't implement vaSyncBuffer function. (from 1 to 64) (default 2)", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_vaapi AVOptions:', name='max_frame_size', type='int', flags='E..V.......', help='Maximum frame size (in bytes) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_vaapi AVOptions:', name='rc_mode', type='int', flags='E..V.......', help='Set rate control mode (from 0 to 6) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='Choose mode automatically based on other parameters', flags='E..V.......', value='0'), FFMpegOptionChoice(name='CQP', help='Constant-quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='CBR', help='Constant-bitrate', flags='E..V.......', value='2'), FFMpegOptionChoice(name='VBR', help='Variable-bitrate', flags='E..V.......', value='3'), FFMpegOptionChoice(name='ICQ', help='Intelligent constant-quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='QVBR', help='Quality-defined variable-bitrate', flags='E..V.......', value='5'), FFMpegOptionChoice(name='AVBR', help='Average variable-bitrate', flags='E..V.......', value='6'))), FFMpegAVOption(section='vp8_vaapi AVOptions:', name='loop_filter_level', type='int', flags='E..V.......', help='Loop filter level (from 0 to 63) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_vaapi AVOptions:', name='loop_filter_sharpness', type='int', flags='E..V.......', help='Loop filter sharpness (from 0 to 15) (default 4)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='vp9_vaapi', flags='V....D', description='VP9 (VAAPI) (codec vp9)', options=(FFMpegAVOption(section='vp9_vaapi AVOptions:', name='low_power', type='boolean', flags='E..V.......', help='Use low-power encoding mode (only available on some platforms; may not support all encoding features) (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_vaapi AVOptions:', name='idr_interval', type='int', flags='E..V.......', help='Distance (in I-frames) between IDR frames (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_vaapi AVOptions:', name='b_depth', type='int', flags='E..V.......', help='Maximum B-frame reference depth (from 1 to INT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_vaapi AVOptions:', name='async_depth', type='int', flags='E..V.......', help="Maximum processing parallelism. Increase this to improve single channel performance. This option doesn't work if driver doesn't implement vaSyncBuffer function. (from 1 to 64) (default 2)", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_vaapi AVOptions:', name='max_frame_size', type='int', flags='E..V.......', help='Maximum frame size (in bytes) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_vaapi AVOptions:', name='rc_mode', type='int', flags='E..V.......', help='Set rate control mode (from 0 to 6) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='Choose mode automatically based on other parameters', flags='E..V.......', value='0'), FFMpegOptionChoice(name='CQP', help='Constant-quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='CBR', help='Constant-bitrate', flags='E..V.......', value='2'), FFMpegOptionChoice(name='VBR', help='Variable-bitrate', flags='E..V.......', value='3'), FFMpegOptionChoice(name='ICQ', help='Intelligent constant-quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='QVBR', help='Quality-defined variable-bitrate', flags='E..V.......', value='5'), FFMpegOptionChoice(name='AVBR', help='Average variable-bitrate', flags='E..V.......', value='6'))), FFMpegAVOption(section='vp9_vaapi AVOptions:', name='loop_filter_level', type='int', flags='E..V.......', help='Loop filter level (from 0 to 63) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_vaapi AVOptions:', name='loop_filter_sharpness', type='int', flags='E..V.......', help='Loop filter sharpness (from 0 to 15) (default 4)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='wbmp', flags='VF...D', description='WBMP (Wireless Application Protocol Bitmap) image', options=()),
    FFMpegEncoder(name='libwebp_anim', flags='V....D', description='libwebp WebP image (codec webp)', options=(FFMpegAVOption(section='libwebp encoder AVOptions:', name='lossless', type='int', flags='E..V.......', help='Use lossless mode (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libwebp encoder AVOptions:', name='preset', type='int', flags='E..V.......', help='Configuration preset (from -1 to 5) (default none)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='do not use a preset', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='default', help='default preset', flags='E..V.......', value='0'), FFMpegOptionChoice(name='picture', help='digital picture, like portrait, inner shot', flags='E..V.......', value='1'), FFMpegOptionChoice(name='photo', help='outdoor photograph, with natural lighting', flags='E..V.......', value='2'), FFMpegOptionChoice(name='drawing', help='hand or line drawing, with high-contrast details', flags='E..V.......', value='3'), FFMpegOptionChoice(name='icon', help='small-sized colorful images', flags='E..V.......', value='4'), FFMpegOptionChoice(name='text', help='text-like', flags='E..V.......', value='5'))), FFMpegAVOption(section='libwebp encoder AVOptions:', name='cr_threshold', type='int', flags='E..V.......', help='Conditional replenishment threshold (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libwebp encoder AVOptions:', name='cr_size', type='int', flags='E..V.......', help='Conditional replenishment block size (from 0 to 256) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libwebp encoder AVOptions:', name='quality', type='float', flags='E..V.......', help='Quality (from 0 to 100) (default 75)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='libwebp', flags='V....D', description='libwebp WebP image (codec webp)', options=(FFMpegAVOption(section='libwebp encoder AVOptions:', name='lossless', type='int', flags='E..V.......', help='Use lossless mode (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libwebp encoder AVOptions:', name='preset', type='int', flags='E..V.......', help='Configuration preset (from -1 to 5) (default none)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='do not use a preset', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='default', help='default preset', flags='E..V.......', value='0'), FFMpegOptionChoice(name='picture', help='digital picture, like portrait, inner shot', flags='E..V.......', value='1'), FFMpegOptionChoice(name='photo', help='outdoor photograph, with natural lighting', flags='E..V.......', value='2'), FFMpegOptionChoice(name='drawing', help='hand or line drawing, with high-contrast details', flags='E..V.......', value='3'), FFMpegOptionChoice(name='icon', help='small-sized colorful images', flags='E..V.......', value='4'), FFMpegOptionChoice(name='text', help='text-like', flags='E..V.......', value='5'))), FFMpegAVOption(section='libwebp encoder AVOptions:', name='cr_threshold', type='int', flags='E..V.......', help='Conditional replenishment threshold (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libwebp encoder AVOptions:', name='cr_size', type='int', flags='E..V.......', help='Conditional replenishment block size (from 0 to 256) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libwebp encoder AVOptions:', name='quality', type='float', flags='E..V.......', help='Quality (from 0 to 100) (default 75)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='wmv1', flags='V.....', description='Windows Media Video 7', options=(FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='wmv2', flags='V.....', description='Windows Media Video 8', options=(FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='generic mpegvideo encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='wrapped_avframe', flags='V.....', description='AVFrame to AVPacket passthrough', options=()),
    FFMpegEncoder(name='xbm', flags='V....D', description='XBM (X BitMap) image', options=()),
    FFMpegEncoder(name='xface', flags='V....D', description='X-face image', options=()),
    FFMpegEncoder(name='xwd', flags='V....D', description='XWD (X Window Dump) image', options=()),
    FFMpegEncoder(name='y41p', flags='V....D', description='Uncompressed YUV 4:1:1 12-bit', options=()),
    FFMpegEncoder(name='yuv4', flags='V....D', description='Uncompressed packed 4:2:0', options=()),
    FFMpegEncoder(name='zlib', flags='VF...D', description='LCL (LossLess Codec Library) ZLIB', options=()),
    FFMpegEncoder(name='zmbv', flags='V....D', description='Zip Motion Blocks Video', options=()),
    FFMpegEncoder(name='aac', flags='A....D', description='AAC (Advanced Audio Coding)', options=(FFMpegAVOption(section='AAC encoder AVOptions:', name='aac_coder', type='int', flags='E...A......', help='Coding algorithm (from 0 to 2) (default twoloop)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='anmr', help='ANMR method', flags='E...A......', value='0'), FFMpegOptionChoice(name='twoloop', help='Two loop searching method', flags='E...A......', value='1'), FFMpegOptionChoice(name='fast', help='Default fast search', flags='E...A......', value='2'))), FFMpegAVOption(section='AAC encoder AVOptions:', name='aac_ms', type='boolean', flags='E...A......', help='Force M/S stereo coding (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='AAC encoder AVOptions:', name='aac_is', type='boolean', flags='E...A......', help='Intensity stereo coding (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='AAC encoder AVOptions:', name='aac_pns', type='boolean', flags='E...A......', help='Perceptual noise substitution (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='AAC encoder AVOptions:', name='aac_tns', type='boolean', flags='E...A......', help='Temporal noise shaping (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='AAC encoder AVOptions:', name='aac_ltp', type='boolean', flags='E...A......', help='Long term prediction (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='AAC encoder AVOptions:', name='aac_pred', type='boolean', flags='E...A......', help='AAC-Main prediction (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='AAC encoder AVOptions:', name='aac_pce', type='boolean', flags='E...A......', help='Forces the use of PCEs (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='ac3', flags='A....D', description='ATSC A/52A (AC-3)', options=()),
    FFMpegEncoder(name='ac3_fixed', flags='A....D', description='ATSC A/52A (AC-3) (codec ac3)', options=()),
    FFMpegEncoder(name='adpcm_adx', flags='A....D', description='SEGA CRI ADX ADPCM', options=()),
    FFMpegEncoder(name='adpcm_argo', flags='A....D', description='ADPCM Argonaut Games', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='g722', flags='A....D', description='G.722 ADPCM (codec adpcm_g722)', options=()),
    FFMpegEncoder(name='g726', flags='A....D', description='G.726 ADPCM (codec adpcm_g726)', options=(FFMpegAVOption(section='g726 AVOptions:', name='code_size', type='int', flags='E...A......', help='Bits per code (from 2 to 5) (default 4)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='g726le', flags='A....D', description='G.726 little endian ADPCM ("right-justified") (codec adpcm_g726le)', options=(FFMpegAVOption(section='g726 AVOptions:', name='code_size', type='int', flags='E...A......', help='Bits per code (from 2 to 5) (default 4)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_ima_alp', flags='A....D', description='ADPCM IMA High Voltage Software ALP', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_ima_amv', flags='A....D', description='ADPCM IMA AMV', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_ima_apm', flags='A....D', description='ADPCM IMA Ubisoft APM', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_ima_qt', flags='A....D', description='ADPCM IMA QuickTime', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_ima_ssi', flags='A....D', description='ADPCM IMA Simon & Schuster Interactive', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_ima_wav', flags='A....D', description='ADPCM IMA WAV', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_ima_ws', flags='A....D', description='ADPCM IMA Westwood', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_ms', flags='A....D', description='ADPCM Microsoft', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_swf', flags='A....D', description='ADPCM Shockwave Flash', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='adpcm_yamaha', flags='A....D', description='ADPCM Yamaha', options=(FFMpegAVOption(section='ADPCM encoder AVOptions:', name='block_size', type='int', flags='E...A......', help='set the block size (from 32 to 8192) (default 1024)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='alac', flags='A....D', description='ALAC (Apple Lossless Audio Codec)', options=(FFMpegAVOption(section='alacenc AVOptions:', name='min_prediction_order', type='int', flags='E...A......', help='(from 1 to 30) (default 4)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='alacenc AVOptions:', name='max_prediction_order', type='int', flags='E...A......', help='(from 1 to 30) (default 6)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='anull', flags='A.....', description='null audio', options=()),
    FFMpegEncoder(name='aptx', flags='A....D', description='aptX (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegEncoder(name='aptx_hd', flags='A....D', description='aptX HD (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegEncoder(name='libcodec2', flags='A....D', description='codec2 encoder using libcodec2 (codec codec2)', options=(FFMpegAVOption(section='libcodec2 encoder AVOptions:', name='mode', type='int', flags='E...A......', help='codec2 mode (from 0 to 8) (default 1300)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='3200', help='3200', flags='E...A......', value='0'), FFMpegOptionChoice(name='2400', help='2400', flags='E...A......', value='1'), FFMpegOptionChoice(name='1600', help='1600', flags='E...A......', value='2'), FFMpegOptionChoice(name='1400', help='1400', flags='E...A......', value='3'), FFMpegOptionChoice(name='1300', help='1300', flags='E...A......', value='4'), FFMpegOptionChoice(name='1200', help='1200', flags='E...A......', value='5'), FFMpegOptionChoice(name='700', help='700', flags='E...A......', value='6'), FFMpegOptionChoice(name='700B', help='700B', flags='E...A......', value='7'), FFMpegOptionChoice(name='700C', help='700C', flags='E...A......', value='8'))),)),
    FFMpegEncoder(name='comfortnoise', flags='A....D', description='RFC 3389 comfort noise generator', options=()),
    FFMpegEncoder(name='dfpwm', flags='A....D', description='DFPWM1a audio', options=()),
    FFMpegEncoder(name='dca', flags='A..X.D', description='DCA (DTS Coherent Acoustics) (codec dts)', options=()),
    FFMpegEncoder(name='eac3', flags='A....D', description='ATSC A/52 E-AC-3', options=()),
    FFMpegEncoder(name='flac', flags='A....D', description='FLAC (Free Lossless Audio Codec)', options=(FFMpegAVOption(section='FLAC encoder AVOptions:', name='lpc_coeff_precision', type='int', flags='E...A......', help='LPC coefficient precision (from 0 to 15) (default 15)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='FLAC encoder AVOptions:', name='lpc_type', type='int', flags='E...A......', help='LPC algorithm (from -1 to 3) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='none', help='', flags='E...A......', value='0'), FFMpegOptionChoice(name='fixed', help='', flags='E...A......', value='1'), FFMpegOptionChoice(name='levinson', help='', flags='E...A......', value='2'), FFMpegOptionChoice(name='cholesky', help='', flags='E...A......', value='3'))), FFMpegAVOption(section='FLAC encoder AVOptions:', name='lpc_passes', type='int', flags='E...A......', help='Number of passes to use for Cholesky factorization during LPC analysis (from 1 to INT_MAX) (default 2)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='FLAC encoder AVOptions:', name='min_partition_order', type='int', flags='E...A......', help='(from -1 to 8) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='FLAC encoder AVOptions:', name='max_partition_order', type='int', flags='E...A......', help='(from -1 to 8) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='FLAC encoder AVOptions:', name='prediction_order_method', type='int', flags='E...A......', help='Search method for selecting prediction order (from -1 to 5) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='estimation', help='', flags='E...A......', value='0'), FFMpegOptionChoice(name='2level', help='', flags='E...A......', value='1'), FFMpegOptionChoice(name='4level', help='', flags='E...A......', value='2'), FFMpegOptionChoice(name='8level', help='', flags='E...A......', value='3'), FFMpegOptionChoice(name='search', help='', flags='E...A......', value='4'), FFMpegOptionChoice(name='log', help='', flags='E...A......', value='5'))), FFMpegAVOption(section='FLAC encoder AVOptions:', name='ch_mode', type='int', flags='E...A......', help='Stereo decorrelation mode (from -1 to 3) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='', flags='E...A......', value='-1'), FFMpegOptionChoice(name='indep', help='', flags='E...A......', value='0'), FFMpegOptionChoice(name='left_side', help='', flags='E...A......', value='1'), FFMpegOptionChoice(name='right_side', help='', flags='E...A......', value='2'), FFMpegOptionChoice(name='mid_side', help='', flags='E...A......', value='3'))), FFMpegAVOption(section='FLAC encoder AVOptions:', name='exact_rice_parameters', type='boolean', flags='E...A......', help='Calculate rice parameters exactly (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='FLAC encoder AVOptions:', name='multi_dim_quant', type='boolean', flags='E...A......', help='Multi-dimensional quantization (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='FLAC encoder AVOptions:', name='min_prediction_order', type='int', flags='E...A......', help='(from -1 to 32) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='FLAC encoder AVOptions:', name='max_prediction_order', type='int', flags='E...A......', help='(from -1 to 32) (default -1)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='g723_1', flags='A....D', description='G.723.1', options=()),
    FFMpegEncoder(name='libgsm', flags='A....D', description='libgsm GSM (codec gsm)', options=()),
    FFMpegEncoder(name='libgsm_ms', flags='A....D', description='libgsm GSM Microsoft variant (codec gsm_ms)', options=()),
    FFMpegEncoder(name='mlp', flags='A..X.D', description='MLP (Meridian Lossless Packing)', options=(FFMpegAVOption(section='mlpenc AVOptions:', name='max_interval', type='int', flags='E...A......', help='Max number of frames between each new header (from 8 to 128) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mlpenc AVOptions:', name='lpc_coeff_precision', type='int', flags='E...A......', help='LPC coefficient precision (from 0 to 15) (default 15)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mlpenc AVOptions:', name='lpc_type', type='int', flags='E...A......', help='LPC algorithm (from 2 to 3) (default levinson)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='levinson', help='', flags='E...A......', value='2'), FFMpegOptionChoice(name='cholesky', help='', flags='E...A......', value='3'))), FFMpegAVOption(section='mlpenc AVOptions:', name='lpc_passes', type='int', flags='E...A......', help='Number of passes to use for Cholesky factorization during LPC analysis (from 1 to INT_MAX) (default 2)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mlpenc AVOptions:', name='codebook_search', type='int', flags='E...A......', help='Max number of codebook searches (from 1 to 100) (default 3)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mlpenc AVOptions:', name='prediction_order', type='int', flags='E...A......', help='Search method for selecting prediction order (from 0 to 4) (default estimation)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='estimation', help='', flags='E...A......', value='0'), FFMpegOptionChoice(name='search', help='', flags='E...A......', value='4'))), FFMpegAVOption(section='mlpenc AVOptions:', name='rematrix_precision', type='int', flags='E...A......', help='Rematrix coefficient precision (from 0 to 14) (default 1)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='mp2', flags='A....D', description='MP2 (MPEG audio layer 2)', options=()),
    FFMpegEncoder(name='mp2fixed', flags='A....D', description='MP2 fixed point (MPEG audio layer 2) (codec mp2)', options=()),
    FFMpegEncoder(name='libtwolame', flags='A....D', description='libtwolame MP2 (MPEG audio layer 2) (codec mp2)', options=(FFMpegAVOption(section='libtwolame encoder AVOptions:', name='mode', type='int', flags='E...A......', help='Mpeg Mode (from -1 to 3) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='', flags='E...A......', value='-1'), FFMpegOptionChoice(name='stereo', help='', flags='E...A......', value='0'), FFMpegOptionChoice(name='joint_stereo', help='', flags='E...A......', value='1'), FFMpegOptionChoice(name='dual_channel', help='', flags='E...A......', value='2'), FFMpegOptionChoice(name='mono', help='', flags='E...A......', value='3'))), FFMpegAVOption(section='libtwolame encoder AVOptions:', name='psymodel', type='int', flags='E...A......', help='Psychoacoustic Model (from -1 to 4) (default 3)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libtwolame encoder AVOptions:', name='energy_levels', type='int', flags='E...A......', help='enable energy levels (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libtwolame encoder AVOptions:', name='error_protection', type='int', flags='E...A......', help='enable CRC error protection (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libtwolame encoder AVOptions:', name='copyright', type='int', flags='E...A......', help='set MPEG Audio Copyright flag (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libtwolame encoder AVOptions:', name='original', type='int', flags='E...A......', help='set MPEG Audio Original flag (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libtwolame encoder AVOptions:', name='verbosity', type='int', flags='E...A......', help='set library optput level (0-10) (from 0 to 10) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='libmp3lame', flags='A....D', description='libmp3lame MP3 (MPEG audio layer 3) (codec mp3)', options=(FFMpegAVOption(section='libmp3lame encoder AVOptions:', name='reservoir', type='boolean', flags='E...A......', help='use bit reservoir (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libmp3lame encoder AVOptions:', name='joint_stereo', type='boolean', flags='E...A......', help='use joint stereo (default true)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libmp3lame encoder AVOptions:', name='abr', type='boolean', flags='E...A......', help='use ABR (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libmp3lame encoder AVOptions:', name='copyright', type='boolean', flags='E...A......', help='set copyright flag (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libmp3lame encoder AVOptions:', name='original', type='boolean', flags='E...A......', help='set original flag (default true)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='libshine', flags='A....D', description='libshine MP3 (MPEG audio layer 3) (codec mp3)', options=()),
    FFMpegEncoder(name='nellymoser', flags='A....D', description='Nellymoser Asao', options=()),
    FFMpegEncoder(name='opus', flags='A..X.D', description='Opus', options=(FFMpegAVOption(section='Opus encoder AVOptions:', name='opus_delay', type='float', flags='E...A......', help='Maximum delay in milliseconds (from 2.5 to 360) (default 360)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='Opus encoder AVOptions:', name='apply_phase_inv', type='boolean', flags='E...A......', help='Apply intensity stereo phase inversion (default true)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='libopus', flags='A....D', description='libopus Opus (codec opus)', options=(FFMpegAVOption(section='libopus AVOptions:', name='application', type='int', flags='E...A......', help='Intended application type (from 2048 to 2051) (default audio)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='voip', help='Favor improved speech intelligibility', flags='E...A......', value='2048'), FFMpegOptionChoice(name='audio', help='Favor faithfulness to the input', flags='E...A......', value='2049'), FFMpegOptionChoice(name='lowdelay', help='Restrict to only the lowest delay modes, disable voice-optimized modes', flags='E...A......', value='2051'))), FFMpegAVOption(section='libopus AVOptions:', name='frame_duration', type='float', flags='E...A......', help='Duration of a frame in milliseconds (from 2.5 to 120) (default 20)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libopus AVOptions:', name='packet_loss', type='int', flags='E...A......', help='Expected packet loss percentage (from 0 to 100) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libopus AVOptions:', name='fec', type='boolean', flags='E...A......', help='Enable inband FEC. Expected packet loss must be non-zero (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libopus AVOptions:', name='vbr', type='int', flags='E...A......', help='Variable bit rate mode (from 0 to 2) (default on)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='off', help='Use constant bit rate', flags='E...A......', value='0'), FFMpegOptionChoice(name='on', help='Use variable bit rate', flags='E...A......', value='1'), FFMpegOptionChoice(name='constrained', help='Use constrained VBR', flags='E...A......', value='2'))), FFMpegAVOption(section='libopus AVOptions:', name='mapping_family', type='int', flags='E...A......', help='Channel Mapping Family (from -1 to 255) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libopus AVOptions:', name='apply_phase_inv', type='boolean', flags='E...A......', help='Apply intensity stereo phase inversion (default true)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='pcm_alaw', flags='A....D', description='PCM A-law / G.711 A-law', options=()),
    FFMpegEncoder(name='pcm_bluray', flags='A....D', description='PCM signed 16|20|24-bit big-endian for Blu-ray media', options=()),
    FFMpegEncoder(name='pcm_dvd', flags='A....D', description='PCM signed 16|20|24-bit big-endian for DVD media', options=()),
    FFMpegEncoder(name='pcm_f32be', flags='A....D', description='PCM 32-bit floating point big-endian', options=()),
    FFMpegEncoder(name='pcm_f32le', flags='A....D', description='PCM 32-bit floating point little-endian', options=()),
    FFMpegEncoder(name='pcm_f64be', flags='A....D', description='PCM 64-bit floating point big-endian', options=()),
    FFMpegEncoder(name='pcm_f64le', flags='A....D', description='PCM 64-bit floating point little-endian', options=()),
    FFMpegEncoder(name='pcm_mulaw', flags='A....D', description='PCM mu-law / G.711 mu-law', options=()),
    FFMpegEncoder(name='pcm_s16be', flags='A....D', description='PCM signed 16-bit big-endian', options=()),
    FFMpegEncoder(name='pcm_s16be_planar', flags='A....D', description='PCM signed 16-bit big-endian planar', options=()),
    FFMpegEncoder(name='pcm_s16le', flags='A....D', description='PCM signed 16-bit little-endian', options=()),
    FFMpegEncoder(name='pcm_s16le_planar', flags='A....D', description='PCM signed 16-bit little-endian planar', options=()),
    FFMpegEncoder(name='pcm_s24be', flags='A....D', description='PCM signed 24-bit big-endian', options=()),
    FFMpegEncoder(name='pcm_s24daud', flags='A....D', description='PCM D-Cinema audio signed 24-bit', options=()),
    FFMpegEncoder(name='pcm_s24le', flags='A....D', description='PCM signed 24-bit little-endian', options=()),
    FFMpegEncoder(name='pcm_s24le_planar', flags='A....D', description='PCM signed 24-bit little-endian planar', options=()),
    FFMpegEncoder(name='pcm_s32be', flags='A....D', description='PCM signed 32-bit big-endian', options=()),
    FFMpegEncoder(name='pcm_s32le', flags='A....D', description='PCM signed 32-bit little-endian', options=()),
    FFMpegEncoder(name='pcm_s32le_planar', flags='A....D', description='PCM signed 32-bit little-endian planar', options=()),
    FFMpegEncoder(name='pcm_s64be', flags='A....D', description='PCM signed 64-bit big-endian', options=()),
    FFMpegEncoder(name='pcm_s64le', flags='A....D', description='PCM signed 64-bit little-endian', options=()),
    FFMpegEncoder(name='pcm_s8', flags='A....D', description='PCM signed 8-bit', options=()),
    FFMpegEncoder(name='pcm_s8_planar', flags='A....D', description='PCM signed 8-bit planar', options=()),
    FFMpegEncoder(name='pcm_u16be', flags='A....D', description='PCM unsigned 16-bit big-endian', options=()),
    FFMpegEncoder(name='pcm_u16le', flags='A....D', description='PCM unsigned 16-bit little-endian', options=()),
    FFMpegEncoder(name='pcm_u24be', flags='A....D', description='PCM unsigned 24-bit big-endian', options=()),
    FFMpegEncoder(name='pcm_u24le', flags='A....D', description='PCM unsigned 24-bit little-endian', options=()),
    FFMpegEncoder(name='pcm_u32be', flags='A....D', description='PCM unsigned 32-bit big-endian', options=()),
    FFMpegEncoder(name='pcm_u32le', flags='A....D', description='PCM unsigned 32-bit little-endian', options=()),
    FFMpegEncoder(name='pcm_u8', flags='A....D', description='PCM unsigned 8-bit', options=()),
    FFMpegEncoder(name='pcm_vidc', flags='A....D', description='PCM Archimedes VIDC', options=()),
    FFMpegEncoder(name='real_144', flags='A....D', description='RealAudio 1.0 (14.4K) (codec ra_144)', options=()),
    FFMpegEncoder(name='roq_dpcm', flags='A....D', description='id RoQ DPCM', options=()),
    FFMpegEncoder(name='s302m', flags='A..X.D', description='SMPTE 302M', options=()),
    FFMpegEncoder(name='sbc', flags='A....D', description='SBC (low-complexity subband codec)', options=(FFMpegAVOption(section='sbc encoder AVOptions:', name='sbc_delay', type='duration', flags='E...A......', help='set maximum algorithmic latency (default 0.013)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='sbc encoder AVOptions:', name='msbc', type='boolean', flags='E...A......', help='use mSBC mode (wideband speech mono SBC) (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='sonic', flags='A..X.D', description='Sonic', options=()),
    FFMpegEncoder(name='sonicls', flags='A..X.D', description='Sonic lossless', options=()),
    FFMpegEncoder(name='libspeex', flags='A....D', description='libspeex Speex (codec speex)', options=(FFMpegAVOption(section='libspeex AVOptions:', name='abr', type='int', flags='E...A......', help='Use average bit rate (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libspeex AVOptions:', name='cbr_quality', type='int', flags='E...A......', help='Set quality value (0 to 10) for CBR (from 0 to 10) (default 8)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libspeex AVOptions:', name='frames_per_packet', type='int', flags='E...A......', help='Number of frames to encode in each packet (from 1 to 8) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libspeex AVOptions:', name='vad', type='int', flags='E...A......', help='Voice Activity Detection (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libspeex AVOptions:', name='dtx', type='int', flags='E...A......', help='Discontinuous Transmission (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='truehd', flags='A..X.D', description='TrueHD', options=(FFMpegAVOption(section='mlpenc AVOptions:', name='max_interval', type='int', flags='E...A......', help='Max number of frames between each new header (from 8 to 128) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mlpenc AVOptions:', name='lpc_coeff_precision', type='int', flags='E...A......', help='LPC coefficient precision (from 0 to 15) (default 15)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mlpenc AVOptions:', name='lpc_type', type='int', flags='E...A......', help='LPC algorithm (from 2 to 3) (default levinson)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='levinson', help='', flags='E...A......', value='2'), FFMpegOptionChoice(name='cholesky', help='', flags='E...A......', value='3'))), FFMpegAVOption(section='mlpenc AVOptions:', name='lpc_passes', type='int', flags='E...A......', help='Number of passes to use for Cholesky factorization during LPC analysis (from 1 to INT_MAX) (default 2)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mlpenc AVOptions:', name='codebook_search', type='int', flags='E...A......', help='Max number of codebook searches (from 1 to 100) (default 3)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mlpenc AVOptions:', name='prediction_order', type='int', flags='E...A......', help='Search method for selecting prediction order (from 0 to 4) (default estimation)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='estimation', help='', flags='E...A......', value='0'), FFMpegOptionChoice(name='search', help='', flags='E...A......', value='4'))), FFMpegAVOption(section='mlpenc AVOptions:', name='rematrix_precision', type='int', flags='E...A......', help='Rematrix coefficient precision (from 0 to 14) (default 1)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='tta', flags='A....D', description='TTA (True Audio)', options=()),
    FFMpegEncoder(name='vorbis', flags='A..X.D', description='Vorbis', options=()),
    FFMpegEncoder(name='libvorbis', flags='A....D', description='libvorbis (codec vorbis)', options=(FFMpegAVOption(section='libvorbis AVOptions:', name='iblock', type='double', flags='E...A......', help='Sets the impulse block bias (from -15 to 0) (default 0)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='wavpack', flags='A....D', description='WavPack', options=(FFMpegAVOption(section='WavPack encoder AVOptions:', name='joint_stereo', type='boolean', flags='E...A......', help='(default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='WavPack encoder AVOptions:', name='optimize_mono', type='boolean', flags='E...A......', help='(default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='wmav1', flags='A....D', description='Windows Media Audio 1', options=()),
    FFMpegEncoder(name='wmav2', flags='A....D', description='Windows Media Audio 2', options=()),
    FFMpegEncoder(name='ssa', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle (codec ass)', options=()),
    FFMpegEncoder(name='ass', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle', options=()),
    FFMpegEncoder(name='dvbsub', flags='S.....', description='DVB subtitles (codec dvb_subtitle)', options=()),
    FFMpegEncoder(name='dvdsub', flags='S.....', description='DVD subtitles (codec dvd_subtitle)', options=(FFMpegAVOption(section='VOBSUB subtitle encoder AVOptions:', name='palette', type='string', flags='E....S.....', help='set the global palette', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='VOBSUB subtitle encoder AVOptions:', name='even_rows_fix', type='boolean', flags='E....S.....', help='Make number of rows even (workaround for some players) (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegEncoder(name='mov_text', flags='S.....', description='3GPP Timed Text subtitle', options=(FFMpegAVOption(section='MOV text enoder AVOptions:', name='height', type='int', flags='E....S.....', help='Frame height, usually video height (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),)),
    FFMpegEncoder(name='srt', flags='S.....', description='SubRip subtitle (codec subrip)', options=()),
    FFMpegEncoder(name='subrip', flags='S.....', description='SubRip subtitle', options=()),
    FFMpegEncoder(name='text', flags='S.....', description='Raw text subtitle', options=()),
    FFMpegEncoder(name='ttml', flags='S.....', description='TTML subtitle', options=()),
    FFMpegEncoder(name='webvtt', flags='S.....', description='WebVTT subtitle', options=()),
    FFMpegEncoder(name='xsub', flags='S.....', description='DivX subtitles (XSUB)', options=()),
    FFMpegDecoder(name='012v', flags='V....D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegDecoder(name='4xm', flags='V....D', description='4X Movie', options=()),
    FFMpegDecoder(name='8bps', flags='V....D', description='QuickTime 8BPS video', options=()),
    FFMpegDecoder(name='aasc', flags='V....D', description='Autodesk RLE', options=()),
    FFMpegDecoder(name='agm', flags='V....D', description='Amuse Graphics Movie', options=()),
    FFMpegDecoder(name='aic', flags='VF...D', description='Apple Intermediate Codec', options=()),
    FFMpegDecoder(name='alias_pix', flags='V....D', description='Alias/Wavefront PIX image', options=()),
    FFMpegDecoder(name='amv', flags='V....D', description='AMV Video', options=()),
    FFMpegDecoder(name='anm', flags='V....D', description='Deluxe Paint Animation', options=()),
    FFMpegDecoder(name='ansi', flags='V....D', description='ASCII/ANSI art', options=()),
    FFMpegDecoder(name='apng', flags='VF...D', description='APNG (Animated Portable Network Graphics) image', options=()),
    FFMpegDecoder(name='arbc', flags='V....D', description="Gryphon's Anim Compressor", options=()),
    FFMpegDecoder(name='argo', flags='V....D', description='Argonaut Games Video', options=()),
    FFMpegDecoder(name='asv1', flags='V....D', description='ASUS V1', options=()),
    FFMpegDecoder(name='asv2', flags='V....D', description='ASUS V2', options=()),
    FFMpegDecoder(name='aura', flags='V....D', description='Auravision AURA', options=()),
    FFMpegDecoder(name='aura2', flags='V....D', description='Auravision Aura 2', options=()),
    FFMpegDecoder(name='libdav1d', flags='V.....', description='dav1d AV1 decoder by VideoLAN (codec av1)', options=(FFMpegAVOption(section='libdav1d decoder AVOptions:', name='tilethreads', type='int', flags='.D.V......P', help='Tile threads (from 0 to 256) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libdav1d decoder AVOptions:', name='framethreads', type='int', flags='.D.V......P', help='Frame threads (from 0 to 256) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libdav1d decoder AVOptions:', name='max_frame_delay', type='int', flags='.D.V.......', help='Max frame delay (from 0 to 256) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libdav1d decoder AVOptions:', name='filmgrain', type='boolean', flags='.D.V......P', help='Apply Film Grain (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libdav1d decoder AVOptions:', name='oppoint', type='int', flags='.D.V.......', help='Select an operating point of the scalable bitstream (from -1 to 31) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libdav1d decoder AVOptions:', name='alllayers', type='boolean', flags='.D.V.......', help='Output all spatial layers (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='av1', flags='V....D', description='Alliance for Open Media AV1', options=(FFMpegAVOption(section='AV1 decoder AVOptions:', name='operating_point', type='int', flags='.D.V.......', help='Select an operating point of the scalable bitstream (from 0 to 31) (default 0)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='av1_cuvid', flags='V.....', description='Nvidia CUVID AV1 decoder (codec av1)', options=(FFMpegAVOption(section='av1_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='av1_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='av1_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='avrn', flags='V....D', description='Avid AVI Codec', options=()),
    FFMpegDecoder(name='avrp', flags='V....D', description='Avid 1:1 10-bit RGB Packer', options=()),
    FFMpegDecoder(name='avs', flags='V....D', description='AVS (Audio Video Standard) video', options=()),
    FFMpegDecoder(name='avui', flags='V....D', description='Avid Meridien Uncompressed', options=()),
    FFMpegDecoder(name='ayuv', flags='V....D', description='Uncompressed packed MS 4:4:4:4', options=()),
    FFMpegDecoder(name='bethsoftvid', flags='V....D', description='Bethesda VID video', options=()),
    FFMpegDecoder(name='bfi', flags='V....D', description='Brute Force & Ignorance', options=()),
    FFMpegDecoder(name='binkvideo', flags='V....D', description='Bink video', options=()),
    FFMpegDecoder(name='bintext', flags='V....D', description='Binary text', options=()),
    FFMpegDecoder(name='bitpacked', flags='VF....', description='Bitpacked', options=()),
    FFMpegDecoder(name='bmp', flags='V....D', description='BMP (Windows and OS/2 bitmap)', options=()),
    FFMpegDecoder(name='bmv_video', flags='V....D', description='Discworld II BMV video', options=()),
    FFMpegDecoder(name='brender_pix', flags='V....D', description='BRender PIX image', options=()),
    FFMpegDecoder(name='c93', flags='V....D', description='Interplay C93', options=()),
    FFMpegDecoder(name='cavs', flags='V....D', description='Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)', options=()),
    FFMpegDecoder(name='cdgraphics', flags='V....D', description='CD Graphics video', options=()),
    FFMpegDecoder(name='cdtoons', flags='V....D', description='CDToons video', options=()),
    FFMpegDecoder(name='cdxl', flags='V....D', description='Commodore CDXL video', options=()),
    FFMpegDecoder(name='cfhd', flags='VF...D', description='GoPro CineForm HD', options=()),
    FFMpegDecoder(name='cinepak', flags='V....D', description='Cinepak', options=()),
    FFMpegDecoder(name='clearvideo', flags='V....D', description='Iterated Systems ClearVideo', options=()),
    FFMpegDecoder(name='cljr', flags='V....D', description='Cirrus Logic AccuPak', options=()),
    FFMpegDecoder(name='cllc', flags='VF...D', description='Canopus Lossless Codec', options=()),
    FFMpegDecoder(name='eacmv', flags='V....D', description='Electronic Arts CMV video (codec cmv)', options=()),
    FFMpegDecoder(name='cpia', flags='V....D', description='CPiA video format', options=()),
    FFMpegDecoder(name='cri', flags='VF...D', description='Cintel RAW', options=()),
    FFMpegDecoder(name='camstudio', flags='V....D', description='CamStudio (codec cscd)', options=()),
    FFMpegDecoder(name='cyuv', flags='V....D', description='Creative YUV (CYUV)', options=()),
    FFMpegDecoder(name='dds', flags='V.S..D', description='DirectDraw Surface image decoder', options=()),
    FFMpegDecoder(name='dfa', flags='V....D', description='Chronomaster DFA', options=()),
    FFMpegDecoder(name='dirac', flags='V.S..D', description='BBC Dirac VC-2', options=()),
    FFMpegDecoder(name='dnxhd', flags='VFS..D', description='VC3/DNxHD', options=()),
    FFMpegDecoder(name='dpx', flags='V....D', description='DPX (Digital Picture Exchange) image', options=()),
    FFMpegDecoder(name='dsicinvideo', flags='V....D', description='Delphine Software International CIN video', options=()),
    FFMpegDecoder(name='dvvideo', flags='VFS..D', description='DV (Digital Video)', options=()),
    FFMpegDecoder(name='dxa', flags='V....D', description='Feeble Files/ScummVM DXA', options=()),
    FFMpegDecoder(name='dxtory', flags='VF...D', description='Dxtory', options=()),
    FFMpegDecoder(name='dxv', flags='VFS..D', description='Resolume DXV', options=()),
    FFMpegDecoder(name='escape124', flags='V....D', description='Escape 124', options=()),
    FFMpegDecoder(name='escape130', flags='V....D', description='Escape 130', options=()),
    FFMpegDecoder(name='exr', flags='VFS..D', description='OpenEXR image', options=(FFMpegAVOption(section='EXR AVOptions:', name='layer', type='string', flags='.D.V.......', help='Set the decoding layer (default "")', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='EXR AVOptions:', name='part', type='int', flags='.D.V.......', help='Set the decoding part (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='EXR AVOptions:', name='gamma', type='float', flags='.D.V.......', help='Set the float gamma value when decoding (from 0.001 to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='EXR AVOptions:', name='apply_trc', type='int', flags='.D.V.......', help='color transfer characteristics to apply to EXR linear input (from 1 to 18) (default gamma)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='bt709', help='BT.709', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='gamma', help='gamma', flags='.D.V.......', value='2'), FFMpegOptionChoice(name='gamma22', help='BT.470 M', flags='.D.V.......', value='4'), FFMpegOptionChoice(name='gamma28', help='BT.470 BG', flags='.D.V.......', value='5'), FFMpegOptionChoice(name='smpte170m', help='SMPTE 170 M', flags='.D.V.......', value='6'), FFMpegOptionChoice(name='smpte240m', help='SMPTE 240 M', flags='.D.V.......', value='7'), FFMpegOptionChoice(name='linear', help='Linear', flags='.D.V.......', value='8'), FFMpegOptionChoice(name='log', help='Log', flags='.D.V.......', value='9'), FFMpegOptionChoice(name='log_sqrt', help='Log square root', flags='.D.V.......', value='10'), FFMpegOptionChoice(name='iec61966_2_4', help='IEC 61966-2-4', flags='.D.V.......', value='11'), FFMpegOptionChoice(name='bt1361', help='BT.1361', flags='.D.V.......', value='12'), FFMpegOptionChoice(name='iec61966_2_1', help='IEC 61966-2-1', flags='.D.V.......', value='13'), FFMpegOptionChoice(name='bt2020_10bit', help='BT.2020 - 10 bit', flags='.D.V.......', value='14'), FFMpegOptionChoice(name='bt2020_12bit', help='BT.2020 - 12 bit', flags='.D.V.......', value='15'), FFMpegOptionChoice(name='smpte2084', help='SMPTE ST 2084', flags='.D.V.......', value='16'), FFMpegOptionChoice(name='smpte428_1', help='SMPTE ST 428-1', flags='.D.V.......', value='17'))))),
    FFMpegDecoder(name='ffv1', flags='VFS..D', description='FFmpeg video codec #1', options=()),
    FFMpegDecoder(name='ffvhuff', flags='VF..BD', description='Huffyuv FFmpeg variant', options=()),
    FFMpegDecoder(name='fic', flags='V.S..D', description='Mirillis FIC', options=(FFMpegAVOption(section='FIC decoder AVOptions:', name='skip_cursor', type='boolean', flags='.D.V.......', help='skip the cursor (default false)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='fits', flags='V....D', description='Flexible Image Transport System', options=(FFMpegAVOption(section='FITS decoder AVOptions:', name='blank_value', type='int', flags='.D.V.......', help='value that is used to replace BLANK pixels in data array (from 0 to 65535) (default 0)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='flashsv', flags='V....D', description='Flash Screen Video v1', options=()),
    FFMpegDecoder(name='flashsv2', flags='V....D', description='Flash Screen Video v2', options=()),
    FFMpegDecoder(name='flic', flags='V....D', description='Autodesk Animator Flic video', options=()),
    FFMpegDecoder(name='flv', flags='V...BD', description='FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (codec flv1)', options=()),
    FFMpegDecoder(name='fmvc', flags='V....D', description='FM Screen Capture Codec', options=()),
    FFMpegDecoder(name='fraps', flags='VF...D', description='Fraps', options=()),
    FFMpegDecoder(name='frwu', flags='V....D', description='Forward Uncompressed', options=(FFMpegAVOption(section='frwu Decoder AVOptions:', name='change_field_order', type='boolean', flags='.D.V.......', help='Change field order (default false)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='g2m', flags='V....D', description='Go2Meeting', options=()),
    FFMpegDecoder(name='gdv', flags='V....D', description='Gremlin Digital Video', options=()),
    FFMpegDecoder(name='gem', flags='V....D', description='GEM Raster image', options=()),
    FFMpegDecoder(name='gif', flags='V....D', description='GIF (Graphics Interchange Format)', options=(FFMpegAVOption(section='gif decoder AVOptions:', name='trans_color', type='int', flags='.D.V.......', help='color value (ARGB) that is used instead of transparent color (from 0 to UINT32_MAX) (default 16777215)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='h261', flags='V....D', description='H.261', options=()),
    FFMpegDecoder(name='h263', flags='V...BD', description='H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegDecoder(name='h263_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.263 decoder wrapper (codec h263)', options=(FFMpegAVOption(section='h263_v4l2m2m_decoder AVOptions:', name='num_output_buffers', type='int', flags='.D.V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h263_v4l2m2m_decoder AVOptions:', name='num_capture_buffers', type='int', flags='.D.V.......', help='Number of buffers in the capture context (from 2 to INT_MAX) (default 20)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='h263i', flags='V...BD', description='Intel H.263', options=()),
    FFMpegDecoder(name='h263p', flags='V...BD', description='H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegDecoder(name='h264', flags='VFS..D', description='H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10', options=(FFMpegAVOption(section='H264 Decoder AVOptions:', name='is_avc', type='boolean', flags='.D.V..X....', help='is avc (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H264 Decoder AVOptions:', name='nal_length_size', type='int', flags='.D.V..X....', help='nal_length_size (from 0 to 4) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H264 Decoder AVOptions:', name='enable_er', type='boolean', flags='.D.V.......', help='Enable error resilience on damaged frames (unsafe) (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='H264 Decoder AVOptions:', name='x264_build', type='int', flags='.D.V.......', help='Assume this x264 version if no x264 version found in any SEI (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='h264_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.264 decoder wrapper (codec h264)', options=(FFMpegAVOption(section='h264_v4l2m2m_decoder AVOptions:', name='num_output_buffers', type='int', flags='.D.V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_v4l2m2m_decoder AVOptions:', name='num_capture_buffers', type='int', flags='.D.V.......', help='Number of buffers in the capture context (from 2 to INT_MAX) (default 20)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='h264_cuvid', flags='V.....', description='Nvidia CUVID H264 decoder (codec h264)', options=(FFMpegAVOption(section='h264_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='h264_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='h264_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='hap', flags='VFS..D', description='Vidvox Hap', options=()),
    FFMpegDecoder(name='hdr', flags='VF...D', description='HDR (Radiance RGBE format) image', options=()),
    FFMpegDecoder(name='hevc', flags='VFS..D', description='HEVC (High Efficiency Video Coding)', options=(FFMpegAVOption(section='HEVC decoder AVOptions:', name='apply_defdispwin', type='boolean', flags='.D.V.......', help='Apply default display window from VUI (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='HEVC decoder AVOptions:', name='strict-displaywin', type='boolean', flags='.D.V.......', help='stricly apply default display window size (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='hevc_v4l2m2m', flags='V.....', description='V4L2 mem2mem HEVC decoder wrapper (codec hevc)', options=(FFMpegAVOption(section='hevc_v4l2m2m_decoder AVOptions:', name='num_output_buffers', type='int', flags='.D.V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_v4l2m2m_decoder AVOptions:', name='num_capture_buffers', type='int', flags='.D.V.......', help='Number of buffers in the capture context (from 2 to INT_MAX) (default 20)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='hevc_cuvid', flags='V.....', description='Nvidia CUVID HEVC decoder (codec hevc)', options=(FFMpegAVOption(section='hevc_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='hevc_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='hevc_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='hnm4video', flags='V....D', description='HNM 4 video', options=()),
    FFMpegDecoder(name='hq_hqa', flags='V....D', description='Canopus HQ/HQA', options=()),
    FFMpegDecoder(name='hqx', flags='VFS..D', description='Canopus HQX', options=()),
    FFMpegDecoder(name='huffyuv', flags='VF..BD', description='Huffyuv / HuffYUV', options=()),
    FFMpegDecoder(name='hymt', flags='VF..BD', description='HuffYUV MT', options=()),
    FFMpegDecoder(name='idcinvideo', flags='V....D', description='id Quake II CIN video (codec idcin)', options=()),
    FFMpegDecoder(name='idf', flags='V....D', description='iCEDraw text', options=()),
    FFMpegDecoder(name='iff', flags='V....D', description='IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (codec iff_ilbm)', options=()),
    FFMpegDecoder(name='imm4', flags='V....D', description='Infinity IMM4', options=()),
    FFMpegDecoder(name='imm5', flags='V.....', description='Infinity IMM5', options=()),
    FFMpegDecoder(name='indeo2', flags='V....D', description='Intel Indeo 2', options=()),
    FFMpegDecoder(name='indeo3', flags='V....D', description='Intel Indeo 3', options=()),
    FFMpegDecoder(name='indeo4', flags='V....D', description='Intel Indeo Video Interactive 4', options=()),
    FFMpegDecoder(name='indeo5', flags='V....D', description='Intel Indeo Video Interactive 5', options=()),
    FFMpegDecoder(name='interplayvideo', flags='V....D', description='Interplay MVE video', options=()),
    FFMpegDecoder(name='ipu', flags='V....D', description='IPU Video', options=()),
    FFMpegDecoder(name='jpeg2000', flags='VFS..D', description='JPEG 2000', options=(FFMpegAVOption(section='jpeg2000 AVOptions:', name='lowres', type='int', flags='.D.V.......', help='Lower the decoding resolution by a power of two (from 0 to 33) (default 0)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='jpegls', flags='V....D', description='JPEG-LS', options=()),
    FFMpegDecoder(name='libjxl', flags='V....D', description='libjxl JPEG XL (codec jpegxl)', options=()),
    FFMpegDecoder(name='jv', flags='V....D', description='Bitmap Brothers JV video', options=()),
    FFMpegDecoder(name='kgv1', flags='V....D', description='Kega Game Video', options=()),
    FFMpegDecoder(name='kmvc', flags='V....D', description="Karl Morton's video codec", options=()),
    FFMpegDecoder(name='lagarith', flags='VF...D', description='Lagarith lossless', options=()),
    FFMpegDecoder(name='loco', flags='V....D', description='LOCO', options=()),
    FFMpegDecoder(name='lscr', flags='V....D', description='LEAD Screen Capture', options=()),
    FFMpegDecoder(name='m101', flags='V....D', description='Matrox Uncompressed SD', options=()),
    FFMpegDecoder(name='eamad', flags='V....D', description='Electronic Arts Madcow Video (codec mad)', options=()),
    FFMpegDecoder(name='magicyuv', flags='VFS..D', description='MagicYUV video', options=()),
    FFMpegDecoder(name='mdec', flags='VF...D', description='Sony PlayStation MDEC (Motion DECoder)', options=()),
    FFMpegDecoder(name='media100', flags='V....D', description='Media 100', options=()),
    FFMpegDecoder(name='mimic', flags='VF...D', description='Mimic', options=()),
    FFMpegDecoder(name='mjpeg', flags='V....D', description='MJPEG (Motion JPEG)', options=(FFMpegAVOption(section='MJPEG decoder AVOptions:', name='extern_huff', type='boolean', flags='.D.V.......', help='Use external huffman table. (default false)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='mjpeg_cuvid', flags='V.....', description='Nvidia CUVID MJPEG decoder (codec mjpeg)', options=(FFMpegAVOption(section='mjpeg_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='mjpeg_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mjpeg_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='mjpegb', flags='V....D', description='Apple MJPEG-B', options=()),
    FFMpegDecoder(name='mmvideo', flags='V....D', description='American Laser Games MM Video', options=()),
    FFMpegDecoder(name='mobiclip', flags='V....D', description='MobiClip Video', options=()),
    FFMpegDecoder(name='motionpixels', flags='V....D', description='Motion Pixels video', options=()),
    FFMpegDecoder(name='mpeg1video', flags='V.S.BD', description='MPEG-1 video', options=()),
    FFMpegDecoder(name='mpeg1_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG1 decoder wrapper (codec mpeg1video)', options=(FFMpegAVOption(section='mpeg1_v4l2m2m_decoder AVOptions:', name='num_output_buffers', type='int', flags='.D.V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1_v4l2m2m_decoder AVOptions:', name='num_capture_buffers', type='int', flags='.D.V.......', help='Number of buffers in the capture context (from 2 to INT_MAX) (default 20)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='mpeg1_cuvid', flags='V.....', description='Nvidia CUVID MPEG1VIDEO decoder (codec mpeg1video)', options=(FFMpegAVOption(section='mpeg1_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='mpeg1_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg1_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='mpeg2video', flags='V.S.BD', description='MPEG-2 video', options=()),
    FFMpegDecoder(name='mpegvideo', flags='V.S.BD', description='MPEG-1 video (codec mpeg2video)', options=()),
    FFMpegDecoder(name='mpeg2_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG2 decoder wrapper (codec mpeg2video)', options=(FFMpegAVOption(section='mpeg2_v4l2m2m_decoder AVOptions:', name='num_output_buffers', type='int', flags='.D.V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_v4l2m2m_decoder AVOptions:', name='num_capture_buffers', type='int', flags='.D.V.......', help='Number of buffers in the capture context (from 2 to INT_MAX) (default 20)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='mpeg2_cuvid', flags='V.....', description='Nvidia CUVID MPEG2VIDEO decoder (codec mpeg2video)', options=(FFMpegAVOption(section='mpeg2_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='mpeg2_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg2_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='mpeg4', flags='VF..BD', description='MPEG-4 part 2', options=()),
    FFMpegDecoder(name='mpeg4_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG4 decoder wrapper (codec mpeg4)', options=(FFMpegAVOption(section='mpeg4_v4l2m2m_decoder AVOptions:', name='num_output_buffers', type='int', flags='.D.V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg4_v4l2m2m_decoder AVOptions:', name='num_capture_buffers', type='int', flags='.D.V.......', help='Number of buffers in the capture context (from 2 to INT_MAX) (default 20)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='mpeg4_cuvid', flags='V.....', description='Nvidia CUVID MPEG4 decoder (codec mpeg4)', options=(FFMpegAVOption(section='mpeg4_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='mpeg4_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg4_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg4_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg4_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='mpeg4_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='msa1', flags='V....D', description='MS ATC Screen', options=()),
    FFMpegDecoder(name='mscc', flags='V....D', description='Mandsoft Screen Capture Codec', options=()),
    FFMpegDecoder(name='msmpeg4v1', flags='V...BD', description='MPEG-4 part 2 Microsoft variant version 1', options=()),
    FFMpegDecoder(name='msmpeg4v2', flags='V...BD', description='MPEG-4 part 2 Microsoft variant version 2', options=()),
    FFMpegDecoder(name='msmpeg4', flags='V...BD', description='MPEG-4 part 2 Microsoft variant version 3 (codec msmpeg4v3)', options=()),
    FFMpegDecoder(name='msp2', flags='V....D', description='Microsoft Paint (MSP) version 2', options=()),
    FFMpegDecoder(name='msrle', flags='V....D', description='Microsoft RLE', options=()),
    FFMpegDecoder(name='mss1', flags='V....D', description='MS Screen 1', options=()),
    FFMpegDecoder(name='mss2', flags='V....D', description='MS Windows Media Video V9 Screen', options=()),
    FFMpegDecoder(name='msvideo1', flags='V....D', description='Microsoft Video 1', options=()),
    FFMpegDecoder(name='mszh', flags='VF...D', description='LCL (LossLess Codec Library) MSZH', options=()),
    FFMpegDecoder(name='mts2', flags='V....D', description='MS Expression Encoder Screen', options=()),
    FFMpegDecoder(name='mv30', flags='V....D', description='MidiVid 3.0', options=()),
    FFMpegDecoder(name='mvc1', flags='V....D', description='Silicon Graphics Motion Video Compressor 1', options=()),
    FFMpegDecoder(name='mvc2', flags='V....D', description='Silicon Graphics Motion Video Compressor 2', options=()),
    FFMpegDecoder(name='mvdv', flags='V....D', description='MidiVid VQ', options=()),
    FFMpegDecoder(name='mvha', flags='V....D', description='MidiVid Archive Codec', options=()),
    FFMpegDecoder(name='mwsc', flags='V....D', description='MatchWare Screen Capture Codec', options=()),
    FFMpegDecoder(name='mxpeg', flags='V....D', description='Mobotix MxPEG video', options=()),
    FFMpegDecoder(name='notchlc', flags='VF...D', description='NotchLC', options=()),
    FFMpegDecoder(name='nuv', flags='V....D', description='NuppelVideo/RTJPEG', options=()),
    FFMpegDecoder(name='paf_video', flags='V....D', description='Amazing Studio Packed Animation File Video', options=()),
    FFMpegDecoder(name='pam', flags='V....D', description='PAM (Portable AnyMap) image', options=()),
    FFMpegDecoder(name='pbm', flags='V....D', description='PBM (Portable BitMap) image', options=()),
    FFMpegDecoder(name='pcx', flags='V....D', description='PC Paintbrush PCX image', options=()),
    FFMpegDecoder(name='pdv', flags='V....D', description='PDV (PlayDate Video)', options=()),
    FFMpegDecoder(name='pfm', flags='V....D', description='PFM (Portable FloatMap) image', options=()),
    FFMpegDecoder(name='pgm', flags='V....D', description='PGM (Portable GrayMap) image', options=()),
    FFMpegDecoder(name='pgmyuv', flags='V....D', description='PGMYUV (Portable GrayMap YUV) image', options=()),
    FFMpegDecoder(name='pgx', flags='V....D', description='PGX (JPEG2000 Test Format)', options=()),
    FFMpegDecoder(name='phm', flags='V....D', description='PHM (Portable HalfFloatMap) image', options=()),
    FFMpegDecoder(name='photocd', flags='VF...D', description='Kodak Photo CD', options=(FFMpegAVOption(section='photocd AVOptions:', name='lowres', type='int', flags='.D.V.......', help='Lower the decoding resolution by a power of two (from 0 to 4) (default 0)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='pictor', flags='V....D', description='Pictor/PC Paint', options=()),
    FFMpegDecoder(name='pixlet', flags='VF...D', description='Apple Pixlet', options=()),
    FFMpegDecoder(name='png', flags='VF...D', description='PNG (Portable Network Graphics) image', options=()),
    FFMpegDecoder(name='ppm', flags='V....D', description='PPM (Portable PixelMap) image', options=()),
    FFMpegDecoder(name='prores', flags='VFS..D', description='Apple ProRes (iCodec Pro)', options=()),
    FFMpegDecoder(name='prosumer', flags='V....D', description='Brooktree ProSumer Video', options=()),
    FFMpegDecoder(name='psd', flags='VF...D', description='Photoshop PSD file', options=()),
    FFMpegDecoder(name='ptx', flags='V....D', description='V.Flash PTX image', options=()),
    FFMpegDecoder(name='qdraw', flags='V....D', description='Apple QuickDraw', options=()),
    FFMpegDecoder(name='qoi', flags='VF...D', description='QOI (Quite OK Image format) image', options=()),
    FFMpegDecoder(name='qpeg', flags='V....D', description='Q-team QPEG', options=()),
    FFMpegDecoder(name='qtrle', flags='V....D', description='QuickTime Animation (RLE) video', options=()),
    FFMpegDecoder(name='r10k', flags='V....D', description='AJA Kona 10-bit RGB Codec', options=()),
    FFMpegDecoder(name='r210', flags='V....D', description='Uncompressed RGB 10-bit', options=()),
    FFMpegDecoder(name='rasc', flags='V....D', description='RemotelyAnywhere Screen Capture', options=(FFMpegAVOption(section='rasc decoder AVOptions:', name='skip_cursor', type='boolean', flags='.D.V.......', help='skip the cursor (default false)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='rawvideo', flags='V.....', description='raw video', options=(FFMpegAVOption(section='rawdec AVOptions:', name='top', type='boolean', flags='.D.V.......', help='top field first (default auto)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='rl2', flags='V....D', description='RL2 video', options=()),
    FFMpegDecoder(name='roqvideo', flags='V....D', description='id RoQ video (codec roq)', options=()),
    FFMpegDecoder(name='rpza', flags='V....D', description='QuickTime video (RPZA)', options=()),
    FFMpegDecoder(name='rscc', flags='V....D', description='innoHeim/Rsupport Screen Capture Codec', options=()),
    FFMpegDecoder(name='rtv1', flags='VF...D', description='RTV1 (RivaTuner Video)', options=()),
    FFMpegDecoder(name='rv10', flags='V....D', description='RealVideo 1.0', options=()),
    FFMpegDecoder(name='rv20', flags='V....D', description='RealVideo 2.0', options=()),
    FFMpegDecoder(name='rv30', flags='VF...D', description='RealVideo 3.0', options=()),
    FFMpegDecoder(name='rv40', flags='VF...D', description='RealVideo 4.0', options=()),
    FFMpegDecoder(name='sanm', flags='V....D', description='LucasArts SANM/Smush video', options=()),
    FFMpegDecoder(name='scpr', flags='V....D', description='ScreenPressor', options=()),
    FFMpegDecoder(name='screenpresso', flags='V....D', description='Screenpresso', options=()),
    FFMpegDecoder(name='sga', flags='V....D', description='Digital Pictures SGA Video', options=()),
    FFMpegDecoder(name='sgi', flags='V....D', description='SGI image', options=()),
    FFMpegDecoder(name='sgirle', flags='V....D', description='Silicon Graphics RLE 8-bit video', options=()),
    FFMpegDecoder(name='sheervideo', flags='VF...D', description='BitJazz SheerVideo', options=()),
    FFMpegDecoder(name='simbiosis_imx', flags='V....D', description='Simbiosis Interactive IMX Video', options=()),
    FFMpegDecoder(name='smackvid', flags='V....D', description='Smacker video (codec smackvideo)', options=()),
    FFMpegDecoder(name='smc', flags='V....D', description='QuickTime Graphics (SMC)', options=()),
    FFMpegDecoder(name='smvjpeg', flags='V....D', description='SMV JPEG', options=()),
    FFMpegDecoder(name='snow', flags='V....D', description='Snow', options=()),
    FFMpegDecoder(name='sp5x', flags='V....D', description='Sunplus JPEG (SP5X)', options=()),
    FFMpegDecoder(name='speedhq', flags='V....D', description='NewTek SpeedHQ', options=()),
    FFMpegDecoder(name='srgc', flags='V....D', description='Screen Recorder Gold Codec', options=()),
    FFMpegDecoder(name='sunrast', flags='V....D', description='Sun Rasterfile image', options=()),
    FFMpegDecoder(name='librsvg', flags='V....D', description='Librsvg rasterizer (codec svg)', options=(FFMpegAVOption(section='Librsvg AVOptions:', name='width', type='int', flags='.D.V.......', help='Width to render to (0 for default) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='Librsvg AVOptions:', name='height', type='int', flags='.D.V.......', help='Height to render to (0 for default) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='Librsvg AVOptions:', name='keep_ar', type='boolean', flags='.D.V.......', help='Keep aspect ratio with custom width/height (default true)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='svq1', flags='V....D', description='Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1', options=()),
    FFMpegDecoder(name='svq3', flags='V...BD', description='Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3', options=()),
    FFMpegDecoder(name='targa', flags='V....D', description='Truevision Targa image', options=()),
    FFMpegDecoder(name='targa_y216', flags='V....D', description='Pinnacle TARGA CineWave YUV16', options=()),
    FFMpegDecoder(name='tdsc', flags='V....D', description='TDSC', options=()),
    FFMpegDecoder(name='eatgq', flags='V....D', description='Electronic Arts TGQ video (codec tgq)', options=()),
    FFMpegDecoder(name='eatgv', flags='V....D', description='Electronic Arts TGV video (codec tgv)', options=()),
    FFMpegDecoder(name='theora', flags='VF..BD', description='Theora', options=()),
    FFMpegDecoder(name='thp', flags='V....D', description='Nintendo Gamecube THP video', options=()),
    FFMpegDecoder(name='tiertexseqvideo', flags='V....D', description='Tiertex Limited SEQ video', options=()),
    FFMpegDecoder(name='tiff', flags='VF...D', description='TIFF image', options=(FFMpegAVOption(section='TIFF decoder AVOptions:', name='subimage', type='boolean', flags='.D.V.......', help='decode subimage instead if available (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='TIFF decoder AVOptions:', name='thumbnail', type='boolean', flags='.D.V.......', help='decode embedded thumbnail subimage instead if available (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='TIFF decoder AVOptions:', name='page', type='int', flags='.D.V.......', help='page number of multi-page image to decode (starting from 1) (from 0 to 65535) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='tmv', flags='V....D', description='8088flex TMV', options=()),
    FFMpegDecoder(name='eatqi', flags='V....D', description='Electronic Arts TQI Video (codec tqi)', options=()),
    FFMpegDecoder(name='truemotion1', flags='V....D', description='Duck TrueMotion 1.0', options=()),
    FFMpegDecoder(name='truemotion2', flags='V....D', description='Duck TrueMotion 2.0', options=()),
    FFMpegDecoder(name='truemotion2rt', flags='V....D', description='Duck TrueMotion 2.0 Real Time', options=()),
    FFMpegDecoder(name='camtasia', flags='V....D', description='TechSmith Screen Capture Codec (codec tscc)', options=()),
    FFMpegDecoder(name='tscc2', flags='V....D', description='TechSmith Screen Codec 2', options=()),
    FFMpegDecoder(name='txd', flags='V....D', description='Renderware TXD (TeXture Dictionary) image', options=()),
    FFMpegDecoder(name='ultimotion', flags='V....D', description='IBM UltiMotion (codec ulti)', options=()),
    FFMpegDecoder(name='utvideo', flags='VF...D', description='Ut Video', options=()),
    FFMpegDecoder(name='v210', flags='VFS..D', description='Uncompressed 4:2:2 10-bit', options=(FFMpegAVOption(section='V210 Decoder AVOptions:', name='custom_stride', type='int', flags='.D.V.......', help='Custom V210 stride (from -1 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='v210x', flags='V....D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegDecoder(name='v308', flags='V....D', description='Uncompressed packed 4:4:4', options=()),
    FFMpegDecoder(name='v408', flags='V....D', description='Uncompressed packed QT 4:4:4:4', options=()),
    FFMpegDecoder(name='v410', flags='VFS..D', description='Uncompressed 4:4:4 10-bit', options=()),
    FFMpegDecoder(name='vb', flags='V....D', description='Beam Software VB', options=()),
    FFMpegDecoder(name='vble', flags='VF...D', description='VBLE Lossless Codec', options=()),
    FFMpegDecoder(name='vbn', flags='V.S..D', description='Vizrt Binary Image', options=()),
    FFMpegDecoder(name='vc1', flags='V....D', description='SMPTE VC-1', options=()),
    FFMpegDecoder(name='vc1_v4l2m2m', flags='V.....', description='V4L2 mem2mem VC1 decoder wrapper (codec vc1)', options=(FFMpegAVOption(section='vc1_v4l2m2m_decoder AVOptions:', name='num_output_buffers', type='int', flags='.D.V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vc1_v4l2m2m_decoder AVOptions:', name='num_capture_buffers', type='int', flags='.D.V.......', help='Number of buffers in the capture context (from 2 to INT_MAX) (default 20)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='vc1_cuvid', flags='V.....', description='Nvidia CUVID VC1 decoder (codec vc1)', options=(FFMpegAVOption(section='vc1_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='vc1_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vc1_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vc1_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vc1_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vc1_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='vc1image', flags='V....D', description='Windows Media Video 9 Image v2', options=()),
    FFMpegDecoder(name='vcr1', flags='V....D', description='ATI VCR1', options=()),
    FFMpegDecoder(name='xl', flags='V....D', description='Miro VideoXL (codec vixl)', options=()),
    FFMpegDecoder(name='vmdvideo', flags='V....D', description='Sierra VMD video', options=()),
    FFMpegDecoder(name='vmix', flags='VFS..D', description='vMix Video', options=()),
    FFMpegDecoder(name='vmnc', flags='V....D', description='VMware Screen Codec / VMware Video', options=()),
    FFMpegDecoder(name='vnull', flags='V....D', description='null video', options=()),
    FFMpegDecoder(name='vp3', flags='VF..BD', description='On2 VP3', options=()),
    FFMpegDecoder(name='vp4', flags='VF..BD', description='On2 VP4', options=()),
    FFMpegDecoder(name='vp5', flags='V....D', description='On2 VP5', options=()),
    FFMpegDecoder(name='vp6', flags='V....D', description='On2 VP6', options=()),
    FFMpegDecoder(name='vp6a', flags='V.S..D', description='On2 VP6 (Flash version, with alpha channel)', options=()),
    FFMpegDecoder(name='vp6f', flags='V....D', description='On2 VP6 (Flash version)', options=()),
    FFMpegDecoder(name='vp7', flags='V....D', description='On2 VP7', options=()),
    FFMpegDecoder(name='vp8', flags='VFS..D', description='On2 VP8', options=()),
    FFMpegDecoder(name='vp8_v4l2m2m', flags='V.....', description='V4L2 mem2mem VP8 decoder wrapper (codec vp8)', options=(FFMpegAVOption(section='vp8_v4l2m2m_decoder AVOptions:', name='num_output_buffers', type='int', flags='.D.V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_v4l2m2m_decoder AVOptions:', name='num_capture_buffers', type='int', flags='.D.V.......', help='Number of buffers in the capture context (from 2 to INT_MAX) (default 20)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='libvpx', flags='V....D', description='libvpx VP8 (codec vp8)', options=()),
    FFMpegDecoder(name='vp8_cuvid', flags='V.....', description='Nvidia CUVID VP8 decoder (codec vp8)', options=(FFMpegAVOption(section='vp8_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='vp8_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp8_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='vp9', flags='VFS..D', description='Google VP9', options=()),
    FFMpegDecoder(name='vp9_v4l2m2m', flags='V.....', description='V4L2 mem2mem VP9 decoder wrapper (codec vp9)', options=(FFMpegAVOption(section='vp9_v4l2m2m_decoder AVOptions:', name='num_output_buffers', type='int', flags='.D.V.......', help='Number of buffers in the output context (from 2 to INT_MAX) (default 16)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_v4l2m2m_decoder AVOptions:', name='num_capture_buffers', type='int', flags='.D.V.......', help='Number of buffers in the capture context (from 2 to INT_MAX) (default 20)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='vp9_cuvid', flags='V.....', description='Nvidia CUVID VP9 decoder (codec vp9)', options=(FFMpegAVOption(section='vp9_cuvid AVOptions:', name='deint', type='int', flags='.D.V.......', help='Set deinterlacing mode (from 0 to 2) (default weave)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='weave', help='Weave deinterlacing (do nothing)', flags='.D.V.......', value='0'), FFMpegOptionChoice(name='bob', help='Bob deinterlacing', flags='.D.V.......', value='1'), FFMpegOptionChoice(name='adaptive', help='Adaptive deinterlacing', flags='.D.V.......', value='2'))), FFMpegAVOption(section='vp9_cuvid AVOptions:', name='gpu', type='string', flags='.D.V.......', help='GPU to be used for decoding', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_cuvid AVOptions:', name='surfaces', type='int', flags='.D.V......P', help='Maximum surfaces to be used for decoding (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_cuvid AVOptions:', name='drop_second_field', type='boolean', flags='.D.V.......', help='Drop second field when deinterlacing (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_cuvid AVOptions:', name='crop', type='string', flags='.D.V.......', help='Crop (top)x(bottom)x(left)x(right)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='vp9_cuvid AVOptions:', name='resize', type='string', flags='.D.V.......', help='Resize (width)x(height)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='vqc', flags='V....D', description='ViewQuest VQC', options=()),
    FFMpegDecoder(name='wbmp', flags='VF...D', description='WBMP (Wireless Application Protocol Bitmap) image', options=()),
    FFMpegDecoder(name='wcmv', flags='V....D', description='WinCAM Motion Video', options=()),
    FFMpegDecoder(name='webp', flags='VF...D', description='WebP image', options=()),
    FFMpegDecoder(name='wmv1', flags='V...BD', description='Windows Media Video 7', options=()),
    FFMpegDecoder(name='wmv2', flags='V...BD', description='Windows Media Video 8', options=()),
    FFMpegDecoder(name='wmv3', flags='V....D', description='Windows Media Video 9', options=()),
    FFMpegDecoder(name='wmv3image', flags='V....D', description='Windows Media Video 9 Image', options=()),
    FFMpegDecoder(name='wnv1', flags='V....D', description='Winnov WNV1', options=()),
    FFMpegDecoder(name='wrapped_avframe', flags='V.....', description='AVPacket to AVFrame passthrough', options=()),
    FFMpegDecoder(name='vqavideo', flags='V....D', description='Westwood Studios VQA (Vector Quantized Animation) video (codec ws_vqa)', options=()),
    FFMpegDecoder(name='xan_wc3', flags='V....D', description='Wing Commander III / Xan', options=()),
    FFMpegDecoder(name='xan_wc4', flags='V....D', description='Wing Commander IV / Xxan', options=()),
    FFMpegDecoder(name='xbin', flags='V....D', description='eXtended BINary text', options=()),
    FFMpegDecoder(name='xbm', flags='V....D', description='XBM (X BitMap) image', options=()),
    FFMpegDecoder(name='xface', flags='V....D', description='X-face image', options=()),
    FFMpegDecoder(name='xpm', flags='V....D', description='XPM (X PixMap) image', options=()),
    FFMpegDecoder(name='xwd', flags='V....D', description='XWD (X Window Dump) image', options=()),
    FFMpegDecoder(name='y41p', flags='V....D', description='Uncompressed YUV 4:1:1 12-bit', options=()),
    FFMpegDecoder(name='ylc', flags='VF...D', description='YUY2 Lossless Codec', options=()),
    FFMpegDecoder(name='yop', flags='V.....', description='Psygnosis YOP Video', options=()),
    FFMpegDecoder(name='yuv4', flags='V....D', description='Uncompressed packed 4:2:0', options=()),
    FFMpegDecoder(name='zerocodec', flags='V....D', description='ZeroCodec Lossless Video', options=()),
    FFMpegDecoder(name='zlib', flags='VF...D', description='LCL (LossLess Codec Library) ZLIB', options=()),
    FFMpegDecoder(name='zmbv', flags='V....D', description='Zip Motion Blocks Video', options=()),
    FFMpegDecoder(name='8svx_exp', flags='A....D', description='8SVX exponential', options=()),
    FFMpegDecoder(name='8svx_fib', flags='A....D', description='8SVX fibonacci', options=()),
    FFMpegDecoder(name='aac', flags='A....D', description='AAC (Advanced Audio Coding)', options=(FFMpegAVOption(section='AAC decoder AVOptions:', name='dual_mono_mode', type='int', flags='.D..A......', help='Select the channel to decode for dual mono (from -1 to 2) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='autoselection', flags='.D..A......', value='-1'), FFMpegOptionChoice(name='main', help='Select Main/Left channel', flags='.D..A......', value='1'), FFMpegOptionChoice(name='sub', help='Select Sub/Right channel', flags='.D..A......', value='2'), FFMpegOptionChoice(name='both', help='Select both channels', flags='.D..A......', value='0'))), FFMpegAVOption(section='AAC decoder AVOptions:', name='channel_order', type='int', flags='.D..A......', help='Order in which the channels are to be exported (from 0 to 1) (default default)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='normal libavcodec channel order', flags='.D..A......', value='0'), FFMpegOptionChoice(name='coded', help='order in which the channels are coded in the bitstream', flags='.D..A......', value='1'))))),
    FFMpegDecoder(name='aac_fixed', flags='A....D', description='AAC (Advanced Audio Coding) (codec aac)', options=(FFMpegAVOption(section='AAC decoder AVOptions:', name='dual_mono_mode', type='int', flags='.D..A......', help='Select the channel to decode for dual mono (from -1 to 2) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='autoselection', flags='.D..A......', value='-1'), FFMpegOptionChoice(name='main', help='Select Main/Left channel', flags='.D..A......', value='1'), FFMpegOptionChoice(name='sub', help='Select Sub/Right channel', flags='.D..A......', value='2'), FFMpegOptionChoice(name='both', help='Select both channels', flags='.D..A......', value='0'))), FFMpegAVOption(section='AAC decoder AVOptions:', name='channel_order', type='int', flags='.D..A......', help='Order in which the channels are to be exported (from 0 to 1) (default default)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='normal libavcodec channel order', flags='.D..A......', value='0'), FFMpegOptionChoice(name='coded', help='order in which the channels are coded in the bitstream', flags='.D..A......', value='1'))))),
    FFMpegDecoder(name='aac_latm', flags='A....D', description='AAC LATM (Advanced Audio Coding LATM syntax)', options=()),
    FFMpegDecoder(name='ac3', flags='A....D', description='ATSC A/52A (AC-3)', options=()),
    FFMpegDecoder(name='ac3_fixed', flags='A....D', description='ATSC A/52A (AC-3) (codec ac3)', options=()),
    FFMpegDecoder(name='adpcm_4xm', flags='A....D', description='ADPCM 4X Movie', options=()),
    FFMpegDecoder(name='adpcm_adx', flags='A....D', description='SEGA CRI ADX ADPCM', options=()),
    FFMpegDecoder(name='adpcm_afc', flags='A....D', description='ADPCM Nintendo Gamecube AFC', options=()),
    FFMpegDecoder(name='adpcm_agm', flags='A....D', description='ADPCM AmuseGraphics Movie', options=()),
    FFMpegDecoder(name='adpcm_aica', flags='A....D', description='ADPCM Yamaha AICA', options=()),
    FFMpegDecoder(name='adpcm_argo', flags='A....D', description='ADPCM Argonaut Games', options=()),
    FFMpegDecoder(name='adpcm_ct', flags='A....D', description='ADPCM Creative Technology', options=()),
    FFMpegDecoder(name='adpcm_dtk', flags='A....D', description='ADPCM Nintendo Gamecube DTK', options=()),
    FFMpegDecoder(name='adpcm_ea', flags='A....D', description='ADPCM Electronic Arts', options=()),
    FFMpegDecoder(name='adpcm_ea_maxis_xa', flags='A....D', description='ADPCM Electronic Arts Maxis CDROM XA', options=()),
    FFMpegDecoder(name='adpcm_ea_r1', flags='A....D', description='ADPCM Electronic Arts R1', options=()),
    FFMpegDecoder(name='adpcm_ea_r2', flags='A....D', description='ADPCM Electronic Arts R2', options=()),
    FFMpegDecoder(name='adpcm_ea_r3', flags='A....D', description='ADPCM Electronic Arts R3', options=()),
    FFMpegDecoder(name='adpcm_ea_xas', flags='A....D', description='ADPCM Electronic Arts XAS', options=()),
    FFMpegDecoder(name='g722', flags='A....D', description='G.722 ADPCM (codec adpcm_g722)', options=(FFMpegAVOption(section='g722 decoder AVOptions:', name='bits_per_codeword', type='int', flags='.D..A......', help='Bits per G722 codeword (from 6 to 8) (default 8)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='g726', flags='A....D', description='G.726 ADPCM (codec adpcm_g726)', options=()),
    FFMpegDecoder(name='g726le', flags='A....D', description='G.726 ADPCM little-endian (codec adpcm_g726le)', options=()),
    FFMpegDecoder(name='adpcm_ima_acorn', flags='A....D', description='ADPCM IMA Acorn Replay', options=()),
    FFMpegDecoder(name='adpcm_ima_alp', flags='A....D', description='ADPCM IMA High Voltage Software ALP', options=()),
    FFMpegDecoder(name='adpcm_ima_amv', flags='A....D', description='ADPCM IMA AMV', options=()),
    FFMpegDecoder(name='adpcm_ima_apc', flags='A....D', description='ADPCM IMA CRYO APC', options=()),
    FFMpegDecoder(name='adpcm_ima_apm', flags='A....D', description='ADPCM IMA Ubisoft APM', options=()),
    FFMpegDecoder(name='adpcm_ima_cunning', flags='A....D', description='ADPCM IMA Cunning Developments', options=()),
    FFMpegDecoder(name='adpcm_ima_dat4', flags='A....D', description='ADPCM IMA Eurocom DAT4', options=()),
    FFMpegDecoder(name='adpcm_ima_dk3', flags='A....D', description='ADPCM IMA Duck DK3', options=()),
    FFMpegDecoder(name='adpcm_ima_dk4', flags='A....D', description='ADPCM IMA Duck DK4', options=()),
    FFMpegDecoder(name='adpcm_ima_ea_eacs', flags='A....D', description='ADPCM IMA Electronic Arts EACS', options=()),
    FFMpegDecoder(name='adpcm_ima_ea_sead', flags='A....D', description='ADPCM IMA Electronic Arts SEAD', options=()),
    FFMpegDecoder(name='adpcm_ima_iss', flags='A....D', description='ADPCM IMA Funcom ISS', options=()),
    FFMpegDecoder(name='adpcm_ima_moflex', flags='A....D', description='ADPCM IMA MobiClip MOFLEX', options=()),
    FFMpegDecoder(name='adpcm_ima_mtf', flags='A....D', description="ADPCM IMA Capcom's MT Framework", options=()),
    FFMpegDecoder(name='adpcm_ima_oki', flags='A....D', description='ADPCM IMA Dialogic OKI', options=()),
    FFMpegDecoder(name='adpcm_ima_qt', flags='A....D', description='ADPCM IMA QuickTime', options=()),
    FFMpegDecoder(name='adpcm_ima_rad', flags='A....D', description='ADPCM IMA Radical', options=()),
    FFMpegDecoder(name='adpcm_ima_smjpeg', flags='A....D', description='ADPCM IMA Loki SDL MJPEG', options=()),
    FFMpegDecoder(name='adpcm_ima_ssi', flags='A....D', description='ADPCM IMA Simon & Schuster Interactive', options=()),
    FFMpegDecoder(name='adpcm_ima_wav', flags='A....D', description='ADPCM IMA WAV', options=()),
    FFMpegDecoder(name='adpcm_ima_ws', flags='A....D', description='ADPCM IMA Westwood', options=()),
    FFMpegDecoder(name='adpcm_ms', flags='A....D', description='ADPCM Microsoft', options=()),
    FFMpegDecoder(name='adpcm_mtaf', flags='A....D', description='ADPCM MTAF', options=()),
    FFMpegDecoder(name='adpcm_psx', flags='A....D', description='ADPCM Playstation', options=()),
    FFMpegDecoder(name='adpcm_sbpro_2', flags='A....D', description='ADPCM Sound Blaster Pro 2-bit', options=()),
    FFMpegDecoder(name='adpcm_sbpro_3', flags='A....D', description='ADPCM Sound Blaster Pro 2.6-bit', options=()),
    FFMpegDecoder(name='adpcm_sbpro_4', flags='A....D', description='ADPCM Sound Blaster Pro 4-bit', options=()),
    FFMpegDecoder(name='adpcm_swf', flags='A....D', description='ADPCM Shockwave Flash', options=()),
    FFMpegDecoder(name='adpcm_thp', flags='A....D', description='ADPCM Nintendo THP', options=()),
    FFMpegDecoder(name='adpcm_thp_le', flags='A....D', description='ADPCM Nintendo THP (little-endian)', options=()),
    FFMpegDecoder(name='adpcm_vima', flags='A....D', description='LucasArts VIMA audio', options=()),
    FFMpegDecoder(name='adpcm_xa', flags='A....D', description='ADPCM CDROM XA', options=()),
    FFMpegDecoder(name='adpcm_xmd', flags='A....D', description='ADPCM Konami XMD', options=()),
    FFMpegDecoder(name='adpcm_yamaha', flags='A....D', description='ADPCM Yamaha', options=()),
    FFMpegDecoder(name='adpcm_zork', flags='A....D', description='ADPCM Zork', options=()),
    FFMpegDecoder(name='alac', flags='AF...D', description='ALAC (Apple Lossless Audio Codec)', options=(FFMpegAVOption(section='alac AVOptions:', name='extra_bits_bug', type='boolean', flags='.D..A......', help='Force non-standard decoding process (default false)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='amrnb', flags='A....D', description='AMR-NB (Adaptive Multi-Rate NarrowBand) (codec amr_nb)', options=()),
    FFMpegDecoder(name='amrwb', flags='A....D', description='AMR-WB (Adaptive Multi-Rate WideBand) (codec amr_wb)', options=()),
    FFMpegDecoder(name='anull', flags='A....D', description='null audio', options=()),
    FFMpegDecoder(name='apac', flags='A....D', description="Marian's A-pac audio", options=()),
    FFMpegDecoder(name='ape', flags='A....D', description="Monkey's Audio", options=(FFMpegAVOption(section='APE decoder AVOptions:', name='max_samples', type='int', flags='.D..A......', help='maximum number of samples decoded per call (from 1 to INT_MAX) (default 4608)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='all', help='no maximum. decode all samples for each packet at once', flags='.D..A......', value='2147483647'),)),)),
    FFMpegDecoder(name='aptx', flags='A....D', description='aptX (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegDecoder(name='aptx_hd', flags='A....D', description='aptX HD (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegDecoder(name='atrac1', flags='A....D', description='ATRAC1 (Adaptive TRansform Acoustic Coding)', options=()),
    FFMpegDecoder(name='atrac3', flags='A....D', description='ATRAC3 (Adaptive TRansform Acoustic Coding 3)', options=()),
    FFMpegDecoder(name='atrac3al', flags='A....D', description='ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)', options=()),
    FFMpegDecoder(name='atrac3plus', flags='A....D', description='ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (codec atrac3p)', options=()),
    FFMpegDecoder(name='atrac3plusal', flags='A....D', description='ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (codec atrac3pal)', options=()),
    FFMpegDecoder(name='atrac9', flags='A....D', description='ATRAC9 (Adaptive TRansform Acoustic Coding 9)', options=()),
    FFMpegDecoder(name='on2avc', flags='A....D', description='On2 Audio for Video Codec (codec avc)', options=()),
    FFMpegDecoder(name='binkaudio_dct', flags='A....D', description='Bink Audio (DCT)', options=()),
    FFMpegDecoder(name='binkaudio_rdft', flags='A....D', description='Bink Audio (RDFT)', options=()),
    FFMpegDecoder(name='bmv_audio', flags='A....D', description='Discworld II BMV audio', options=()),
    FFMpegDecoder(name='bonk', flags='A....D', description='Bonk audio', options=()),
    FFMpegDecoder(name='cbd2_dpcm', flags='A....D', description='DPCM Cuberoot-Delta-Exact', options=()),
    FFMpegDecoder(name='libcodec2', flags='A.....', description='codec2 decoder using libcodec2 (codec codec2)', options=()),
    FFMpegDecoder(name='comfortnoise', flags='A....D', description='RFC 3389 comfort noise generator', options=()),
    FFMpegDecoder(name='cook', flags='A....D', description='Cook / Cooker / Gecko (RealAudio G2)', options=()),
    FFMpegDecoder(name='derf_dpcm', flags='A....D', description='DPCM Xilam DERF', options=()),
    FFMpegDecoder(name='dfpwm', flags='A....D', description='DFPWM1a audio', options=()),
    FFMpegDecoder(name='dolby_e', flags='A....D', description='Dolby E', options=(FFMpegAVOption(section='Dolby E decoder AVOptions:', name='channel_order', type='int', flags='.D..A......', help='Order in which the channels are to be exported (from 0 to 1) (default default)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='normal libavcodec channel order', flags='.D..A......', value='0'), FFMpegOptionChoice(name='coded', help='order in which the channels are coded in the bitstream', flags='.D..A......', value='1'))),)),
    FFMpegDecoder(name='dsd_lsbf', flags='A.S..D', description='DSD (Direct Stream Digital), least significant bit first', options=()),
    FFMpegDecoder(name='dsd_lsbf_planar', flags='A.S..D', description='DSD (Direct Stream Digital), least significant bit first, planar', options=()),
    FFMpegDecoder(name='dsd_msbf', flags='A.S..D', description='DSD (Direct Stream Digital), most significant bit first', options=()),
    FFMpegDecoder(name='dsd_msbf_planar', flags='A.S..D', description='DSD (Direct Stream Digital), most significant bit first, planar', options=()),
    FFMpegDecoder(name='dsicinaudio', flags='A....D', description='Delphine Software International CIN audio', options=()),
    FFMpegDecoder(name='dss_sp', flags='A....D', description='Digital Speech Standard - Standard Play mode (DSS SP)', options=()),
    FFMpegDecoder(name='dst', flags='A....D', description='DST (Digital Stream Transfer)', options=()),
    FFMpegDecoder(name='dca', flags='A....D', description='DCA (DTS Coherent Acoustics) (codec dts)', options=(FFMpegAVOption(section='DCA decoder AVOptions:', name='core_only', type='boolean', flags='.D..A......', help='Decode core only without extensions (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='DCA decoder AVOptions:', name='channel_order', type='int', flags='.D..A......', help='Order in which the channels are to be exported (from 0 to 1) (default default)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='normal libavcodec channel order', flags='.D..A......', value='0'), FFMpegOptionChoice(name='coded', help='order in which the channels are coded in the bitstream', flags='.D..A......', value='1'))), FFMpegAVOption(section='DCA decoder AVOptions:', name='downmix', type='channel_layout', flags='.D..A......', help='Request a specific channel layout from the decoder', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='dvaudio', flags='A....D', description='Ulead DV Audio', options=()),
    FFMpegDecoder(name='eac3', flags='A....D', description='ATSC A/52B (AC-3, E-AC-3)', options=()),
    FFMpegDecoder(name='evrc', flags='A....D', description='EVRC (Enhanced Variable Rate Codec)', options=(FFMpegAVOption(section='evrc AVOptions:', name='postfilter', type='boolean', flags='.D..A......', help='enable postfilter (default true)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='fastaudio', flags='A....D', description='MobiClip FastAudio', options=()),
    FFMpegDecoder(name='flac', flags='AF...D', description='FLAC (Free Lossless Audio Codec)', options=(FFMpegAVOption(section='FLAC decoder AVOptions:', name='use_buggy_lpc', type='boolean', flags='.D..A......', help='emulate old buggy lavc behavior (default false)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='ftr', flags='A....D', description='FTR Voice', options=()),
    FFMpegDecoder(name='g723_1', flags='A....D', description='G.723.1', options=(FFMpegAVOption(section='G.723.1 decoder AVOptions:', name='postfilter', type='boolean', flags='.D..A......', help='enable postfilter (default true)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='g729', flags='A....D', description='G.729', options=()),
    FFMpegDecoder(name='gremlin_dpcm', flags='A....D', description='DPCM Gremlin', options=()),
    FFMpegDecoder(name='gsm', flags='A....D', description='GSM', options=()),
    FFMpegDecoder(name='libgsm', flags='A....D', description='libgsm GSM (codec gsm)', options=()),
    FFMpegDecoder(name='gsm_ms', flags='A....D', description='GSM Microsoft variant', options=()),
    FFMpegDecoder(name='libgsm_ms', flags='A....D', description='libgsm GSM Microsoft variant (codec gsm_ms)', options=()),
    FFMpegDecoder(name='hca', flags='A....D', description='CRI HCA', options=()),
    FFMpegDecoder(name='hcom', flags='A....D', description='HCOM Audio', options=()),
    FFMpegDecoder(name='iac', flags='A....D', description='IAC (Indeo Audio Coder)', options=()),
    FFMpegDecoder(name='ilbc', flags='A....D', description='iLBC (Internet Low Bitrate Codec)', options=()),
    FFMpegDecoder(name='imc', flags='A....D', description='IMC (Intel Music Coder)', options=()),
    FFMpegDecoder(name='interplay_dpcm', flags='A....D', description='DPCM Interplay', options=()),
    FFMpegDecoder(name='interplayacm', flags='A....D', description='Interplay ACM', options=()),
    FFMpegDecoder(name='mace3', flags='A....D', description='MACE (Macintosh Audio Compression/Expansion) 3:1', options=()),
    FFMpegDecoder(name='mace6', flags='A....D', description='MACE (Macintosh Audio Compression/Expansion) 6:1', options=()),
    FFMpegDecoder(name='metasound', flags='A....D', description='Voxware MetaSound', options=()),
    FFMpegDecoder(name='misc4', flags='A....D', description='Micronas SC-4 Audio', options=()),
    FFMpegDecoder(name='mlp', flags='A....D', description='MLP (Meridian Lossless Packing)', options=(FFMpegAVOption(section='MLP decoder AVOptions:', name='downmix', type='channel_layout', flags='.D..A......', help='Request a specific channel layout from the decoder', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='mp1', flags='A....D', description='MP1 (MPEG audio layer 1)', options=()),
    FFMpegDecoder(name='mp1float', flags='A....D', description='MP1 (MPEG audio layer 1) (codec mp1)', options=()),
    FFMpegDecoder(name='mp2', flags='A....D', description='MP2 (MPEG audio layer 2)', options=()),
    FFMpegDecoder(name='mp2float', flags='A....D', description='MP2 (MPEG audio layer 2) (codec mp2)', options=()),
    FFMpegDecoder(name='mp3float', flags='A....D', description='MP3 (MPEG audio layer 3) (codec mp3)', options=()),
    FFMpegDecoder(name='mp3', flags='A....D', description='MP3 (MPEG audio layer 3)', options=()),
    FFMpegDecoder(name='mp3adufloat', flags='A....D', description='ADU (Application Data Unit) MP3 (MPEG audio layer 3) (codec mp3adu)', options=()),
    FFMpegDecoder(name='mp3adu', flags='A....D', description='ADU (Application Data Unit) MP3 (MPEG audio layer 3)', options=()),
    FFMpegDecoder(name='mp3on4float', flags='A....D', description='MP3onMP4 (codec mp3on4)', options=()),
    FFMpegDecoder(name='mp3on4', flags='A....D', description='MP3onMP4', options=()),
    FFMpegDecoder(name='als', flags='A....D', description='MPEG-4 Audio Lossless Coding (ALS) (codec mp4als)', options=()),
    FFMpegDecoder(name='msnsiren', flags='A....D', description='MSN Siren', options=()),
    FFMpegDecoder(name='mpc7', flags='A....D', description='Musepack SV7 (codec musepack7)', options=()),
    FFMpegDecoder(name='mpc8', flags='A....D', description='Musepack SV8 (codec musepack8)', options=()),
    FFMpegDecoder(name='nellymoser', flags='A....D', description='Nellymoser Asao', options=()),
    FFMpegDecoder(name='opus', flags='A....D', description='Opus', options=(FFMpegAVOption(section='Opus Decoder AVOptions:', name='apply_phase_inv', type='boolean', flags='.D..A......', help='Apply intensity stereo phase inversion (default true)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='libopus', flags='A....D', description='libopus Opus (codec opus)', options=(FFMpegAVOption(section='libopusdec AVOptions:', name='apply_phase_inv', type='boolean', flags='.D..A......', help='Apply intensity stereo phase inversion (default true)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='osq', flags='A....D', description='OSQ (Original Sound Quality)', options=()),
    FFMpegDecoder(name='paf_audio', flags='A....D', description='Amazing Studio Packed Animation File Audio', options=()),
    FFMpegDecoder(name='pcm_alaw', flags='A....D', description='PCM A-law / G.711 A-law', options=()),
    FFMpegDecoder(name='pcm_bluray', flags='A....D', description='PCM signed 16|20|24-bit big-endian for Blu-ray media', options=()),
    FFMpegDecoder(name='pcm_dvd', flags='A....D', description='PCM signed 16|20|24-bit big-endian for DVD media', options=()),
    FFMpegDecoder(name='pcm_f16le', flags='A....D', description='PCM 16.8 floating point little-endian', options=()),
    FFMpegDecoder(name='pcm_f24le', flags='A....D', description='PCM 24.0 floating point little-endian', options=()),
    FFMpegDecoder(name='pcm_f32be', flags='A....D', description='PCM 32-bit floating point big-endian', options=()),
    FFMpegDecoder(name='pcm_f32le', flags='A....D', description='PCM 32-bit floating point little-endian', options=()),
    FFMpegDecoder(name='pcm_f64be', flags='A....D', description='PCM 64-bit floating point big-endian', options=()),
    FFMpegDecoder(name='pcm_f64le', flags='A....D', description='PCM 64-bit floating point little-endian', options=()),
    FFMpegDecoder(name='pcm_lxf', flags='A....D', description='PCM signed 20-bit little-endian planar', options=()),
    FFMpegDecoder(name='pcm_mulaw', flags='A....D', description='PCM mu-law / G.711 mu-law', options=()),
    FFMpegDecoder(name='pcm_s16be', flags='A....D', description='PCM signed 16-bit big-endian', options=()),
    FFMpegDecoder(name='pcm_s16be_planar', flags='A....D', description='PCM signed 16-bit big-endian planar', options=()),
    FFMpegDecoder(name='pcm_s16le', flags='A....D', description='PCM signed 16-bit little-endian', options=()),
    FFMpegDecoder(name='pcm_s16le_planar', flags='A....D', description='PCM signed 16-bit little-endian planar', options=()),
    FFMpegDecoder(name='pcm_s24be', flags='A....D', description='PCM signed 24-bit big-endian', options=()),
    FFMpegDecoder(name='pcm_s24daud', flags='A....D', description='PCM D-Cinema audio signed 24-bit', options=()),
    FFMpegDecoder(name='pcm_s24le', flags='A....D', description='PCM signed 24-bit little-endian', options=()),
    FFMpegDecoder(name='pcm_s24le_planar', flags='A....D', description='PCM signed 24-bit little-endian planar', options=()),
    FFMpegDecoder(name='pcm_s32be', flags='A....D', description='PCM signed 32-bit big-endian', options=()),
    FFMpegDecoder(name='pcm_s32le', flags='A....D', description='PCM signed 32-bit little-endian', options=()),
    FFMpegDecoder(name='pcm_s32le_planar', flags='A....D', description='PCM signed 32-bit little-endian planar', options=()),
    FFMpegDecoder(name='pcm_s64be', flags='A....D', description='PCM signed 64-bit big-endian', options=()),
    FFMpegDecoder(name='pcm_s64le', flags='A....D', description='PCM signed 64-bit little-endian', options=()),
    FFMpegDecoder(name='pcm_s8', flags='A....D', description='PCM signed 8-bit', options=()),
    FFMpegDecoder(name='pcm_s8_planar', flags='A....D', description='PCM signed 8-bit planar', options=()),
    FFMpegDecoder(name='pcm_sga', flags='A....D', description='PCM SGA', options=()),
    FFMpegDecoder(name='pcm_u16be', flags='A....D', description='PCM unsigned 16-bit big-endian', options=()),
    FFMpegDecoder(name='pcm_u16le', flags='A....D', description='PCM unsigned 16-bit little-endian', options=()),
    FFMpegDecoder(name='pcm_u24be', flags='A....D', description='PCM unsigned 24-bit big-endian', options=()),
    FFMpegDecoder(name='pcm_u24le', flags='A....D', description='PCM unsigned 24-bit little-endian', options=()),
    FFMpegDecoder(name='pcm_u32be', flags='A....D', description='PCM unsigned 32-bit big-endian', options=()),
    FFMpegDecoder(name='pcm_u32le', flags='A....D', description='PCM unsigned 32-bit little-endian', options=()),
    FFMpegDecoder(name='pcm_u8', flags='A....D', description='PCM unsigned 8-bit', options=()),
    FFMpegDecoder(name='pcm_vidc', flags='A....D', description='PCM Archimedes VIDC', options=()),
    FFMpegDecoder(name='qcelp', flags='A....D', description='QCELP / PureVoice', options=()),
    FFMpegDecoder(name='qdm2', flags='A....D', description='QDesign Music Codec 2', options=()),
    FFMpegDecoder(name='qdmc', flags='A....D', description='QDesign Music Codec 1', options=()),
    FFMpegDecoder(name='real_144', flags='A....D', description='RealAudio 1.0 (14.4K) (codec ra_144)', options=()),
    FFMpegDecoder(name='real_288', flags='A....D', description='RealAudio 2.0 (28.8K) (codec ra_288)', options=()),
    FFMpegDecoder(name='ralf', flags='A....D', description='RealAudio Lossless', options=()),
    FFMpegDecoder(name='rka', flags='A....D', description='RKA (RK Audio)', options=()),
    FFMpegDecoder(name='roq_dpcm', flags='A....D', description='DPCM id RoQ', options=()),
    FFMpegDecoder(name='s302m', flags='A....D', description='SMPTE 302M', options=(FFMpegAVOption(section='SMPTE 302M Decoder AVOptions:', name='non_pcm_mode', type='int', flags='.D..A......', help='Chooses what to do with NON-PCM (from 0 to 3) (default decode_drop)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='copy', help='Pass NON-PCM through unchanged', flags='.D..A......', value='0'), FFMpegOptionChoice(name='drop', help='Drop NON-PCM', flags='.D..A......', value='1'), FFMpegOptionChoice(name='decode_copy', help='Decode if possible else passthrough', flags='.D..A......', value='2'), FFMpegOptionChoice(name='decode_drop', help='Decode if possible else drop', flags='.D..A......', value='3'))),)),
    FFMpegDecoder(name='sbc', flags='A....D', description='SBC (low-complexity subband codec)', options=()),
    FFMpegDecoder(name='sdx2_dpcm', flags='A....D', description='DPCM Squareroot-Delta-Exact', options=()),
    FFMpegDecoder(name='shorten', flags='A....D', description='Shorten', options=()),
    FFMpegDecoder(name='sipr', flags='A....D', description='RealAudio SIPR / ACELP.NET', options=()),
    FFMpegDecoder(name='siren', flags='A....D', description='Siren', options=()),
    FFMpegDecoder(name='smackaud', flags='A....D', description='Smacker audio (codec smackaudio)', options=()),
    FFMpegDecoder(name='sol_dpcm', flags='A....D', description='DPCM Sol', options=()),
    FFMpegDecoder(name='sonic', flags='A..X.D', description='Sonic', options=()),
    FFMpegDecoder(name='speex', flags='A....D', description='Speex', options=()),
    FFMpegDecoder(name='libspeex', flags='A....D', description='libspeex Speex (codec speex)', options=()),
    FFMpegDecoder(name='tak', flags='AF...D', description="TAK (Tom's lossless Audio Kompressor)", options=()),
    FFMpegDecoder(name='truehd', flags='A....D', description='TrueHD', options=(FFMpegAVOption(section='TrueHD decoder AVOptions:', name='downmix', type='channel_layout', flags='.D..A......', help='Request a specific channel layout from the decoder', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='truespeech', flags='A....D', description='DSP Group TrueSpeech', options=()),
    FFMpegDecoder(name='tta', flags='AF...D', description='TTA (True Audio)', options=(FFMpegAVOption(section='TTA Decoder AVOptions:', name='password', type='string', flags='.D..A......', help='Set decoding password', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='twinvq', flags='A....D', description='VQF TwinVQ', options=()),
    FFMpegDecoder(name='vmdaudio', flags='A....D', description='Sierra VMD audio', options=()),
    FFMpegDecoder(name='vorbis', flags='A....D', description='Vorbis', options=()),
    FFMpegDecoder(name='libvorbis', flags='A.....', description='libvorbis (codec vorbis)', options=()),
    FFMpegDecoder(name='wady_dpcm', flags='A....D', description='DPCM Marble WADY', options=()),
    FFMpegDecoder(name='wavarc', flags='A....D', description='Waveform Archiver', options=()),
    FFMpegDecoder(name='wavesynth', flags='A....D', description='Wave synthesis pseudo-codec', options=()),
    FFMpegDecoder(name='wavpack', flags='AFS..D', description='WavPack', options=()),
    FFMpegDecoder(name='ws_snd1', flags='A....D', description='Westwood Audio (SND1) (codec westwood_snd1)', options=()),
    FFMpegDecoder(name='wmalossless', flags='A....D', description='Windows Media Audio Lossless', options=()),
    FFMpegDecoder(name='wmapro', flags='A....D', description='Windows Media Audio 9 Professional', options=()),
    FFMpegDecoder(name='wmav1', flags='A....D', description='Windows Media Audio 1', options=()),
    FFMpegDecoder(name='wmav2', flags='A....D', description='Windows Media Audio 2', options=()),
    FFMpegDecoder(name='wmavoice', flags='A....D', description='Windows Media Audio Voice', options=()),
    FFMpegDecoder(name='xan_dpcm', flags='A....D', description='DPCM Xan', options=()),
    FFMpegDecoder(name='xma1', flags='A....D', description='Xbox Media Audio 1', options=()),
    FFMpegDecoder(name='xma2', flags='A....D', description='Xbox Media Audio 2', options=()),
    FFMpegDecoder(name='ssa', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle (codec ass)', options=()),
    FFMpegDecoder(name='ass', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle', options=()),
    FFMpegDecoder(name='dvbsub', flags='S.....', description='DVB subtitles (codec dvb_subtitle)', options=(FFMpegAVOption(section='DVB Sub Decoder AVOptions:', name='compute_edt', type='boolean', flags='.D...S.....', help='compute end of time using pts or timeout (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='DVB Sub Decoder AVOptions:', name='compute_clut', type='boolean', flags='.D...S.....', help='compute clut when not available(-1) or only once (-2) or always(1) or never(0) (default auto)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='DVB Sub Decoder AVOptions:', name='dvb_substream', type='int', flags='.D...S.....', help='(from -1 to 63) (default -1)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='libzvbi_teletextdec', flags='S.....', description='Libzvbi DVB teletext decoder (codec dvb_teletext)', options=(FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_page', type='string', flags='.D...S.....', help='page numbers to decode, subtitle for subtitles, * for all (default "*")', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_default_region', type='int', flags='.D...S.....', help='default G0 character set used for decoding (from -1 to 87) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_chop_top', type='int', flags='.D...S.....', help='discards the top teletext line (from 0 to 1) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_format', type='int', flags='.D...S.....', help='format of the subtitles (bitmap or text or ass) (from 0 to 2) (default bitmap)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='bitmap', help='', flags='.D...S.....', value='0'), FFMpegOptionChoice(name='text', help='', flags='.D...S.....', value='1'), FFMpegOptionChoice(name='ass', help='', flags='.D...S.....', value='2'))), FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_left', type='int', flags='.D...S.....', help='x offset of generated bitmaps (from 0 to 65535) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_top', type='int', flags='.D...S.....', help='y offset of generated bitmaps (from 0 to 65535) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_chop_spaces', type='int', flags='.D...S.....', help='chops leading and trailing spaces from text (from 0 to 1) (default 1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_duration', type='int', flags='.D...S.....', help='display duration of teletext pages in msecs (from -1 to 8.64e+07) (default -1)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_transparent', type='int', flags='.D...S.....', help='force transparent background of the teletext (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='libzvbi_teletextdec AVOptions:', name='txt_opacity', type='int', flags='.D...S.....', help='set opacity of the transparent background (from -1 to 255) (default -1)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='dvdsub', flags='S.....', description='DVD subtitles (codec dvd_subtitle)', options=(FFMpegAVOption(section='dvdsubdec AVOptions:', name='palette', type='string', flags='.D...S.....', help='set the global palette', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='dvdsubdec AVOptions:', name='ifo_palette', type='string', flags='.D...S.....', help='obtain the global palette from .IFO file', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='dvdsubdec AVOptions:', name='forced_subs_only', type='boolean', flags='.D...S.....', help='Only show forced subtitles (default false)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='cc_dec', flags='S.....', description='Closed Caption (EIA-608 / CEA-708) (codec eia_608)', options=(FFMpegAVOption(section='Closed caption Decoder AVOptions:', name='real_time', type='boolean', flags='.D...S.....', help='emit subtitle events as they are decoded for real-time display (default false)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='Closed caption Decoder AVOptions:', name='real_time_latency_msec', type='int', flags='.D...S.....', help='minimum elapsed time between emitting real-time subtitle events (from 0 to 500) (default 200)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='Closed caption Decoder AVOptions:', name='data_field', type='int', flags='.D...S.....', help='select data field (from -1 to 1) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='pick first one that appears', flags='.D...S.....', value='-1'), FFMpegOptionChoice(name='first', help='', flags='.D...S.....', value='0'), FFMpegOptionChoice(name='second', help='', flags='.D...S.....', value='1'))))),
    FFMpegDecoder(name='pgssub', flags='S.....', description='HDMV Presentation Graphic Stream subtitles (codec hdmv_pgs_subtitle)', options=(FFMpegAVOption(section='PGS subtitle decoder AVOptions:', name='forced_subs_only', type='boolean', flags='.D...S.....', help='Only show forced subtitles (default false)', min=None, max=None, default=None, choices=()),)),
    FFMpegDecoder(name='jacosub', flags='S.....', description='JACOsub subtitle', options=()),
    FFMpegDecoder(name='microdvd', flags='S.....', description='MicroDVD subtitle', options=()),
    FFMpegDecoder(name='mov_text', flags='S.....', description='3GPP Timed Text subtitle', options=(FFMpegAVOption(section='MOV text decoder AVOptions:', name='width', type='int', flags='.D...S.....', help='Frame width, usually video width (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()), FFMpegAVOption(section='MOV text decoder AVOptions:', name='height', type='int', flags='.D...S.....', help='Frame height, usually video height (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()))),
    FFMpegDecoder(name='mpl2', flags='S.....', description='MPL2 subtitle', options=()),
    FFMpegDecoder(name='pjs', flags='S.....', description='PJS subtitle', options=()),
    FFMpegDecoder(name='realtext', flags='S.....', description='RealText subtitle', options=()),
    FFMpegDecoder(name='sami', flags='S.....', description='SAMI subtitle', options=()),
    FFMpegDecoder(name='stl', flags='S.....', description='Spruce subtitle format', options=()),
    FFMpegDecoder(name='srt', flags='S.....', description='SubRip subtitle (codec subrip)', options=()),
    FFMpegDecoder(name='subrip', flags='S.....', description='SubRip subtitle', options=()),
    FFMpegDecoder(name='subviewer', flags='S.....', description='SubViewer subtitle', options=()),
    FFMpegDecoder(name='subviewer1', flags='S.....', description='SubViewer1 subtitle', options=()),
    FFMpegDecoder(name='text', flags='S.....', description='Raw text subtitle', options=()),
    FFMpegDecoder(name='vplayer', flags='S.....', description='VPlayer subtitle', options=()),
    FFMpegDecoder(name='webvtt', flags='S.....', description='WebVTT subtitle', options=()),
    FFMpegDecoder(name='xsub', flags='S.....', description='XSUB', options=()),
  ])
# ---
# name: test_parse_codec_option[h263-decoder]
  list([
  ])
# ---
# name: test_parse_codec_option[h263-encoder]
  list([
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='obmc', type='boolean', flags='E..V.......', help='use overlapped block motion compensation. (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='mb_info', type='int', flags='E..V.......', help='emit macroblock info for RFC 2190 packetization, the parameter value is the maximum payload size (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()),
  ])
# ---
# name: test_parse_codec_option[tiff-decoder]
  list([
    FFMpegAVOption(section='TIFF decoder AVOptions:', name='subimage', type='boolean', flags='.D.V.......', help='decode subimage instead if available (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='TIFF decoder AVOptions:', name='thumbnail', type='boolean', flags='.D.V.......', help='decode embedded thumbnail subimage instead if available (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='TIFF decoder AVOptions:', name='page', type='int', flags='.D.V.......', help='page number of multi-page image to decode (starting from 1) (from 0 to 65535) (default 0)', min=None, max=None, default=None, choices=()),
  ])
# ---
# name: test_parse_codecs_help_text[codecs]
  list([
    FFMpegCodec(name='012v', flags='D.VI.S', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='4xm', flags='D.V.L.', description='4X Movie', options=()),
    FFMpegCodec(name='8bps', flags='D.VI.S', description='QuickTime 8BPS video', options=()),
    FFMpegCodec(name='a64_multi', flags='.EVIL.', description='Multicolor charset for Commodore 64 (encoders: a64multi)', options=()),
    FFMpegCodec(name='a64_multi5', flags='.EVIL.', description='Multicolor charset for Commodore 64, extended with 5th color (colram) (encoders: a64multi5)', options=()),
    FFMpegCodec(name='aasc', flags='D.V..S', description='Autodesk RLE', options=()),
    FFMpegCodec(name='agm', flags='D.V.L.', description='Amuse Graphics Movie', options=()),
    FFMpegCodec(name='aic', flags='D.VIL.', description='Apple Intermediate Codec', options=()),
    FFMpegCodec(name='alias_pix', flags='DEVI.S', description='Alias/Wavefront PIX image', options=()),
    FFMpegCodec(name='amv', flags='DEVIL.', description='AMV Video', options=()),
    FFMpegCodec(name='anm', flags='D.V.L.', description='Deluxe Paint Animation', options=()),
    FFMpegCodec(name='ansi', flags='D.V.L.', description='ASCII/ANSI art', options=()),
    FFMpegCodec(name='apng', flags='DEV..S', description='APNG (Animated Portable Network Graphics) image', options=()),
    FFMpegCodec(name='arbc', flags='D.V.L.', description="Gryphon's Anim Compressor", options=()),
    FFMpegCodec(name='argo', flags='D.V.L.', description='Argonaut Games Video', options=()),
    FFMpegCodec(name='asv1', flags='DEVIL.', description='ASUS V1', options=()),
    FFMpegCodec(name='asv2', flags='DEVIL.', description='ASUS V2', options=()),
    FFMpegCodec(name='aura', flags='D.VIL.', description='Auravision AURA', options=()),
    FFMpegCodec(name='aura2', flags='D.VIL.', description='Auravision Aura 2', options=()),
    FFMpegCodec(name='av1', flags='DEV.L.', description='Alliance for Open Media AV1 (decoders: libdav1d libaom-av1 av1 av1_cuvid) (encoders: libaom-av1 librav1e libsvtav1 av1_nvenc av1_vaapi)', options=()),
    FFMpegCodec(name='avrn', flags='D.V...', description='Avid AVI Codec', options=()),
    FFMpegCodec(name='avrp', flags='DEVI.S', description='Avid 1:1 10-bit RGB Packer', options=()),
    FFMpegCodec(name='avs', flags='D.V.L.', description='AVS (Audio Video Standard) video', options=()),
    FFMpegCodec(name='avs2', flags='..V.L.', description='AVS2-P2/IEEE1857.4', options=()),
    FFMpegCodec(name='avs3', flags='..V.L.', description='AVS3-P2/IEEE1857.10', options=()),
    FFMpegCodec(name='avui', flags='DEVI.S', description='Avid Meridien Uncompressed', options=()),
    FFMpegCodec(name='ayuv', flags='DEVI.S', description='Uncompressed packed MS 4:4:4:4', options=()),
    FFMpegCodec(name='bethsoftvid', flags='D.V.L.', description='Bethesda VID video', options=()),
    FFMpegCodec(name='bfi', flags='D.V.L.', description='Brute Force & Ignorance', options=()),
    FFMpegCodec(name='binkvideo', flags='D.V.L.', description='Bink video', options=()),
    FFMpegCodec(name='bintext', flags='D.VI..', description='Binary text', options=()),
    FFMpegCodec(name='bitpacked', flags='DEVI.S', description='Bitpacked', options=()),
    FFMpegCodec(name='bmp', flags='DEVI.S', description='BMP (Windows and OS/2 bitmap)', options=()),
    FFMpegCodec(name='bmv_video', flags='D.V..S', description='Discworld II BMV video', options=()),
    FFMpegCodec(name='brender_pix', flags='D.VI.S', description='BRender PIX image', options=()),
    FFMpegCodec(name='c93', flags='D.V.L.', description='Interplay C93', options=()),
    FFMpegCodec(name='cavs', flags='D.V.L.', description='Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)', options=()),
    FFMpegCodec(name='cdgraphics', flags='D.V.L.', description='CD Graphics video', options=()),
    FFMpegCodec(name='cdtoons', flags='D.V..S', description='CDToons video', options=()),
    FFMpegCodec(name='cdxl', flags='D.VIL.', description='Commodore CDXL video', options=()),
    FFMpegCodec(name='cfhd', flags='DEV.L.', description='GoPro CineForm HD', options=()),
    FFMpegCodec(name='cinepak', flags='DEV.L.', description='Cinepak', options=()),
    FFMpegCodec(name='clearvideo', flags='D.V.L.', description='Iterated Systems ClearVideo', options=()),
    FFMpegCodec(name='cljr', flags='DEVIL.', description='Cirrus Logic AccuPak', options=()),
    FFMpegCodec(name='cllc', flags='D.VI.S', description='Canopus Lossless Codec', options=()),
    FFMpegCodec(name='cmv', flags='D.V.L.', description='Electronic Arts CMV video (decoders: eacmv)', options=()),
    FFMpegCodec(name='cpia', flags='D.V...', description='CPiA video format', options=()),
    FFMpegCodec(name='cri', flags='D.VILS', description='Cintel RAW', options=()),
    FFMpegCodec(name='cscd', flags='D.V..S', description='CamStudio (decoders: camstudio)', options=()),
    FFMpegCodec(name='cyuv', flags='D.VIL.', description='Creative YUV (CYUV)', options=()),
    FFMpegCodec(name='daala', flags='..V.LS', description='Daala', options=()),
    FFMpegCodec(name='dds', flags='D.VILS', description='DirectDraw Surface image decoder', options=()),
    FFMpegCodec(name='dfa', flags='D.V.L.', description='Chronomaster DFA', options=()),
    FFMpegCodec(name='dirac', flags='DEV.LS', description='Dirac (encoders: vc2)', options=()),
    FFMpegCodec(name='dnxhd', flags='DEVIL.', description='VC3/DNxHD', options=()),
    FFMpegCodec(name='dpx', flags='DEVI.S', description='DPX (Digital Picture Exchange) image', options=()),
    FFMpegCodec(name='dsicinvideo', flags='D.V.L.', description='Delphine Software International CIN video', options=()),
    FFMpegCodec(name='dvvideo', flags='DEVIL.', description='DV (Digital Video)', options=()),
    FFMpegCodec(name='dxa', flags='D.V..S', description='Feeble Files/ScummVM DXA', options=()),
    FFMpegCodec(name='dxtory', flags='D.VI.S', description='Dxtory', options=()),
    FFMpegCodec(name='dxv', flags='D.VIL.', description='Resolume DXV', options=()),
    FFMpegCodec(name='escape124', flags='D.V.L.', description='Escape 124', options=()),
    FFMpegCodec(name='escape130', flags='D.V.L.', description='Escape 130', options=()),
    FFMpegCodec(name='evc', flags='..V.L.', description='MPEG-5 EVC (Essential Video Coding)', options=()),
    FFMpegCodec(name='exr', flags='DEVILS', description='OpenEXR image', options=()),
    FFMpegCodec(name='ffv1', flags='DEV..S', description='FFmpeg video codec #1', options=()),
    FFMpegCodec(name='ffvhuff', flags='DEVI.S', description='Huffyuv FFmpeg variant', options=()),
    FFMpegCodec(name='fic', flags='D.V.L.', description='Mirillis FIC', options=()),
    FFMpegCodec(name='fits', flags='DEVI.S', description='FITS (Flexible Image Transport System)', options=()),
    FFMpegCodec(name='flashsv', flags='DEV..S', description='Flash Screen Video v1', options=()),
    FFMpegCodec(name='flashsv2', flags='DEV.L.', description='Flash Screen Video v2', options=()),
    FFMpegCodec(name='flic', flags='D.V..S', description='Autodesk Animator Flic video', options=()),
    FFMpegCodec(name='flv1', flags='DEV.L.', description='FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (decoders: flv) (encoders: flv)', options=()),
    FFMpegCodec(name='fmvc', flags='D.V..S', description='FM Screen Capture Codec', options=()),
    FFMpegCodec(name='fraps', flags='D.VI.S', description='Fraps', options=()),
    FFMpegCodec(name='frwu', flags='D.VI.S', description='Forward Uncompressed', options=()),
    FFMpegCodec(name='g2m', flags='D.V.L.', description='Go2Meeting', options=()),
    FFMpegCodec(name='gdv', flags='D.V.L.', description='Gremlin Digital Video', options=()),
    FFMpegCodec(name='gem', flags='D.V.L.', description='GEM Raster image', options=()),
    FFMpegCodec(name='gif', flags='DEV..S', description='CompuServe GIF (Graphics Interchange Format)', options=()),
    FFMpegCodec(name='h261', flags='DEV.L.', description='H.261', options=()),
    FFMpegCodec(name='h263', flags='DEV.L.', description='H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2 (decoders: h263 h263_v4l2m2m) (encoders: h263 h263_v4l2m2m)', options=()),
    FFMpegCodec(name='h263i', flags='D.V.L.', description='Intel H.263', options=()),
    FFMpegCodec(name='h263p', flags='DEV.L.', description='H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegCodec(name='h264', flags='DEV.LS', description='H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (decoders: h264 h264_v4l2m2m h264_cuvid) (encoders: libx264 libx264rgb h264_nvenc h264_v4l2m2m h264_vaapi)', options=()),
    FFMpegCodec(name='hap', flags='DEVIL.', description='Vidvox Hap', options=()),
    FFMpegCodec(name='hdr', flags='DEVIL.', description='HDR (Radiance RGBE format) image', options=()),
    FFMpegCodec(name='hevc', flags='DEV.L.', description='H.265 / HEVC (High Efficiency Video Coding) (decoders: hevc hevc_v4l2m2m hevc_cuvid) (encoders: libx265 hevc_nvenc hevc_v4l2m2m hevc_vaapi)', options=()),
    FFMpegCodec(name='hnm4video', flags='D.V.L.', description='HNM 4 video', options=()),
    FFMpegCodec(name='hq_hqa', flags='D.VIL.', description='Canopus HQ/HQA', options=()),
    FFMpegCodec(name='hqx', flags='D.VIL.', description='Canopus HQX', options=()),
    FFMpegCodec(name='huffyuv', flags='DEVI.S', description='HuffYUV', options=()),
    FFMpegCodec(name='hymt', flags='D.VI.S', description='HuffYUV MT', options=()),
    FFMpegCodec(name='idcin', flags='D.V.L.', description='id Quake II CIN video (decoders: idcinvideo)', options=()),
    FFMpegCodec(name='idf', flags='D.VI..', description='iCEDraw text', options=()),
    FFMpegCodec(name='iff_ilbm', flags='D.V.L.', description='IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (decoders: iff)', options=()),
    FFMpegCodec(name='imm4', flags='D.V.L.', description='Infinity IMM4', options=()),
    FFMpegCodec(name='imm5', flags='D.V.L.', description='Infinity IMM5', options=()),
    FFMpegCodec(name='indeo2', flags='D.V.L.', description='Intel Indeo 2', options=()),
    FFMpegCodec(name='indeo3', flags='D.V.L.', description='Intel Indeo 3', options=()),
    FFMpegCodec(name='indeo4', flags='D.V.L.', description='Intel Indeo Video Interactive 4', options=()),
    FFMpegCodec(name='indeo5', flags='D.V.L.', description='Intel Indeo Video Interactive 5', options=()),
    FFMpegCodec(name='interplayvideo', flags='D.V.L.', description='Interplay MVE video', options=()),
    FFMpegCodec(name='ipu', flags='D.VIL.', description='IPU Video', options=()),
    FFMpegCodec(name='jpeg2000', flags='DEVILS', description='JPEG 2000 (encoders: jpeg2000 libopenjpeg)', options=()),
    FFMpegCodec(name='jpegls', flags='DEVILS', description='JPEG-LS', options=()),
    FFMpegCodec(name='jpegxl', flags='DEVILS', description='JPEG XL (decoders: libjxl) (encoders: libjxl)', options=()),
    FFMpegCodec(name='jv', flags='D.VIL.', description='Bitmap Brothers JV video', options=()),
    FFMpegCodec(name='kgv1', flags='D.V.L.', description='Kega Game Video', options=()),
    FFMpegCodec(name='kmvc', flags='D.V.L.', description="Karl Morton's video codec", options=()),
    FFMpegCodec(name='lagarith', flags='D.VI.S', description='Lagarith lossless', options=()),
    FFMpegCodec(name='ljpeg', flags='.EVI.S', description='Lossless JPEG', options=()),
    FFMpegCodec(name='loco', flags='D.VI.S', description='LOCO', options=()),
    FFMpegCodec(name='lscr', flags='D.V.L.', description='LEAD Screen Capture', options=()),
    FFMpegCodec(name='m101', flags='D.VI.S', description='Matrox Uncompressed SD', options=()),
    FFMpegCodec(name='mad', flags='D.V.L.', description='Electronic Arts Madcow Video (decoders: eamad)', options=()),
    FFMpegCodec(name='magicyuv', flags='DEVI.S', description='MagicYUV video', options=()),
    FFMpegCodec(name='mdec', flags='D.VIL.', description='Sony PlayStation MDEC (Motion DECoder)', options=()),
    FFMpegCodec(name='media100', flags='D.VIL.', description='Media 100i', options=()),
    FFMpegCodec(name='mimic', flags='D.V.L.', description='Mimic', options=()),
    FFMpegCodec(name='mjpeg', flags='DEVIL.', description='Motion JPEG (decoders: mjpeg mjpeg_cuvid) (encoders: mjpeg mjpeg_vaapi)', options=()),
    FFMpegCodec(name='mjpegb', flags='D.VIL.', description='Apple MJPEG-B', options=()),
    FFMpegCodec(name='mmvideo', flags='D.V.L.', description='American Laser Games MM Video', options=()),
    FFMpegCodec(name='mobiclip', flags='D.V.L.', description='MobiClip Video', options=()),
    FFMpegCodec(name='motionpixels', flags='D.V.L.', description='Motion Pixels video', options=()),
    FFMpegCodec(name='mpeg1video', flags='DEV.L.', description='MPEG-1 video (decoders: mpeg1video mpeg1_v4l2m2m mpeg1_cuvid)', options=()),
    FFMpegCodec(name='mpeg2video', flags='DEV.L.', description='MPEG-2 video (decoders: mpeg2video mpegvideo mpeg2_v4l2m2m mpeg2_cuvid) (encoders: mpeg2video mpeg2_vaapi)', options=()),
    FFMpegCodec(name='mpeg4', flags='DEV.L.', description='MPEG-4 part 2 (decoders: mpeg4 mpeg4_v4l2m2m mpeg4_cuvid) (encoders: mpeg4 libxvid mpeg4_v4l2m2m)', options=()),
    FFMpegCodec(name='msa1', flags='D.V.L.', description='MS ATC Screen', options=()),
    FFMpegCodec(name='mscc', flags='D.VI.S', description='Mandsoft Screen Capture Codec', options=()),
    FFMpegCodec(name='msmpeg4v1', flags='D.V.L.', description='MPEG-4 part 2 Microsoft variant version 1', options=()),
    FFMpegCodec(name='msmpeg4v2', flags='DEV.L.', description='MPEG-4 part 2 Microsoft variant version 2', options=()),
    FFMpegCodec(name='msmpeg4v3', flags='DEV.L.', description='MPEG-4 part 2 Microsoft variant version 3 (decoders: msmpeg4) (encoders: msmpeg4)', options=()),
    FFMpegCodec(name='msp2', flags='D.VI.S', description='Microsoft Paint (MSP) version 2', options=()),
    FFMpegCodec(name='msrle', flags='DEV..S', description='Microsoft RLE', options=()),
    FFMpegCodec(name='mss1', flags='D.V.L.', description='MS Screen 1', options=()),
    FFMpegCodec(name='mss2', flags='D.VIL.', description='MS Windows Media Video V9 Screen', options=()),
    FFMpegCodec(name='msvideo1', flags='DEV.L.', description='Microsoft Video 1', options=()),
    FFMpegCodec(name='mszh', flags='D.VI.S', description='LCL (LossLess Codec Library) MSZH', options=()),
    FFMpegCodec(name='mts2', flags='D.V.L.', description='MS Expression Encoder Screen', options=()),
    FFMpegCodec(name='mv30', flags='D.V.L.', description='MidiVid 3.0', options=()),
    FFMpegCodec(name='mvc1', flags='D.VIL.', description='Silicon Graphics Motion Video Compressor 1', options=()),
    FFMpegCodec(name='mvc2', flags='D.VIL.', description='Silicon Graphics Motion Video Compressor 2', options=()),
    FFMpegCodec(name='mvdv', flags='D.V.L.', description='MidiVid VQ', options=()),
    FFMpegCodec(name='mvha', flags='D.VIL.', description='MidiVid Archive Codec', options=()),
    FFMpegCodec(name='mwsc', flags='D.V..S', description='MatchWare Screen Capture Codec', options=()),
    FFMpegCodec(name='mxpeg', flags='D.V.L.', description='Mobotix MxPEG video', options=()),
    FFMpegCodec(name='notchlc', flags='D.VIL.', description='NotchLC', options=()),
    FFMpegCodec(name='nuv', flags='D.V.L.', description='NuppelVideo/RTJPEG', options=()),
    FFMpegCodec(name='paf_video', flags='D.V.L.', description='Amazing Studio Packed Animation File Video', options=()),
    FFMpegCodec(name='pam', flags='DEVI.S', description='PAM (Portable AnyMap) image', options=()),
    FFMpegCodec(name='pbm', flags='DEVI.S', description='PBM (Portable BitMap) image', options=()),
    FFMpegCodec(name='pcx', flags='DEVI.S', description='PC Paintbrush PCX image', options=()),
    FFMpegCodec(name='pdv', flags='D.V.L.', description='PDV (PlayDate Video)', options=()),
    FFMpegCodec(name='pfm', flags='DEVI.S', description='PFM (Portable FloatMap) image', options=()),
    FFMpegCodec(name='pgm', flags='DEVI.S', description='PGM (Portable GrayMap) image', options=()),
    FFMpegCodec(name='pgmyuv', flags='DEVI.S', description='PGMYUV (Portable GrayMap YUV) image', options=()),
    FFMpegCodec(name='pgx', flags='D.VI.S', description='PGX (JPEG2000 Test Format)', options=()),
    FFMpegCodec(name='phm', flags='DEVI.S', description='PHM (Portable HalfFloatMap) image', options=()),
    FFMpegCodec(name='photocd', flags='D.V.L.', description='Kodak Photo CD', options=()),
    FFMpegCodec(name='pictor', flags='D.VIL.', description='Pictor/PC Paint', options=()),
    FFMpegCodec(name='pixlet', flags='D.VIL.', description='Apple Pixlet', options=()),
    FFMpegCodec(name='png', flags='DEV..S', description='PNG (Portable Network Graphics) image', options=()),
    FFMpegCodec(name='ppm', flags='DEVI.S', description='PPM (Portable PixelMap) image', options=()),
    FFMpegCodec(name='prores', flags='DEVIL.', description='Apple ProRes (iCodec Pro) (encoders: prores prores_aw prores_ks)', options=()),
    FFMpegCodec(name='prosumer', flags='D.VIL.', description='Brooktree ProSumer Video', options=()),
    FFMpegCodec(name='psd', flags='D.VI.S', description='Photoshop PSD file', options=()),
    FFMpegCodec(name='ptx', flags='D.VIL.', description='V.Flash PTX image', options=()),
    FFMpegCodec(name='qdraw', flags='D.VI.S', description='Apple QuickDraw', options=()),
    FFMpegCodec(name='qoi', flags='DEVI.S', description='QOI (Quite OK Image)', options=()),
    FFMpegCodec(name='qpeg', flags='D.V.L.', description='Q-team QPEG', options=()),
    FFMpegCodec(name='qtrle', flags='DEV..S', description='QuickTime Animation (RLE) video', options=()),
    FFMpegCodec(name='r10k', flags='DEVI.S', description='AJA Kona 10-bit RGB Codec', options=()),
    FFMpegCodec(name='r210', flags='DEVI.S', description='Uncompressed RGB 10-bit', options=()),
    FFMpegCodec(name='rasc', flags='D.V.L.', description='RemotelyAnywhere Screen Capture', options=()),
    FFMpegCodec(name='rawvideo', flags='DEVI.S', description='raw video', options=()),
    FFMpegCodec(name='rl2', flags='D.VIL.', description='RL2 video', options=()),
    FFMpegCodec(name='roq', flags='DEV.L.', description='id RoQ video (decoders: roqvideo) (encoders: roqvideo)', options=()),
    FFMpegCodec(name='rpza', flags='DEV.L.', description='QuickTime video (RPZA)', options=()),
    FFMpegCodec(name='rscc', flags='D.V..S', description='innoHeim/Rsupport Screen Capture Codec', options=()),
    FFMpegCodec(name='rtv1', flags='D.VIL.', description='RTV1 (RivaTuner Video)', options=()),
    FFMpegCodec(name='rv10', flags='DEV.L.', description='RealVideo 1.0', options=()),
    FFMpegCodec(name='rv20', flags='DEV.L.', description='RealVideo 2.0', options=()),
    FFMpegCodec(name='rv30', flags='D.V.L.', description='RealVideo 3.0', options=()),
    FFMpegCodec(name='rv40', flags='D.V.L.', description='RealVideo 4.0', options=()),
    FFMpegCodec(name='sanm', flags='D.V.L.', description='LucasArts SANM/SMUSH video', options=()),
    FFMpegCodec(name='scpr', flags='D.V.LS', description='ScreenPressor', options=()),
    FFMpegCodec(name='screenpresso', flags='D.V..S', description='Screenpresso', options=()),
    FFMpegCodec(name='sga', flags='D.V.L.', description='Digital Pictures SGA Video', options=()),
    FFMpegCodec(name='sgi', flags='DEVI.S', description='SGI image', options=()),
    FFMpegCodec(name='sgirle', flags='D.VI.S', description='SGI RLE 8-bit', options=()),
    FFMpegCodec(name='sheervideo', flags='D.VI.S', description='BitJazz SheerVideo', options=()),
    FFMpegCodec(name='simbiosis_imx', flags='D.V.L.', description='Simbiosis Interactive IMX Video', options=()),
    FFMpegCodec(name='smackvideo', flags='D.V.L.', description='Smacker video (decoders: smackvid)', options=()),
    FFMpegCodec(name='smc', flags='DEV.L.', description='QuickTime Graphics (SMC)', options=()),
    FFMpegCodec(name='smvjpeg', flags='D.VIL.', description='Sigmatel Motion Video', options=()),
    FFMpegCodec(name='snow', flags='DEV.LS', description='Snow', options=()),
    FFMpegCodec(name='sp5x', flags='D.VIL.', description='Sunplus JPEG (SP5X)', options=()),
    FFMpegCodec(name='speedhq', flags='DEVIL.', description='NewTek SpeedHQ', options=()),
    FFMpegCodec(name='srgc', flags='D.VI.S', description='Screen Recorder Gold Codec', options=()),
    FFMpegCodec(name='sunrast', flags='DEVI.S', description='Sun Rasterfile image', options=()),
    FFMpegCodec(name='svg', flags='D.V..S', description='Scalable Vector Graphics (decoders: librsvg)', options=()),
    FFMpegCodec(name='svq1', flags='DEV.L.', description='Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1', options=()),
    FFMpegCodec(name='svq3', flags='D.V.L.', description='Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3', options=()),
    FFMpegCodec(name='targa', flags='DEVI.S', description='Truevision Targa image', options=()),
    FFMpegCodec(name='targa_y216', flags='D.VI.S', description='Pinnacle TARGA CineWave YUV16', options=()),
    FFMpegCodec(name='tdsc', flags='D.V.L.', description='TDSC', options=()),
    FFMpegCodec(name='tgq', flags='D.V.L.', description='Electronic Arts TGQ video (decoders: eatgq)', options=()),
    FFMpegCodec(name='tgv', flags='D.V.L.', description='Electronic Arts TGV video (decoders: eatgv)', options=()),
    FFMpegCodec(name='theora', flags='DEV.L.', description='Theora (encoders: libtheora)', options=()),
    FFMpegCodec(name='thp', flags='D.VIL.', description='Nintendo Gamecube THP video', options=()),
    FFMpegCodec(name='tiertexseqvideo', flags='D.V.L.', description='Tiertex Limited SEQ video', options=()),
    FFMpegCodec(name='tiff', flags='DEVI.S', description='TIFF image', options=()),
    FFMpegCodec(name='tmv', flags='D.VIL.', description='8088flex TMV', options=()),
    FFMpegCodec(name='tqi', flags='D.V.L.', description='Electronic Arts TQI video (decoders: eatqi)', options=()),
    FFMpegCodec(name='truemotion1', flags='D.V.L.', description='Duck TrueMotion 1.0', options=()),
    FFMpegCodec(name='truemotion2', flags='D.V.L.', description='Duck TrueMotion 2.0', options=()),
    FFMpegCodec(name='truemotion2rt', flags='D.VIL.', description='Duck TrueMotion 2.0 Real Time', options=()),
    FFMpegCodec(name='tscc', flags='D.V..S', description='TechSmith Screen Capture Codec (decoders: camtasia)', options=()),
    FFMpegCodec(name='tscc2', flags='D.V.L.', description='TechSmith Screen Codec 2', options=()),
    FFMpegCodec(name='txd', flags='D.VIL.', description='Renderware TXD (TeXture Dictionary) image', options=()),
    FFMpegCodec(name='ulti', flags='D.V.L.', description='IBM UltiMotion (decoders: ultimotion)', options=()),
    FFMpegCodec(name='utvideo', flags='DEVI.S', description='Ut Video', options=()),
    FFMpegCodec(name='v210', flags='DEVI.S', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v210x', flags='D.VI.S', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v308', flags='DEVI.S', description='Uncompressed packed 4:4:4', options=()),
    FFMpegCodec(name='v408', flags='DEVI.S', description='Uncompressed packed QT 4:4:4:4', options=()),
    FFMpegCodec(name='v410', flags='DEVI.S', description='Uncompressed 4:4:4 10-bit', options=()),
    FFMpegCodec(name='vb', flags='D.V.L.', description='Beam Software VB', options=()),
    FFMpegCodec(name='vble', flags='D.VI.S', description='VBLE Lossless Codec', options=()),
    FFMpegCodec(name='vbn', flags='DEV.L.', description='Vizrt Binary Image', options=()),
    FFMpegCodec(name='vc1', flags='D.V.L.', description='SMPTE VC-1 (decoders: vc1 vc1_v4l2m2m vc1_cuvid)', options=()),
    FFMpegCodec(name='vc1image', flags='D.V.L.', description='Windows Media Video 9 Image v2', options=()),
    FFMpegCodec(name='vcr1', flags='D.VIL.', description='ATI VCR1', options=()),
    FFMpegCodec(name='vixl', flags='D.VIL.', description='Miro VideoXL (decoders: xl)', options=()),
    FFMpegCodec(name='vmdvideo', flags='D.V.L.', description='Sierra VMD video', options=()),
    FFMpegCodec(name='vmix', flags='D.VIL.', description='vMix Video', options=()),
    FFMpegCodec(name='vmnc', flags='D.V..S', description='VMware Screen Codec / VMware Video', options=()),
    FFMpegCodec(name='vnull', flags='DEV...', description='Null video codec', options=()),
    FFMpegCodec(name='vp3', flags='D.V.L.', description='On2 VP3', options=()),
    FFMpegCodec(name='vp4', flags='D.V.L.', description='On2 VP4', options=()),
    FFMpegCodec(name='vp5', flags='D.V.L.', description='On2 VP5', options=()),
    FFMpegCodec(name='vp6', flags='D.V.L.', description='On2 VP6', options=()),
    FFMpegCodec(name='vp6a', flags='D.V.L.', description='On2 VP6 (Flash version, with alpha channel)', options=()),
    FFMpegCodec(name='vp6f', flags='D.V.L.', description='On2 VP6 (Flash version)', options=()),
    FFMpegCodec(name='vp7', flags='D.V.L.', description='On2 VP7', options=()),
    FFMpegCodec(name='vp8', flags='DEV.L.', description='On2 VP8 (decoders: vp8 vp8_v4l2m2m libvpx vp8_cuvid) (encoders: libvpx vp8_v4l2m2m vp8_vaapi)', options=()),
    FFMpegCodec(name='vp9', flags='DEV.L.', description='Google VP9 (decoders: vp9 vp9_v4l2m2m libvpx-vp9 vp9_cuvid) (encoders: libvpx-vp9 vp9_vaapi)', options=()),
    FFMpegCodec(name='vqc', flags='D.V.L.', description='ViewQuest VQC', options=()),
    FFMpegCodec(name='vvc', flags='..V.L.', description='H.266 / VVC (Versatile Video Coding)', options=()),
    FFMpegCodec(name='wbmp', flags='DEVI.S', description='WBMP (Wireless Application Protocol Bitmap) image', options=()),
    FFMpegCodec(name='wcmv', flags='D.V..S', description='WinCAM Motion Video', options=()),
    FFMpegCodec(name='webp', flags='DEVILS', description='WebP (encoders: libwebp_anim libwebp)', options=()),
    FFMpegCodec(name='wmv1', flags='DEV.L.', description='Windows Media Video 7', options=()),
    FFMpegCodec(name='wmv2', flags='DEV.L.', description='Windows Media Video 8', options=()),
    FFMpegCodec(name='wmv3', flags='D.V.L.', description='Windows Media Video 9', options=()),
    FFMpegCodec(name='wmv3image', flags='D.V.L.', description='Windows Media Video 9 Image', options=()),
    FFMpegCodec(name='wnv1', flags='D.VIL.', description='Winnov WNV1', options=()),
    FFMpegCodec(name='wrapped_avframe', flags='DEV..S', description='AVFrame to AVPacket passthrough', options=()),
    FFMpegCodec(name='ws_vqa', flags='D.V.L.', description='Westwood Studios VQA (Vector Quantized Animation) video (decoders: vqavideo)', options=()),
    FFMpegCodec(name='xan_wc3', flags='D.V.L.', description='Wing Commander III / Xan', options=()),
    FFMpegCodec(name='xan_wc4', flags='D.V.L.', description='Wing Commander IV / Xxan', options=()),
    FFMpegCodec(name='xbin', flags='D.VI..', description='eXtended BINary text', options=()),
    FFMpegCodec(name='xbm', flags='DEVI.S', description='XBM (X BitMap) image', options=()),
    FFMpegCodec(name='xface', flags='DEVIL.', description='X-face image', options=()),
    FFMpegCodec(name='xpm', flags='D.VI.S', description='XPM (X PixMap) image', options=()),
    FFMpegCodec(name='xwd', flags='DEVI.S', description='XWD (X Window Dump) image', options=()),
    FFMpegCodec(name='y41p', flags='DEVI.S', description='Uncompressed YUV 4:1:1 12-bit', options=()),
    FFMpegCodec(name='ylc', flags='D.VI.S', description='YUY2 Lossless Codec', options=()),
    FFMpegCodec(name='yop', flags='D.V.L.', description='Psygnosis YOP Video', options=()),
    FFMpegCodec(name='yuv4', flags='DEVI.S', description='Uncompressed packed 4:2:0', options=()),
    FFMpegCodec(name='zerocodec', flags='D.V..S', description='ZeroCodec Lossless Video', options=()),
    FFMpegCodec(name='zlib', flags='DEVI.S', description='LCL (LossLess Codec Library) ZLIB', options=()),
    FFMpegCodec(name='zmbv', flags='DEV..S', description='Zip Motion Blocks Video', options=()),
    FFMpegCodec(name='4gv', flags='..AIL.', description='4GV (Fourth Generation Vocoder)', options=()),
    FFMpegCodec(name='8svx_exp', flags='D.AIL.', description='8SVX exponential', options=()),
    FFMpegCodec(name='8svx_fib', flags='D.AIL.', description='8SVX fibonacci', options=()),
    FFMpegCodec(name='aac', flags='DEAIL.', description='AAC (Advanced Audio Coding) (decoders: aac aac_fixed)', options=()),
    FFMpegCodec(name='aac_latm', flags='D.AIL.', description='AAC LATM (Advanced Audio Coding LATM syntax)', options=()),
    FFMpegCodec(name='ac3', flags='DEAIL.', description='ATSC A/52A (AC-3) (decoders: ac3 ac3_fixed) (encoders: ac3 ac3_fixed)', options=()),
    FFMpegCodec(name='ac4', flags='..A.L.', description='AC-4', options=()),
    FFMpegCodec(name='adpcm_4xm', flags='D.AIL.', description='ADPCM 4X Movie', options=()),
    FFMpegCodec(name='adpcm_adx', flags='DEAIL.', description='SEGA CRI ADX ADPCM', options=()),
    FFMpegCodec(name='adpcm_afc', flags='D.AIL.', description='ADPCM Nintendo Gamecube AFC', options=()),
    FFMpegCodec(name='adpcm_agm', flags='D.AIL.', description='ADPCM AmuseGraphics Movie AGM', options=()),
    FFMpegCodec(name='adpcm_aica', flags='D.AIL.', description='ADPCM Yamaha AICA', options=()),
    FFMpegCodec(name='adpcm_argo', flags='DEAIL.', description='ADPCM Argonaut Games', options=()),
    FFMpegCodec(name='adpcm_ct', flags='D.AIL.', description='ADPCM Creative Technology', options=()),
    FFMpegCodec(name='adpcm_dtk', flags='D.AIL.', description='ADPCM Nintendo Gamecube DTK', options=()),
    FFMpegCodec(name='adpcm_ea', flags='D.AIL.', description='ADPCM Electronic Arts', options=()),
    FFMpegCodec(name='adpcm_ea_maxis_xa', flags='D.AIL.', description='ADPCM Electronic Arts Maxis CDROM XA', options=()),
    FFMpegCodec(name='adpcm_ea_r1', flags='D.AIL.', description='ADPCM Electronic Arts R1', options=()),
    FFMpegCodec(name='adpcm_ea_r2', flags='D.AIL.', description='ADPCM Electronic Arts R2', options=()),
    FFMpegCodec(name='adpcm_ea_r3', flags='D.AIL.', description='ADPCM Electronic Arts R3', options=()),
    FFMpegCodec(name='adpcm_ea_xas', flags='D.AIL.', description='ADPCM Electronic Arts XAS', options=()),
    FFMpegCodec(name='adpcm_g722', flags='DEAIL.', description='G.722 ADPCM (decoders: g722) (encoders: g722)', options=()),
    FFMpegCodec(name='adpcm_g726', flags='DEAIL.', description='G.726 ADPCM (decoders: g726) (encoders: g726)', options=()),
    FFMpegCodec(name='adpcm_g726le', flags='DEAIL.', description='G.726 ADPCM little-endian (decoders: g726le) (encoders: g726le)', options=()),
    FFMpegCodec(name='adpcm_ima_acorn', flags='D.AIL.', description='ADPCM IMA Acorn Replay', options=()),
    FFMpegCodec(name='adpcm_ima_alp', flags='DEAIL.', description='ADPCM IMA High Voltage Software ALP', options=()),
    FFMpegCodec(name='adpcm_ima_amv', flags='DEAIL.', description='ADPCM IMA AMV', options=()),
    FFMpegCodec(name='adpcm_ima_apc', flags='D.AIL.', description='ADPCM IMA CRYO APC', options=()),
    FFMpegCodec(name='adpcm_ima_apm', flags='DEAIL.', description='ADPCM IMA Ubisoft APM', options=()),
    FFMpegCodec(name='adpcm_ima_cunning', flags='D.AIL.', description='ADPCM IMA Cunning Developments', options=()),
    FFMpegCodec(name='adpcm_ima_dat4', flags='D.AIL.', description='ADPCM IMA Eurocom DAT4', options=()),
    FFMpegCodec(name='adpcm_ima_dk3', flags='D.AIL.', description='ADPCM IMA Duck DK3', options=()),
    FFMpegCodec(name='adpcm_ima_dk4', flags='D.AIL.', description='ADPCM IMA Duck DK4', options=()),
    FFMpegCodec(name='adpcm_ima_ea_eacs', flags='D.AIL.', description='ADPCM IMA Electronic Arts EACS', options=()),
    FFMpegCodec(name='adpcm_ima_ea_sead', flags='D.AIL.', description='ADPCM IMA Electronic Arts SEAD', options=()),
    FFMpegCodec(name='adpcm_ima_iss', flags='D.AIL.', description='ADPCM IMA Funcom ISS', options=()),
    FFMpegCodec(name='adpcm_ima_moflex', flags='D.AIL.', description='ADPCM IMA MobiClip MOFLEX', options=()),
    FFMpegCodec(name='adpcm_ima_mtf', flags='D.AIL.', description="ADPCM IMA Capcom's MT Framework", options=()),
    FFMpegCodec(name='adpcm_ima_oki', flags='D.AIL.', description='ADPCM IMA Dialogic OKI', options=()),
    FFMpegCodec(name='adpcm_ima_qt', flags='DEAIL.', description='ADPCM IMA QuickTime', options=()),
    FFMpegCodec(name='adpcm_ima_rad', flags='D.AIL.', description='ADPCM IMA Radical', options=()),
    FFMpegCodec(name='adpcm_ima_smjpeg', flags='D.AIL.', description='ADPCM IMA Loki SDL MJPEG', options=()),
    FFMpegCodec(name='adpcm_ima_ssi', flags='DEAIL.', description='ADPCM IMA Simon & Schuster Interactive', options=()),
    FFMpegCodec(name='adpcm_ima_wav', flags='DEAIL.', description='ADPCM IMA WAV', options=()),
    FFMpegCodec(name='adpcm_ima_ws', flags='DEAIL.', description='ADPCM IMA Westwood', options=()),
    FFMpegCodec(name='adpcm_ms', flags='DEAIL.', description='ADPCM Microsoft', options=()),
    FFMpegCodec(name='adpcm_mtaf', flags='D.AIL.', description='ADPCM MTAF', options=()),
    FFMpegCodec(name='adpcm_psx', flags='D.AIL.', description='ADPCM Playstation', options=()),
    FFMpegCodec(name='adpcm_sbpro_2', flags='D.AIL.', description='ADPCM Sound Blaster Pro 2-bit', options=()),
    FFMpegCodec(name='adpcm_sbpro_3', flags='D.AIL.', description='ADPCM Sound Blaster Pro 2.6-bit', options=()),
    FFMpegCodec(name='adpcm_sbpro_4', flags='D.AIL.', description='ADPCM Sound Blaster Pro 4-bit', options=()),
    FFMpegCodec(name='adpcm_swf', flags='DEAIL.', description='ADPCM Shockwave Flash', options=()),
    FFMpegCodec(name='adpcm_thp', flags='D.AIL.', description='ADPCM Nintendo THP', options=()),
    FFMpegCodec(name='adpcm_thp_le', flags='D.AIL.', description='ADPCM Nintendo THP (Little-Endian)', options=()),
    FFMpegCodec(name='adpcm_vima', flags='D.AIL.', description='LucasArts VIMA audio', options=()),
    FFMpegCodec(name='adpcm_xa', flags='D.AIL.', description='ADPCM CDROM XA', options=()),
    FFMpegCodec(name='adpcm_xmd', flags='D.AIL.', description='ADPCM Konami XMD', options=()),
    FFMpegCodec(name='adpcm_yamaha', flags='DEAIL.', description='ADPCM Yamaha', options=()),
    FFMpegCodec(name='adpcm_zork', flags='D.AIL.', description='ADPCM Zork', options=()),
    FFMpegCodec(name='alac', flags='DEAI.S', description='ALAC (Apple Lossless Audio Codec)', options=()),
    FFMpegCodec(name='amr_nb', flags='D.AIL.', description='AMR-NB (Adaptive Multi-Rate NarrowBand) (decoders: amrnb)', options=()),
    FFMpegCodec(name='amr_wb', flags='D.AIL.', description='AMR-WB (Adaptive Multi-Rate WideBand) (decoders: amrwb)', options=()),
    FFMpegCodec(name='anull', flags='DEA...', description='Null audio codec', options=()),
    FFMpegCodec(name='apac', flags='D.AI.S', description="Marian's A-pac audio", options=()),
    FFMpegCodec(name='ape', flags='D.AI.S', description="Monkey's Audio", options=()),
    FFMpegCodec(name='aptx', flags='DEAIL.', description='aptX (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='aptx_hd', flags='DEAIL.', description='aptX HD (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='atrac1', flags='D.AIL.', description='ATRAC1 (Adaptive TRansform Acoustic Coding)', options=()),
    FFMpegCodec(name='atrac3', flags='D.AIL.', description='ATRAC3 (Adaptive TRansform Acoustic Coding 3)', options=()),
    FFMpegCodec(name='atrac3al', flags='D.AI.S', description='ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)', options=()),
    FFMpegCodec(name='atrac3p', flags='D.AIL.', description='ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (decoders: atrac3plus)', options=()),
    FFMpegCodec(name='atrac3pal', flags='D.AI.S', description='ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (decoders: atrac3plusal)', options=()),
    FFMpegCodec(name='atrac9', flags='D.AIL.', description='ATRAC9 (Adaptive TRansform Acoustic Coding 9)', options=()),
    FFMpegCodec(name='avc', flags='D.AIL.', description='On2 Audio for Video Codec (decoders: on2avc)', options=()),
    FFMpegCodec(name='binkaudio_dct', flags='D.AIL.', description='Bink Audio (DCT)', options=()),
    FFMpegCodec(name='binkaudio_rdft', flags='D.AIL.', description='Bink Audio (RDFT)', options=()),
    FFMpegCodec(name='bmv_audio', flags='D.AIL.', description='Discworld II BMV audio', options=()),
    FFMpegCodec(name='bonk', flags='D.AILS', description='Bonk audio', options=()),
    FFMpegCodec(name='cbd2_dpcm', flags='D.AIL.', description='DPCM Cuberoot-Delta-Exact', options=()),
    FFMpegCodec(name='celt', flags='..AIL.', description='Constrained Energy Lapped Transform (CELT)', options=()),
    FFMpegCodec(name='codec2', flags='DEAIL.', description='codec2 (very low bitrate speech codec) (decoders: libcodec2) (encoders: libcodec2)', options=()),
    FFMpegCodec(name='comfortnoise', flags='DEAIL.', description='RFC 3389 Comfort Noise', options=()),
    FFMpegCodec(name='cook', flags='D.AIL.', description='Cook / Cooker / Gecko (RealAudio G2)', options=()),
    FFMpegCodec(name='derf_dpcm', flags='D.AIL.', description='DPCM Xilam DERF', options=()),
    FFMpegCodec(name='dfpwm', flags='DEA.L.', description='DFPWM (Dynamic Filter Pulse Width Modulation)', options=()),
    FFMpegCodec(name='dolby_e', flags='D.AIL.', description='Dolby E', options=()),
    FFMpegCodec(name='dsd_lsbf', flags='D.AIL.', description='DSD (Direct Stream Digital), least significant bit first', options=()),
    FFMpegCodec(name='dsd_lsbf_planar', flags='D.AIL.', description='DSD (Direct Stream Digital), least significant bit first, planar', options=()),
    FFMpegCodec(name='dsd_msbf', flags='D.AIL.', description='DSD (Direct Stream Digital), most significant bit first', options=()),
    FFMpegCodec(name='dsd_msbf_planar', flags='D.AIL.', description='DSD (Direct Stream Digital), most significant bit first, planar', options=()),
    FFMpegCodec(name='dsicinaudio', flags='D.AIL.', description='Delphine Software International CIN audio', options=()),
    FFMpegCodec(name='dss_sp', flags='D.AIL.', description='Digital Speech Standard - Standard Play mode (DSS SP)', options=()),
    FFMpegCodec(name='dst', flags='D.AI.S', description='DST (Direct Stream Transfer)', options=()),
    FFMpegCodec(name='dts', flags='DEAILS', description='DCA (DTS Coherent Acoustics) (decoders: dca) (encoders: dca)', options=()),
    FFMpegCodec(name='dvaudio', flags='D.AIL.', description='DV audio', options=()),
    FFMpegCodec(name='eac3', flags='DEAIL.', description='ATSC A/52B (AC-3, E-AC-3)', options=()),
    FFMpegCodec(name='evrc', flags='D.AIL.', description='EVRC (Enhanced Variable Rate Codec)', options=()),
    FFMpegCodec(name='fastaudio', flags='D.AIL.', description='MobiClip FastAudio', options=()),
    FFMpegCodec(name='flac', flags='DEAI.S', description='FLAC (Free Lossless Audio Codec)', options=()),
    FFMpegCodec(name='ftr', flags='D.AIL.', description='FTR Voice', options=()),
    FFMpegCodec(name='g723_1', flags='DEAIL.', description='G.723.1', options=()),
    FFMpegCodec(name='g729', flags='D.AIL.', description='G.729', options=()),
    FFMpegCodec(name='gremlin_dpcm', flags='D.AIL.', description='DPCM Gremlin', options=()),
    FFMpegCodec(name='gsm', flags='DEAIL.', description='GSM (decoders: gsm libgsm) (encoders: libgsm)', options=()),
    FFMpegCodec(name='gsm_ms', flags='DEAIL.', description='GSM Microsoft variant (decoders: gsm_ms libgsm_ms) (encoders: libgsm_ms)', options=()),
    FFMpegCodec(name='hca', flags='D.AIL.', description='CRI HCA', options=()),
    FFMpegCodec(name='hcom', flags='D.AIL.', description='HCOM Audio', options=()),
    FFMpegCodec(name='iac', flags='D.AIL.', description='IAC (Indeo Audio Coder)', options=()),
    FFMpegCodec(name='ilbc', flags='D.AIL.', description='iLBC (Internet Low Bitrate Codec)', options=()),
    FFMpegCodec(name='imc', flags='D.AIL.', description='IMC (Intel Music Coder)', options=()),
    FFMpegCodec(name='interplay_dpcm', flags='D.AIL.', description='DPCM Interplay', options=()),
    FFMpegCodec(name='interplayacm', flags='D.AIL.', description='Interplay ACM', options=()),
    FFMpegCodec(name='mace3', flags='D.AIL.', description='MACE (Macintosh Audio Compression/Expansion) 3:1', options=()),
    FFMpegCodec(name='mace6', flags='D.AIL.', description='MACE (Macintosh Audio Compression/Expansion) 6:1', options=()),
    FFMpegCodec(name='metasound', flags='D.AIL.', description='Voxware MetaSound', options=()),
    FFMpegCodec(name='misc4', flags='D.AIL.', description='Micronas SC-4 Audio', options=()),
    FFMpegCodec(name='mlp', flags='DEA..S', description='MLP (Meridian Lossless Packing)', options=()),
    FFMpegCodec(name='mp1', flags='D.AIL.', description='MP1 (MPEG audio layer 1) (decoders: mp1 mp1float)', options=()),
    FFMpegCodec(name='mp2', flags='DEAIL.', description='MP2 (MPEG audio layer 2) (decoders: mp2 mp2float) (encoders: mp2 mp2fixed libtwolame)', options=()),
    FFMpegCodec(name='mp3', flags='DEAIL.', description='MP3 (MPEG audio layer 3) (decoders: mp3float mp3) (encoders: libmp3lame libshine)', options=()),
    FFMpegCodec(name='mp3adu', flags='D.AIL.', description='ADU (Application Data Unit) MP3 (MPEG audio layer 3) (decoders: mp3adufloat mp3adu)', options=()),
    FFMpegCodec(name='mp3on4', flags='D.AIL.', description='MP3onMP4 (decoders: mp3on4float mp3on4)', options=()),
    FFMpegCodec(name='mp4als', flags='D.AI.S', description='MPEG-4 Audio Lossless Coding (ALS) (decoders: als)', options=()),
    FFMpegCodec(name='mpegh_3d_audio', flags='..A.L.', description='MPEG-H 3D Audio', options=()),
    FFMpegCodec(name='msnsiren', flags='D.AIL.', description='MSN Siren', options=()),
    FFMpegCodec(name='musepack7', flags='D.AIL.', description='Musepack SV7 (decoders: mpc7)', options=()),
    FFMpegCodec(name='musepack8', flags='D.AIL.', description='Musepack SV8 (decoders: mpc8)', options=()),
    FFMpegCodec(name='nellymoser', flags='DEAIL.', description='Nellymoser Asao', options=()),
    FFMpegCodec(name='opus', flags='DEAIL.', description='Opus (Opus Interactive Audio Codec) (decoders: opus libopus) (encoders: opus libopus)', options=()),
    FFMpegCodec(name='osq', flags='D.AI.S', description='OSQ (Original Sound Quality)', options=()),
    FFMpegCodec(name='paf_audio', flags='D.AIL.', description='Amazing Studio Packed Animation File Audio', options=()),
    FFMpegCodec(name='pcm_alaw', flags='DEAIL.', description='PCM A-law / G.711 A-law', options=()),
    FFMpegCodec(name='pcm_bluray', flags='DEAI.S', description='PCM signed 16|20|24-bit big-endian for Blu-ray media', options=()),
    FFMpegCodec(name='pcm_dvd', flags='DEAI.S', description='PCM signed 20|24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_f16le', flags='D.AI.S', description='PCM 16.8 floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f24le', flags='D.AI.S', description='PCM 24.0 floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f32be', flags='DEAI.S', description='PCM 32-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f32le', flags='DEAI.S', description='PCM 32-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f64be', flags='DEAI.S', description='PCM 64-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f64le', flags='DEAI.S', description='PCM 64-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_lxf', flags='D.AI.S', description='PCM signed 20-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_mulaw', flags='DEAIL.', description='PCM mu-law / G.711 mu-law', options=()),
    FFMpegCodec(name='pcm_s16be', flags='DEAI.S', description='PCM signed 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s16be_planar', flags='DEAI.S', description='PCM signed 16-bit big-endian planar', options=()),
    FFMpegCodec(name='pcm_s16le', flags='DEAI.S', description='PCM signed 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s16le_planar', flags='DEAI.S', description='PCM signed 16-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s24be', flags='DEAI.S', description='PCM signed 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s24daud', flags='DEAI.S', description='PCM D-Cinema audio signed 24-bit', options=()),
    FFMpegCodec(name='pcm_s24le', flags='DEAI.S', description='PCM signed 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s24le_planar', flags='DEAI.S', description='PCM signed 24-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s32be', flags='DEAI.S', description='PCM signed 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s32le', flags='DEAI.S', description='PCM signed 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s32le_planar', flags='DEAI.S', description='PCM signed 32-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s64be', flags='DEAI.S', description='PCM signed 64-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s64le', flags='DEAI.S', description='PCM signed 64-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s8', flags='DEAI.S', description='PCM signed 8-bit', options=()),
    FFMpegCodec(name='pcm_s8_planar', flags='DEAI.S', description='PCM signed 8-bit planar', options=()),
    FFMpegCodec(name='pcm_sga', flags='D.AI.S', description='PCM SGA', options=()),
    FFMpegCodec(name='pcm_u16be', flags='DEAI.S', description='PCM unsigned 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u16le', flags='DEAI.S', description='PCM unsigned 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u24be', flags='DEAI.S', description='PCM unsigned 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u24le', flags='DEAI.S', description='PCM unsigned 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u32be', flags='DEAI.S', description='PCM unsigned 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u32le', flags='DEAI.S', description='PCM unsigned 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u8', flags='DEAI.S', description='PCM unsigned 8-bit', options=()),
    FFMpegCodec(name='pcm_vidc', flags='DEAIL.', description='PCM Archimedes VIDC', options=()),
    FFMpegCodec(name='qcelp', flags='D.AIL.', description='QCELP / PureVoice', options=()),
    FFMpegCodec(name='qdm2', flags='D.AIL.', description='QDesign Music Codec 2', options=()),
    FFMpegCodec(name='qdmc', flags='D.AIL.', description='QDesign Music', options=()),
    FFMpegCodec(name='ra_144', flags='DEAIL.', description='RealAudio 1.0 (14.4K) (decoders: real_144) (encoders: real_144)', options=()),
    FFMpegCodec(name='ra_288', flags='D.AIL.', description='RealAudio 2.0 (28.8K) (decoders: real_288)', options=()),
    FFMpegCodec(name='ralf', flags='D.AI.S', description='RealAudio Lossless', options=()),
    FFMpegCodec(name='rka', flags='D.AILS', description='RKA (RK Audio)', options=()),
    FFMpegCodec(name='roq_dpcm', flags='DEAIL.', description='DPCM id RoQ', options=()),
    FFMpegCodec(name='s302m', flags='DEAI.S', description='SMPTE 302M', options=()),
    FFMpegCodec(name='sbc', flags='DEAIL.', description='SBC (low-complexity subband codec)', options=()),
    FFMpegCodec(name='sdx2_dpcm', flags='D.AIL.', description='DPCM Squareroot-Delta-Exact', options=()),
    FFMpegCodec(name='shorten', flags='D.AI.S', description='Shorten', options=()),
    FFMpegCodec(name='sipr', flags='D.AIL.', description='RealAudio SIPR / ACELP.NET', options=()),
    FFMpegCodec(name='siren', flags='D.AIL.', description='Siren', options=()),
    FFMpegCodec(name='smackaudio', flags='D.AIL.', description='Smacker audio (decoders: smackaud)', options=()),
    FFMpegCodec(name='smv', flags='..AIL.', description='SMV (Selectable Mode Vocoder)', options=()),
    FFMpegCodec(name='sol_dpcm', flags='D.AIL.', description='DPCM Sol', options=()),
    FFMpegCodec(name='sonic', flags='DEAI..', description='Sonic', options=()),
    FFMpegCodec(name='sonicls', flags='.EAI..', description='Sonic lossless', options=()),
    FFMpegCodec(name='speex', flags='DEAIL.', description='Speex (decoders: speex libspeex) (encoders: libspeex)', options=()),
    FFMpegCodec(name='tak', flags='D.A..S', description="TAK (Tom's lossless Audio Kompressor)", options=()),
    FFMpegCodec(name='truehd', flags='DEA..S', description='TrueHD', options=()),
    FFMpegCodec(name='truespeech', flags='D.AIL.', description='DSP Group TrueSpeech', options=()),
    FFMpegCodec(name='tta', flags='DEAI.S', description='TTA (True Audio)', options=()),
    FFMpegCodec(name='twinvq', flags='D.AIL.', description='VQF TwinVQ', options=()),
    FFMpegCodec(name='vmdaudio', flags='D.AIL.', description='Sierra VMD audio', options=()),
    FFMpegCodec(name='vorbis', flags='DEAIL.', description='Vorbis (decoders: vorbis libvorbis) (encoders: vorbis libvorbis)', options=()),
    FFMpegCodec(name='wady_dpcm', flags='D.AIL.', description='DPCM Marble WADY', options=()),
    FFMpegCodec(name='wavarc', flags='D.AI.S', description='Waveform Archiver', options=()),
    FFMpegCodec(name='wavesynth', flags='D.AI..', description='Wave synthesis pseudo-codec', options=()),
    FFMpegCodec(name='wavpack', flags='DEAILS', description='WavPack', options=()),
    FFMpegCodec(name='westwood_snd1', flags='D.AIL.', description='Westwood Audio (SND1) (decoders: ws_snd1)', options=()),
    FFMpegCodec(name='wmalossless', flags='D.AI.S', description='Windows Media Audio Lossless', options=()),
    FFMpegCodec(name='wmapro', flags='D.AIL.', description='Windows Media Audio 9 Professional', options=()),
    FFMpegCodec(name='wmav1', flags='DEAIL.', description='Windows Media Audio 1', options=()),
    FFMpegCodec(name='wmav2', flags='DEAIL.', description='Windows Media Audio 2', options=()),
    FFMpegCodec(name='wmavoice', flags='D.AIL.', description='Windows Media Audio Voice', options=()),
    FFMpegCodec(name='xan_dpcm', flags='D.AIL.', description='DPCM Xan', options=()),
    FFMpegCodec(name='xma1', flags='D.AIL.', description='Xbox Media Audio 1', options=()),
    FFMpegCodec(name='xma2', flags='D.AIL.', description='Xbox Media Audio 2', options=()),
    FFMpegCodec(name='bin_data', flags='..D...', description='binary data', options=()),
    FFMpegCodec(name='dvd_nav_packet', flags='..D...', description='DVD Nav packet', options=()),
    FFMpegCodec(name='epg', flags='..D...', description='Electronic Program Guide', options=()),
    FFMpegCodec(name='klv', flags='..D...', description='SMPTE 336M Key-Length-Value (KLV) metadata', options=()),
    FFMpegCodec(name='mpegts', flags='..D...', description='raw MPEG-TS stream', options=()),
    FFMpegCodec(name='otf', flags='..D...', description='OpenType font', options=()),
    FFMpegCodec(name='scte_35', flags='..D...', description='SCTE 35 Message Queue', options=()),
    FFMpegCodec(name='smpte_2038', flags='..D...', description='SMPTE ST 2038 VANC in MPEG-2 TS', options=()),
    FFMpegCodec(name='timed_id3', flags='..D...', description='timed ID3 metadata', options=()),
    FFMpegCodec(name='ttf', flags='..D...', description='TrueType font', options=()),
    FFMpegCodec(name='arib_caption', flags='..S...', description='ARIB STD-B24 caption', options=()),
    FFMpegCodec(name='ass', flags='DES...', description='ASS (Advanced SSA) subtitle (decoders: ssa ass) (encoders: ssa ass)', options=()),
    FFMpegCodec(name='dvb_subtitle', flags='DES...', description='DVB subtitles (decoders: dvbsub) (encoders: dvbsub)', options=()),
    FFMpegCodec(name='dvb_teletext', flags='D.S...', description='DVB teletext (decoders: libzvbi_teletextdec)', options=()),
    FFMpegCodec(name='dvd_subtitle', flags='DES...', description='DVD subtitles (decoders: dvdsub) (encoders: dvdsub)', options=()),
    FFMpegCodec(name='eia_608', flags='D.S...', description='EIA-608 closed captions (decoders: cc_dec)', options=()),
    FFMpegCodec(name='hdmv_pgs_subtitle', flags='D.S...', description='HDMV Presentation Graphic Stream subtitles (decoders: pgssub)', options=()),
    FFMpegCodec(name='hdmv_text_subtitle', flags='..S...', description='HDMV Text subtitle', options=()),
    FFMpegCodec(name='jacosub', flags='D.S...', description='JACOsub subtitle', options=()),
    FFMpegCodec(name='microdvd', flags='D.S...', description='MicroDVD subtitle', options=()),
    FFMpegCodec(name='mov_text', flags='DES...', description='MOV text', options=()),
    FFMpegCodec(name='mpl2', flags='D.S...', description='MPL2 subtitle', options=()),
    FFMpegCodec(name='pjs', flags='D.S...', description='PJS (Phoenix Japanimation Society) subtitle', options=()),
    FFMpegCodec(name='realtext', flags='D.S...', description='RealText subtitle', options=()),
    FFMpegCodec(name='sami', flags='D.S...', description='SAMI subtitle', options=()),
    FFMpegCodec(name='srt', flags='..S...', description='SubRip subtitle with embedded timing', options=()),
    FFMpegCodec(name='ssa', flags='..S...', description='SSA (SubStation Alpha) subtitle', options=()),
    FFMpegCodec(name='stl', flags='D.S...', description='Spruce subtitle format', options=()),
    FFMpegCodec(name='subrip', flags='DES...', description='SubRip subtitle (decoders: srt subrip) (encoders: srt subrip)', options=()),
    FFMpegCodec(name='subviewer', flags='D.S...', description='SubViewer subtitle', options=()),
    FFMpegCodec(name='subviewer1', flags='D.S...', description='SubViewer v1 subtitle', options=()),
    FFMpegCodec(name='text', flags='DES...', description='raw UTF-8 text', options=()),
    FFMpegCodec(name='ttml', flags='.ES...', description='Timed Text Markup Language', options=()),
    FFMpegCodec(name='vplayer', flags='D.S...', description='VPlayer subtitle', options=()),
    FFMpegCodec(name='webvtt', flags='DES...', description='WebVTT subtitle', options=()),
    FFMpegCodec(name='xsub', flags='DES...', description='XSUB', options=()),
  ])
# ---
# name: test_parse_codecs_help_text[decoders]
  list([
    FFMpegCodec(name='012v', flags='V....D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='4xm', flags='V....D', description='4X Movie', options=()),
    FFMpegCodec(name='8bps', flags='V....D', description='QuickTime 8BPS video', options=()),
    FFMpegCodec(name='aasc', flags='V....D', description='Autodesk RLE', options=()),
    FFMpegCodec(name='agm', flags='V....D', description='Amuse Graphics Movie', options=()),
    FFMpegCodec(name='aic', flags='VF...D', description='Apple Intermediate Codec', options=()),
    FFMpegCodec(name='alias_pix', flags='V....D', description='Alias/Wavefront PIX image', options=()),
    FFMpegCodec(name='amv', flags='V....D', description='AMV Video', options=()),
    FFMpegCodec(name='anm', flags='V....D', description='Deluxe Paint Animation', options=()),
    FFMpegCodec(name='ansi', flags='V....D', description='ASCII/ANSI art', options=()),
    FFMpegCodec(name='apng', flags='VF...D', description='APNG (Animated Portable Network Graphics) image', options=()),
    FFMpegCodec(name='arbc', flags='V....D', description="Gryphon's Anim Compressor", options=()),
    FFMpegCodec(name='argo', flags='V....D', description='Argonaut Games Video', options=()),
    FFMpegCodec(name='asv1', flags='V....D', description='ASUS V1', options=()),
    FFMpegCodec(name='asv2', flags='V....D', description='ASUS V2', options=()),
    FFMpegCodec(name='aura', flags='V....D', description='Auravision AURA', options=()),
    FFMpegCodec(name='aura2', flags='V....D', description='Auravision Aura 2', options=()),
    FFMpegCodec(name='libdav1d', flags='V.....', description='dav1d AV1 decoder by VideoLAN (codec av1)', options=()),
    FFMpegCodec(name='av1', flags='V....D', description='Alliance for Open Media AV1', options=()),
    FFMpegCodec(name='av1_cuvid', flags='V.....', description='Nvidia CUVID AV1 decoder (codec av1)', options=()),
    FFMpegCodec(name='avrn', flags='V....D', description='Avid AVI Codec', options=()),
    FFMpegCodec(name='avrp', flags='V....D', description='Avid 1:1 10-bit RGB Packer', options=()),
    FFMpegCodec(name='avs', flags='V....D', description='AVS (Audio Video Standard) video', options=()),
    FFMpegCodec(name='avui', flags='V....D', description='Avid Meridien Uncompressed', options=()),
    FFMpegCodec(name='ayuv', flags='V....D', description='Uncompressed packed MS 4:4:4:4', options=()),
    FFMpegCodec(name='bethsoftvid', flags='V....D', description='Bethesda VID video', options=()),
    FFMpegCodec(name='bfi', flags='V....D', description='Brute Force & Ignorance', options=()),
    FFMpegCodec(name='binkvideo', flags='V....D', description='Bink video', options=()),
    FFMpegCodec(name='bintext', flags='V....D', description='Binary text', options=()),
    FFMpegCodec(name='bitpacked', flags='VF....', description='Bitpacked', options=()),
    FFMpegCodec(name='bmp', flags='V....D', description='BMP (Windows and OS/2 bitmap)', options=()),
    FFMpegCodec(name='bmv_video', flags='V....D', description='Discworld II BMV video', options=()),
    FFMpegCodec(name='brender_pix', flags='V....D', description='BRender PIX image', options=()),
    FFMpegCodec(name='c93', flags='V....D', description='Interplay C93', options=()),
    FFMpegCodec(name='cavs', flags='V....D', description='Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)', options=()),
    FFMpegCodec(name='cdgraphics', flags='V....D', description='CD Graphics video', options=()),
    FFMpegCodec(name='cdtoons', flags='V....D', description='CDToons video', options=()),
    FFMpegCodec(name='cdxl', flags='V....D', description='Commodore CDXL video', options=()),
    FFMpegCodec(name='cfhd', flags='VF...D', description='GoPro CineForm HD', options=()),
    FFMpegCodec(name='cinepak', flags='V....D', description='Cinepak', options=()),
    FFMpegCodec(name='clearvideo', flags='V....D', description='Iterated Systems ClearVideo', options=()),
    FFMpegCodec(name='cljr', flags='V....D', description='Cirrus Logic AccuPak', options=()),
    FFMpegCodec(name='cllc', flags='VF...D', description='Canopus Lossless Codec', options=()),
    FFMpegCodec(name='eacmv', flags='V....D', description='Electronic Arts CMV video (codec cmv)', options=()),
    FFMpegCodec(name='cpia', flags='V....D', description='CPiA video format', options=()),
    FFMpegCodec(name='cri', flags='VF...D', description='Cintel RAW', options=()),
    FFMpegCodec(name='camstudio', flags='V....D', description='CamStudio (codec cscd)', options=()),
    FFMpegCodec(name='cyuv', flags='V....D', description='Creative YUV (CYUV)', options=()),
    FFMpegCodec(name='dds', flags='V.S..D', description='DirectDraw Surface image decoder', options=()),
    FFMpegCodec(name='dfa', flags='V....D', description='Chronomaster DFA', options=()),
    FFMpegCodec(name='dirac', flags='V.S..D', description='BBC Dirac VC-2', options=()),
    FFMpegCodec(name='dnxhd', flags='VFS..D', description='VC3/DNxHD', options=()),
    FFMpegCodec(name='dpx', flags='V....D', description='DPX (Digital Picture Exchange) image', options=()),
    FFMpegCodec(name='dsicinvideo', flags='V....D', description='Delphine Software International CIN video', options=()),
    FFMpegCodec(name='dvvideo', flags='VFS..D', description='DV (Digital Video)', options=()),
    FFMpegCodec(name='dxa', flags='V....D', description='Feeble Files/ScummVM DXA', options=()),
    FFMpegCodec(name='dxtory', flags='VF...D', description='Dxtory', options=()),
    FFMpegCodec(name='dxv', flags='VFS..D', description='Resolume DXV', options=()),
    FFMpegCodec(name='escape124', flags='V....D', description='Escape 124', options=()),
    FFMpegCodec(name='escape130', flags='V....D', description='Escape 130', options=()),
    FFMpegCodec(name='exr', flags='VFS..D', description='OpenEXR image', options=()),
    FFMpegCodec(name='ffv1', flags='VFS..D', description='FFmpeg video codec #1', options=()),
    FFMpegCodec(name='ffvhuff', flags='VF..BD', description='Huffyuv FFmpeg variant', options=()),
    FFMpegCodec(name='fic', flags='V.S..D', description='Mirillis FIC', options=()),
    FFMpegCodec(name='fits', flags='V....D', description='Flexible Image Transport System', options=()),
    FFMpegCodec(name='flashsv', flags='V....D', description='Flash Screen Video v1', options=()),
    FFMpegCodec(name='flashsv2', flags='V....D', description='Flash Screen Video v2', options=()),
    FFMpegCodec(name='flic', flags='V....D', description='Autodesk Animator Flic video', options=()),
    FFMpegCodec(name='flv', flags='V...BD', description='FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (codec flv1)', options=()),
    FFMpegCodec(name='fmvc', flags='V....D', description='FM Screen Capture Codec', options=()),
    FFMpegCodec(name='fraps', flags='VF...D', description='Fraps', options=()),
    FFMpegCodec(name='frwu', flags='V....D', description='Forward Uncompressed', options=()),
    FFMpegCodec(name='g2m', flags='V....D', description='Go2Meeting', options=()),
    FFMpegCodec(name='gdv', flags='V....D', description='Gremlin Digital Video', options=()),
    FFMpegCodec(name='gem', flags='V....D', description='GEM Raster image', options=()),
    FFMpegCodec(name='gif', flags='V....D', description='GIF (Graphics Interchange Format)', options=()),
    FFMpegCodec(name='h261', flags='V....D', description='H.261', options=()),
    FFMpegCodec(name='h263', flags='V...BD', description='H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegCodec(name='h263_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.263 decoder wrapper (codec h263)', options=()),
    FFMpegCodec(name='h263i', flags='V...BD', description='Intel H.263', options=()),
    FFMpegCodec(name='h263p', flags='V...BD', description='H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegCodec(name='h264', flags='VFS..D', description='H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10', options=()),
    FFMpegCodec(name='h264_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.264 decoder wrapper (codec h264)', options=()),
    FFMpegCodec(name='h264_cuvid', flags='V.....', description='Nvidia CUVID H264 decoder (codec h264)', options=()),
    FFMpegCodec(name='hap', flags='VFS..D', description='Vidvox Hap', options=()),
    FFMpegCodec(name='hdr', flags='VF...D', description='HDR (Radiance RGBE format) image', options=()),
    FFMpegCodec(name='hevc', flags='VFS..D', description='HEVC (High Efficiency Video Coding)', options=()),
    FFMpegCodec(name='hevc_v4l2m2m', flags='V.....', description='V4L2 mem2mem HEVC decoder wrapper (codec hevc)', options=()),
    FFMpegCodec(name='hevc_cuvid', flags='V.....', description='Nvidia CUVID HEVC decoder (codec hevc)', options=()),
    FFMpegCodec(name='hnm4video', flags='V....D', description='HNM 4 video', options=()),
    FFMpegCodec(name='hq_hqa', flags='V....D', description='Canopus HQ/HQA', options=()),
    FFMpegCodec(name='hqx', flags='VFS..D', description='Canopus HQX', options=()),
    FFMpegCodec(name='huffyuv', flags='VF..BD', description='Huffyuv / HuffYUV', options=()),
    FFMpegCodec(name='hymt', flags='VF..BD', description='HuffYUV MT', options=()),
    FFMpegCodec(name='idcinvideo', flags='V....D', description='id Quake II CIN video (codec idcin)', options=()),
    FFMpegCodec(name='idf', flags='V....D', description='iCEDraw text', options=()),
    FFMpegCodec(name='iff', flags='V....D', description='IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (codec iff_ilbm)', options=()),
    FFMpegCodec(name='imm4', flags='V....D', description='Infinity IMM4', options=()),
    FFMpegCodec(name='imm5', flags='V.....', description='Infinity IMM5', options=()),
    FFMpegCodec(name='indeo2', flags='V....D', description='Intel Indeo 2', options=()),
    FFMpegCodec(name='indeo3', flags='V....D', description='Intel Indeo 3', options=()),
    FFMpegCodec(name='indeo4', flags='V....D', description='Intel Indeo Video Interactive 4', options=()),
    FFMpegCodec(name='indeo5', flags='V....D', description='Intel Indeo Video Interactive 5', options=()),
    FFMpegCodec(name='interplayvideo', flags='V....D', description='Interplay MVE video', options=()),
    FFMpegCodec(name='ipu', flags='V....D', description='IPU Video', options=()),
    FFMpegCodec(name='jpeg2000', flags='VFS..D', description='JPEG 2000', options=()),
    FFMpegCodec(name='jpegls', flags='V....D', description='JPEG-LS', options=()),
    FFMpegCodec(name='libjxl', flags='V....D', description='libjxl JPEG XL (codec jpegxl)', options=()),
    FFMpegCodec(name='jv', flags='V....D', description='Bitmap Brothers JV video', options=()),
    FFMpegCodec(name='kgv1', flags='V....D', description='Kega Game Video', options=()),
    FFMpegCodec(name='kmvc', flags='V....D', description="Karl Morton's video codec", options=()),
    FFMpegCodec(name='lagarith', flags='VF...D', description='Lagarith lossless', options=()),
    FFMpegCodec(name='loco', flags='V....D', description='LOCO', options=()),
    FFMpegCodec(name='lscr', flags='V....D', description='LEAD Screen Capture', options=()),
    FFMpegCodec(name='m101', flags='V....D', description='Matrox Uncompressed SD', options=()),
    FFMpegCodec(name='eamad', flags='V....D', description='Electronic Arts Madcow Video (codec mad)', options=()),
    FFMpegCodec(name='magicyuv', flags='VFS..D', description='MagicYUV video', options=()),
    FFMpegCodec(name='mdec', flags='VF...D', description='Sony PlayStation MDEC (Motion DECoder)', options=()),
    FFMpegCodec(name='media100', flags='V....D', description='Media 100', options=()),
    FFMpegCodec(name='mimic', flags='VF...D', description='Mimic', options=()),
    FFMpegCodec(name='mjpeg', flags='V....D', description='MJPEG (Motion JPEG)', options=()),
    FFMpegCodec(name='mjpeg_cuvid', flags='V.....', description='Nvidia CUVID MJPEG decoder (codec mjpeg)', options=()),
    FFMpegCodec(name='mjpegb', flags='V....D', description='Apple MJPEG-B', options=()),
    FFMpegCodec(name='mmvideo', flags='V....D', description='American Laser Games MM Video', options=()),
    FFMpegCodec(name='mobiclip', flags='V....D', description='MobiClip Video', options=()),
    FFMpegCodec(name='motionpixels', flags='V....D', description='Motion Pixels video', options=()),
    FFMpegCodec(name='mpeg1video', flags='V.S.BD', description='MPEG-1 video', options=()),
    FFMpegCodec(name='mpeg1_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG1 decoder wrapper (codec mpeg1video)', options=()),
    FFMpegCodec(name='mpeg1_cuvid', flags='V.....', description='Nvidia CUVID MPEG1VIDEO decoder (codec mpeg1video)', options=()),
    FFMpegCodec(name='mpeg2video', flags='V.S.BD', description='MPEG-2 video', options=()),
    FFMpegCodec(name='mpegvideo', flags='V.S.BD', description='MPEG-1 video (codec mpeg2video)', options=()),
    FFMpegCodec(name='mpeg2_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG2 decoder wrapper (codec mpeg2video)', options=()),
    FFMpegCodec(name='mpeg2_cuvid', flags='V.....', description='Nvidia CUVID MPEG2VIDEO decoder (codec mpeg2video)', options=()),
    FFMpegCodec(name='mpeg4', flags='VF..BD', description='MPEG-4 part 2', options=()),
    FFMpegCodec(name='mpeg4_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG4 decoder wrapper (codec mpeg4)', options=()),
    FFMpegCodec(name='mpeg4_cuvid', flags='V.....', description='Nvidia CUVID MPEG4 decoder (codec mpeg4)', options=()),
    FFMpegCodec(name='msa1', flags='V....D', description='MS ATC Screen', options=()),
    FFMpegCodec(name='mscc', flags='V....D', description='Mandsoft Screen Capture Codec', options=()),
    FFMpegCodec(name='msmpeg4v1', flags='V...BD', description='MPEG-4 part 2 Microsoft variant version 1', options=()),
    FFMpegCodec(name='msmpeg4v2', flags='V...BD', description='MPEG-4 part 2 Microsoft variant version 2', options=()),
    FFMpegCodec(name='msmpeg4', flags='V...BD', description='MPEG-4 part 2 Microsoft variant version 3 (codec msmpeg4v3)', options=()),
    FFMpegCodec(name='msp2', flags='V....D', description='Microsoft Paint (MSP) version 2', options=()),
    FFMpegCodec(name='msrle', flags='V....D', description='Microsoft RLE', options=()),
    FFMpegCodec(name='mss1', flags='V....D', description='MS Screen 1', options=()),
    FFMpegCodec(name='mss2', flags='V....D', description='MS Windows Media Video V9 Screen', options=()),
    FFMpegCodec(name='msvideo1', flags='V....D', description='Microsoft Video 1', options=()),
    FFMpegCodec(name='mszh', flags='VF...D', description='LCL (LossLess Codec Library) MSZH', options=()),
    FFMpegCodec(name='mts2', flags='V....D', description='MS Expression Encoder Screen', options=()),
    FFMpegCodec(name='mv30', flags='V....D', description='MidiVid 3.0', options=()),
    FFMpegCodec(name='mvc1', flags='V....D', description='Silicon Graphics Motion Video Compressor 1', options=()),
    FFMpegCodec(name='mvc2', flags='V....D', description='Silicon Graphics Motion Video Compressor 2', options=()),
    FFMpegCodec(name='mvdv', flags='V....D', description='MidiVid VQ', options=()),
    FFMpegCodec(name='mvha', flags='V....D', description='MidiVid Archive Codec', options=()),
    FFMpegCodec(name='mwsc', flags='V....D', description='MatchWare Screen Capture Codec', options=()),
    FFMpegCodec(name='mxpeg', flags='V....D', description='Mobotix MxPEG video', options=()),
    FFMpegCodec(name='notchlc', flags='VF...D', description='NotchLC', options=()),
    FFMpegCodec(name='nuv', flags='V....D', description='NuppelVideo/RTJPEG', options=()),
    FFMpegCodec(name='paf_video', flags='V....D', description='Amazing Studio Packed Animation File Video', options=()),
    FFMpegCodec(name='pam', flags='V....D', description='PAM (Portable AnyMap) image', options=()),
    FFMpegCodec(name='pbm', flags='V....D', description='PBM (Portable BitMap) image', options=()),
    FFMpegCodec(name='pcx', flags='V....D', description='PC Paintbrush PCX image', options=()),
    FFMpegCodec(name='pdv', flags='V....D', description='PDV (PlayDate Video)', options=()),
    FFMpegCodec(name='pfm', flags='V....D', description='PFM (Portable FloatMap) image', options=()),
    FFMpegCodec(name='pgm', flags='V....D', description='PGM (Portable GrayMap) image', options=()),
    FFMpegCodec(name='pgmyuv', flags='V....D', description='PGMYUV (Portable GrayMap YUV) image', options=()),
    FFMpegCodec(name='pgx', flags='V....D', description='PGX (JPEG2000 Test Format)', options=()),
    FFMpegCodec(name='phm', flags='V....D', description='PHM (Portable HalfFloatMap) image', options=()),
    FFMpegCodec(name='photocd', flags='VF...D', description='Kodak Photo CD', options=()),
    FFMpegCodec(name='pictor', flags='V....D', description='Pictor/PC Paint', options=()),
    FFMpegCodec(name='pixlet', flags='VF...D', description='Apple Pixlet', options=()),
    FFMpegCodec(name='png', flags='VF...D', description='PNG (Portable Network Graphics) image', options=()),
    FFMpegCodec(name='ppm', flags='V....D', description='PPM (Portable PixelMap) image', options=()),
    FFMpegCodec(name='prores', flags='VFS..D', description='Apple ProRes (iCodec Pro)', options=()),
    FFMpegCodec(name='prosumer', flags='V....D', description='Brooktree ProSumer Video', options=()),
    FFMpegCodec(name='psd', flags='VF...D', description='Photoshop PSD file', options=()),
    FFMpegCodec(name='ptx', flags='V....D', description='V.Flash PTX image', options=()),
    FFMpegCodec(name='qdraw', flags='V....D', description='Apple QuickDraw', options=()),
    FFMpegCodec(name='qoi', flags='VF...D', description='QOI (Quite OK Image format) image', options=()),
    FFMpegCodec(name='qpeg', flags='V....D', description='Q-team QPEG', options=()),
    FFMpegCodec(name='qtrle', flags='V....D', description='QuickTime Animation (RLE) video', options=()),
    FFMpegCodec(name='r10k', flags='V....D', description='AJA Kona 10-bit RGB Codec', options=()),
    FFMpegCodec(name='r210', flags='V....D', description='Uncompressed RGB 10-bit', options=()),
    FFMpegCodec(name='rasc', flags='V....D', description='RemotelyAnywhere Screen Capture', options=()),
    FFMpegCodec(name='rawvideo', flags='V.....', description='raw video', options=()),
    FFMpegCodec(name='rl2', flags='V....D', description='RL2 video', options=()),
    FFMpegCodec(name='roqvideo', flags='V....D', description='id RoQ video (codec roq)', options=()),
    FFMpegCodec(name='rpza', flags='V....D', description='QuickTime video (RPZA)', options=()),
    FFMpegCodec(name='rscc', flags='V....D', description='innoHeim/Rsupport Screen Capture Codec', options=()),
    FFMpegCodec(name='rtv1', flags='VF...D', description='RTV1 (RivaTuner Video)', options=()),
    FFMpegCodec(name='rv10', flags='V....D', description='RealVideo 1.0', options=()),
    FFMpegCodec(name='rv20', flags='V....D', description='RealVideo 2.0', options=()),
    FFMpegCodec(name='rv30', flags='VF...D', description='RealVideo 3.0', options=()),
    FFMpegCodec(name='rv40', flags='VF...D', description='RealVideo 4.0', options=()),
    FFMpegCodec(name='sanm', flags='V....D', description='LucasArts SANM/Smush video', options=()),
    FFMpegCodec(name='scpr', flags='V....D', description='ScreenPressor', options=()),
    FFMpegCodec(name='screenpresso', flags='V....D', description='Screenpresso', options=()),
    FFMpegCodec(name='sga', flags='V....D', description='Digital Pictures SGA Video', options=()),
    FFMpegCodec(name='sgi', flags='V....D', description='SGI image', options=()),
    FFMpegCodec(name='sgirle', flags='V....D', description='Silicon Graphics RLE 8-bit video', options=()),
    FFMpegCodec(name='sheervideo', flags='VF...D', description='BitJazz SheerVideo', options=()),
    FFMpegCodec(name='simbiosis_imx', flags='V....D', description='Simbiosis Interactive IMX Video', options=()),
    FFMpegCodec(name='smackvid', flags='V....D', description='Smacker video (codec smackvideo)', options=()),
    FFMpegCodec(name='smc', flags='V....D', description='QuickTime Graphics (SMC)', options=()),
    FFMpegCodec(name='smvjpeg', flags='V....D', description='SMV JPEG', options=()),
    FFMpegCodec(name='snow', flags='V....D', description='Snow', options=()),
    FFMpegCodec(name='sp5x', flags='V....D', description='Sunplus JPEG (SP5X)', options=()),
    FFMpegCodec(name='speedhq', flags='V....D', description='NewTek SpeedHQ', options=()),
    FFMpegCodec(name='srgc', flags='V....D', description='Screen Recorder Gold Codec', options=()),
    FFMpegCodec(name='sunrast', flags='V....D', description='Sun Rasterfile image', options=()),
    FFMpegCodec(name='librsvg', flags='V....D', description='Librsvg rasterizer (codec svg)', options=()),
    FFMpegCodec(name='svq1', flags='V....D', description='Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1', options=()),
    FFMpegCodec(name='svq3', flags='V...BD', description='Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3', options=()),
    FFMpegCodec(name='targa', flags='V....D', description='Truevision Targa image', options=()),
    FFMpegCodec(name='targa_y216', flags='V....D', description='Pinnacle TARGA CineWave YUV16', options=()),
    FFMpegCodec(name='tdsc', flags='V....D', description='TDSC', options=()),
    FFMpegCodec(name='eatgq', flags='V....D', description='Electronic Arts TGQ video (codec tgq)', options=()),
    FFMpegCodec(name='eatgv', flags='V....D', description='Electronic Arts TGV video (codec tgv)', options=()),
    FFMpegCodec(name='theora', flags='VF..BD', description='Theora', options=()),
    FFMpegCodec(name='thp', flags='V....D', description='Nintendo Gamecube THP video', options=()),
    FFMpegCodec(name='tiertexseqvideo', flags='V....D', description='Tiertex Limited SEQ video', options=()),
    FFMpegCodec(name='tiff', flags='VF...D', description='TIFF image', options=()),
    FFMpegCodec(name='tmv', flags='V....D', description='8088flex TMV', options=()),
    FFMpegCodec(name='eatqi', flags='V....D', description='Electronic Arts TQI Video (codec tqi)', options=()),
    FFMpegCodec(name='truemotion1', flags='V....D', description='Duck TrueMotion 1.0', options=()),
    FFMpegCodec(name='truemotion2', flags='V....D', description='Duck TrueMotion 2.0', options=()),
    FFMpegCodec(name='truemotion2rt', flags='V....D', description='Duck TrueMotion 2.0 Real Time', options=()),
    FFMpegCodec(name='camtasia', flags='V....D', description='TechSmith Screen Capture Codec (codec tscc)', options=()),
    FFMpegCodec(name='tscc2', flags='V....D', description='TechSmith Screen Codec 2', options=()),
    FFMpegCodec(name='txd', flags='V....D', description='Renderware TXD (TeXture Dictionary) image', options=()),
    FFMpegCodec(name='ultimotion', flags='V....D', description='IBM UltiMotion (codec ulti)', options=()),
    FFMpegCodec(name='utvideo', flags='VF...D', description='Ut Video', options=()),
    FFMpegCodec(name='v210', flags='VFS..D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v210x', flags='V....D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v308', flags='V....D', description='Uncompressed packed 4:4:4', options=()),
    FFMpegCodec(name='v408', flags='V....D', description='Uncompressed packed QT 4:4:4:4', options=()),
    FFMpegCodec(name='v410', flags='VFS..D', description='Uncompressed 4:4:4 10-bit', options=()),
    FFMpegCodec(name='vb', flags='V....D', description='Beam Software VB', options=()),
    FFMpegCodec(name='vble', flags='VF...D', description='VBLE Lossless Codec', options=()),
    FFMpegCodec(name='vbn', flags='V.S..D', description='Vizrt Binary Image', options=()),
    FFMpegCodec(name='vc1', flags='V....D', description='SMPTE VC-1', options=()),
    FFMpegCodec(name='vc1_v4l2m2m', flags='V.....', description='V4L2 mem2mem VC1 decoder wrapper (codec vc1)', options=()),
    FFMpegCodec(name='vc1_cuvid', flags='V.....', description='Nvidia CUVID VC1 decoder (codec vc1)', options=()),
    FFMpegCodec(name='vc1image', flags='V....D', description='Windows Media Video 9 Image v2', options=()),
    FFMpegCodec(name='vcr1', flags='V....D', description='ATI VCR1', options=()),
    FFMpegCodec(name='xl', flags='V....D', description='Miro VideoXL (codec vixl)', options=()),
    FFMpegCodec(name='vmdvideo', flags='V....D', description='Sierra VMD video', options=()),
    FFMpegCodec(name='vmix', flags='VFS..D', description='vMix Video', options=()),
    FFMpegCodec(name='vmnc', flags='V....D', description='VMware Screen Codec / VMware Video', options=()),
    FFMpegCodec(name='vnull', flags='V....D', description='null video', options=()),
    FFMpegCodec(name='vp3', flags='VF..BD', description='On2 VP3', options=()),
    FFMpegCodec(name='vp4', flags='VF..BD', description='On2 VP4', options=()),
    FFMpegCodec(name='vp5', flags='V....D', description='On2 VP5', options=()),
    FFMpegCodec(name='vp6', flags='V....D', description='On2 VP6', options=()),
    FFMpegCodec(name='vp6a', flags='V.S..D', description='On2 VP6 (Flash version, with alpha channel)', options=()),
    FFMpegCodec(name='vp6f', flags='V....D', description='On2 VP6 (Flash version)', options=()),
    FFMpegCodec(name='vp7', flags='V....D', description='On2 VP7', options=()),
    FFMpegCodec(name='vp8', flags='VFS..D', description='On2 VP8', options=()),
    FFMpegCodec(name='vp8_v4l2m2m', flags='V.....', description='V4L2 mem2mem VP8 decoder wrapper (codec vp8)', options=()),
    FFMpegCodec(name='libvpx', flags='V....D', description='libvpx VP8 (codec vp8)', options=()),
    FFMpegCodec(name='vp8_cuvid', flags='V.....', description='Nvidia CUVID VP8 decoder (codec vp8)', options=()),
    FFMpegCodec(name='vp9', flags='VFS..D', description='Google VP9', options=()),
    FFMpegCodec(name='vp9_v4l2m2m', flags='V.....', description='V4L2 mem2mem VP9 decoder wrapper (codec vp9)', options=()),
    FFMpegCodec(name='vp9_cuvid', flags='V.....', description='Nvidia CUVID VP9 decoder (codec vp9)', options=()),
    FFMpegCodec(name='vqc', flags='V....D', description='ViewQuest VQC', options=()),
    FFMpegCodec(name='wbmp', flags='VF...D', description='WBMP (Wireless Application Protocol Bitmap) image', options=()),
    FFMpegCodec(name='wcmv', flags='V....D', description='WinCAM Motion Video', options=()),
    FFMpegCodec(name='webp', flags='VF...D', description='WebP image', options=()),
    FFMpegCodec(name='wmv1', flags='V...BD', description='Windows Media Video 7', options=()),
    FFMpegCodec(name='wmv2', flags='V...BD', description='Windows Media Video 8', options=()),
    FFMpegCodec(name='wmv3', flags='V....D', description='Windows Media Video 9', options=()),
    FFMpegCodec(name='wmv3image', flags='V....D', description='Windows Media Video 9 Image', options=()),
    FFMpegCodec(name='wnv1', flags='V....D', description='Winnov WNV1', options=()),
    FFMpegCodec(name='wrapped_avframe', flags='V.....', description='AVPacket to AVFrame passthrough', options=()),
    FFMpegCodec(name='vqavideo', flags='V....D', description='Westwood Studios VQA (Vector Quantized Animation) video (codec ws_vqa)', options=()),
    FFMpegCodec(name='xan_wc3', flags='V....D', description='Wing Commander III / Xan', options=()),
    FFMpegCodec(name='xan_wc4', flags='V....D', description='Wing Commander IV / Xxan', options=()),
    FFMpegCodec(name='xbin', flags='V....D', description='eXtended BINary text', options=()),
    FFMpegCodec(name='xbm', flags='V....D', description='XBM (X BitMap) image', options=()),
    FFMpegCodec(name='xface', flags='V....D', description='X-face image', options=()),
    FFMpegCodec(name='xpm', flags='V....D', description='XPM (X PixMap) image', options=()),
    FFMpegCodec(name='xwd', flags='V....D', description='XWD (X Window Dump) image', options=()),
    FFMpegCodec(name='y41p', flags='V....D', description='Uncompressed YUV 4:1:1 12-bit', options=()),
    FFMpegCodec(name='ylc', flags='VF...D', description='YUY2 Lossless Codec', options=()),
    FFMpegCodec(name='yop', flags='V.....', description='Psygnosis YOP Video', options=()),
    FFMpegCodec(name='yuv4', flags='V....D', description='Uncompressed packed 4:2:0', options=()),
    FFMpegCodec(name='zerocodec', flags='V....D', description='ZeroCodec Lossless Video', options=()),
    FFMpegCodec(name='zlib', flags='VF...D', description='LCL (LossLess Codec Library) ZLIB', options=()),
    FFMpegCodec(name='zmbv', flags='V....D', description='Zip Motion Blocks Video', options=()),
    FFMpegCodec(name='8svx_exp', flags='A....D', description='8SVX exponential', options=()),
    FFMpegCodec(name='8svx_fib', flags='A....D', description='8SVX fibonacci', options=()),
    FFMpegCodec(name='aac', flags='A....D', description='AAC (Advanced Audio Coding)', options=()),
    FFMpegCodec(name='aac_fixed', flags='A....D', description='AAC (Advanced Audio Coding) (codec aac)', options=()),
    FFMpegCodec(name='aac_latm', flags='A....D', description='AAC LATM (Advanced Audio Coding LATM syntax)', options=()),
    FFMpegCodec(name='ac3', flags='A....D', description='ATSC A/52A (AC-3)', options=()),
    FFMpegCodec(name='ac3_fixed', flags='A....D', description='ATSC A/52A (AC-3) (codec ac3)', options=()),
    FFMpegCodec(name='adpcm_4xm', flags='A....D', description='ADPCM 4X Movie', options=()),
    FFMpegCodec(name='adpcm_adx', flags='A....D', description='SEGA CRI ADX ADPCM', options=()),
    FFMpegCodec(name='adpcm_afc', flags='A....D', description='ADPCM Nintendo Gamecube AFC', options=()),
    FFMpegCodec(name='adpcm_agm', flags='A....D', description='ADPCM AmuseGraphics Movie', options=()),
    FFMpegCodec(name='adpcm_aica', flags='A....D', description='ADPCM Yamaha AICA', options=()),
    FFMpegCodec(name='adpcm_argo', flags='A....D', description='ADPCM Argonaut Games', options=()),
    FFMpegCodec(name='adpcm_ct', flags='A....D', description='ADPCM Creative Technology', options=()),
    FFMpegCodec(name='adpcm_dtk', flags='A....D', description='ADPCM Nintendo Gamecube DTK', options=()),
    FFMpegCodec(name='adpcm_ea', flags='A....D', description='ADPCM Electronic Arts', options=()),
    FFMpegCodec(name='adpcm_ea_maxis_xa', flags='A....D', description='ADPCM Electronic Arts Maxis CDROM XA', options=()),
    FFMpegCodec(name='adpcm_ea_r1', flags='A....D', description='ADPCM Electronic Arts R1', options=()),
    FFMpegCodec(name='adpcm_ea_r2', flags='A....D', description='ADPCM Electronic Arts R2', options=()),
    FFMpegCodec(name='adpcm_ea_r3', flags='A....D', description='ADPCM Electronic Arts R3', options=()),
    FFMpegCodec(name='adpcm_ea_xas', flags='A....D', description='ADPCM Electronic Arts XAS', options=()),
    FFMpegCodec(name='g722', flags='A....D', description='G.722 ADPCM (codec adpcm_g722)', options=()),
    FFMpegCodec(name='g726', flags='A....D', description='G.726 ADPCM (codec adpcm_g726)', options=()),
    FFMpegCodec(name='g726le', flags='A....D', description='G.726 ADPCM little-endian (codec adpcm_g726le)', options=()),
    FFMpegCodec(name='adpcm_ima_acorn', flags='A....D', description='ADPCM IMA Acorn Replay', options=()),
    FFMpegCodec(name='adpcm_ima_alp', flags='A....D', description='ADPCM IMA High Voltage Software ALP', options=()),
    FFMpegCodec(name='adpcm_ima_amv', flags='A....D', description='ADPCM IMA AMV', options=()),
    FFMpegCodec(name='adpcm_ima_apc', flags='A....D', description='ADPCM IMA CRYO APC', options=()),
    FFMpegCodec(name='adpcm_ima_apm', flags='A....D', description='ADPCM IMA Ubisoft APM', options=()),
    FFMpegCodec(name='adpcm_ima_cunning', flags='A....D', description='ADPCM IMA Cunning Developments', options=()),
    FFMpegCodec(name='adpcm_ima_dat4', flags='A....D', description='ADPCM IMA Eurocom DAT4', options=()),
    FFMpegCodec(name='adpcm_ima_dk3', flags='A....D', description='ADPCM IMA Duck DK3', options=()),
    FFMpegCodec(name='adpcm_ima_dk4', flags='A....D', description='ADPCM IMA Duck DK4', options=()),
    FFMpegCodec(name='adpcm_ima_ea_eacs', flags='A....D', description='ADPCM IMA Electronic Arts EACS', options=()),
    FFMpegCodec(name='adpcm_ima_ea_sead', flags='A....D', description='ADPCM IMA Electronic Arts SEAD', options=()),
    FFMpegCodec(name='adpcm_ima_iss', flags='A....D', description='ADPCM IMA Funcom ISS', options=()),
    FFMpegCodec(name='adpcm_ima_moflex', flags='A....D', description='ADPCM IMA MobiClip MOFLEX', options=()),
    FFMpegCodec(name='adpcm_ima_mtf', flags='A....D', description="ADPCM IMA Capcom's MT Framework", options=()),
    FFMpegCodec(name='adpcm_ima_oki', flags='A....D', description='ADPCM IMA Dialogic OKI', options=()),
    FFMpegCodec(name='adpcm_ima_qt', flags='A....D', description='ADPCM IMA QuickTime', options=()),
    FFMpegCodec(name='adpcm_ima_rad', flags='A....D', description='ADPCM IMA Radical', options=()),
    FFMpegCodec(name='adpcm_ima_smjpeg', flags='A....D', description='ADPCM IMA Loki SDL MJPEG', options=()),
    FFMpegCodec(name='adpcm_ima_ssi', flags='A....D', description='ADPCM IMA Simon & Schuster Interactive', options=()),
    FFMpegCodec(name='adpcm_ima_wav', flags='A....D', description='ADPCM IMA WAV', options=()),
    FFMpegCodec(name='adpcm_ima_ws', flags='A....D', description='ADPCM IMA Westwood', options=()),
    FFMpegCodec(name='adpcm_ms', flags='A....D', description='ADPCM Microsoft', options=()),
    FFMpegCodec(name='adpcm_mtaf', flags='A....D', description='ADPCM MTAF', options=()),
    FFMpegCodec(name='adpcm_psx', flags='A....D', description='ADPCM Playstation', options=()),
    FFMpegCodec(name='adpcm_sbpro_2', flags='A....D', description='ADPCM Sound Blaster Pro 2-bit', options=()),
    FFMpegCodec(name='adpcm_sbpro_3', flags='A....D', description='ADPCM Sound Blaster Pro 2.6-bit', options=()),
    FFMpegCodec(name='adpcm_sbpro_4', flags='A....D', description='ADPCM Sound Blaster Pro 4-bit', options=()),
    FFMpegCodec(name='adpcm_swf', flags='A....D', description='ADPCM Shockwave Flash', options=()),
    FFMpegCodec(name='adpcm_thp', flags='A....D', description='ADPCM Nintendo THP', options=()),
    FFMpegCodec(name='adpcm_thp_le', flags='A....D', description='ADPCM Nintendo THP (little-endian)', options=()),
    FFMpegCodec(name='adpcm_vima', flags='A....D', description='LucasArts VIMA audio', options=()),
    FFMpegCodec(name='adpcm_xa', flags='A....D', description='ADPCM CDROM XA', options=()),
    FFMpegCodec(name='adpcm_xmd', flags='A....D', description='ADPCM Konami XMD', options=()),
    FFMpegCodec(name='adpcm_yamaha', flags='A....D', description='ADPCM Yamaha', options=()),
    FFMpegCodec(name='adpcm_zork', flags='A....D', description='ADPCM Zork', options=()),
    FFMpegCodec(name='alac', flags='AF...D', description='ALAC (Apple Lossless Audio Codec)', options=()),
    FFMpegCodec(name='amrnb', flags='A....D', description='AMR-NB (Adaptive Multi-Rate NarrowBand) (codec amr_nb)', options=()),
    FFMpegCodec(name='amrwb', flags='A....D', description='AMR-WB (Adaptive Multi-Rate WideBand) (codec amr_wb)', options=()),
    FFMpegCodec(name='anull', flags='A....D', description='null audio', options=()),
    FFMpegCodec(name='apac', flags='A....D', description="Marian's A-pac audio", options=()),
    FFMpegCodec(name='ape', flags='A....D', description="Monkey's Audio", options=()),
    FFMpegCodec(name='aptx', flags='A....D', description='aptX (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='aptx_hd', flags='A....D', description='aptX HD (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='atrac1', flags='A....D', description='ATRAC1 (Adaptive TRansform Acoustic Coding)', options=()),
    FFMpegCodec(name='atrac3', flags='A....D', description='ATRAC3 (Adaptive TRansform Acoustic Coding 3)', options=()),
    FFMpegCodec(name='atrac3al', flags='A....D', description='ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)', options=()),
    FFMpegCodec(name='atrac3plus', flags='A....D', description='ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (codec atrac3p)', options=()),
    FFMpegCodec(name='atrac3plusal', flags='A....D', description='ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (codec atrac3pal)', options=()),
    FFMpegCodec(name='atrac9', flags='A....D', description='ATRAC9 (Adaptive TRansform Acoustic Coding 9)', options=()),
    FFMpegCodec(name='on2avc', flags='A....D', description='On2 Audio for Video Codec (codec avc)', options=()),
    FFMpegCodec(name='binkaudio_dct', flags='A....D', description='Bink Audio (DCT)', options=()),
    FFMpegCodec(name='binkaudio_rdft', flags='A....D', description='Bink Audio (RDFT)', options=()),
    FFMpegCodec(name='bmv_audio', flags='A....D', description='Discworld II BMV audio', options=()),
    FFMpegCodec(name='bonk', flags='A....D', description='Bonk audio', options=()),
    FFMpegCodec(name='cbd2_dpcm', flags='A....D', description='DPCM Cuberoot-Delta-Exact', options=()),
    FFMpegCodec(name='libcodec2', flags='A.....', description='codec2 decoder using libcodec2 (codec codec2)', options=()),
    FFMpegCodec(name='comfortnoise', flags='A....D', description='RFC 3389 comfort noise generator', options=()),
    FFMpegCodec(name='cook', flags='A....D', description='Cook / Cooker / Gecko (RealAudio G2)', options=()),
    FFMpegCodec(name='derf_dpcm', flags='A....D', description='DPCM Xilam DERF', options=()),
    FFMpegCodec(name='dfpwm', flags='A....D', description='DFPWM1a audio', options=()),
    FFMpegCodec(name='dolby_e', flags='A....D', description='Dolby E', options=()),
    FFMpegCodec(name='dsd_lsbf', flags='A.S..D', description='DSD (Direct Stream Digital), least significant bit first', options=()),
    FFMpegCodec(name='dsd_lsbf_planar', flags='A.S..D', description='DSD (Direct Stream Digital), least significant bit first, planar', options=()),
    FFMpegCodec(name='dsd_msbf', flags='A.S..D', description='DSD (Direct Stream Digital), most significant bit first', options=()),
    FFMpegCodec(name='dsd_msbf_planar', flags='A.S..D', description='DSD (Direct Stream Digital), most significant bit first, planar', options=()),
    FFMpegCodec(name='dsicinaudio', flags='A....D', description='Delphine Software International CIN audio', options=()),
    FFMpegCodec(name='dss_sp', flags='A....D', description='Digital Speech Standard - Standard Play mode (DSS SP)', options=()),
    FFMpegCodec(name='dst', flags='A....D', description='DST (Digital Stream Transfer)', options=()),
    FFMpegCodec(name='dca', flags='A....D', description='DCA (DTS Coherent Acoustics) (codec dts)', options=()),
    FFMpegCodec(name='dvaudio', flags='A....D', description='Ulead DV Audio', options=()),
    FFMpegCodec(name='eac3', flags='A....D', description='ATSC A/52B (AC-3, E-AC-3)', options=()),
    FFMpegCodec(name='evrc', flags='A....D', description='EVRC (Enhanced Variable Rate Codec)', options=()),
    FFMpegCodec(name='fastaudio', flags='A....D', description='MobiClip FastAudio', options=()),
    FFMpegCodec(name='flac', flags='AF...D', description='FLAC (Free Lossless Audio Codec)', options=()),
    FFMpegCodec(name='ftr', flags='A....D', description='FTR Voice', options=()),
    FFMpegCodec(name='g723_1', flags='A....D', description='G.723.1', options=()),
    FFMpegCodec(name='g729', flags='A....D', description='G.729', options=()),
    FFMpegCodec(name='gremlin_dpcm', flags='A....D', description='DPCM Gremlin', options=()),
    FFMpegCodec(name='gsm', flags='A....D', description='GSM', options=()),
    FFMpegCodec(name='libgsm', flags='A....D', description='libgsm GSM (codec gsm)', options=()),
    FFMpegCodec(name='gsm_ms', flags='A....D', description='GSM Microsoft variant', options=()),
    FFMpegCodec(name='libgsm_ms', flags='A....D', description='libgsm GSM Microsoft variant (codec gsm_ms)', options=()),
    FFMpegCodec(name='hca', flags='A....D', description='CRI HCA', options=()),
    FFMpegCodec(name='hcom', flags='A....D', description='HCOM Audio', options=()),
    FFMpegCodec(name='iac', flags='A....D', description='IAC (Indeo Audio Coder)', options=()),
    FFMpegCodec(name='ilbc', flags='A....D', description='iLBC (Internet Low Bitrate Codec)', options=()),
    FFMpegCodec(name='imc', flags='A....D', description='IMC (Intel Music Coder)', options=()),
    FFMpegCodec(name='interplay_dpcm', flags='A....D', description='DPCM Interplay', options=()),
    FFMpegCodec(name='interplayacm', flags='A....D', description='Interplay ACM', options=()),
    FFMpegCodec(name='mace3', flags='A....D', description='MACE (Macintosh Audio Compression/Expansion) 3:1', options=()),
    FFMpegCodec(name='mace6', flags='A....D', description='MACE (Macintosh Audio Compression/Expansion) 6:1', options=()),
    FFMpegCodec(name='metasound', flags='A....D', description='Voxware MetaSound', options=()),
    FFMpegCodec(name='misc4', flags='A....D', description='Micronas SC-4 Audio', options=()),
    FFMpegCodec(name='mlp', flags='A....D', description='MLP (Meridian Lossless Packing)', options=()),
    FFMpegCodec(name='mp1', flags='A....D', description='MP1 (MPEG audio layer 1)', options=()),
    FFMpegCodec(name='mp1float', flags='A....D', description='MP1 (MPEG audio layer 1) (codec mp1)', options=()),
    FFMpegCodec(name='mp2', flags='A....D', description='MP2 (MPEG audio layer 2)', options=()),
    FFMpegCodec(name='mp2float', flags='A....D', description='MP2 (MPEG audio layer 2) (codec mp2)', options=()),
    FFMpegCodec(name='mp3float', flags='A....D', description='MP3 (MPEG audio layer 3) (codec mp3)', options=()),
    FFMpegCodec(name='mp3', flags='A....D', description='MP3 (MPEG audio layer 3)', options=()),
    FFMpegCodec(name='mp3adufloat', flags='A....D', description='ADU (Application Data Unit) MP3 (MPEG audio layer 3) (codec mp3adu)', options=()),
    FFMpegCodec(name='mp3adu', flags='A....D', description='ADU (Application Data Unit) MP3 (MPEG audio layer 3)', options=()),
    FFMpegCodec(name='mp3on4float', flags='A....D', description='MP3onMP4 (codec mp3on4)', options=()),
    FFMpegCodec(name='mp3on4', flags='A....D', description='MP3onMP4', options=()),
    FFMpegCodec(name='als', flags='A....D', description='MPEG-4 Audio Lossless Coding (ALS) (codec mp4als)', options=()),
    FFMpegCodec(name='msnsiren', flags='A....D', description='MSN Siren', options=()),
    FFMpegCodec(name='mpc7', flags='A....D', description='Musepack SV7 (codec musepack7)', options=()),
    FFMpegCodec(name='mpc8', flags='A....D', description='Musepack SV8 (codec musepack8)', options=()),
    FFMpegCodec(name='nellymoser', flags='A....D', description='Nellymoser Asao', options=()),
    FFMpegCodec(name='opus', flags='A....D', description='Opus', options=()),
    FFMpegCodec(name='libopus', flags='A....D', description='libopus Opus (codec opus)', options=()),
    FFMpegCodec(name='osq', flags='A....D', description='OSQ (Original Sound Quality)', options=()),
    FFMpegCodec(name='paf_audio', flags='A....D', description='Amazing Studio Packed Animation File Audio', options=()),
    FFMpegCodec(name='pcm_alaw', flags='A....D', description='PCM A-law / G.711 A-law', options=()),
    FFMpegCodec(name='pcm_bluray', flags='A....D', description='PCM signed 16|20|24-bit big-endian for Blu-ray media', options=()),
    FFMpegCodec(name='pcm_dvd', flags='A....D', description='PCM signed 16|20|24-bit big-endian for DVD media', options=()),
    FFMpegCodec(name='pcm_f16le', flags='A....D', description='PCM 16.8 floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f24le', flags='A....D', description='PCM 24.0 floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f32be', flags='A....D', description='PCM 32-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f32le', flags='A....D', description='PCM 32-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f64be', flags='A....D', description='PCM 64-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f64le', flags='A....D', description='PCM 64-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_lxf', flags='A....D', description='PCM signed 20-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_mulaw', flags='A....D', description='PCM mu-law / G.711 mu-law', options=()),
    FFMpegCodec(name='pcm_s16be', flags='A....D', description='PCM signed 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s16be_planar', flags='A....D', description='PCM signed 16-bit big-endian planar', options=()),
    FFMpegCodec(name='pcm_s16le', flags='A....D', description='PCM signed 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s16le_planar', flags='A....D', description='PCM signed 16-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s24be', flags='A....D', description='PCM signed 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s24daud', flags='A....D', description='PCM D-Cinema audio signed 24-bit', options=()),
    FFMpegCodec(name='pcm_s24le', flags='A....D', description='PCM signed 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s24le_planar', flags='A....D', description='PCM signed 24-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s32be', flags='A....D', description='PCM signed 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s32le', flags='A....D', description='PCM signed 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s32le_planar', flags='A....D', description='PCM signed 32-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s64be', flags='A....D', description='PCM signed 64-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s64le', flags='A....D', description='PCM signed 64-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s8', flags='A....D', description='PCM signed 8-bit', options=()),
    FFMpegCodec(name='pcm_s8_planar', flags='A....D', description='PCM signed 8-bit planar', options=()),
    FFMpegCodec(name='pcm_sga', flags='A....D', description='PCM SGA', options=()),
    FFMpegCodec(name='pcm_u16be', flags='A....D', description='PCM unsigned 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u16le', flags='A....D', description='PCM unsigned 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u24be', flags='A....D', description='PCM unsigned 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u24le', flags='A....D', description='PCM unsigned 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u32be', flags='A....D', description='PCM unsigned 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u32le', flags='A....D', description='PCM unsigned 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u8', flags='A....D', description='PCM unsigned 8-bit', options=()),
    FFMpegCodec(name='pcm_vidc', flags='A....D', description='PCM Archimedes VIDC', options=()),
    FFMpegCodec(name='qcelp', flags='A....D', description='QCELP / PureVoice', options=()),
    FFMpegCodec(name='qdm2', flags='A....D', description='QDesign Music Codec 2', options=()),
    FFMpegCodec(name='qdmc', flags='A....D', description='QDesign Music Codec 1', options=()),
    FFMpegCodec(name='real_144', flags='A....D', description='RealAudio 1.0 (14.4K) (codec ra_144)', options=()),
    FFMpegCodec(name='real_288', flags='A....D', description='RealAudio 2.0 (28.8K) (codec ra_288)', options=()),
    FFMpegCodec(name='ralf', flags='A....D', description='RealAudio Lossless', options=()),
    FFMpegCodec(name='rka', flags='A....D', description='RKA (RK Audio)', options=()),
    FFMpegCodec(name='roq_dpcm', flags='A....D', description='DPCM id RoQ', options=()),
    FFMpegCodec(name='s302m', flags='A....D', description='SMPTE 302M', options=()),
    FFMpegCodec(name='sbc', flags='A....D', description='SBC (low-complexity subband codec)', options=()),
    FFMpegCodec(name='sdx2_dpcm', flags='A....D', description='DPCM Squareroot-Delta-Exact', options=()),
    FFMpegCodec(name='shorten', flags='A....D', description='Shorten', options=()),
    FFMpegCodec(name='sipr', flags='A....D', description='RealAudio SIPR / ACELP.NET', options=()),
    FFMpegCodec(name='siren', flags='A....D', description='Siren', options=()),
    FFMpegCodec(name='smackaud', flags='A....D', description='Smacker audio (codec smackaudio)', options=()),
    FFMpegCodec(name='sol_dpcm', flags='A....D', description='DPCM Sol', options=()),
    FFMpegCodec(name='sonic', flags='A..X.D', description='Sonic', options=()),
    FFMpegCodec(name='speex', flags='A....D', description='Speex', options=()),
    FFMpegCodec(name='libspeex', flags='A....D', description='libspeex Speex (codec speex)', options=()),
    FFMpegCodec(name='tak', flags='AF...D', description="TAK (Tom's lossless Audio Kompressor)", options=()),
    FFMpegCodec(name='truehd', flags='A....D', description='TrueHD', options=()),
    FFMpegCodec(name='truespeech', flags='A....D', description='DSP Group TrueSpeech', options=()),
    FFMpegCodec(name='tta', flags='AF...D', description='TTA (True Audio)', options=()),
    FFMpegCodec(name='twinvq', flags='A....D', description='VQF TwinVQ', options=()),
    FFMpegCodec(name='vmdaudio', flags='A....D', description='Sierra VMD audio', options=()),
    FFMpegCodec(name='vorbis', flags='A....D', description='Vorbis', options=()),
    FFMpegCodec(name='libvorbis', flags='A.....', description='libvorbis (codec vorbis)', options=()),
    FFMpegCodec(name='wady_dpcm', flags='A....D', description='DPCM Marble WADY', options=()),
    FFMpegCodec(name='wavarc', flags='A....D', description='Waveform Archiver', options=()),
    FFMpegCodec(name='wavesynth', flags='A....D', description='Wave synthesis pseudo-codec', options=()),
    FFMpegCodec(name='wavpack', flags='AFS..D', description='WavPack', options=()),
    FFMpegCodec(name='ws_snd1', flags='A....D', description='Westwood Audio (SND1) (codec westwood_snd1)', options=()),
    FFMpegCodec(name='wmalossless', flags='A....D', description='Windows Media Audio Lossless', options=()),
    FFMpegCodec(name='wmapro', flags='A....D', description='Windows Media Audio 9 Professional', options=()),
    FFMpegCodec(name='wmav1', flags='A....D', description='Windows Media Audio 1', options=()),
    FFMpegCodec(name='wmav2', flags='A....D', description='Windows Media Audio 2', options=()),
    FFMpegCodec(name='wmavoice', flags='A....D', description='Windows Media Audio Voice', options=()),
    FFMpegCodec(name='xan_dpcm', flags='A....D', description='DPCM Xan', options=()),
    FFMpegCodec(name='xma1', flags='A....D', description='Xbox Media Audio 1', options=()),
    FFMpegCodec(name='xma2', flags='A....D', description='Xbox Media Audio 2', options=()),
    FFMpegCodec(name='ssa', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle (codec ass)', options=()),
    FFMpegCodec(name='ass', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle', options=()),
    FFMpegCodec(name='dvbsub', flags='S.....', description='DVB subtitles (codec dvb_subtitle)', options=()),
    FFMpegCodec(name='libzvbi_teletextdec', flags='S.....', description='Libzvbi DVB teletext decoder (codec dvb_teletext)', options=()),
    FFMpegCodec(name='dvdsub', flags='S.....', description='DVD subtitles (codec dvd_subtitle)', options=()),
    FFMpegCodec(name='cc_dec', flags='S.....', description='Closed Caption (EIA-608 / CEA-708) (codec eia_608)', options=()),
    FFMpegCodec(name='pgssub', flags='S.....', description='HDMV Presentation Graphic Stream subtitles (codec hdmv_pgs_subtitle)', options=()),
    FFMpegCodec(name='jacosub', flags='S.....', description='JACOsub subtitle', options=()),
    FFMpegCodec(name='microdvd', flags='S.....', description='MicroDVD subtitle', options=()),
    FFMpegCodec(name='mov_text', flags='S.....', description='3GPP Timed Text subtitle', options=()),
    FFMpegCodec(name='mpl2', flags='S.....', description='MPL2 subtitle', options=()),
    FFMpegCodec(name='pjs', flags='S.....', description='PJS subtitle', options=()),
    FFMpegCodec(name='realtext', flags='S.....', description='RealText subtitle', options=()),
    FFMpegCodec(name='sami', flags='S.....', description='SAMI subtitle', options=()),
    FFMpegCodec(name='stl', flags='S.....', description='Spruce subtitle format', options=()),
    FFMpegCodec(name='srt', flags='S.....', description='SubRip subtitle (codec subrip)', options=()),
    FFMpegCodec(name='subrip', flags='S.....', description='SubRip subtitle', options=()),
    FFMpegCodec(name='subviewer', flags='S.....', description='SubViewer subtitle', options=()),
    FFMpegCodec(name='subviewer1', flags='S.....', description='SubViewer1 subtitle', options=()),
    FFMpegCodec(name='text', flags='S.....', description='Raw text subtitle', options=()),
    FFMpegCodec(name='vplayer', flags='S.....', description='VPlayer subtitle', options=()),
    FFMpegCodec(name='webvtt', flags='S.....', description='WebVTT subtitle', options=()),
    FFMpegCodec(name='xsub', flags='S.....', description='XSUB', options=()),
  ])
# ---
# name: test_parse_codecs_help_text[encoders]
  list([
    FFMpegCodec(name='a64multi', flags='V....D', description='Multicolor charset for Commodore 64 (codec a64_multi)', options=()),
    FFMpegCodec(name='a64multi5', flags='V....D', description='Multicolor charset for Commodore 64, extended with 5th color (colram) (codec a64_multi5)', options=()),
    FFMpegCodec(name='alias_pix', flags='V....D', description='Alias/Wavefront PIX image', options=()),
    FFMpegCodec(name='amv', flags='V.....', description='AMV Video', options=()),
    FFMpegCodec(name='apng', flags='V....D', description='APNG (Animated Portable Network Graphics) image', options=()),
    FFMpegCodec(name='asv1', flags='V....D', description='ASUS V1', options=()),
    FFMpegCodec(name='asv2', flags='V....D', description='ASUS V2', options=()),
    FFMpegCodec(name='librav1e', flags='V....D', description='librav1e AV1 (codec av1)', options=()),
    FFMpegCodec(name='libsvtav1', flags='V.....', description='SVT-AV1(Scalable Video Technology for AV1) encoder (codec av1)', options=()),
    FFMpegCodec(name='av1_nvenc', flags='V....D', description='NVIDIA NVENC av1 encoder (codec av1)', options=()),
    FFMpegCodec(name='av1_vaapi', flags='V....D', description='AV1 (VAAPI) (codec av1)', options=()),
    FFMpegCodec(name='avrp', flags='V....D', description='Avid 1:1 10-bit RGB Packer', options=()),
    FFMpegCodec(name='avui', flags='V..X.D', description='Avid Meridien Uncompressed', options=()),
    FFMpegCodec(name='ayuv', flags='V....D', description='Uncompressed packed MS 4:4:4:4', options=()),
    FFMpegCodec(name='bitpacked', flags='VF...D', description='Bitpacked', options=()),
    FFMpegCodec(name='bmp', flags='V....D', description='BMP (Windows and OS/2 bitmap)', options=()),
    FFMpegCodec(name='cfhd', flags='VF...D', description='GoPro CineForm HD', options=()),
    FFMpegCodec(name='cinepak', flags='V....D', description='Cinepak', options=()),
    FFMpegCodec(name='cljr', flags='V....D', description='Cirrus Logic AccuPak', options=()),
    FFMpegCodec(name='vc2', flags='V.S..D', description='SMPTE VC-2 (codec dirac)', options=()),
    FFMpegCodec(name='dnxhd', flags='VFS..D', description='VC3/DNxHD', options=()),
    FFMpegCodec(name='dpx', flags='V....D', description='DPX (Digital Picture Exchange) image', options=()),
    FFMpegCodec(name='dvvideo', flags='VFS..D', description='DV (Digital Video)', options=()),
    FFMpegCodec(name='exr', flags='VF...D', description='OpenEXR image', options=()),
    FFMpegCodec(name='ffv1', flags='V.S..D', description='FFmpeg video codec #1', options=()),
    FFMpegCodec(name='ffvhuff', flags='VF...D', description='Huffyuv FFmpeg variant', options=()),
    FFMpegCodec(name='fits', flags='V....D', description='Flexible Image Transport System', options=()),
    FFMpegCodec(name='flashsv', flags='V....D', description='Flash Screen Video', options=()),
    FFMpegCodec(name='flashsv2', flags='V....D', description='Flash Screen Video Version 2', options=()),
    FFMpegCodec(name='flv', flags='V.....', description='FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (codec flv1)', options=()),
    FFMpegCodec(name='gif', flags='V....D', description='GIF (Graphics Interchange Format)', options=()),
    FFMpegCodec(name='h261', flags='V.....', description='H.261', options=()),
    FFMpegCodec(name='h263', flags='V.....', description='H.263 / H.263-1996', options=()),
    FFMpegCodec(name='h263_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.263 encoder wrapper (codec h263)', options=()),
    FFMpegCodec(name='h263p', flags='V.S...', description='H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegCodec(name='libx264', flags='V....D', description='libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (codec h264)', options=()),
    FFMpegCodec(name='libx264rgb', flags='V....D', description='libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 RGB (codec h264)', options=()),
    FFMpegCodec(name='h264_nvenc', flags='V....D', description='NVIDIA NVENC H.264 encoder (codec h264)', options=()),
    FFMpegCodec(name='h264_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.264 encoder wrapper (codec h264)', options=()),
    FFMpegCodec(name='h264_vaapi', flags='V....D', description='H.264/AVC (VAAPI) (codec h264)', options=()),
    FFMpegCodec(name='hap', flags='V.S..D', description='Vidvox Hap', options=()),
    FFMpegCodec(name='hdr', flags='VF...D', description='HDR (Radiance RGBE format) image', options=()),
    FFMpegCodec(name='libx265', flags='V....D', description='libx265 H.265 / HEVC (codec hevc)', options=()),
    FFMpegCodec(name='hevc_nvenc', flags='V....D', description='NVIDIA NVENC hevc encoder (codec hevc)', options=()),
    FFMpegCodec(name='hevc_v4l2m2m', flags='V.....', description='V4L2 mem2mem HEVC encoder wrapper (codec hevc)', options=()),
    FFMpegCodec(name='hevc_vaapi', flags='V....D', description='H.265/HEVC (VAAPI) (codec hevc)', options=()),
    FFMpegCodec(name='huffyuv', flags='VF...D', description='Huffyuv / HuffYUV', options=()),
    FFMpegCodec(name='jpeg2000', flags='VF...D', description='JPEG 2000', options=()),
    FFMpegCodec(name='libopenjpeg', flags='VF....', description='OpenJPEG JPEG 2000 (codec jpeg2000)', options=()),
    FFMpegCodec(name='jpegls', flags='VF...D', description='JPEG-LS', options=()),
    FFMpegCodec(name='libjxl', flags='V.....', description='libjxl JPEG XL (codec jpegxl)', options=()),
    FFMpegCodec(name='ljpeg', flags='VF...D', description='Lossless JPEG', options=()),
    FFMpegCodec(name='magicyuv', flags='VFS..D', description='MagicYUV video', options=()),
    FFMpegCodec(name='mjpeg', flags='VFS...', description='MJPEG (Motion JPEG)', options=()),
    FFMpegCodec(name='mjpeg_vaapi', flags='V....D', description='MJPEG (VAAPI) (codec mjpeg)', options=()),
    FFMpegCodec(name='mpeg1video', flags='V.S...', description='MPEG-1 video', options=()),
    FFMpegCodec(name='mpeg2video', flags='V.S...', description='MPEG-2 video', options=()),
    FFMpegCodec(name='mpeg2_vaapi', flags='V....D', description='MPEG-2 (VAAPI) (codec mpeg2video)', options=()),
    FFMpegCodec(name='mpeg4', flags='V.S...', description='MPEG-4 part 2', options=()),
    FFMpegCodec(name='libxvid', flags='V....D', description='libxvidcore MPEG-4 part 2 (codec mpeg4)', options=()),
    FFMpegCodec(name='mpeg4_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG4 encoder wrapper (codec mpeg4)', options=()),
    FFMpegCodec(name='msmpeg4v2', flags='V.....', description='MPEG-4 part 2 Microsoft variant version 2', options=()),
    FFMpegCodec(name='msmpeg4', flags='V.....', description='MPEG-4 part 2 Microsoft variant version 3 (codec msmpeg4v3)', options=()),
    FFMpegCodec(name='msrle', flags='V....D', description='Microsoft RLE', options=()),
    FFMpegCodec(name='msvideo1', flags='V.....', description='Microsoft Video-1', options=()),
    FFMpegCodec(name='pam', flags='V....D', description='PAM (Portable AnyMap) image', options=()),
    FFMpegCodec(name='pbm', flags='V....D', description='PBM (Portable BitMap) image', options=()),
    FFMpegCodec(name='pcx', flags='V....D', description='PC Paintbrush PCX image', options=()),
    FFMpegCodec(name='pfm', flags='V....D', description='PFM (Portable FloatMap) image', options=()),
    FFMpegCodec(name='pgm', flags='V....D', description='PGM (Portable GrayMap) image', options=()),
    FFMpegCodec(name='pgmyuv', flags='V....D', description='PGMYUV (Portable GrayMap YUV) image', options=()),
    FFMpegCodec(name='phm', flags='V....D', description='PHM (Portable HalfFloatMap) image', options=()),
    FFMpegCodec(name='png', flags='VF...D', description='PNG (Portable Network Graphics) image', options=()),
    FFMpegCodec(name='ppm', flags='V....D', description='PPM (Portable PixelMap) image', options=()),
    FFMpegCodec(name='prores', flags='VF...D', description='Apple ProRes', options=()),
    FFMpegCodec(name='prores_aw', flags='VF...D', description='Apple ProRes (codec prores)', options=()),
    FFMpegCodec(name='prores_ks', flags='VFS...', description='Apple ProRes (iCodec Pro) (codec prores)', options=()),
    FFMpegCodec(name='qoi', flags='VF...D', description='QOI (Quite OK Image format) image', options=()),
    FFMpegCodec(name='qtrle', flags='V....D', description='QuickTime Animation (RLE) video', options=()),
    FFMpegCodec(name='r10k', flags='V....D', description='AJA Kona 10-bit RGB Codec', options=()),
    FFMpegCodec(name='r210', flags='V....D', description='Uncompressed RGB 10-bit', options=()),
    FFMpegCodec(name='rawvideo', flags='VF...D', description='raw video', options=()),
    FFMpegCodec(name='roqvideo', flags='V....D', description='id RoQ video (codec roq)', options=()),
    FFMpegCodec(name='rpza', flags='V....D', description='QuickTime video (RPZA)', options=()),
    FFMpegCodec(name='rv10', flags='V.....', description='RealVideo 1.0', options=()),
    FFMpegCodec(name='rv20', flags='V.....', description='RealVideo 2.0', options=()),
    FFMpegCodec(name='sgi', flags='V....D', description='SGI image', options=()),
    FFMpegCodec(name='smc', flags='V....D', description='QuickTime Graphics (SMC)', options=()),
    FFMpegCodec(name='snow', flags='V....D', description='Snow', options=()),
    FFMpegCodec(name='speedhq', flags='V.....', description='NewTek SpeedHQ', options=()),
    FFMpegCodec(name='sunrast', flags='V....D', description='Sun Rasterfile image', options=()),
    FFMpegCodec(name='svq1', flags='V....D', description='Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1', options=()),
    FFMpegCodec(name='targa', flags='V....D', description='Truevision Targa image', options=()),
    FFMpegCodec(name='libtheora', flags='V....D', description='libtheora Theora (codec theora)', options=()),
    FFMpegCodec(name='tiff', flags='VF...D', description='TIFF image', options=()),
    FFMpegCodec(name='utvideo', flags='VF...D', description='Ut Video', options=()),
    FFMpegCodec(name='v210', flags='VF...D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v308', flags='V....D', description='Uncompressed packed 4:4:4', options=()),
    FFMpegCodec(name='v408', flags='V....D', description='Uncompressed packed QT 4:4:4:4', options=()),
    FFMpegCodec(name='v410', flags='V....D', description='Uncompressed 4:4:4 10-bit', options=()),
    FFMpegCodec(name='vbn', flags='V.S..D', description='Vizrt Binary Image', options=()),
    FFMpegCodec(name='vnull', flags='V.....', description='null video', options=()),
    FFMpegCodec(name='libvpx', flags='V....D', description='libvpx VP8 (codec vp8)', options=()),
    FFMpegCodec(name='vp8_v4l2m2m', flags='V.....', description='V4L2 mem2mem VP8 encoder wrapper (codec vp8)', options=()),
    FFMpegCodec(name='vp8_vaapi', flags='V....D', description='VP8 (VAAPI) (codec vp8)', options=()),
    FFMpegCodec(name='vp9_vaapi', flags='V....D', description='VP9 (VAAPI) (codec vp9)', options=()),
    FFMpegCodec(name='wbmp', flags='VF...D', description='WBMP (Wireless Application Protocol Bitmap) image', options=()),
    FFMpegCodec(name='libwebp_anim', flags='V....D', description='libwebp WebP image (codec webp)', options=()),
    FFMpegCodec(name='libwebp', flags='V....D', description='libwebp WebP image (codec webp)', options=()),
    FFMpegCodec(name='wmv1', flags='V.....', description='Windows Media Video 7', options=()),
    FFMpegCodec(name='wmv2', flags='V.....', description='Windows Media Video 8', options=()),
    FFMpegCodec(name='wrapped_avframe', flags='V.....', description='AVFrame to AVPacket passthrough', options=()),
    FFMpegCodec(name='xbm', flags='V....D', description='XBM (X BitMap) image', options=()),
    FFMpegCodec(name='xface', flags='V....D', description='X-face image', options=()),
    FFMpegCodec(name='xwd', flags='V....D', description='XWD (X Window Dump) image', options=()),
    FFMpegCodec(name='y41p', flags='V....D', description='Uncompressed YUV 4:1:1 12-bit', options=()),
    FFMpegCodec(name='yuv4', flags='V....D', description='Uncompressed packed 4:2:0', options=()),
    FFMpegCodec(name='zlib', flags='VF...D', description='LCL (LossLess Codec Library) ZLIB', options=()),
    FFMpegCodec(name='zmbv', flags='V....D', description='Zip Motion Blocks Video', options=()),
    FFMpegCodec(name='aac', flags='A....D', description='AAC (Advanced Audio Coding)', options=()),
    FFMpegCodec(name='ac3', flags='A....D', description='ATSC A/52A (AC-3)', options=()),
    FFMpegCodec(name='ac3_fixed', flags='A....D', description='ATSC A/52A (AC-3) (codec ac3)', options=()),
    FFMpegCodec(name='adpcm_adx', flags='A....D', description='SEGA CRI ADX ADPCM', options=()),
    FFMpegCodec(name='adpcm_argo', flags='A....D', description='ADPCM Argonaut Games', options=()),
    FFMpegCodec(name='g722', flags='A....D', description='G.722 ADPCM (codec adpcm_g722)', options=()),
    FFMpegCodec(name='g726', flags='A....D', description='G.726 ADPCM (codec adpcm_g726)', options=()),
    FFMpegCodec(name='g726le', flags='A....D', description='G.726 little endian ADPCM ("right-justified") (codec adpcm_g726le)', options=()),
    FFMpegCodec(name='adpcm_ima_alp', flags='A....D', description='ADPCM IMA High Voltage Software ALP', options=()),
    FFMpegCodec(name='adpcm_ima_amv', flags='A....D', description='ADPCM IMA AMV', options=()),
    FFMpegCodec(name='adpcm_ima_apm', flags='A....D', description='ADPCM IMA Ubisoft APM', options=()),
    FFMpegCodec(name='adpcm_ima_qt', flags='A....D', description='ADPCM IMA QuickTime', options=()),
    FFMpegCodec(name='adpcm_ima_ssi', flags='A....D', description='ADPCM IMA Simon & Schuster Interactive', options=()),
    FFMpegCodec(name='adpcm_ima_wav', flags='A....D', description='ADPCM IMA WAV', options=()),
    FFMpegCodec(name='adpcm_ima_ws', flags='A....D', description='ADPCM IMA Westwood', options=()),
    FFMpegCodec(name='adpcm_ms', flags='A....D', description='ADPCM Microsoft', options=()),
    FFMpegCodec(name='adpcm_swf', flags='A....D', description='ADPCM Shockwave Flash', options=()),
    FFMpegCodec(name='adpcm_yamaha', flags='A....D', description='ADPCM Yamaha', options=()),
    FFMpegCodec(name='alac', flags='A....D', description='ALAC (Apple Lossless Audio Codec)', options=()),
    FFMpegCodec(name='anull', flags='A.....', description='null audio', options=()),
    FFMpegCodec(name='aptx', flags='A....D', description='aptX (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='aptx_hd', flags='A....D', description='aptX HD (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='libcodec2', flags='A....D', description='codec2 encoder using libcodec2 (codec codec2)', options=()),
    FFMpegCodec(name='comfortnoise', flags='A....D', description='RFC 3389 comfort noise generator', options=()),
    FFMpegCodec(name='dfpwm', flags='A....D', description='DFPWM1a audio', options=()),
    FFMpegCodec(name='dca', flags='A..X.D', description='DCA (DTS Coherent Acoustics) (codec dts)', options=()),
    FFMpegCodec(name='eac3', flags='A....D', description='ATSC A/52 E-AC-3', options=()),
    FFMpegCodec(name='flac', flags='A....D', description='FLAC (Free Lossless Audio Codec)', options=()),
    FFMpegCodec(name='g723_1', flags='A....D', description='G.723.1', options=()),
    FFMpegCodec(name='libgsm', flags='A....D', description='libgsm GSM (codec gsm)', options=()),
    FFMpegCodec(name='libgsm_ms', flags='A....D', description='libgsm GSM Microsoft variant (codec gsm_ms)', options=()),
    FFMpegCodec(name='mlp', flags='A..X.D', description='MLP (Meridian Lossless Packing)', options=()),
    FFMpegCodec(name='mp2', flags='A....D', description='MP2 (MPEG audio layer 2)', options=()),
    FFMpegCodec(name='mp2fixed', flags='A....D', description='MP2 fixed point (MPEG audio layer 2) (codec mp2)', options=()),
    FFMpegCodec(name='libtwolame', flags='A....D', description='libtwolame MP2 (MPEG audio layer 2) (codec mp2)', options=()),
    FFMpegCodec(name='libmp3lame', flags='A....D', description='libmp3lame MP3 (MPEG audio layer 3) (codec mp3)', options=()),
    FFMpegCodec(name='libshine', flags='A....D', description='libshine MP3 (MPEG audio layer 3) (codec mp3)', options=()),
    FFMpegCodec(name='nellymoser', flags='A....D', description='Nellymoser Asao', options=()),
    FFMpegCodec(name='opus', flags='A..X.D', description='Opus', options=()),
    FFMpegCodec(name='libopus', flags='A....D', description='libopus Opus (codec opus)', options=()),
    FFMpegCodec(name='pcm_alaw', flags='A....D', description='PCM A-law / G.711 A-law', options=()),
    FFMpegCodec(name='pcm_bluray', flags='A....D', description='PCM signed 16|20|24-bit big-endian for Blu-ray media', options=()),
    FFMpegCodec(name='pcm_dvd', flags='A....D', description='PCM signed 16|20|24-bit big-endian for DVD media', options=()),
    FFMpegCodec(name='pcm_f32be', flags='A....D', description='PCM 32-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f32le', flags='A....D', description='PCM 32-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f64be', flags='A....D', description='PCM 64-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f64le', flags='A....D', description='PCM 64-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_mulaw', flags='A....D', description='PCM mu-law / G.711 mu-law', options=()),
    FFMpegCodec(name='pcm_s16be', flags='A....D', description='PCM signed 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s16be_planar', flags='A....D', description='PCM signed 16-bit big-endian planar', options=()),
    FFMpegCodec(name='pcm_s16le', flags='A....D', description='PCM signed 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s16le_planar', flags='A....D', description='PCM signed 16-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s24be', flags='A....D', description='PCM signed 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s24daud', flags='A....D', description='PCM D-Cinema audio signed 24-bit', options=()),
    FFMpegCodec(name='pcm_s24le', flags='A....D', description='PCM signed 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s24le_planar', flags='A....D', description='PCM signed 24-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s32be', flags='A....D', description='PCM signed 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s32le', flags='A....D', description='PCM signed 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s32le_planar', flags='A....D', description='PCM signed 32-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s64be', flags='A....D', description='PCM signed 64-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s64le', flags='A....D', description='PCM signed 64-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s8', flags='A....D', description='PCM signed 8-bit', options=()),
    FFMpegCodec(name='pcm_s8_planar', flags='A....D', description='PCM signed 8-bit planar', options=()),
    FFMpegCodec(name='pcm_u16be', flags='A....D', description='PCM unsigned 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u16le', flags='A....D', description='PCM unsigned 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u24be', flags='A....D', description='PCM unsigned 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u24le', flags='A....D', description='PCM unsigned 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u32be', flags='A....D', description='PCM unsigned 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u32le', flags='A....D', description='PCM unsigned 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u8', flags='A....D', description='PCM unsigned 8-bit', options=()),
    FFMpegCodec(name='pcm_vidc', flags='A....D', description='PCM Archimedes VIDC', options=()),
    FFMpegCodec(name='real_144', flags='A....D', description='RealAudio 1.0 (14.4K) (codec ra_144)', options=()),
    FFMpegCodec(name='roq_dpcm', flags='A....D', description='id RoQ DPCM', options=()),
    FFMpegCodec(name='s302m', flags='A..X.D', description='SMPTE 302M', options=()),
    FFMpegCodec(name='sbc', flags='A....D', description='SBC (low-complexity subband codec)', options=()),
    FFMpegCodec(name='sonic', flags='A..X.D', description='Sonic', options=()),
    FFMpegCodec(name='sonicls', flags='A..X.D', description='Sonic lossless', options=()),
    FFMpegCodec(name='libspeex', flags='A....D', description='libspeex Speex (codec speex)', options=()),
    FFMpegCodec(name='truehd', flags='A..X.D', description='TrueHD', options=()),
    FFMpegCodec(name='tta', flags='A....D', description='TTA (True Audio)', options=()),
    FFMpegCodec(name='vorbis', flags='A..X.D', description='Vorbis', options=()),
    FFMpegCodec(name='libvorbis', flags='A....D', description='libvorbis (codec vorbis)', options=()),
    FFMpegCodec(name='wavpack', flags='A....D', description='WavPack', options=()),
    FFMpegCodec(name='wmav1', flags='A....D', description='Windows Media Audio 1', options=()),
    FFMpegCodec(name='wmav2', flags='A....D', description='Windows Media Audio 2', options=()),
    FFMpegCodec(name='ssa', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle (codec ass)', options=()),
    FFMpegCodec(name='ass', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle', options=()),
    FFMpegCodec(name='dvbsub', flags='S.....', description='DVB subtitles (codec dvb_subtitle)', options=()),
    FFMpegCodec(name='dvdsub', flags='S.....', description='DVD subtitles (codec dvd_subtitle)', options=()),
    FFMpegCodec(name='mov_text', flags='S.....', description='3GPP Timed Text subtitle', options=()),
    FFMpegCodec(name='srt', flags='S.....', description='SubRip subtitle (codec subrip)', options=()),
    FFMpegCodec(name='subrip', flags='S.....', description='SubRip subtitle', options=()),
    FFMpegCodec(name='text', flags='S.....', description='Raw text subtitle', options=()),
    FFMpegCodec(name='ttml', flags='S.....', description='TTML subtitle', options=()),
    FFMpegCodec(name='webvtt', flags='S.....', description='WebVTT subtitle', options=()),
    FFMpegCodec(name='xsub', flags='S.....', description='DivX subtitles (XSUB)', options=()),
  ])
# ---
