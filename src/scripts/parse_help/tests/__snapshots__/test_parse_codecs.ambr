# serializer version: 1
# name: test_parse_codec_option[h263-decoder]
  list([
  ])
# ---
# name: test_parse_codec_option[h263-encoder]
  list([
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='obmc', type='boolean', flags='E..V.......', help='use overlapped block motion compensation. (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='mb_info', type='int', flags='E..V.......', help='emit macroblock info for RFC 2190 packetization, the parameter value is the maximum payload size (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='mpv_flags', type='flags', flags='E..V.......', help='Flags common for all mpegvideo-based encoders. (default 0)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='skip_rd', help='RD optimal MB level residual skipping', flags='E..V.......', value='skip_rd'), FFMpegOptionChoice(name='strict_gop', help='Strictly enforce gop size', flags='E..V.......', value='strict_gop'), FFMpegOptionChoice(name='qp_rd', help='Use rate distortion optimization for qp selection', flags='E..V.......', value='qp_rd'), FFMpegOptionChoice(name='cbp_rd', help='use rate distortion optimization for CBP', flags='E..V.......', value='cbp_rd'), FFMpegOptionChoice(name='naq', help='normalize adaptive quantization', flags='E..V.......', value='naq'), FFMpegOptionChoice(name='mv0', help='always try a mb with mv=<0,0>', flags='E..V.......', value='mv0'))),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='luma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for luminance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='chroma_elim_threshold', type='int', flags='E..V.......', help='single coefficient elimination threshold for chrominance (negative values also consider dc coefficient) (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='quantizer_noise_shaping', type='int', flags='E..V.......', help='(from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='error_rate', type='int', flags='E..V.......', help='Simulate errors in the bitstream to test error concealment. (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='qsquish', type='float', flags='E..V.......', help='how to keep quantizer between qmin and qmax (0 = clip, 1 = use differentiable function) (from 0 to 99) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_qmod_amp', type='float', flags='E..V.......', help='experimental quantizer modulation (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_qmod_freq', type='int', flags='E..V.......', help='experimental quantizer modulation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_eq', type='string', flags='E..V.......', help="Set rate control equation. When computing the expression, besides the standard functions defined in the section 'Expression Evaluation', the following functions are available: bits2qp(bits), qp2bits(qp). Also the following constants are available: iTex pTex tex mv fCode iCount mcVar var isI isP isB avgQP qComp avgIITex avgPITex avgPPTex avgBPTex avgTex.", min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_init_cplx', type='float', flags='E..V.......', help='initial complexity for 1-pass encoding (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='rc_buf_aggressivity', type='float', flags='E..V.......', help='currently useless (from -FLT_MAX to FLT_MAX) (default 1)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='border_mask', type='float', flags='E..V.......', help='increase the quantizer for macroblocks close to borders (from -FLT_MAX to FLT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='lmin', type='int', flags='E..V.......', help='minimum Lagrange factor (VBR) (from 0 to INT_MAX) (default 236)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='lmax', type='int', flags='E..V.......', help='maximum Lagrange factor (VBR) (from 0 to INT_MAX) (default 3658)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_threshold', type='int', flags='E..V.......', help='Frame skip threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_factor', type='int', flags='E..V.......', help='Frame skip factor (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_exp', type='int', flags='E..V.......', help='Frame skip exponent (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='skip_cmp', type='int', flags='E..V.......', help='Frame skip compare function (from INT_MIN to INT_MAX) (default dctmax)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='sad', help='Sum of absolute differences, fast', flags='E..V.......', value='0'), FFMpegOptionChoice(name='sse', help='Sum of squared errors', flags='E..V.......', value='1'), FFMpegOptionChoice(name='satd', help='Sum of absolute Hadamard transformed differences', flags='E..V.......', value='2'), FFMpegOptionChoice(name='dct', help='Sum of absolute DCT transformed differences', flags='E..V.......', value='3'), FFMpegOptionChoice(name='psnr', help='Sum of squared quantization errors, low quality', flags='E..V.......', value='4'), FFMpegOptionChoice(name='bit', help='Number of bits needed for the block', flags='E..V.......', value='5'), FFMpegOptionChoice(name='rd', help='Rate distortion optimal, slow', flags='E..V.......', value='6'), FFMpegOptionChoice(name='zero', help='Zero', flags='E..V.......', value='7'), FFMpegOptionChoice(name='vsad', help='Sum of absolute vertical differences', flags='E..V.......', value='8'), FFMpegOptionChoice(name='vsse', help='Sum of squared vertical differences', flags='E..V.......', value='9'), FFMpegOptionChoice(name='nsse', help='Noise preserving sum of squared differences', flags='E..V.......', value='10'), FFMpegOptionChoice(name='dct264', help='', flags='E..V.......', value='14'), FFMpegOptionChoice(name='dctmax', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='chroma', help='', flags='E..V.......', value='256'), FFMpegOptionChoice(name='msad', help='Sum of absolute differences, median predicted', flags='E..V.......', value='15'))),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='sc_threshold', type='int', flags='E..V.......', help='Scene change threshold (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='noise_reduction', type='int', flags='E..V.......', help='Noise reduction (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='ps', type='int', flags='E..V.......', help='RTP payload size in bytes (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='motion_est', type='int', flags='E..V.......', help='motion estimation algorithm (from 0 to 2) (default epzs)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='zero', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='epzs', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='xone', help='', flags='E..V.......', value='2'))),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='mepc', type='int', flags='E..V.......', help='Motion estimation bitrate penalty compensation (1.0 = 256) (from INT_MIN to INT_MAX) (default 256)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='mepre', type='int', flags='E..V.......', help='pre motion estimation (from INT_MIN to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='H.263 encoder AVOptions:', name='intra_penalty', type='int', flags='E..V.......', help='Penalty for intra blocks in block decision (from 0 to 1.07374e+09) (default 0)', min=None, max=None, default=None, choices=()),
  ])
# ---
# name: test_parse_codec_option[h264_nvenc-encoder]
  list([
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='preset', type='int', flags='E..V.......', help='Set the encoding preset (from 0 to 18) (default p4)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='slow', help='hq 2 passes', flags='E..V.......', value='1'), FFMpegOptionChoice(name='medium', help='hq 1 pass', flags='E..V.......', value='2'), FFMpegOptionChoice(name='fast', help='hp 1 pass', flags='E..V.......', value='3'), FFMpegOptionChoice(name='hp', help='', flags='E..V.......', value='4'), FFMpegOptionChoice(name='hq', help='', flags='E..V.......', value='5'), FFMpegOptionChoice(name='bd', help='', flags='E..V.......', value='6'), FFMpegOptionChoice(name='ll', help='low latency', flags='E..V.......', value='7'), FFMpegOptionChoice(name='llhq', help='low latency hq', flags='E..V.......', value='8'), FFMpegOptionChoice(name='llhp', help='low latency hp', flags='E..V.......', value='9'), FFMpegOptionChoice(name='lossless', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='losslesshp', help='', flags='E..V.......', value='11'), FFMpegOptionChoice(name='p1', help='fastest (lowest quality)', flags='E..V.......', value='12'), FFMpegOptionChoice(name='p2', help='faster (lower quality)', flags='E..V.......', value='13'), FFMpegOptionChoice(name='p3', help='fast (low quality)', flags='E..V.......', value='14'), FFMpegOptionChoice(name='p4', help='medium (default)', flags='E..V.......', value='15'), FFMpegOptionChoice(name='p5', help='slow (good quality)', flags='E..V.......', value='16'), FFMpegOptionChoice(name='p6', help='slower (better quality)', flags='E..V.......', value='17'), FFMpegOptionChoice(name='p7', help='slowest (best quality)', flags='E..V.......', value='18'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='tune', type='int', flags='E..V.......', help='Set the encoding tuning info (from 1 to 4) (default hq)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='hq', help='High quality', flags='E..V.......', value='1'), FFMpegOptionChoice(name='ll', help='Low latency', flags='E..V.......', value='2'), FFMpegOptionChoice(name='ull', help='Ultra low latency', flags='E..V.......', value='3'), FFMpegOptionChoice(name='lossless', help='Lossless', flags='E..V.......', value='4'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='profile', type='int', flags='E..V.......', help='Set the encoding profile (from 0 to 3) (default main)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='baseline', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='main', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='high', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='high444p', help='', flags='E..V.......', value='3'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='level', type='int', flags='E..V.......', help='Set the encoding level restriction (from 0 to 62) (default auto)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='10'), FFMpegOptionChoice(name='1b', help='', flags='E..V.......', value='9'), FFMpegOptionChoice(name='0b', help='', flags='E..V.......', value='9'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='11'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='12'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='13'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='20'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='20'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='21'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='22'), FFMpegOptionChoice(name='3', help='', flags='E..V.......', value='30'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='30'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='31'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='32'), FFMpegOptionChoice(name='4', help='', flags='E..V.......', value='40'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='40'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='41'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='42'), FFMpegOptionChoice(name='5', help='', flags='E..V.......', value='50'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='50'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='51'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='52'), FFMpegOptionChoice(name='0', help='', flags='E..V.......', value='60'), FFMpegOptionChoice(name='1', help='', flags='E..V.......', value='61'), FFMpegOptionChoice(name='2', help='', flags='E..V.......', value='62'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='rc', type='int', flags='E..V.......', help='Override the preset rate-control (from -1 to INT_MAX) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='constqp', help='Constant QP mode', flags='E..V.......', value='0'), FFMpegOptionChoice(name='vbr', help='Variable bitrate mode', flags='E..V.......', value='1'), FFMpegOptionChoice(name='cbr', help='Constant bitrate mode', flags='E..V.......', value='2'), FFMpegOptionChoice(name='vbr_minqp', help='Variable bitrate mode with MinQP (deprecated)', flags='E..V.......', value='8388609'), FFMpegOptionChoice(name='ll_2pass_quality', help='Multi-pass optimized for image quality (deprecated)', flags='E..V.......', value='8388609'), FFMpegOptionChoice(name='ll_2pass_size', help='Multi-pass optimized for constant frame size (deprecated)', flags='E..V.......', value='8388610'), FFMpegOptionChoice(name='vbr_2pass', help='Multi-pass variable bitrate mode (deprecated)', flags='E..V.......', value='8388609'), FFMpegOptionChoice(name='cbr_ld_hq', help='Constant bitrate low delay high quality mode', flags='E..V.......', value='8388610'), FFMpegOptionChoice(name='cbr_hq', help='Constant bitrate high quality mode', flags='E..V.......', value='8388610'), FFMpegOptionChoice(name='vbr_hq', help='Variable bitrate high quality mode', flags='E..V.......', value='8388609'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='rc-lookahead', type='int', flags='E..V.......', help='Number of frames to look ahead for rate-control (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='surfaces', type='int', flags='E..V.......', help='Number of concurrent surfaces (from 0 to 64) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='cbr', type='boolean', flags='E..V.......', help='Use cbr encoding mode (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='2pass', type='boolean', flags='E..V.......', help='Use 2pass encoding mode (default auto)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='gpu', type='int', flags='E..V.......', help='Selects which NVENC capable GPU to use. First GPU is 0, second is 1, and so on. (from -2 to INT_MAX) (default any)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='any', help='Pick the first device available', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='list', help='List the available devices', flags='E..V.......', value='-2'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='rgb_mode', type='int', flags='E..V.......', help='Configure how nvenc handles packed RGB input. (from 0 to INT_MAX) (default yuv420)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='yuv420', help='Convert to yuv420', flags='E..V.......', value='1'), FFMpegOptionChoice(name='yuv444', help='Convert to yuv444', flags='E..V.......', value='2'), FFMpegOptionChoice(name='disabled', help='Disables support, throws an error.', flags='E..V.......', value='0'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='delay', type='int', flags='E..V.......', help='Delay frame output by the given amount of frames (from 0 to INT_MAX) (default INT_MAX)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='no-scenecut', type='boolean', flags='E..V.......', help='When lookahead is enabled, set this to 1 to disable adaptive I-frame insertion at scene cuts (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='forced-idr', type='boolean', flags='E..V.......', help='If forcing keyframes, force them as IDR frames. (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='b_adapt', type='boolean', flags='E..V.......', help='When lookahead is enabled, set this to 0 to disable adaptive B-frame decision (default true)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='spatial-aq', type='boolean', flags='E..V.......', help='set to 1 to enable Spatial AQ (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='spatial_aq', type='boolean', flags='E..V.......', help='set to 1 to enable Spatial AQ (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='temporal-aq', type='boolean', flags='E..V.......', help='set to 1 to enable Temporal AQ (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='temporal_aq', type='boolean', flags='E..V.......', help='set to 1 to enable Temporal AQ (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='zerolatency', type='boolean', flags='E..V.......', help='Set 1 to indicate zero latency operation (no reordering delay) (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='nonref_p', type='boolean', flags='E..V.......', help='Set this to 1 to enable automatic insertion of non-reference P-frames (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='strict_gop', type='boolean', flags='E..V.......', help='Set 1 to minimize GOP-to-GOP rate fluctuations (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='aq-strength', type='int', flags='E..V.......', help='When Spatial AQ is enabled, this field is used to specify AQ strength. AQ strength scale is from 1 (low) - 15 (aggressive) (from 1 to 15) (default 8)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='cq', type='float', flags='E..V.......', help='Set target quality level (0 to 51, 0 means automatic) for constant quality mode in VBR rate control (from 0 to 51) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='aud', type='boolean', flags='E..V.......', help='Use access unit delimiters (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='bluray-compat', type='boolean', flags='E..V.......', help='Bluray compatibility workarounds (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='init_qpP', type='int', flags='E..V.......', help='Initial QP value for P frame (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='init_qpB', type='int', flags='E..V.......', help='Initial QP value for B frame (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='init_qpI', type='int', flags='E..V.......', help='Initial QP value for I frame (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='qp', type='int', flags='E..V.......', help='Constant quantization parameter rate control method (from -1 to 51) (default -1)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='qp_cb_offset', type='int', flags='E..V.......', help='Quantization parameter offset for cb channel (from -12 to 12) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='qp_cr_offset', type='int', flags='E..V.......', help='Quantization parameter offset for cr channel (from -12 to 12) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='weighted_pred', type='int', flags='E..V.......', help='Set 1 to enable weighted prediction (from 0 to 1) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='coder', type='int', flags='E..V.......', help='Coder type (from -1 to 2) (default default)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='default', help='', flags='E..V.......', value='-1'), FFMpegOptionChoice(name='auto', help='', flags='E..V.......', value='0'), FFMpegOptionChoice(name='cabac', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='cavlc', help='', flags='E..V.......', value='2'), FFMpegOptionChoice(name='ac', help='', flags='E..V.......', value='1'), FFMpegOptionChoice(name='vlc', help='', flags='E..V.......', value='2'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='b_ref_mode', type='int', flags='E..V.......', help='Use B frames as references (from -1 to 2) (default -1)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='disabled', help='B frames will not be used for reference', flags='E..V.......', value='0'), FFMpegOptionChoice(name='each', help='Each B frame will be used for reference', flags='E..V.......', value='1'), FFMpegOptionChoice(name='middle', help='Only (number of B frames)/2 will be used for reference', flags='E..V.......', value='2'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='a53cc', type='boolean', flags='E..V.......', help='Use A53 Closed Captions (if available) (default true)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='dpb_size', type='int', flags='E..V.......', help='Specifies the DPB size used for encoding (0 means automatic) (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='multipass', type='int', flags='E..V.......', help='Set the multipass encoding (from 0 to 2) (default disabled)', min=None, max=None, default=None, choices=(FFMpegOptionChoice(name='disabled', help='Single Pass', flags='E..V.......', value='0'), FFMpegOptionChoice(name='qres', help='Two Pass encoding is enabled where first Pass is quarter resolution', flags='E..V.......', value='1'), FFMpegOptionChoice(name='fullres', help='Two Pass encoding is enabled where first Pass is full resolution', flags='E..V.......', value='2'))),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='ldkfs', type='int', flags='E..V.......', help='Low delay key frame scale; Specifies the Scene Change frame size increase allowed in case of single frame VBV and CBR (from 0 to 255) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='extra_sei', type='boolean', flags='E..V.......', help='Pass on extra SEI data (e.g. a53 cc) to be included in the bitstream (default true)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='udu_sei', type='boolean', flags='E..V.......', help='Pass on user data unregistered SEI if available (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='intra-refresh', type='boolean', flags='E..V.......', help='Use Periodic Intra Refresh instead of IDR frames (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='single-slice-intra-refresh', type='boolean', flags='E..V.......', help='Use single slice intra refresh (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='max_slice_size', type='int', flags='E..V.......', help='Maximum encoded slice size in bytes (from 0 to INT_MAX) (default 0)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='h264_nvenc AVOptions:', name='constrained-encoding', type='boolean', flags='E..V.......', help='Enable constrainedFrame encoding where each slice in the constrained picture is independent of other slices (default false)', min=None, max=None, default=None, choices=()),
  ])
# ---
# name: test_parse_codec_option[tiff-decoder]
  list([
    FFMpegAVOption(section='TIFF decoder AVOptions:', name='subimage', type='boolean', flags='.D.V.......', help='decode subimage instead if available (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='TIFF decoder AVOptions:', name='thumbnail', type='boolean', flags='.D.V.......', help='decode embedded thumbnail subimage instead if available (default false)', min=None, max=None, default=None, choices=()),
    FFMpegAVOption(section='TIFF decoder AVOptions:', name='page', type='int', flags='.D.V.......', help='page number of multi-page image to decode (starting from 1) (from 0 to 65535) (default 0)', min=None, max=None, default=None, choices=()),
  ])
# ---
# name: test_parse_codecs_help_text[codecs]
  list([
    FFMpegCodec(name='012v', flags='D.VI.S', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='4xm', flags='D.V.L.', description='4X Movie', options=()),
    FFMpegCodec(name='8bps', flags='D.VI.S', description='QuickTime 8BPS video', options=()),
    FFMpegCodec(name='a64_multi', flags='.EVIL.', description='Multicolor charset for Commodore 64 (encoders: a64multi)', options=()),
    FFMpegCodec(name='a64_multi5', flags='.EVIL.', description='Multicolor charset for Commodore 64, extended with 5th color (colram) (encoders: a64multi5)', options=()),
    FFMpegCodec(name='aasc', flags='D.V..S', description='Autodesk RLE', options=()),
    FFMpegCodec(name='agm', flags='D.V.L.', description='Amuse Graphics Movie', options=()),
    FFMpegCodec(name='aic', flags='D.VIL.', description='Apple Intermediate Codec', options=()),
    FFMpegCodec(name='alias_pix', flags='DEVI.S', description='Alias/Wavefront PIX image', options=()),
    FFMpegCodec(name='amv', flags='DEVIL.', description='AMV Video', options=()),
    FFMpegCodec(name='anm', flags='D.V.L.', description='Deluxe Paint Animation', options=()),
    FFMpegCodec(name='ansi', flags='D.V.L.', description='ASCII/ANSI art', options=()),
    FFMpegCodec(name='apng', flags='DEV..S', description='APNG (Animated Portable Network Graphics) image', options=()),
    FFMpegCodec(name='arbc', flags='D.V.L.', description="Gryphon's Anim Compressor", options=()),
    FFMpegCodec(name='argo', flags='D.V.L.', description='Argonaut Games Video', options=()),
    FFMpegCodec(name='asv1', flags='DEVIL.', description='ASUS V1', options=()),
    FFMpegCodec(name='asv2', flags='DEVIL.', description='ASUS V2', options=()),
    FFMpegCodec(name='aura', flags='D.VIL.', description='Auravision AURA', options=()),
    FFMpegCodec(name='aura2', flags='D.VIL.', description='Auravision Aura 2', options=()),
    FFMpegCodec(name='av1', flags='DEV.L.', description='Alliance for Open Media AV1 (decoders: libdav1d libaom-av1 av1 av1_cuvid) (encoders: libaom-av1 librav1e libsvtav1 av1_nvenc av1_vaapi)', options=()),
    FFMpegCodec(name='avrn', flags='D.V...', description='Avid AVI Codec', options=()),
    FFMpegCodec(name='avrp', flags='DEVI.S', description='Avid 1:1 10-bit RGB Packer', options=()),
    FFMpegCodec(name='avs', flags='D.V.L.', description='AVS (Audio Video Standard) video', options=()),
    FFMpegCodec(name='avs2', flags='..V.L.', description='AVS2-P2/IEEE1857.4', options=()),
    FFMpegCodec(name='avs3', flags='..V.L.', description='AVS3-P2/IEEE1857.10', options=()),
    FFMpegCodec(name='avui', flags='DEVI.S', description='Avid Meridien Uncompressed', options=()),
    FFMpegCodec(name='ayuv', flags='DEVI.S', description='Uncompressed packed MS 4:4:4:4', options=()),
    FFMpegCodec(name='bethsoftvid', flags='D.V.L.', description='Bethesda VID video', options=()),
    FFMpegCodec(name='bfi', flags='D.V.L.', description='Brute Force & Ignorance', options=()),
    FFMpegCodec(name='binkvideo', flags='D.V.L.', description='Bink video', options=()),
    FFMpegCodec(name='bintext', flags='D.VI..', description='Binary text', options=()),
    FFMpegCodec(name='bitpacked', flags='DEVI.S', description='Bitpacked', options=()),
    FFMpegCodec(name='bmp', flags='DEVI.S', description='BMP (Windows and OS/2 bitmap)', options=()),
    FFMpegCodec(name='bmv_video', flags='D.V..S', description='Discworld II BMV video', options=()),
    FFMpegCodec(name='brender_pix', flags='D.VI.S', description='BRender PIX image', options=()),
    FFMpegCodec(name='c93', flags='D.V.L.', description='Interplay C93', options=()),
    FFMpegCodec(name='cavs', flags='D.V.L.', description='Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)', options=()),
    FFMpegCodec(name='cdgraphics', flags='D.V.L.', description='CD Graphics video', options=()),
    FFMpegCodec(name='cdtoons', flags='D.V..S', description='CDToons video', options=()),
    FFMpegCodec(name='cdxl', flags='D.VIL.', description='Commodore CDXL video', options=()),
    FFMpegCodec(name='cfhd', flags='DEV.L.', description='GoPro CineForm HD', options=()),
    FFMpegCodec(name='cinepak', flags='DEV.L.', description='Cinepak', options=()),
    FFMpegCodec(name='clearvideo', flags='D.V.L.', description='Iterated Systems ClearVideo', options=()),
    FFMpegCodec(name='cljr', flags='DEVIL.', description='Cirrus Logic AccuPak', options=()),
    FFMpegCodec(name='cllc', flags='D.VI.S', description='Canopus Lossless Codec', options=()),
    FFMpegCodec(name='cmv', flags='D.V.L.', description='Electronic Arts CMV video (decoders: eacmv)', options=()),
    FFMpegCodec(name='cpia', flags='D.V...', description='CPiA video format', options=()),
    FFMpegCodec(name='cri', flags='D.VILS', description='Cintel RAW', options=()),
    FFMpegCodec(name='cscd', flags='D.V..S', description='CamStudio (decoders: camstudio)', options=()),
    FFMpegCodec(name='cyuv', flags='D.VIL.', description='Creative YUV (CYUV)', options=()),
    FFMpegCodec(name='daala', flags='..V.LS', description='Daala', options=()),
    FFMpegCodec(name='dds', flags='D.VILS', description='DirectDraw Surface image decoder', options=()),
    FFMpegCodec(name='dfa', flags='D.V.L.', description='Chronomaster DFA', options=()),
    FFMpegCodec(name='dirac', flags='DEV.LS', description='Dirac (encoders: vc2)', options=()),
    FFMpegCodec(name='dnxhd', flags='DEVIL.', description='VC3/DNxHD', options=()),
    FFMpegCodec(name='dpx', flags='DEVI.S', description='DPX (Digital Picture Exchange) image', options=()),
    FFMpegCodec(name='dsicinvideo', flags='D.V.L.', description='Delphine Software International CIN video', options=()),
    FFMpegCodec(name='dvvideo', flags='DEVIL.', description='DV (Digital Video)', options=()),
    FFMpegCodec(name='dxa', flags='D.V..S', description='Feeble Files/ScummVM DXA', options=()),
    FFMpegCodec(name='dxtory', flags='D.VI.S', description='Dxtory', options=()),
    FFMpegCodec(name='dxv', flags='D.VIL.', description='Resolume DXV', options=()),
    FFMpegCodec(name='escape124', flags='D.V.L.', description='Escape 124', options=()),
    FFMpegCodec(name='escape130', flags='D.V.L.', description='Escape 130', options=()),
    FFMpegCodec(name='evc', flags='..V.L.', description='MPEG-5 EVC (Essential Video Coding)', options=()),
    FFMpegCodec(name='exr', flags='DEVILS', description='OpenEXR image', options=()),
    FFMpegCodec(name='ffv1', flags='DEV..S', description='FFmpeg video codec #1', options=()),
    FFMpegCodec(name='ffvhuff', flags='DEVI.S', description='Huffyuv FFmpeg variant', options=()),
    FFMpegCodec(name='fic', flags='D.V.L.', description='Mirillis FIC', options=()),
    FFMpegCodec(name='fits', flags='DEVI.S', description='FITS (Flexible Image Transport System)', options=()),
    FFMpegCodec(name='flashsv', flags='DEV..S', description='Flash Screen Video v1', options=()),
    FFMpegCodec(name='flashsv2', flags='DEV.L.', description='Flash Screen Video v2', options=()),
    FFMpegCodec(name='flic', flags='D.V..S', description='Autodesk Animator Flic video', options=()),
    FFMpegCodec(name='flv1', flags='DEV.L.', description='FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (decoders: flv) (encoders: flv)', options=()),
    FFMpegCodec(name='fmvc', flags='D.V..S', description='FM Screen Capture Codec', options=()),
    FFMpegCodec(name='fraps', flags='D.VI.S', description='Fraps', options=()),
    FFMpegCodec(name='frwu', flags='D.VI.S', description='Forward Uncompressed', options=()),
    FFMpegCodec(name='g2m', flags='D.V.L.', description='Go2Meeting', options=()),
    FFMpegCodec(name='gdv', flags='D.V.L.', description='Gremlin Digital Video', options=()),
    FFMpegCodec(name='gem', flags='D.V.L.', description='GEM Raster image', options=()),
    FFMpegCodec(name='gif', flags='DEV..S', description='CompuServe GIF (Graphics Interchange Format)', options=()),
    FFMpegCodec(name='h261', flags='DEV.L.', description='H.261', options=()),
    FFMpegCodec(name='h263', flags='DEV.L.', description='H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2 (decoders: h263 h263_v4l2m2m) (encoders: h263 h263_v4l2m2m)', options=()),
    FFMpegCodec(name='h263i', flags='D.V.L.', description='Intel H.263', options=()),
    FFMpegCodec(name='h263p', flags='DEV.L.', description='H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegCodec(name='h264', flags='DEV.LS', description='H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (decoders: h264 h264_v4l2m2m h264_cuvid) (encoders: libx264 libx264rgb h264_nvenc h264_v4l2m2m h264_vaapi)', options=()),
    FFMpegCodec(name='hap', flags='DEVIL.', description='Vidvox Hap', options=()),
    FFMpegCodec(name='hdr', flags='DEVIL.', description='HDR (Radiance RGBE format) image', options=()),
    FFMpegCodec(name='hevc', flags='DEV.L.', description='H.265 / HEVC (High Efficiency Video Coding) (decoders: hevc hevc_v4l2m2m hevc_cuvid) (encoders: libx265 hevc_nvenc hevc_v4l2m2m hevc_vaapi)', options=()),
    FFMpegCodec(name='hnm4video', flags='D.V.L.', description='HNM 4 video', options=()),
    FFMpegCodec(name='hq_hqa', flags='D.VIL.', description='Canopus HQ/HQA', options=()),
    FFMpegCodec(name='hqx', flags='D.VIL.', description='Canopus HQX', options=()),
    FFMpegCodec(name='huffyuv', flags='DEVI.S', description='HuffYUV', options=()),
    FFMpegCodec(name='hymt', flags='D.VI.S', description='HuffYUV MT', options=()),
    FFMpegCodec(name='idcin', flags='D.V.L.', description='id Quake II CIN video (decoders: idcinvideo)', options=()),
    FFMpegCodec(name='idf', flags='D.VI..', description='iCEDraw text', options=()),
    FFMpegCodec(name='iff_ilbm', flags='D.V.L.', description='IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (decoders: iff)', options=()),
    FFMpegCodec(name='imm4', flags='D.V.L.', description='Infinity IMM4', options=()),
    FFMpegCodec(name='imm5', flags='D.V.L.', description='Infinity IMM5', options=()),
    FFMpegCodec(name='indeo2', flags='D.V.L.', description='Intel Indeo 2', options=()),
    FFMpegCodec(name='indeo3', flags='D.V.L.', description='Intel Indeo 3', options=()),
    FFMpegCodec(name='indeo4', flags='D.V.L.', description='Intel Indeo Video Interactive 4', options=()),
    FFMpegCodec(name='indeo5', flags='D.V.L.', description='Intel Indeo Video Interactive 5', options=()),
    FFMpegCodec(name='interplayvideo', flags='D.V.L.', description='Interplay MVE video', options=()),
    FFMpegCodec(name='ipu', flags='D.VIL.', description='IPU Video', options=()),
    FFMpegCodec(name='jpeg2000', flags='DEVILS', description='JPEG 2000 (encoders: jpeg2000 libopenjpeg)', options=()),
    FFMpegCodec(name='jpegls', flags='DEVILS', description='JPEG-LS', options=()),
    FFMpegCodec(name='jpegxl', flags='DEVILS', description='JPEG XL (decoders: libjxl) (encoders: libjxl)', options=()),
    FFMpegCodec(name='jv', flags='D.VIL.', description='Bitmap Brothers JV video', options=()),
    FFMpegCodec(name='kgv1', flags='D.V.L.', description='Kega Game Video', options=()),
    FFMpegCodec(name='kmvc', flags='D.V.L.', description="Karl Morton's video codec", options=()),
    FFMpegCodec(name='lagarith', flags='D.VI.S', description='Lagarith lossless', options=()),
    FFMpegCodec(name='ljpeg', flags='.EVI.S', description='Lossless JPEG', options=()),
    FFMpegCodec(name='loco', flags='D.VI.S', description='LOCO', options=()),
    FFMpegCodec(name='lscr', flags='D.V.L.', description='LEAD Screen Capture', options=()),
    FFMpegCodec(name='m101', flags='D.VI.S', description='Matrox Uncompressed SD', options=()),
    FFMpegCodec(name='mad', flags='D.V.L.', description='Electronic Arts Madcow Video (decoders: eamad)', options=()),
    FFMpegCodec(name='magicyuv', flags='DEVI.S', description='MagicYUV video', options=()),
    FFMpegCodec(name='mdec', flags='D.VIL.', description='Sony PlayStation MDEC (Motion DECoder)', options=()),
    FFMpegCodec(name='media100', flags='D.VIL.', description='Media 100i', options=()),
    FFMpegCodec(name='mimic', flags='D.V.L.', description='Mimic', options=()),
    FFMpegCodec(name='mjpeg', flags='DEVIL.', description='Motion JPEG (decoders: mjpeg mjpeg_cuvid) (encoders: mjpeg mjpeg_vaapi)', options=()),
    FFMpegCodec(name='mjpegb', flags='D.VIL.', description='Apple MJPEG-B', options=()),
    FFMpegCodec(name='mmvideo', flags='D.V.L.', description='American Laser Games MM Video', options=()),
    FFMpegCodec(name='mobiclip', flags='D.V.L.', description='MobiClip Video', options=()),
    FFMpegCodec(name='motionpixels', flags='D.V.L.', description='Motion Pixels video', options=()),
    FFMpegCodec(name='mpeg1video', flags='DEV.L.', description='MPEG-1 video (decoders: mpeg1video mpeg1_v4l2m2m mpeg1_cuvid)', options=()),
    FFMpegCodec(name='mpeg2video', flags='DEV.L.', description='MPEG-2 video (decoders: mpeg2video mpegvideo mpeg2_v4l2m2m mpeg2_cuvid) (encoders: mpeg2video mpeg2_vaapi)', options=()),
    FFMpegCodec(name='mpeg4', flags='DEV.L.', description='MPEG-4 part 2 (decoders: mpeg4 mpeg4_v4l2m2m mpeg4_cuvid) (encoders: mpeg4 libxvid mpeg4_v4l2m2m)', options=()),
    FFMpegCodec(name='msa1', flags='D.V.L.', description='MS ATC Screen', options=()),
    FFMpegCodec(name='mscc', flags='D.VI.S', description='Mandsoft Screen Capture Codec', options=()),
    FFMpegCodec(name='msmpeg4v1', flags='D.V.L.', description='MPEG-4 part 2 Microsoft variant version 1', options=()),
    FFMpegCodec(name='msmpeg4v2', flags='DEV.L.', description='MPEG-4 part 2 Microsoft variant version 2', options=()),
    FFMpegCodec(name='msmpeg4v3', flags='DEV.L.', description='MPEG-4 part 2 Microsoft variant version 3 (decoders: msmpeg4) (encoders: msmpeg4)', options=()),
    FFMpegCodec(name='msp2', flags='D.VI.S', description='Microsoft Paint (MSP) version 2', options=()),
    FFMpegCodec(name='msrle', flags='DEV..S', description='Microsoft RLE', options=()),
    FFMpegCodec(name='mss1', flags='D.V.L.', description='MS Screen 1', options=()),
    FFMpegCodec(name='mss2', flags='D.VIL.', description='MS Windows Media Video V9 Screen', options=()),
    FFMpegCodec(name='msvideo1', flags='DEV.L.', description='Microsoft Video 1', options=()),
    FFMpegCodec(name='mszh', flags='D.VI.S', description='LCL (LossLess Codec Library) MSZH', options=()),
    FFMpegCodec(name='mts2', flags='D.V.L.', description='MS Expression Encoder Screen', options=()),
    FFMpegCodec(name='mv30', flags='D.V.L.', description='MidiVid 3.0', options=()),
    FFMpegCodec(name='mvc1', flags='D.VIL.', description='Silicon Graphics Motion Video Compressor 1', options=()),
    FFMpegCodec(name='mvc2', flags='D.VIL.', description='Silicon Graphics Motion Video Compressor 2', options=()),
    FFMpegCodec(name='mvdv', flags='D.V.L.', description='MidiVid VQ', options=()),
    FFMpegCodec(name='mvha', flags='D.VIL.', description='MidiVid Archive Codec', options=()),
    FFMpegCodec(name='mwsc', flags='D.V..S', description='MatchWare Screen Capture Codec', options=()),
    FFMpegCodec(name='mxpeg', flags='D.V.L.', description='Mobotix MxPEG video', options=()),
    FFMpegCodec(name='notchlc', flags='D.VIL.', description='NotchLC', options=()),
    FFMpegCodec(name='nuv', flags='D.V.L.', description='NuppelVideo/RTJPEG', options=()),
    FFMpegCodec(name='paf_video', flags='D.V.L.', description='Amazing Studio Packed Animation File Video', options=()),
    FFMpegCodec(name='pam', flags='DEVI.S', description='PAM (Portable AnyMap) image', options=()),
    FFMpegCodec(name='pbm', flags='DEVI.S', description='PBM (Portable BitMap) image', options=()),
    FFMpegCodec(name='pcx', flags='DEVI.S', description='PC Paintbrush PCX image', options=()),
    FFMpegCodec(name='pdv', flags='D.V.L.', description='PDV (PlayDate Video)', options=()),
    FFMpegCodec(name='pfm', flags='DEVI.S', description='PFM (Portable FloatMap) image', options=()),
    FFMpegCodec(name='pgm', flags='DEVI.S', description='PGM (Portable GrayMap) image', options=()),
    FFMpegCodec(name='pgmyuv', flags='DEVI.S', description='PGMYUV (Portable GrayMap YUV) image', options=()),
    FFMpegCodec(name='pgx', flags='D.VI.S', description='PGX (JPEG2000 Test Format)', options=()),
    FFMpegCodec(name='phm', flags='DEVI.S', description='PHM (Portable HalfFloatMap) image', options=()),
    FFMpegCodec(name='photocd', flags='D.V.L.', description='Kodak Photo CD', options=()),
    FFMpegCodec(name='pictor', flags='D.VIL.', description='Pictor/PC Paint', options=()),
    FFMpegCodec(name='pixlet', flags='D.VIL.', description='Apple Pixlet', options=()),
    FFMpegCodec(name='png', flags='DEV..S', description='PNG (Portable Network Graphics) image', options=()),
    FFMpegCodec(name='ppm', flags='DEVI.S', description='PPM (Portable PixelMap) image', options=()),
    FFMpegCodec(name='prores', flags='DEVIL.', description='Apple ProRes (iCodec Pro) (encoders: prores prores_aw prores_ks)', options=()),
    FFMpegCodec(name='prosumer', flags='D.VIL.', description='Brooktree ProSumer Video', options=()),
    FFMpegCodec(name='psd', flags='D.VI.S', description='Photoshop PSD file', options=()),
    FFMpegCodec(name='ptx', flags='D.VIL.', description='V.Flash PTX image', options=()),
    FFMpegCodec(name='qdraw', flags='D.VI.S', description='Apple QuickDraw', options=()),
    FFMpegCodec(name='qoi', flags='DEVI.S', description='QOI (Quite OK Image)', options=()),
    FFMpegCodec(name='qpeg', flags='D.V.L.', description='Q-team QPEG', options=()),
    FFMpegCodec(name='qtrle', flags='DEV..S', description='QuickTime Animation (RLE) video', options=()),
    FFMpegCodec(name='r10k', flags='DEVI.S', description='AJA Kona 10-bit RGB Codec', options=()),
    FFMpegCodec(name='r210', flags='DEVI.S', description='Uncompressed RGB 10-bit', options=()),
    FFMpegCodec(name='rasc', flags='D.V.L.', description='RemotelyAnywhere Screen Capture', options=()),
    FFMpegCodec(name='rawvideo', flags='DEVI.S', description='raw video', options=()),
    FFMpegCodec(name='rl2', flags='D.VIL.', description='RL2 video', options=()),
    FFMpegCodec(name='roq', flags='DEV.L.', description='id RoQ video (decoders: roqvideo) (encoders: roqvideo)', options=()),
    FFMpegCodec(name='rpza', flags='DEV.L.', description='QuickTime video (RPZA)', options=()),
    FFMpegCodec(name='rscc', flags='D.V..S', description='innoHeim/Rsupport Screen Capture Codec', options=()),
    FFMpegCodec(name='rtv1', flags='D.VIL.', description='RTV1 (RivaTuner Video)', options=()),
    FFMpegCodec(name='rv10', flags='DEV.L.', description='RealVideo 1.0', options=()),
    FFMpegCodec(name='rv20', flags='DEV.L.', description='RealVideo 2.0', options=()),
    FFMpegCodec(name='rv30', flags='D.V.L.', description='RealVideo 3.0', options=()),
    FFMpegCodec(name='rv40', flags='D.V.L.', description='RealVideo 4.0', options=()),
    FFMpegCodec(name='sanm', flags='D.V.L.', description='LucasArts SANM/SMUSH video', options=()),
    FFMpegCodec(name='scpr', flags='D.V.LS', description='ScreenPressor', options=()),
    FFMpegCodec(name='screenpresso', flags='D.V..S', description='Screenpresso', options=()),
    FFMpegCodec(name='sga', flags='D.V.L.', description='Digital Pictures SGA Video', options=()),
    FFMpegCodec(name='sgi', flags='DEVI.S', description='SGI image', options=()),
    FFMpegCodec(name='sgirle', flags='D.VI.S', description='SGI RLE 8-bit', options=()),
    FFMpegCodec(name='sheervideo', flags='D.VI.S', description='BitJazz SheerVideo', options=()),
    FFMpegCodec(name='simbiosis_imx', flags='D.V.L.', description='Simbiosis Interactive IMX Video', options=()),
    FFMpegCodec(name='smackvideo', flags='D.V.L.', description='Smacker video (decoders: smackvid)', options=()),
    FFMpegCodec(name='smc', flags='DEV.L.', description='QuickTime Graphics (SMC)', options=()),
    FFMpegCodec(name='smvjpeg', flags='D.VIL.', description='Sigmatel Motion Video', options=()),
    FFMpegCodec(name='snow', flags='DEV.LS', description='Snow', options=()),
    FFMpegCodec(name='sp5x', flags='D.VIL.', description='Sunplus JPEG (SP5X)', options=()),
    FFMpegCodec(name='speedhq', flags='DEVIL.', description='NewTek SpeedHQ', options=()),
    FFMpegCodec(name='srgc', flags='D.VI.S', description='Screen Recorder Gold Codec', options=()),
    FFMpegCodec(name='sunrast', flags='DEVI.S', description='Sun Rasterfile image', options=()),
    FFMpegCodec(name='svg', flags='D.V..S', description='Scalable Vector Graphics (decoders: librsvg)', options=()),
    FFMpegCodec(name='svq1', flags='DEV.L.', description='Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1', options=()),
    FFMpegCodec(name='svq3', flags='D.V.L.', description='Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3', options=()),
    FFMpegCodec(name='targa', flags='DEVI.S', description='Truevision Targa image', options=()),
    FFMpegCodec(name='targa_y216', flags='D.VI.S', description='Pinnacle TARGA CineWave YUV16', options=()),
    FFMpegCodec(name='tdsc', flags='D.V.L.', description='TDSC', options=()),
    FFMpegCodec(name='tgq', flags='D.V.L.', description='Electronic Arts TGQ video (decoders: eatgq)', options=()),
    FFMpegCodec(name='tgv', flags='D.V.L.', description='Electronic Arts TGV video (decoders: eatgv)', options=()),
    FFMpegCodec(name='theora', flags='DEV.L.', description='Theora (encoders: libtheora)', options=()),
    FFMpegCodec(name='thp', flags='D.VIL.', description='Nintendo Gamecube THP video', options=()),
    FFMpegCodec(name='tiertexseqvideo', flags='D.V.L.', description='Tiertex Limited SEQ video', options=()),
    FFMpegCodec(name='tiff', flags='DEVI.S', description='TIFF image', options=()),
    FFMpegCodec(name='tmv', flags='D.VIL.', description='8088flex TMV', options=()),
    FFMpegCodec(name='tqi', flags='D.V.L.', description='Electronic Arts TQI video (decoders: eatqi)', options=()),
    FFMpegCodec(name='truemotion1', flags='D.V.L.', description='Duck TrueMotion 1.0', options=()),
    FFMpegCodec(name='truemotion2', flags='D.V.L.', description='Duck TrueMotion 2.0', options=()),
    FFMpegCodec(name='truemotion2rt', flags='D.VIL.', description='Duck TrueMotion 2.0 Real Time', options=()),
    FFMpegCodec(name='tscc', flags='D.V..S', description='TechSmith Screen Capture Codec (decoders: camtasia)', options=()),
    FFMpegCodec(name='tscc2', flags='D.V.L.', description='TechSmith Screen Codec 2', options=()),
    FFMpegCodec(name='txd', flags='D.VIL.', description='Renderware TXD (TeXture Dictionary) image', options=()),
    FFMpegCodec(name='ulti', flags='D.V.L.', description='IBM UltiMotion (decoders: ultimotion)', options=()),
    FFMpegCodec(name='utvideo', flags='DEVI.S', description='Ut Video', options=()),
    FFMpegCodec(name='v210', flags='DEVI.S', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v210x', flags='D.VI.S', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v308', flags='DEVI.S', description='Uncompressed packed 4:4:4', options=()),
    FFMpegCodec(name='v408', flags='DEVI.S', description='Uncompressed packed QT 4:4:4:4', options=()),
    FFMpegCodec(name='v410', flags='DEVI.S', description='Uncompressed 4:4:4 10-bit', options=()),
    FFMpegCodec(name='vb', flags='D.V.L.', description='Beam Software VB', options=()),
    FFMpegCodec(name='vble', flags='D.VI.S', description='VBLE Lossless Codec', options=()),
    FFMpegCodec(name='vbn', flags='DEV.L.', description='Vizrt Binary Image', options=()),
    FFMpegCodec(name='vc1', flags='D.V.L.', description='SMPTE VC-1 (decoders: vc1 vc1_v4l2m2m vc1_cuvid)', options=()),
    FFMpegCodec(name='vc1image', flags='D.V.L.', description='Windows Media Video 9 Image v2', options=()),
    FFMpegCodec(name='vcr1', flags='D.VIL.', description='ATI VCR1', options=()),
    FFMpegCodec(name='vixl', flags='D.VIL.', description='Miro VideoXL (decoders: xl)', options=()),
    FFMpegCodec(name='vmdvideo', flags='D.V.L.', description='Sierra VMD video', options=()),
    FFMpegCodec(name='vmix', flags='D.VIL.', description='vMix Video', options=()),
    FFMpegCodec(name='vmnc', flags='D.V..S', description='VMware Screen Codec / VMware Video', options=()),
    FFMpegCodec(name='vnull', flags='DEV...', description='Null video codec', options=()),
    FFMpegCodec(name='vp3', flags='D.V.L.', description='On2 VP3', options=()),
    FFMpegCodec(name='vp4', flags='D.V.L.', description='On2 VP4', options=()),
    FFMpegCodec(name='vp5', flags='D.V.L.', description='On2 VP5', options=()),
    FFMpegCodec(name='vp6', flags='D.V.L.', description='On2 VP6', options=()),
    FFMpegCodec(name='vp6a', flags='D.V.L.', description='On2 VP6 (Flash version, with alpha channel)', options=()),
    FFMpegCodec(name='vp6f', flags='D.V.L.', description='On2 VP6 (Flash version)', options=()),
    FFMpegCodec(name='vp7', flags='D.V.L.', description='On2 VP7', options=()),
    FFMpegCodec(name='vp8', flags='DEV.L.', description='On2 VP8 (decoders: vp8 vp8_v4l2m2m libvpx vp8_cuvid) (encoders: libvpx vp8_v4l2m2m vp8_vaapi)', options=()),
    FFMpegCodec(name='vp9', flags='DEV.L.', description='Google VP9 (decoders: vp9 vp9_v4l2m2m libvpx-vp9 vp9_cuvid) (encoders: libvpx-vp9 vp9_vaapi)', options=()),
    FFMpegCodec(name='vqc', flags='D.V.L.', description='ViewQuest VQC', options=()),
    FFMpegCodec(name='vvc', flags='..V.L.', description='H.266 / VVC (Versatile Video Coding)', options=()),
    FFMpegCodec(name='wbmp', flags='DEVI.S', description='WBMP (Wireless Application Protocol Bitmap) image', options=()),
    FFMpegCodec(name='wcmv', flags='D.V..S', description='WinCAM Motion Video', options=()),
    FFMpegCodec(name='webp', flags='DEVILS', description='WebP (encoders: libwebp_anim libwebp)', options=()),
    FFMpegCodec(name='wmv1', flags='DEV.L.', description='Windows Media Video 7', options=()),
    FFMpegCodec(name='wmv2', flags='DEV.L.', description='Windows Media Video 8', options=()),
    FFMpegCodec(name='wmv3', flags='D.V.L.', description='Windows Media Video 9', options=()),
    FFMpegCodec(name='wmv3image', flags='D.V.L.', description='Windows Media Video 9 Image', options=()),
    FFMpegCodec(name='wnv1', flags='D.VIL.', description='Winnov WNV1', options=()),
    FFMpegCodec(name='wrapped_avframe', flags='DEV..S', description='AVFrame to AVPacket passthrough', options=()),
    FFMpegCodec(name='ws_vqa', flags='D.V.L.', description='Westwood Studios VQA (Vector Quantized Animation) video (decoders: vqavideo)', options=()),
    FFMpegCodec(name='xan_wc3', flags='D.V.L.', description='Wing Commander III / Xan', options=()),
    FFMpegCodec(name='xan_wc4', flags='D.V.L.', description='Wing Commander IV / Xxan', options=()),
    FFMpegCodec(name='xbin', flags='D.VI..', description='eXtended BINary text', options=()),
    FFMpegCodec(name='xbm', flags='DEVI.S', description='XBM (X BitMap) image', options=()),
    FFMpegCodec(name='xface', flags='DEVIL.', description='X-face image', options=()),
    FFMpegCodec(name='xpm', flags='D.VI.S', description='XPM (X PixMap) image', options=()),
    FFMpegCodec(name='xwd', flags='DEVI.S', description='XWD (X Window Dump) image', options=()),
    FFMpegCodec(name='y41p', flags='DEVI.S', description='Uncompressed YUV 4:1:1 12-bit', options=()),
    FFMpegCodec(name='ylc', flags='D.VI.S', description='YUY2 Lossless Codec', options=()),
    FFMpegCodec(name='yop', flags='D.V.L.', description='Psygnosis YOP Video', options=()),
    FFMpegCodec(name='yuv4', flags='DEVI.S', description='Uncompressed packed 4:2:0', options=()),
    FFMpegCodec(name='zerocodec', flags='D.V..S', description='ZeroCodec Lossless Video', options=()),
    FFMpegCodec(name='zlib', flags='DEVI.S', description='LCL (LossLess Codec Library) ZLIB', options=()),
    FFMpegCodec(name='zmbv', flags='DEV..S', description='Zip Motion Blocks Video', options=()),
    FFMpegCodec(name='4gv', flags='..AIL.', description='4GV (Fourth Generation Vocoder)', options=()),
    FFMpegCodec(name='8svx_exp', flags='D.AIL.', description='8SVX exponential', options=()),
    FFMpegCodec(name='8svx_fib', flags='D.AIL.', description='8SVX fibonacci', options=()),
    FFMpegCodec(name='aac', flags='DEAIL.', description='AAC (Advanced Audio Coding) (decoders: aac aac_fixed)', options=()),
    FFMpegCodec(name='aac_latm', flags='D.AIL.', description='AAC LATM (Advanced Audio Coding LATM syntax)', options=()),
    FFMpegCodec(name='ac3', flags='DEAIL.', description='ATSC A/52A (AC-3) (decoders: ac3 ac3_fixed) (encoders: ac3 ac3_fixed)', options=()),
    FFMpegCodec(name='ac4', flags='..A.L.', description='AC-4', options=()),
    FFMpegCodec(name='adpcm_4xm', flags='D.AIL.', description='ADPCM 4X Movie', options=()),
    FFMpegCodec(name='adpcm_adx', flags='DEAIL.', description='SEGA CRI ADX ADPCM', options=()),
    FFMpegCodec(name='adpcm_afc', flags='D.AIL.', description='ADPCM Nintendo Gamecube AFC', options=()),
    FFMpegCodec(name='adpcm_agm', flags='D.AIL.', description='ADPCM AmuseGraphics Movie AGM', options=()),
    FFMpegCodec(name='adpcm_aica', flags='D.AIL.', description='ADPCM Yamaha AICA', options=()),
    FFMpegCodec(name='adpcm_argo', flags='DEAIL.', description='ADPCM Argonaut Games', options=()),
    FFMpegCodec(name='adpcm_ct', flags='D.AIL.', description='ADPCM Creative Technology', options=()),
    FFMpegCodec(name='adpcm_dtk', flags='D.AIL.', description='ADPCM Nintendo Gamecube DTK', options=()),
    FFMpegCodec(name='adpcm_ea', flags='D.AIL.', description='ADPCM Electronic Arts', options=()),
    FFMpegCodec(name='adpcm_ea_maxis_xa', flags='D.AIL.', description='ADPCM Electronic Arts Maxis CDROM XA', options=()),
    FFMpegCodec(name='adpcm_ea_r1', flags='D.AIL.', description='ADPCM Electronic Arts R1', options=()),
    FFMpegCodec(name='adpcm_ea_r2', flags='D.AIL.', description='ADPCM Electronic Arts R2', options=()),
    FFMpegCodec(name='adpcm_ea_r3', flags='D.AIL.', description='ADPCM Electronic Arts R3', options=()),
    FFMpegCodec(name='adpcm_ea_xas', flags='D.AIL.', description='ADPCM Electronic Arts XAS', options=()),
    FFMpegCodec(name='adpcm_g722', flags='DEAIL.', description='G.722 ADPCM (decoders: g722) (encoders: g722)', options=()),
    FFMpegCodec(name='adpcm_g726', flags='DEAIL.', description='G.726 ADPCM (decoders: g726) (encoders: g726)', options=()),
    FFMpegCodec(name='adpcm_g726le', flags='DEAIL.', description='G.726 ADPCM little-endian (decoders: g726le) (encoders: g726le)', options=()),
    FFMpegCodec(name='adpcm_ima_acorn', flags='D.AIL.', description='ADPCM IMA Acorn Replay', options=()),
    FFMpegCodec(name='adpcm_ima_alp', flags='DEAIL.', description='ADPCM IMA High Voltage Software ALP', options=()),
    FFMpegCodec(name='adpcm_ima_amv', flags='DEAIL.', description='ADPCM IMA AMV', options=()),
    FFMpegCodec(name='adpcm_ima_apc', flags='D.AIL.', description='ADPCM IMA CRYO APC', options=()),
    FFMpegCodec(name='adpcm_ima_apm', flags='DEAIL.', description='ADPCM IMA Ubisoft APM', options=()),
    FFMpegCodec(name='adpcm_ima_cunning', flags='D.AIL.', description='ADPCM IMA Cunning Developments', options=()),
    FFMpegCodec(name='adpcm_ima_dat4', flags='D.AIL.', description='ADPCM IMA Eurocom DAT4', options=()),
    FFMpegCodec(name='adpcm_ima_dk3', flags='D.AIL.', description='ADPCM IMA Duck DK3', options=()),
    FFMpegCodec(name='adpcm_ima_dk4', flags='D.AIL.', description='ADPCM IMA Duck DK4', options=()),
    FFMpegCodec(name='adpcm_ima_ea_eacs', flags='D.AIL.', description='ADPCM IMA Electronic Arts EACS', options=()),
    FFMpegCodec(name='adpcm_ima_ea_sead', flags='D.AIL.', description='ADPCM IMA Electronic Arts SEAD', options=()),
    FFMpegCodec(name='adpcm_ima_iss', flags='D.AIL.', description='ADPCM IMA Funcom ISS', options=()),
    FFMpegCodec(name='adpcm_ima_moflex', flags='D.AIL.', description='ADPCM IMA MobiClip MOFLEX', options=()),
    FFMpegCodec(name='adpcm_ima_mtf', flags='D.AIL.', description="ADPCM IMA Capcom's MT Framework", options=()),
    FFMpegCodec(name='adpcm_ima_oki', flags='D.AIL.', description='ADPCM IMA Dialogic OKI', options=()),
    FFMpegCodec(name='adpcm_ima_qt', flags='DEAIL.', description='ADPCM IMA QuickTime', options=()),
    FFMpegCodec(name='adpcm_ima_rad', flags='D.AIL.', description='ADPCM IMA Radical', options=()),
    FFMpegCodec(name='adpcm_ima_smjpeg', flags='D.AIL.', description='ADPCM IMA Loki SDL MJPEG', options=()),
    FFMpegCodec(name='adpcm_ima_ssi', flags='DEAIL.', description='ADPCM IMA Simon & Schuster Interactive', options=()),
    FFMpegCodec(name='adpcm_ima_wav', flags='DEAIL.', description='ADPCM IMA WAV', options=()),
    FFMpegCodec(name='adpcm_ima_ws', flags='DEAIL.', description='ADPCM IMA Westwood', options=()),
    FFMpegCodec(name='adpcm_ms', flags='DEAIL.', description='ADPCM Microsoft', options=()),
    FFMpegCodec(name='adpcm_mtaf', flags='D.AIL.', description='ADPCM MTAF', options=()),
    FFMpegCodec(name='adpcm_psx', flags='D.AIL.', description='ADPCM Playstation', options=()),
    FFMpegCodec(name='adpcm_sbpro_2', flags='D.AIL.', description='ADPCM Sound Blaster Pro 2-bit', options=()),
    FFMpegCodec(name='adpcm_sbpro_3', flags='D.AIL.', description='ADPCM Sound Blaster Pro 2.6-bit', options=()),
    FFMpegCodec(name='adpcm_sbpro_4', flags='D.AIL.', description='ADPCM Sound Blaster Pro 4-bit', options=()),
    FFMpegCodec(name='adpcm_swf', flags='DEAIL.', description='ADPCM Shockwave Flash', options=()),
    FFMpegCodec(name='adpcm_thp', flags='D.AIL.', description='ADPCM Nintendo THP', options=()),
    FFMpegCodec(name='adpcm_thp_le', flags='D.AIL.', description='ADPCM Nintendo THP (Little-Endian)', options=()),
    FFMpegCodec(name='adpcm_vima', flags='D.AIL.', description='LucasArts VIMA audio', options=()),
    FFMpegCodec(name='adpcm_xa', flags='D.AIL.', description='ADPCM CDROM XA', options=()),
    FFMpegCodec(name='adpcm_xmd', flags='D.AIL.', description='ADPCM Konami XMD', options=()),
    FFMpegCodec(name='adpcm_yamaha', flags='DEAIL.', description='ADPCM Yamaha', options=()),
    FFMpegCodec(name='adpcm_zork', flags='D.AIL.', description='ADPCM Zork', options=()),
    FFMpegCodec(name='alac', flags='DEAI.S', description='ALAC (Apple Lossless Audio Codec)', options=()),
    FFMpegCodec(name='amr_nb', flags='D.AIL.', description='AMR-NB (Adaptive Multi-Rate NarrowBand) (decoders: amrnb)', options=()),
    FFMpegCodec(name='amr_wb', flags='D.AIL.', description='AMR-WB (Adaptive Multi-Rate WideBand) (decoders: amrwb)', options=()),
    FFMpegCodec(name='anull', flags='DEA...', description='Null audio codec', options=()),
    FFMpegCodec(name='apac', flags='D.AI.S', description="Marian's A-pac audio", options=()),
    FFMpegCodec(name='ape', flags='D.AI.S', description="Monkey's Audio", options=()),
    FFMpegCodec(name='aptx', flags='DEAIL.', description='aptX (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='aptx_hd', flags='DEAIL.', description='aptX HD (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='atrac1', flags='D.AIL.', description='ATRAC1 (Adaptive TRansform Acoustic Coding)', options=()),
    FFMpegCodec(name='atrac3', flags='D.AIL.', description='ATRAC3 (Adaptive TRansform Acoustic Coding 3)', options=()),
    FFMpegCodec(name='atrac3al', flags='D.AI.S', description='ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)', options=()),
    FFMpegCodec(name='atrac3p', flags='D.AIL.', description='ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (decoders: atrac3plus)', options=()),
    FFMpegCodec(name='atrac3pal', flags='D.AI.S', description='ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (decoders: atrac3plusal)', options=()),
    FFMpegCodec(name='atrac9', flags='D.AIL.', description='ATRAC9 (Adaptive TRansform Acoustic Coding 9)', options=()),
    FFMpegCodec(name='avc', flags='D.AIL.', description='On2 Audio for Video Codec (decoders: on2avc)', options=()),
    FFMpegCodec(name='binkaudio_dct', flags='D.AIL.', description='Bink Audio (DCT)', options=()),
    FFMpegCodec(name='binkaudio_rdft', flags='D.AIL.', description='Bink Audio (RDFT)', options=()),
    FFMpegCodec(name='bmv_audio', flags='D.AIL.', description='Discworld II BMV audio', options=()),
    FFMpegCodec(name='bonk', flags='D.AILS', description='Bonk audio', options=()),
    FFMpegCodec(name='cbd2_dpcm', flags='D.AIL.', description='DPCM Cuberoot-Delta-Exact', options=()),
    FFMpegCodec(name='celt', flags='..AIL.', description='Constrained Energy Lapped Transform (CELT)', options=()),
    FFMpegCodec(name='codec2', flags='DEAIL.', description='codec2 (very low bitrate speech codec) (decoders: libcodec2) (encoders: libcodec2)', options=()),
    FFMpegCodec(name='comfortnoise', flags='DEAIL.', description='RFC 3389 Comfort Noise', options=()),
    FFMpegCodec(name='cook', flags='D.AIL.', description='Cook / Cooker / Gecko (RealAudio G2)', options=()),
    FFMpegCodec(name='derf_dpcm', flags='D.AIL.', description='DPCM Xilam DERF', options=()),
    FFMpegCodec(name='dfpwm', flags='DEA.L.', description='DFPWM (Dynamic Filter Pulse Width Modulation)', options=()),
    FFMpegCodec(name='dolby_e', flags='D.AIL.', description='Dolby E', options=()),
    FFMpegCodec(name='dsd_lsbf', flags='D.AIL.', description='DSD (Direct Stream Digital), least significant bit first', options=()),
    FFMpegCodec(name='dsd_lsbf_planar', flags='D.AIL.', description='DSD (Direct Stream Digital), least significant bit first, planar', options=()),
    FFMpegCodec(name='dsd_msbf', flags='D.AIL.', description='DSD (Direct Stream Digital), most significant bit first', options=()),
    FFMpegCodec(name='dsd_msbf_planar', flags='D.AIL.', description='DSD (Direct Stream Digital), most significant bit first, planar', options=()),
    FFMpegCodec(name='dsicinaudio', flags='D.AIL.', description='Delphine Software International CIN audio', options=()),
    FFMpegCodec(name='dss_sp', flags='D.AIL.', description='Digital Speech Standard - Standard Play mode (DSS SP)', options=()),
    FFMpegCodec(name='dst', flags='D.AI.S', description='DST (Direct Stream Transfer)', options=()),
    FFMpegCodec(name='dts', flags='DEAILS', description='DCA (DTS Coherent Acoustics) (decoders: dca) (encoders: dca)', options=()),
    FFMpegCodec(name='dvaudio', flags='D.AIL.', description='DV audio', options=()),
    FFMpegCodec(name='eac3', flags='DEAIL.', description='ATSC A/52B (AC-3, E-AC-3)', options=()),
    FFMpegCodec(name='evrc', flags='D.AIL.', description='EVRC (Enhanced Variable Rate Codec)', options=()),
    FFMpegCodec(name='fastaudio', flags='D.AIL.', description='MobiClip FastAudio', options=()),
    FFMpegCodec(name='flac', flags='DEAI.S', description='FLAC (Free Lossless Audio Codec)', options=()),
    FFMpegCodec(name='ftr', flags='D.AIL.', description='FTR Voice', options=()),
    FFMpegCodec(name='g723_1', flags='DEAIL.', description='G.723.1', options=()),
    FFMpegCodec(name='g729', flags='D.AIL.', description='G.729', options=()),
    FFMpegCodec(name='gremlin_dpcm', flags='D.AIL.', description='DPCM Gremlin', options=()),
    FFMpegCodec(name='gsm', flags='DEAIL.', description='GSM (decoders: gsm libgsm) (encoders: libgsm)', options=()),
    FFMpegCodec(name='gsm_ms', flags='DEAIL.', description='GSM Microsoft variant (decoders: gsm_ms libgsm_ms) (encoders: libgsm_ms)', options=()),
    FFMpegCodec(name='hca', flags='D.AIL.', description='CRI HCA', options=()),
    FFMpegCodec(name='hcom', flags='D.AIL.', description='HCOM Audio', options=()),
    FFMpegCodec(name='iac', flags='D.AIL.', description='IAC (Indeo Audio Coder)', options=()),
    FFMpegCodec(name='ilbc', flags='D.AIL.', description='iLBC (Internet Low Bitrate Codec)', options=()),
    FFMpegCodec(name='imc', flags='D.AIL.', description='IMC (Intel Music Coder)', options=()),
    FFMpegCodec(name='interplay_dpcm', flags='D.AIL.', description='DPCM Interplay', options=()),
    FFMpegCodec(name='interplayacm', flags='D.AIL.', description='Interplay ACM', options=()),
    FFMpegCodec(name='mace3', flags='D.AIL.', description='MACE (Macintosh Audio Compression/Expansion) 3:1', options=()),
    FFMpegCodec(name='mace6', flags='D.AIL.', description='MACE (Macintosh Audio Compression/Expansion) 6:1', options=()),
    FFMpegCodec(name='metasound', flags='D.AIL.', description='Voxware MetaSound', options=()),
    FFMpegCodec(name='misc4', flags='D.AIL.', description='Micronas SC-4 Audio', options=()),
    FFMpegCodec(name='mlp', flags='DEA..S', description='MLP (Meridian Lossless Packing)', options=()),
    FFMpegCodec(name='mp1', flags='D.AIL.', description='MP1 (MPEG audio layer 1) (decoders: mp1 mp1float)', options=()),
    FFMpegCodec(name='mp2', flags='DEAIL.', description='MP2 (MPEG audio layer 2) (decoders: mp2 mp2float) (encoders: mp2 mp2fixed libtwolame)', options=()),
    FFMpegCodec(name='mp3', flags='DEAIL.', description='MP3 (MPEG audio layer 3) (decoders: mp3float mp3) (encoders: libmp3lame libshine)', options=()),
    FFMpegCodec(name='mp3adu', flags='D.AIL.', description='ADU (Application Data Unit) MP3 (MPEG audio layer 3) (decoders: mp3adufloat mp3adu)', options=()),
    FFMpegCodec(name='mp3on4', flags='D.AIL.', description='MP3onMP4 (decoders: mp3on4float mp3on4)', options=()),
    FFMpegCodec(name='mp4als', flags='D.AI.S', description='MPEG-4 Audio Lossless Coding (ALS) (decoders: als)', options=()),
    FFMpegCodec(name='mpegh_3d_audio', flags='..A.L.', description='MPEG-H 3D Audio', options=()),
    FFMpegCodec(name='msnsiren', flags='D.AIL.', description='MSN Siren', options=()),
    FFMpegCodec(name='musepack7', flags='D.AIL.', description='Musepack SV7 (decoders: mpc7)', options=()),
    FFMpegCodec(name='musepack8', flags='D.AIL.', description='Musepack SV8 (decoders: mpc8)', options=()),
    FFMpegCodec(name='nellymoser', flags='DEAIL.', description='Nellymoser Asao', options=()),
    FFMpegCodec(name='opus', flags='DEAIL.', description='Opus (Opus Interactive Audio Codec) (decoders: opus libopus) (encoders: opus libopus)', options=()),
    FFMpegCodec(name='osq', flags='D.AI.S', description='OSQ (Original Sound Quality)', options=()),
    FFMpegCodec(name='paf_audio', flags='D.AIL.', description='Amazing Studio Packed Animation File Audio', options=()),
    FFMpegCodec(name='pcm_alaw', flags='DEAIL.', description='PCM A-law / G.711 A-law', options=()),
    FFMpegCodec(name='pcm_bluray', flags='DEAI.S', description='PCM signed 16|20|24-bit big-endian for Blu-ray media', options=()),
    FFMpegCodec(name='pcm_dvd', flags='DEAI.S', description='PCM signed 20|24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_f16le', flags='D.AI.S', description='PCM 16.8 floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f24le', flags='D.AI.S', description='PCM 24.0 floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f32be', flags='DEAI.S', description='PCM 32-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f32le', flags='DEAI.S', description='PCM 32-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f64be', flags='DEAI.S', description='PCM 64-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f64le', flags='DEAI.S', description='PCM 64-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_lxf', flags='D.AI.S', description='PCM signed 20-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_mulaw', flags='DEAIL.', description='PCM mu-law / G.711 mu-law', options=()),
    FFMpegCodec(name='pcm_s16be', flags='DEAI.S', description='PCM signed 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s16be_planar', flags='DEAI.S', description='PCM signed 16-bit big-endian planar', options=()),
    FFMpegCodec(name='pcm_s16le', flags='DEAI.S', description='PCM signed 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s16le_planar', flags='DEAI.S', description='PCM signed 16-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s24be', flags='DEAI.S', description='PCM signed 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s24daud', flags='DEAI.S', description='PCM D-Cinema audio signed 24-bit', options=()),
    FFMpegCodec(name='pcm_s24le', flags='DEAI.S', description='PCM signed 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s24le_planar', flags='DEAI.S', description='PCM signed 24-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s32be', flags='DEAI.S', description='PCM signed 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s32le', flags='DEAI.S', description='PCM signed 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s32le_planar', flags='DEAI.S', description='PCM signed 32-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s64be', flags='DEAI.S', description='PCM signed 64-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s64le', flags='DEAI.S', description='PCM signed 64-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s8', flags='DEAI.S', description='PCM signed 8-bit', options=()),
    FFMpegCodec(name='pcm_s8_planar', flags='DEAI.S', description='PCM signed 8-bit planar', options=()),
    FFMpegCodec(name='pcm_sga', flags='D.AI.S', description='PCM SGA', options=()),
    FFMpegCodec(name='pcm_u16be', flags='DEAI.S', description='PCM unsigned 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u16le', flags='DEAI.S', description='PCM unsigned 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u24be', flags='DEAI.S', description='PCM unsigned 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u24le', flags='DEAI.S', description='PCM unsigned 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u32be', flags='DEAI.S', description='PCM unsigned 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u32le', flags='DEAI.S', description='PCM unsigned 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u8', flags='DEAI.S', description='PCM unsigned 8-bit', options=()),
    FFMpegCodec(name='pcm_vidc', flags='DEAIL.', description='PCM Archimedes VIDC', options=()),
    FFMpegCodec(name='qcelp', flags='D.AIL.', description='QCELP / PureVoice', options=()),
    FFMpegCodec(name='qdm2', flags='D.AIL.', description='QDesign Music Codec 2', options=()),
    FFMpegCodec(name='qdmc', flags='D.AIL.', description='QDesign Music', options=()),
    FFMpegCodec(name='ra_144', flags='DEAIL.', description='RealAudio 1.0 (14.4K) (decoders: real_144) (encoders: real_144)', options=()),
    FFMpegCodec(name='ra_288', flags='D.AIL.', description='RealAudio 2.0 (28.8K) (decoders: real_288)', options=()),
    FFMpegCodec(name='ralf', flags='D.AI.S', description='RealAudio Lossless', options=()),
    FFMpegCodec(name='rka', flags='D.AILS', description='RKA (RK Audio)', options=()),
    FFMpegCodec(name='roq_dpcm', flags='DEAIL.', description='DPCM id RoQ', options=()),
    FFMpegCodec(name='s302m', flags='DEAI.S', description='SMPTE 302M', options=()),
    FFMpegCodec(name='sbc', flags='DEAIL.', description='SBC (low-complexity subband codec)', options=()),
    FFMpegCodec(name='sdx2_dpcm', flags='D.AIL.', description='DPCM Squareroot-Delta-Exact', options=()),
    FFMpegCodec(name='shorten', flags='D.AI.S', description='Shorten', options=()),
    FFMpegCodec(name='sipr', flags='D.AIL.', description='RealAudio SIPR / ACELP.NET', options=()),
    FFMpegCodec(name='siren', flags='D.AIL.', description='Siren', options=()),
    FFMpegCodec(name='smackaudio', flags='D.AIL.', description='Smacker audio (decoders: smackaud)', options=()),
    FFMpegCodec(name='smv', flags='..AIL.', description='SMV (Selectable Mode Vocoder)', options=()),
    FFMpegCodec(name='sol_dpcm', flags='D.AIL.', description='DPCM Sol', options=()),
    FFMpegCodec(name='sonic', flags='DEAI..', description='Sonic', options=()),
    FFMpegCodec(name='sonicls', flags='.EAI..', description='Sonic lossless', options=()),
    FFMpegCodec(name='speex', flags='DEAIL.', description='Speex (decoders: speex libspeex) (encoders: libspeex)', options=()),
    FFMpegCodec(name='tak', flags='D.A..S', description="TAK (Tom's lossless Audio Kompressor)", options=()),
    FFMpegCodec(name='truehd', flags='DEA..S', description='TrueHD', options=()),
    FFMpegCodec(name='truespeech', flags='D.AIL.', description='DSP Group TrueSpeech', options=()),
    FFMpegCodec(name='tta', flags='DEAI.S', description='TTA (True Audio)', options=()),
    FFMpegCodec(name='twinvq', flags='D.AIL.', description='VQF TwinVQ', options=()),
    FFMpegCodec(name='vmdaudio', flags='D.AIL.', description='Sierra VMD audio', options=()),
    FFMpegCodec(name='vorbis', flags='DEAIL.', description='Vorbis (decoders: vorbis libvorbis) (encoders: vorbis libvorbis)', options=()),
    FFMpegCodec(name='wady_dpcm', flags='D.AIL.', description='DPCM Marble WADY', options=()),
    FFMpegCodec(name='wavarc', flags='D.AI.S', description='Waveform Archiver', options=()),
    FFMpegCodec(name='wavesynth', flags='D.AI..', description='Wave synthesis pseudo-codec', options=()),
    FFMpegCodec(name='wavpack', flags='DEAILS', description='WavPack', options=()),
    FFMpegCodec(name='westwood_snd1', flags='D.AIL.', description='Westwood Audio (SND1) (decoders: ws_snd1)', options=()),
    FFMpegCodec(name='wmalossless', flags='D.AI.S', description='Windows Media Audio Lossless', options=()),
    FFMpegCodec(name='wmapro', flags='D.AIL.', description='Windows Media Audio 9 Professional', options=()),
    FFMpegCodec(name='wmav1', flags='DEAIL.', description='Windows Media Audio 1', options=()),
    FFMpegCodec(name='wmav2', flags='DEAIL.', description='Windows Media Audio 2', options=()),
    FFMpegCodec(name='wmavoice', flags='D.AIL.', description='Windows Media Audio Voice', options=()),
    FFMpegCodec(name='xan_dpcm', flags='D.AIL.', description='DPCM Xan', options=()),
    FFMpegCodec(name='xma1', flags='D.AIL.', description='Xbox Media Audio 1', options=()),
    FFMpegCodec(name='xma2', flags='D.AIL.', description='Xbox Media Audio 2', options=()),
    FFMpegCodec(name='bin_data', flags='..D...', description='binary data', options=()),
    FFMpegCodec(name='dvd_nav_packet', flags='..D...', description='DVD Nav packet', options=()),
    FFMpegCodec(name='epg', flags='..D...', description='Electronic Program Guide', options=()),
    FFMpegCodec(name='klv', flags='..D...', description='SMPTE 336M Key-Length-Value (KLV) metadata', options=()),
    FFMpegCodec(name='mpegts', flags='..D...', description='raw MPEG-TS stream', options=()),
    FFMpegCodec(name='otf', flags='..D...', description='OpenType font', options=()),
    FFMpegCodec(name='scte_35', flags='..D...', description='SCTE 35 Message Queue', options=()),
    FFMpegCodec(name='smpte_2038', flags='..D...', description='SMPTE ST 2038 VANC in MPEG-2 TS', options=()),
    FFMpegCodec(name='timed_id3', flags='..D...', description='timed ID3 metadata', options=()),
    FFMpegCodec(name='ttf', flags='..D...', description='TrueType font', options=()),
    FFMpegCodec(name='arib_caption', flags='..S...', description='ARIB STD-B24 caption', options=()),
    FFMpegCodec(name='ass', flags='DES...', description='ASS (Advanced SSA) subtitle (decoders: ssa ass) (encoders: ssa ass)', options=()),
    FFMpegCodec(name='dvb_subtitle', flags='DES...', description='DVB subtitles (decoders: dvbsub) (encoders: dvbsub)', options=()),
    FFMpegCodec(name='dvb_teletext', flags='D.S...', description='DVB teletext (decoders: libzvbi_teletextdec)', options=()),
    FFMpegCodec(name='dvd_subtitle', flags='DES...', description='DVD subtitles (decoders: dvdsub) (encoders: dvdsub)', options=()),
    FFMpegCodec(name='eia_608', flags='D.S...', description='EIA-608 closed captions (decoders: cc_dec)', options=()),
    FFMpegCodec(name='hdmv_pgs_subtitle', flags='D.S...', description='HDMV Presentation Graphic Stream subtitles (decoders: pgssub)', options=()),
    FFMpegCodec(name='hdmv_text_subtitle', flags='..S...', description='HDMV Text subtitle', options=()),
    FFMpegCodec(name='jacosub', flags='D.S...', description='JACOsub subtitle', options=()),
    FFMpegCodec(name='microdvd', flags='D.S...', description='MicroDVD subtitle', options=()),
    FFMpegCodec(name='mov_text', flags='DES...', description='MOV text', options=()),
    FFMpegCodec(name='mpl2', flags='D.S...', description='MPL2 subtitle', options=()),
    FFMpegCodec(name='pjs', flags='D.S...', description='PJS (Phoenix Japanimation Society) subtitle', options=()),
    FFMpegCodec(name='realtext', flags='D.S...', description='RealText subtitle', options=()),
    FFMpegCodec(name='sami', flags='D.S...', description='SAMI subtitle', options=()),
    FFMpegCodec(name='srt', flags='..S...', description='SubRip subtitle with embedded timing', options=()),
    FFMpegCodec(name='ssa', flags='..S...', description='SSA (SubStation Alpha) subtitle', options=()),
    FFMpegCodec(name='stl', flags='D.S...', description='Spruce subtitle format', options=()),
    FFMpegCodec(name='subrip', flags='DES...', description='SubRip subtitle (decoders: srt subrip) (encoders: srt subrip)', options=()),
    FFMpegCodec(name='subviewer', flags='D.S...', description='SubViewer subtitle', options=()),
    FFMpegCodec(name='subviewer1', flags='D.S...', description='SubViewer v1 subtitle', options=()),
    FFMpegCodec(name='text', flags='DES...', description='raw UTF-8 text', options=()),
    FFMpegCodec(name='ttml', flags='.ES...', description='Timed Text Markup Language', options=()),
    FFMpegCodec(name='vplayer', flags='D.S...', description='VPlayer subtitle', options=()),
    FFMpegCodec(name='webvtt', flags='DES...', description='WebVTT subtitle', options=()),
    FFMpegCodec(name='xsub', flags='DES...', description='XSUB', options=()),
  ])
# ---
# name: test_parse_codecs_help_text[decoders]
  list([
    FFMpegCodec(name='012v', flags='V....D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='4xm', flags='V....D', description='4X Movie', options=()),
    FFMpegCodec(name='8bps', flags='V....D', description='QuickTime 8BPS video', options=()),
    FFMpegCodec(name='aasc', flags='V....D', description='Autodesk RLE', options=()),
    FFMpegCodec(name='agm', flags='V....D', description='Amuse Graphics Movie', options=()),
    FFMpegCodec(name='aic', flags='VF...D', description='Apple Intermediate Codec', options=()),
    FFMpegCodec(name='alias_pix', flags='V....D', description='Alias/Wavefront PIX image', options=()),
    FFMpegCodec(name='amv', flags='V....D', description='AMV Video', options=()),
    FFMpegCodec(name='anm', flags='V....D', description='Deluxe Paint Animation', options=()),
    FFMpegCodec(name='ansi', flags='V....D', description='ASCII/ANSI art', options=()),
    FFMpegCodec(name='apng', flags='VF...D', description='APNG (Animated Portable Network Graphics) image', options=()),
    FFMpegCodec(name='arbc', flags='V....D', description="Gryphon's Anim Compressor", options=()),
    FFMpegCodec(name='argo', flags='V....D', description='Argonaut Games Video', options=()),
    FFMpegCodec(name='asv1', flags='V....D', description='ASUS V1', options=()),
    FFMpegCodec(name='asv2', flags='V....D', description='ASUS V2', options=()),
    FFMpegCodec(name='aura', flags='V....D', description='Auravision AURA', options=()),
    FFMpegCodec(name='aura2', flags='V....D', description='Auravision Aura 2', options=()),
    FFMpegCodec(name='libdav1d', flags='V.....', description='dav1d AV1 decoder by VideoLAN (codec av1)', options=()),
    FFMpegCodec(name='av1', flags='V....D', description='Alliance for Open Media AV1', options=()),
    FFMpegCodec(name='av1_cuvid', flags='V.....', description='Nvidia CUVID AV1 decoder (codec av1)', options=()),
    FFMpegCodec(name='avrn', flags='V....D', description='Avid AVI Codec', options=()),
    FFMpegCodec(name='avrp', flags='V....D', description='Avid 1:1 10-bit RGB Packer', options=()),
    FFMpegCodec(name='avs', flags='V....D', description='AVS (Audio Video Standard) video', options=()),
    FFMpegCodec(name='avui', flags='V....D', description='Avid Meridien Uncompressed', options=()),
    FFMpegCodec(name='ayuv', flags='V....D', description='Uncompressed packed MS 4:4:4:4', options=()),
    FFMpegCodec(name='bethsoftvid', flags='V....D', description='Bethesda VID video', options=()),
    FFMpegCodec(name='bfi', flags='V....D', description='Brute Force & Ignorance', options=()),
    FFMpegCodec(name='binkvideo', flags='V....D', description='Bink video', options=()),
    FFMpegCodec(name='bintext', flags='V....D', description='Binary text', options=()),
    FFMpegCodec(name='bitpacked', flags='VF....', description='Bitpacked', options=()),
    FFMpegCodec(name='bmp', flags='V....D', description='BMP (Windows and OS/2 bitmap)', options=()),
    FFMpegCodec(name='bmv_video', flags='V....D', description='Discworld II BMV video', options=()),
    FFMpegCodec(name='brender_pix', flags='V....D', description='BRender PIX image', options=()),
    FFMpegCodec(name='c93', flags='V....D', description='Interplay C93', options=()),
    FFMpegCodec(name='cavs', flags='V....D', description='Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)', options=()),
    FFMpegCodec(name='cdgraphics', flags='V....D', description='CD Graphics video', options=()),
    FFMpegCodec(name='cdtoons', flags='V....D', description='CDToons video', options=()),
    FFMpegCodec(name='cdxl', flags='V....D', description='Commodore CDXL video', options=()),
    FFMpegCodec(name='cfhd', flags='VF...D', description='GoPro CineForm HD', options=()),
    FFMpegCodec(name='cinepak', flags='V....D', description='Cinepak', options=()),
    FFMpegCodec(name='clearvideo', flags='V....D', description='Iterated Systems ClearVideo', options=()),
    FFMpegCodec(name='cljr', flags='V....D', description='Cirrus Logic AccuPak', options=()),
    FFMpegCodec(name='cllc', flags='VF...D', description='Canopus Lossless Codec', options=()),
    FFMpegCodec(name='eacmv', flags='V....D', description='Electronic Arts CMV video (codec cmv)', options=()),
    FFMpegCodec(name='cpia', flags='V....D', description='CPiA video format', options=()),
    FFMpegCodec(name='cri', flags='VF...D', description='Cintel RAW', options=()),
    FFMpegCodec(name='camstudio', flags='V....D', description='CamStudio (codec cscd)', options=()),
    FFMpegCodec(name='cyuv', flags='V....D', description='Creative YUV (CYUV)', options=()),
    FFMpegCodec(name='dds', flags='V.S..D', description='DirectDraw Surface image decoder', options=()),
    FFMpegCodec(name='dfa', flags='V....D', description='Chronomaster DFA', options=()),
    FFMpegCodec(name='dirac', flags='V.S..D', description='BBC Dirac VC-2', options=()),
    FFMpegCodec(name='dnxhd', flags='VFS..D', description='VC3/DNxHD', options=()),
    FFMpegCodec(name='dpx', flags='V....D', description='DPX (Digital Picture Exchange) image', options=()),
    FFMpegCodec(name='dsicinvideo', flags='V....D', description='Delphine Software International CIN video', options=()),
    FFMpegCodec(name='dvvideo', flags='VFS..D', description='DV (Digital Video)', options=()),
    FFMpegCodec(name='dxa', flags='V....D', description='Feeble Files/ScummVM DXA', options=()),
    FFMpegCodec(name='dxtory', flags='VF...D', description='Dxtory', options=()),
    FFMpegCodec(name='dxv', flags='VFS..D', description='Resolume DXV', options=()),
    FFMpegCodec(name='escape124', flags='V....D', description='Escape 124', options=()),
    FFMpegCodec(name='escape130', flags='V....D', description='Escape 130', options=()),
    FFMpegCodec(name='exr', flags='VFS..D', description='OpenEXR image', options=()),
    FFMpegCodec(name='ffv1', flags='VFS..D', description='FFmpeg video codec #1', options=()),
    FFMpegCodec(name='ffvhuff', flags='VF..BD', description='Huffyuv FFmpeg variant', options=()),
    FFMpegCodec(name='fic', flags='V.S..D', description='Mirillis FIC', options=()),
    FFMpegCodec(name='fits', flags='V....D', description='Flexible Image Transport System', options=()),
    FFMpegCodec(name='flashsv', flags='V....D', description='Flash Screen Video v1', options=()),
    FFMpegCodec(name='flashsv2', flags='V....D', description='Flash Screen Video v2', options=()),
    FFMpegCodec(name='flic', flags='V....D', description='Autodesk Animator Flic video', options=()),
    FFMpegCodec(name='flv', flags='V...BD', description='FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (codec flv1)', options=()),
    FFMpegCodec(name='fmvc', flags='V....D', description='FM Screen Capture Codec', options=()),
    FFMpegCodec(name='fraps', flags='VF...D', description='Fraps', options=()),
    FFMpegCodec(name='frwu', flags='V....D', description='Forward Uncompressed', options=()),
    FFMpegCodec(name='g2m', flags='V....D', description='Go2Meeting', options=()),
    FFMpegCodec(name='gdv', flags='V....D', description='Gremlin Digital Video', options=()),
    FFMpegCodec(name='gem', flags='V....D', description='GEM Raster image', options=()),
    FFMpegCodec(name='gif', flags='V....D', description='GIF (Graphics Interchange Format)', options=()),
    FFMpegCodec(name='h261', flags='V....D', description='H.261', options=()),
    FFMpegCodec(name='h263', flags='V...BD', description='H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegCodec(name='h263_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.263 decoder wrapper (codec h263)', options=()),
    FFMpegCodec(name='h263i', flags='V...BD', description='Intel H.263', options=()),
    FFMpegCodec(name='h263p', flags='V...BD', description='H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegCodec(name='h264', flags='VFS..D', description='H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10', options=()),
    FFMpegCodec(name='h264_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.264 decoder wrapper (codec h264)', options=()),
    FFMpegCodec(name='h264_cuvid', flags='V.....', description='Nvidia CUVID H264 decoder (codec h264)', options=()),
    FFMpegCodec(name='hap', flags='VFS..D', description='Vidvox Hap', options=()),
    FFMpegCodec(name='hdr', flags='VF...D', description='HDR (Radiance RGBE format) image', options=()),
    FFMpegCodec(name='hevc', flags='VFS..D', description='HEVC (High Efficiency Video Coding)', options=()),
    FFMpegCodec(name='hevc_v4l2m2m', flags='V.....', description='V4L2 mem2mem HEVC decoder wrapper (codec hevc)', options=()),
    FFMpegCodec(name='hevc_cuvid', flags='V.....', description='Nvidia CUVID HEVC decoder (codec hevc)', options=()),
    FFMpegCodec(name='hnm4video', flags='V....D', description='HNM 4 video', options=()),
    FFMpegCodec(name='hq_hqa', flags='V....D', description='Canopus HQ/HQA', options=()),
    FFMpegCodec(name='hqx', flags='VFS..D', description='Canopus HQX', options=()),
    FFMpegCodec(name='huffyuv', flags='VF..BD', description='Huffyuv / HuffYUV', options=()),
    FFMpegCodec(name='hymt', flags='VF..BD', description='HuffYUV MT', options=()),
    FFMpegCodec(name='idcinvideo', flags='V....D', description='id Quake II CIN video (codec idcin)', options=()),
    FFMpegCodec(name='idf', flags='V....D', description='iCEDraw text', options=()),
    FFMpegCodec(name='iff', flags='V....D', description='IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (codec iff_ilbm)', options=()),
    FFMpegCodec(name='imm4', flags='V....D', description='Infinity IMM4', options=()),
    FFMpegCodec(name='imm5', flags='V.....', description='Infinity IMM5', options=()),
    FFMpegCodec(name='indeo2', flags='V....D', description='Intel Indeo 2', options=()),
    FFMpegCodec(name='indeo3', flags='V....D', description='Intel Indeo 3', options=()),
    FFMpegCodec(name='indeo4', flags='V....D', description='Intel Indeo Video Interactive 4', options=()),
    FFMpegCodec(name='indeo5', flags='V....D', description='Intel Indeo Video Interactive 5', options=()),
    FFMpegCodec(name='interplayvideo', flags='V....D', description='Interplay MVE video', options=()),
    FFMpegCodec(name='ipu', flags='V....D', description='IPU Video', options=()),
    FFMpegCodec(name='jpeg2000', flags='VFS..D', description='JPEG 2000', options=()),
    FFMpegCodec(name='jpegls', flags='V....D', description='JPEG-LS', options=()),
    FFMpegCodec(name='libjxl', flags='V....D', description='libjxl JPEG XL (codec jpegxl)', options=()),
    FFMpegCodec(name='jv', flags='V....D', description='Bitmap Brothers JV video', options=()),
    FFMpegCodec(name='kgv1', flags='V....D', description='Kega Game Video', options=()),
    FFMpegCodec(name='kmvc', flags='V....D', description="Karl Morton's video codec", options=()),
    FFMpegCodec(name='lagarith', flags='VF...D', description='Lagarith lossless', options=()),
    FFMpegCodec(name='loco', flags='V....D', description='LOCO', options=()),
    FFMpegCodec(name='lscr', flags='V....D', description='LEAD Screen Capture', options=()),
    FFMpegCodec(name='m101', flags='V....D', description='Matrox Uncompressed SD', options=()),
    FFMpegCodec(name='eamad', flags='V....D', description='Electronic Arts Madcow Video (codec mad)', options=()),
    FFMpegCodec(name='magicyuv', flags='VFS..D', description='MagicYUV video', options=()),
    FFMpegCodec(name='mdec', flags='VF...D', description='Sony PlayStation MDEC (Motion DECoder)', options=()),
    FFMpegCodec(name='media100', flags='V....D', description='Media 100', options=()),
    FFMpegCodec(name='mimic', flags='VF...D', description='Mimic', options=()),
    FFMpegCodec(name='mjpeg', flags='V....D', description='MJPEG (Motion JPEG)', options=()),
    FFMpegCodec(name='mjpeg_cuvid', flags='V.....', description='Nvidia CUVID MJPEG decoder (codec mjpeg)', options=()),
    FFMpegCodec(name='mjpegb', flags='V....D', description='Apple MJPEG-B', options=()),
    FFMpegCodec(name='mmvideo', flags='V....D', description='American Laser Games MM Video', options=()),
    FFMpegCodec(name='mobiclip', flags='V....D', description='MobiClip Video', options=()),
    FFMpegCodec(name='motionpixels', flags='V....D', description='Motion Pixels video', options=()),
    FFMpegCodec(name='mpeg1video', flags='V.S.BD', description='MPEG-1 video', options=()),
    FFMpegCodec(name='mpeg1_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG1 decoder wrapper (codec mpeg1video)', options=()),
    FFMpegCodec(name='mpeg1_cuvid', flags='V.....', description='Nvidia CUVID MPEG1VIDEO decoder (codec mpeg1video)', options=()),
    FFMpegCodec(name='mpeg2video', flags='V.S.BD', description='MPEG-2 video', options=()),
    FFMpegCodec(name='mpegvideo', flags='V.S.BD', description='MPEG-1 video (codec mpeg2video)', options=()),
    FFMpegCodec(name='mpeg2_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG2 decoder wrapper (codec mpeg2video)', options=()),
    FFMpegCodec(name='mpeg2_cuvid', flags='V.....', description='Nvidia CUVID MPEG2VIDEO decoder (codec mpeg2video)', options=()),
    FFMpegCodec(name='mpeg4', flags='VF..BD', description='MPEG-4 part 2', options=()),
    FFMpegCodec(name='mpeg4_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG4 decoder wrapper (codec mpeg4)', options=()),
    FFMpegCodec(name='mpeg4_cuvid', flags='V.....', description='Nvidia CUVID MPEG4 decoder (codec mpeg4)', options=()),
    FFMpegCodec(name='msa1', flags='V....D', description='MS ATC Screen', options=()),
    FFMpegCodec(name='mscc', flags='V....D', description='Mandsoft Screen Capture Codec', options=()),
    FFMpegCodec(name='msmpeg4v1', flags='V...BD', description='MPEG-4 part 2 Microsoft variant version 1', options=()),
    FFMpegCodec(name='msmpeg4v2', flags='V...BD', description='MPEG-4 part 2 Microsoft variant version 2', options=()),
    FFMpegCodec(name='msmpeg4', flags='V...BD', description='MPEG-4 part 2 Microsoft variant version 3 (codec msmpeg4v3)', options=()),
    FFMpegCodec(name='msp2', flags='V....D', description='Microsoft Paint (MSP) version 2', options=()),
    FFMpegCodec(name='msrle', flags='V....D', description='Microsoft RLE', options=()),
    FFMpegCodec(name='mss1', flags='V....D', description='MS Screen 1', options=()),
    FFMpegCodec(name='mss2', flags='V....D', description='MS Windows Media Video V9 Screen', options=()),
    FFMpegCodec(name='msvideo1', flags='V....D', description='Microsoft Video 1', options=()),
    FFMpegCodec(name='mszh', flags='VF...D', description='LCL (LossLess Codec Library) MSZH', options=()),
    FFMpegCodec(name='mts2', flags='V....D', description='MS Expression Encoder Screen', options=()),
    FFMpegCodec(name='mv30', flags='V....D', description='MidiVid 3.0', options=()),
    FFMpegCodec(name='mvc1', flags='V....D', description='Silicon Graphics Motion Video Compressor 1', options=()),
    FFMpegCodec(name='mvc2', flags='V....D', description='Silicon Graphics Motion Video Compressor 2', options=()),
    FFMpegCodec(name='mvdv', flags='V....D', description='MidiVid VQ', options=()),
    FFMpegCodec(name='mvha', flags='V....D', description='MidiVid Archive Codec', options=()),
    FFMpegCodec(name='mwsc', flags='V....D', description='MatchWare Screen Capture Codec', options=()),
    FFMpegCodec(name='mxpeg', flags='V....D', description='Mobotix MxPEG video', options=()),
    FFMpegCodec(name='notchlc', flags='VF...D', description='NotchLC', options=()),
    FFMpegCodec(name='nuv', flags='V....D', description='NuppelVideo/RTJPEG', options=()),
    FFMpegCodec(name='paf_video', flags='V....D', description='Amazing Studio Packed Animation File Video', options=()),
    FFMpegCodec(name='pam', flags='V....D', description='PAM (Portable AnyMap) image', options=()),
    FFMpegCodec(name='pbm', flags='V....D', description='PBM (Portable BitMap) image', options=()),
    FFMpegCodec(name='pcx', flags='V....D', description='PC Paintbrush PCX image', options=()),
    FFMpegCodec(name='pdv', flags='V....D', description='PDV (PlayDate Video)', options=()),
    FFMpegCodec(name='pfm', flags='V....D', description='PFM (Portable FloatMap) image', options=()),
    FFMpegCodec(name='pgm', flags='V....D', description='PGM (Portable GrayMap) image', options=()),
    FFMpegCodec(name='pgmyuv', flags='V....D', description='PGMYUV (Portable GrayMap YUV) image', options=()),
    FFMpegCodec(name='pgx', flags='V....D', description='PGX (JPEG2000 Test Format)', options=()),
    FFMpegCodec(name='phm', flags='V....D', description='PHM (Portable HalfFloatMap) image', options=()),
    FFMpegCodec(name='photocd', flags='VF...D', description='Kodak Photo CD', options=()),
    FFMpegCodec(name='pictor', flags='V....D', description='Pictor/PC Paint', options=()),
    FFMpegCodec(name='pixlet', flags='VF...D', description='Apple Pixlet', options=()),
    FFMpegCodec(name='png', flags='VF...D', description='PNG (Portable Network Graphics) image', options=()),
    FFMpegCodec(name='ppm', flags='V....D', description='PPM (Portable PixelMap) image', options=()),
    FFMpegCodec(name='prores', flags='VFS..D', description='Apple ProRes (iCodec Pro)', options=()),
    FFMpegCodec(name='prosumer', flags='V....D', description='Brooktree ProSumer Video', options=()),
    FFMpegCodec(name='psd', flags='VF...D', description='Photoshop PSD file', options=()),
    FFMpegCodec(name='ptx', flags='V....D', description='V.Flash PTX image', options=()),
    FFMpegCodec(name='qdraw', flags='V....D', description='Apple QuickDraw', options=()),
    FFMpegCodec(name='qoi', flags='VF...D', description='QOI (Quite OK Image format) image', options=()),
    FFMpegCodec(name='qpeg', flags='V....D', description='Q-team QPEG', options=()),
    FFMpegCodec(name='qtrle', flags='V....D', description='QuickTime Animation (RLE) video', options=()),
    FFMpegCodec(name='r10k', flags='V....D', description='AJA Kona 10-bit RGB Codec', options=()),
    FFMpegCodec(name='r210', flags='V....D', description='Uncompressed RGB 10-bit', options=()),
    FFMpegCodec(name='rasc', flags='V....D', description='RemotelyAnywhere Screen Capture', options=()),
    FFMpegCodec(name='rawvideo', flags='V.....', description='raw video', options=()),
    FFMpegCodec(name='rl2', flags='V....D', description='RL2 video', options=()),
    FFMpegCodec(name='roqvideo', flags='V....D', description='id RoQ video (codec roq)', options=()),
    FFMpegCodec(name='rpza', flags='V....D', description='QuickTime video (RPZA)', options=()),
    FFMpegCodec(name='rscc', flags='V....D', description='innoHeim/Rsupport Screen Capture Codec', options=()),
    FFMpegCodec(name='rtv1', flags='VF...D', description='RTV1 (RivaTuner Video)', options=()),
    FFMpegCodec(name='rv10', flags='V....D', description='RealVideo 1.0', options=()),
    FFMpegCodec(name='rv20', flags='V....D', description='RealVideo 2.0', options=()),
    FFMpegCodec(name='rv30', flags='VF...D', description='RealVideo 3.0', options=()),
    FFMpegCodec(name='rv40', flags='VF...D', description='RealVideo 4.0', options=()),
    FFMpegCodec(name='sanm', flags='V....D', description='LucasArts SANM/Smush video', options=()),
    FFMpegCodec(name='scpr', flags='V....D', description='ScreenPressor', options=()),
    FFMpegCodec(name='screenpresso', flags='V....D', description='Screenpresso', options=()),
    FFMpegCodec(name='sga', flags='V....D', description='Digital Pictures SGA Video', options=()),
    FFMpegCodec(name='sgi', flags='V....D', description='SGI image', options=()),
    FFMpegCodec(name='sgirle', flags='V....D', description='Silicon Graphics RLE 8-bit video', options=()),
    FFMpegCodec(name='sheervideo', flags='VF...D', description='BitJazz SheerVideo', options=()),
    FFMpegCodec(name='simbiosis_imx', flags='V....D', description='Simbiosis Interactive IMX Video', options=()),
    FFMpegCodec(name='smackvid', flags='V....D', description='Smacker video (codec smackvideo)', options=()),
    FFMpegCodec(name='smc', flags='V....D', description='QuickTime Graphics (SMC)', options=()),
    FFMpegCodec(name='smvjpeg', flags='V....D', description='SMV JPEG', options=()),
    FFMpegCodec(name='snow', flags='V....D', description='Snow', options=()),
    FFMpegCodec(name='sp5x', flags='V....D', description='Sunplus JPEG (SP5X)', options=()),
    FFMpegCodec(name='speedhq', flags='V....D', description='NewTek SpeedHQ', options=()),
    FFMpegCodec(name='srgc', flags='V....D', description='Screen Recorder Gold Codec', options=()),
    FFMpegCodec(name='sunrast', flags='V....D', description='Sun Rasterfile image', options=()),
    FFMpegCodec(name='librsvg', flags='V....D', description='Librsvg rasterizer (codec svg)', options=()),
    FFMpegCodec(name='svq1', flags='V....D', description='Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1', options=()),
    FFMpegCodec(name='svq3', flags='V...BD', description='Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3', options=()),
    FFMpegCodec(name='targa', flags='V....D', description='Truevision Targa image', options=()),
    FFMpegCodec(name='targa_y216', flags='V....D', description='Pinnacle TARGA CineWave YUV16', options=()),
    FFMpegCodec(name='tdsc', flags='V....D', description='TDSC', options=()),
    FFMpegCodec(name='eatgq', flags='V....D', description='Electronic Arts TGQ video (codec tgq)', options=()),
    FFMpegCodec(name='eatgv', flags='V....D', description='Electronic Arts TGV video (codec tgv)', options=()),
    FFMpegCodec(name='theora', flags='VF..BD', description='Theora', options=()),
    FFMpegCodec(name='thp', flags='V....D', description='Nintendo Gamecube THP video', options=()),
    FFMpegCodec(name='tiertexseqvideo', flags='V....D', description='Tiertex Limited SEQ video', options=()),
    FFMpegCodec(name='tiff', flags='VF...D', description='TIFF image', options=()),
    FFMpegCodec(name='tmv', flags='V....D', description='8088flex TMV', options=()),
    FFMpegCodec(name='eatqi', flags='V....D', description='Electronic Arts TQI Video (codec tqi)', options=()),
    FFMpegCodec(name='truemotion1', flags='V....D', description='Duck TrueMotion 1.0', options=()),
    FFMpegCodec(name='truemotion2', flags='V....D', description='Duck TrueMotion 2.0', options=()),
    FFMpegCodec(name='truemotion2rt', flags='V....D', description='Duck TrueMotion 2.0 Real Time', options=()),
    FFMpegCodec(name='camtasia', flags='V....D', description='TechSmith Screen Capture Codec (codec tscc)', options=()),
    FFMpegCodec(name='tscc2', flags='V....D', description='TechSmith Screen Codec 2', options=()),
    FFMpegCodec(name='txd', flags='V....D', description='Renderware TXD (TeXture Dictionary) image', options=()),
    FFMpegCodec(name='ultimotion', flags='V....D', description='IBM UltiMotion (codec ulti)', options=()),
    FFMpegCodec(name='utvideo', flags='VF...D', description='Ut Video', options=()),
    FFMpegCodec(name='v210', flags='VFS..D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v210x', flags='V....D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v308', flags='V....D', description='Uncompressed packed 4:4:4', options=()),
    FFMpegCodec(name='v408', flags='V....D', description='Uncompressed packed QT 4:4:4:4', options=()),
    FFMpegCodec(name='v410', flags='VFS..D', description='Uncompressed 4:4:4 10-bit', options=()),
    FFMpegCodec(name='vb', flags='V....D', description='Beam Software VB', options=()),
    FFMpegCodec(name='vble', flags='VF...D', description='VBLE Lossless Codec', options=()),
    FFMpegCodec(name='vbn', flags='V.S..D', description='Vizrt Binary Image', options=()),
    FFMpegCodec(name='vc1', flags='V....D', description='SMPTE VC-1', options=()),
    FFMpegCodec(name='vc1_v4l2m2m', flags='V.....', description='V4L2 mem2mem VC1 decoder wrapper (codec vc1)', options=()),
    FFMpegCodec(name='vc1_cuvid', flags='V.....', description='Nvidia CUVID VC1 decoder (codec vc1)', options=()),
    FFMpegCodec(name='vc1image', flags='V....D', description='Windows Media Video 9 Image v2', options=()),
    FFMpegCodec(name='vcr1', flags='V....D', description='ATI VCR1', options=()),
    FFMpegCodec(name='xl', flags='V....D', description='Miro VideoXL (codec vixl)', options=()),
    FFMpegCodec(name='vmdvideo', flags='V....D', description='Sierra VMD video', options=()),
    FFMpegCodec(name='vmix', flags='VFS..D', description='vMix Video', options=()),
    FFMpegCodec(name='vmnc', flags='V....D', description='VMware Screen Codec / VMware Video', options=()),
    FFMpegCodec(name='vnull', flags='V....D', description='null video', options=()),
    FFMpegCodec(name='vp3', flags='VF..BD', description='On2 VP3', options=()),
    FFMpegCodec(name='vp4', flags='VF..BD', description='On2 VP4', options=()),
    FFMpegCodec(name='vp5', flags='V....D', description='On2 VP5', options=()),
    FFMpegCodec(name='vp6', flags='V....D', description='On2 VP6', options=()),
    FFMpegCodec(name='vp6a', flags='V.S..D', description='On2 VP6 (Flash version, with alpha channel)', options=()),
    FFMpegCodec(name='vp6f', flags='V....D', description='On2 VP6 (Flash version)', options=()),
    FFMpegCodec(name='vp7', flags='V....D', description='On2 VP7', options=()),
    FFMpegCodec(name='vp8', flags='VFS..D', description='On2 VP8', options=()),
    FFMpegCodec(name='vp8_v4l2m2m', flags='V.....', description='V4L2 mem2mem VP8 decoder wrapper (codec vp8)', options=()),
    FFMpegCodec(name='libvpx', flags='V....D', description='libvpx VP8 (codec vp8)', options=()),
    FFMpegCodec(name='vp8_cuvid', flags='V.....', description='Nvidia CUVID VP8 decoder (codec vp8)', options=()),
    FFMpegCodec(name='vp9', flags='VFS..D', description='Google VP9', options=()),
    FFMpegCodec(name='vp9_v4l2m2m', flags='V.....', description='V4L2 mem2mem VP9 decoder wrapper (codec vp9)', options=()),
    FFMpegCodec(name='vp9_cuvid', flags='V.....', description='Nvidia CUVID VP9 decoder (codec vp9)', options=()),
    FFMpegCodec(name='vqc', flags='V....D', description='ViewQuest VQC', options=()),
    FFMpegCodec(name='wbmp', flags='VF...D', description='WBMP (Wireless Application Protocol Bitmap) image', options=()),
    FFMpegCodec(name='wcmv', flags='V....D', description='WinCAM Motion Video', options=()),
    FFMpegCodec(name='webp', flags='VF...D', description='WebP image', options=()),
    FFMpegCodec(name='wmv1', flags='V...BD', description='Windows Media Video 7', options=()),
    FFMpegCodec(name='wmv2', flags='V...BD', description='Windows Media Video 8', options=()),
    FFMpegCodec(name='wmv3', flags='V....D', description='Windows Media Video 9', options=()),
    FFMpegCodec(name='wmv3image', flags='V....D', description='Windows Media Video 9 Image', options=()),
    FFMpegCodec(name='wnv1', flags='V....D', description='Winnov WNV1', options=()),
    FFMpegCodec(name='wrapped_avframe', flags='V.....', description='AVPacket to AVFrame passthrough', options=()),
    FFMpegCodec(name='vqavideo', flags='V....D', description='Westwood Studios VQA (Vector Quantized Animation) video (codec ws_vqa)', options=()),
    FFMpegCodec(name='xan_wc3', flags='V....D', description='Wing Commander III / Xan', options=()),
    FFMpegCodec(name='xan_wc4', flags='V....D', description='Wing Commander IV / Xxan', options=()),
    FFMpegCodec(name='xbin', flags='V....D', description='eXtended BINary text', options=()),
    FFMpegCodec(name='xbm', flags='V....D', description='XBM (X BitMap) image', options=()),
    FFMpegCodec(name='xface', flags='V....D', description='X-face image', options=()),
    FFMpegCodec(name='xpm', flags='V....D', description='XPM (X PixMap) image', options=()),
    FFMpegCodec(name='xwd', flags='V....D', description='XWD (X Window Dump) image', options=()),
    FFMpegCodec(name='y41p', flags='V....D', description='Uncompressed YUV 4:1:1 12-bit', options=()),
    FFMpegCodec(name='ylc', flags='VF...D', description='YUY2 Lossless Codec', options=()),
    FFMpegCodec(name='yop', flags='V.....', description='Psygnosis YOP Video', options=()),
    FFMpegCodec(name='yuv4', flags='V....D', description='Uncompressed packed 4:2:0', options=()),
    FFMpegCodec(name='zerocodec', flags='V....D', description='ZeroCodec Lossless Video', options=()),
    FFMpegCodec(name='zlib', flags='VF...D', description='LCL (LossLess Codec Library) ZLIB', options=()),
    FFMpegCodec(name='zmbv', flags='V....D', description='Zip Motion Blocks Video', options=()),
    FFMpegCodec(name='8svx_exp', flags='A....D', description='8SVX exponential', options=()),
    FFMpegCodec(name='8svx_fib', flags='A....D', description='8SVX fibonacci', options=()),
    FFMpegCodec(name='aac', flags='A....D', description='AAC (Advanced Audio Coding)', options=()),
    FFMpegCodec(name='aac_fixed', flags='A....D', description='AAC (Advanced Audio Coding) (codec aac)', options=()),
    FFMpegCodec(name='aac_latm', flags='A....D', description='AAC LATM (Advanced Audio Coding LATM syntax)', options=()),
    FFMpegCodec(name='ac3', flags='A....D', description='ATSC A/52A (AC-3)', options=()),
    FFMpegCodec(name='ac3_fixed', flags='A....D', description='ATSC A/52A (AC-3) (codec ac3)', options=()),
    FFMpegCodec(name='adpcm_4xm', flags='A....D', description='ADPCM 4X Movie', options=()),
    FFMpegCodec(name='adpcm_adx', flags='A....D', description='SEGA CRI ADX ADPCM', options=()),
    FFMpegCodec(name='adpcm_afc', flags='A....D', description='ADPCM Nintendo Gamecube AFC', options=()),
    FFMpegCodec(name='adpcm_agm', flags='A....D', description='ADPCM AmuseGraphics Movie', options=()),
    FFMpegCodec(name='adpcm_aica', flags='A....D', description='ADPCM Yamaha AICA', options=()),
    FFMpegCodec(name='adpcm_argo', flags='A....D', description='ADPCM Argonaut Games', options=()),
    FFMpegCodec(name='adpcm_ct', flags='A....D', description='ADPCM Creative Technology', options=()),
    FFMpegCodec(name='adpcm_dtk', flags='A....D', description='ADPCM Nintendo Gamecube DTK', options=()),
    FFMpegCodec(name='adpcm_ea', flags='A....D', description='ADPCM Electronic Arts', options=()),
    FFMpegCodec(name='adpcm_ea_maxis_xa', flags='A....D', description='ADPCM Electronic Arts Maxis CDROM XA', options=()),
    FFMpegCodec(name='adpcm_ea_r1', flags='A....D', description='ADPCM Electronic Arts R1', options=()),
    FFMpegCodec(name='adpcm_ea_r2', flags='A....D', description='ADPCM Electronic Arts R2', options=()),
    FFMpegCodec(name='adpcm_ea_r3', flags='A....D', description='ADPCM Electronic Arts R3', options=()),
    FFMpegCodec(name='adpcm_ea_xas', flags='A....D', description='ADPCM Electronic Arts XAS', options=()),
    FFMpegCodec(name='g722', flags='A....D', description='G.722 ADPCM (codec adpcm_g722)', options=()),
    FFMpegCodec(name='g726', flags='A....D', description='G.726 ADPCM (codec adpcm_g726)', options=()),
    FFMpegCodec(name='g726le', flags='A....D', description='G.726 ADPCM little-endian (codec adpcm_g726le)', options=()),
    FFMpegCodec(name='adpcm_ima_acorn', flags='A....D', description='ADPCM IMA Acorn Replay', options=()),
    FFMpegCodec(name='adpcm_ima_alp', flags='A....D', description='ADPCM IMA High Voltage Software ALP', options=()),
    FFMpegCodec(name='adpcm_ima_amv', flags='A....D', description='ADPCM IMA AMV', options=()),
    FFMpegCodec(name='adpcm_ima_apc', flags='A....D', description='ADPCM IMA CRYO APC', options=()),
    FFMpegCodec(name='adpcm_ima_apm', flags='A....D', description='ADPCM IMA Ubisoft APM', options=()),
    FFMpegCodec(name='adpcm_ima_cunning', flags='A....D', description='ADPCM IMA Cunning Developments', options=()),
    FFMpegCodec(name='adpcm_ima_dat4', flags='A....D', description='ADPCM IMA Eurocom DAT4', options=()),
    FFMpegCodec(name='adpcm_ima_dk3', flags='A....D', description='ADPCM IMA Duck DK3', options=()),
    FFMpegCodec(name='adpcm_ima_dk4', flags='A....D', description='ADPCM IMA Duck DK4', options=()),
    FFMpegCodec(name='adpcm_ima_ea_eacs', flags='A....D', description='ADPCM IMA Electronic Arts EACS', options=()),
    FFMpegCodec(name='adpcm_ima_ea_sead', flags='A....D', description='ADPCM IMA Electronic Arts SEAD', options=()),
    FFMpegCodec(name='adpcm_ima_iss', flags='A....D', description='ADPCM IMA Funcom ISS', options=()),
    FFMpegCodec(name='adpcm_ima_moflex', flags='A....D', description='ADPCM IMA MobiClip MOFLEX', options=()),
    FFMpegCodec(name='adpcm_ima_mtf', flags='A....D', description="ADPCM IMA Capcom's MT Framework", options=()),
    FFMpegCodec(name='adpcm_ima_oki', flags='A....D', description='ADPCM IMA Dialogic OKI', options=()),
    FFMpegCodec(name='adpcm_ima_qt', flags='A....D', description='ADPCM IMA QuickTime', options=()),
    FFMpegCodec(name='adpcm_ima_rad', flags='A....D', description='ADPCM IMA Radical', options=()),
    FFMpegCodec(name='adpcm_ima_smjpeg', flags='A....D', description='ADPCM IMA Loki SDL MJPEG', options=()),
    FFMpegCodec(name='adpcm_ima_ssi', flags='A....D', description='ADPCM IMA Simon & Schuster Interactive', options=()),
    FFMpegCodec(name='adpcm_ima_wav', flags='A....D', description='ADPCM IMA WAV', options=()),
    FFMpegCodec(name='adpcm_ima_ws', flags='A....D', description='ADPCM IMA Westwood', options=()),
    FFMpegCodec(name='adpcm_ms', flags='A....D', description='ADPCM Microsoft', options=()),
    FFMpegCodec(name='adpcm_mtaf', flags='A....D', description='ADPCM MTAF', options=()),
    FFMpegCodec(name='adpcm_psx', flags='A....D', description='ADPCM Playstation', options=()),
    FFMpegCodec(name='adpcm_sbpro_2', flags='A....D', description='ADPCM Sound Blaster Pro 2-bit', options=()),
    FFMpegCodec(name='adpcm_sbpro_3', flags='A....D', description='ADPCM Sound Blaster Pro 2.6-bit', options=()),
    FFMpegCodec(name='adpcm_sbpro_4', flags='A....D', description='ADPCM Sound Blaster Pro 4-bit', options=()),
    FFMpegCodec(name='adpcm_swf', flags='A....D', description='ADPCM Shockwave Flash', options=()),
    FFMpegCodec(name='adpcm_thp', flags='A....D', description='ADPCM Nintendo THP', options=()),
    FFMpegCodec(name='adpcm_thp_le', flags='A....D', description='ADPCM Nintendo THP (little-endian)', options=()),
    FFMpegCodec(name='adpcm_vima', flags='A....D', description='LucasArts VIMA audio', options=()),
    FFMpegCodec(name='adpcm_xa', flags='A....D', description='ADPCM CDROM XA', options=()),
    FFMpegCodec(name='adpcm_xmd', flags='A....D', description='ADPCM Konami XMD', options=()),
    FFMpegCodec(name='adpcm_yamaha', flags='A....D', description='ADPCM Yamaha', options=()),
    FFMpegCodec(name='adpcm_zork', flags='A....D', description='ADPCM Zork', options=()),
    FFMpegCodec(name='alac', flags='AF...D', description='ALAC (Apple Lossless Audio Codec)', options=()),
    FFMpegCodec(name='amrnb', flags='A....D', description='AMR-NB (Adaptive Multi-Rate NarrowBand) (codec amr_nb)', options=()),
    FFMpegCodec(name='amrwb', flags='A....D', description='AMR-WB (Adaptive Multi-Rate WideBand) (codec amr_wb)', options=()),
    FFMpegCodec(name='anull', flags='A....D', description='null audio', options=()),
    FFMpegCodec(name='apac', flags='A....D', description="Marian's A-pac audio", options=()),
    FFMpegCodec(name='ape', flags='A....D', description="Monkey's Audio", options=()),
    FFMpegCodec(name='aptx', flags='A....D', description='aptX (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='aptx_hd', flags='A....D', description='aptX HD (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='atrac1', flags='A....D', description='ATRAC1 (Adaptive TRansform Acoustic Coding)', options=()),
    FFMpegCodec(name='atrac3', flags='A....D', description='ATRAC3 (Adaptive TRansform Acoustic Coding 3)', options=()),
    FFMpegCodec(name='atrac3al', flags='A....D', description='ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)', options=()),
    FFMpegCodec(name='atrac3plus', flags='A....D', description='ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (codec atrac3p)', options=()),
    FFMpegCodec(name='atrac3plusal', flags='A....D', description='ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (codec atrac3pal)', options=()),
    FFMpegCodec(name='atrac9', flags='A....D', description='ATRAC9 (Adaptive TRansform Acoustic Coding 9)', options=()),
    FFMpegCodec(name='on2avc', flags='A....D', description='On2 Audio for Video Codec (codec avc)', options=()),
    FFMpegCodec(name='binkaudio_dct', flags='A....D', description='Bink Audio (DCT)', options=()),
    FFMpegCodec(name='binkaudio_rdft', flags='A....D', description='Bink Audio (RDFT)', options=()),
    FFMpegCodec(name='bmv_audio', flags='A....D', description='Discworld II BMV audio', options=()),
    FFMpegCodec(name='bonk', flags='A....D', description='Bonk audio', options=()),
    FFMpegCodec(name='cbd2_dpcm', flags='A....D', description='DPCM Cuberoot-Delta-Exact', options=()),
    FFMpegCodec(name='libcodec2', flags='A.....', description='codec2 decoder using libcodec2 (codec codec2)', options=()),
    FFMpegCodec(name='comfortnoise', flags='A....D', description='RFC 3389 comfort noise generator', options=()),
    FFMpegCodec(name='cook', flags='A....D', description='Cook / Cooker / Gecko (RealAudio G2)', options=()),
    FFMpegCodec(name='derf_dpcm', flags='A....D', description='DPCM Xilam DERF', options=()),
    FFMpegCodec(name='dfpwm', flags='A....D', description='DFPWM1a audio', options=()),
    FFMpegCodec(name='dolby_e', flags='A....D', description='Dolby E', options=()),
    FFMpegCodec(name='dsd_lsbf', flags='A.S..D', description='DSD (Direct Stream Digital), least significant bit first', options=()),
    FFMpegCodec(name='dsd_lsbf_planar', flags='A.S..D', description='DSD (Direct Stream Digital), least significant bit first, planar', options=()),
    FFMpegCodec(name='dsd_msbf', flags='A.S..D', description='DSD (Direct Stream Digital), most significant bit first', options=()),
    FFMpegCodec(name='dsd_msbf_planar', flags='A.S..D', description='DSD (Direct Stream Digital), most significant bit first, planar', options=()),
    FFMpegCodec(name='dsicinaudio', flags='A....D', description='Delphine Software International CIN audio', options=()),
    FFMpegCodec(name='dss_sp', flags='A....D', description='Digital Speech Standard - Standard Play mode (DSS SP)', options=()),
    FFMpegCodec(name='dst', flags='A....D', description='DST (Digital Stream Transfer)', options=()),
    FFMpegCodec(name='dca', flags='A....D', description='DCA (DTS Coherent Acoustics) (codec dts)', options=()),
    FFMpegCodec(name='dvaudio', flags='A....D', description='Ulead DV Audio', options=()),
    FFMpegCodec(name='eac3', flags='A....D', description='ATSC A/52B (AC-3, E-AC-3)', options=()),
    FFMpegCodec(name='evrc', flags='A....D', description='EVRC (Enhanced Variable Rate Codec)', options=()),
    FFMpegCodec(name='fastaudio', flags='A....D', description='MobiClip FastAudio', options=()),
    FFMpegCodec(name='flac', flags='AF...D', description='FLAC (Free Lossless Audio Codec)', options=()),
    FFMpegCodec(name='ftr', flags='A....D', description='FTR Voice', options=()),
    FFMpegCodec(name='g723_1', flags='A....D', description='G.723.1', options=()),
    FFMpegCodec(name='g729', flags='A....D', description='G.729', options=()),
    FFMpegCodec(name='gremlin_dpcm', flags='A....D', description='DPCM Gremlin', options=()),
    FFMpegCodec(name='gsm', flags='A....D', description='GSM', options=()),
    FFMpegCodec(name='libgsm', flags='A....D', description='libgsm GSM (codec gsm)', options=()),
    FFMpegCodec(name='gsm_ms', flags='A....D', description='GSM Microsoft variant', options=()),
    FFMpegCodec(name='libgsm_ms', flags='A....D', description='libgsm GSM Microsoft variant (codec gsm_ms)', options=()),
    FFMpegCodec(name='hca', flags='A....D', description='CRI HCA', options=()),
    FFMpegCodec(name='hcom', flags='A....D', description='HCOM Audio', options=()),
    FFMpegCodec(name='iac', flags='A....D', description='IAC (Indeo Audio Coder)', options=()),
    FFMpegCodec(name='ilbc', flags='A....D', description='iLBC (Internet Low Bitrate Codec)', options=()),
    FFMpegCodec(name='imc', flags='A....D', description='IMC (Intel Music Coder)', options=()),
    FFMpegCodec(name='interplay_dpcm', flags='A....D', description='DPCM Interplay', options=()),
    FFMpegCodec(name='interplayacm', flags='A....D', description='Interplay ACM', options=()),
    FFMpegCodec(name='mace3', flags='A....D', description='MACE (Macintosh Audio Compression/Expansion) 3:1', options=()),
    FFMpegCodec(name='mace6', flags='A....D', description='MACE (Macintosh Audio Compression/Expansion) 6:1', options=()),
    FFMpegCodec(name='metasound', flags='A....D', description='Voxware MetaSound', options=()),
    FFMpegCodec(name='misc4', flags='A....D', description='Micronas SC-4 Audio', options=()),
    FFMpegCodec(name='mlp', flags='A....D', description='MLP (Meridian Lossless Packing)', options=()),
    FFMpegCodec(name='mp1', flags='A....D', description='MP1 (MPEG audio layer 1)', options=()),
    FFMpegCodec(name='mp1float', flags='A....D', description='MP1 (MPEG audio layer 1) (codec mp1)', options=()),
    FFMpegCodec(name='mp2', flags='A....D', description='MP2 (MPEG audio layer 2)', options=()),
    FFMpegCodec(name='mp2float', flags='A....D', description='MP2 (MPEG audio layer 2) (codec mp2)', options=()),
    FFMpegCodec(name='mp3float', flags='A....D', description='MP3 (MPEG audio layer 3) (codec mp3)', options=()),
    FFMpegCodec(name='mp3', flags='A....D', description='MP3 (MPEG audio layer 3)', options=()),
    FFMpegCodec(name='mp3adufloat', flags='A....D', description='ADU (Application Data Unit) MP3 (MPEG audio layer 3) (codec mp3adu)', options=()),
    FFMpegCodec(name='mp3adu', flags='A....D', description='ADU (Application Data Unit) MP3 (MPEG audio layer 3)', options=()),
    FFMpegCodec(name='mp3on4float', flags='A....D', description='MP3onMP4 (codec mp3on4)', options=()),
    FFMpegCodec(name='mp3on4', flags='A....D', description='MP3onMP4', options=()),
    FFMpegCodec(name='als', flags='A....D', description='MPEG-4 Audio Lossless Coding (ALS) (codec mp4als)', options=()),
    FFMpegCodec(name='msnsiren', flags='A....D', description='MSN Siren', options=()),
    FFMpegCodec(name='mpc7', flags='A....D', description='Musepack SV7 (codec musepack7)', options=()),
    FFMpegCodec(name='mpc8', flags='A....D', description='Musepack SV8 (codec musepack8)', options=()),
    FFMpegCodec(name='nellymoser', flags='A....D', description='Nellymoser Asao', options=()),
    FFMpegCodec(name='opus', flags='A....D', description='Opus', options=()),
    FFMpegCodec(name='libopus', flags='A....D', description='libopus Opus (codec opus)', options=()),
    FFMpegCodec(name='osq', flags='A....D', description='OSQ (Original Sound Quality)', options=()),
    FFMpegCodec(name='paf_audio', flags='A....D', description='Amazing Studio Packed Animation File Audio', options=()),
    FFMpegCodec(name='pcm_alaw', flags='A....D', description='PCM A-law / G.711 A-law', options=()),
    FFMpegCodec(name='pcm_bluray', flags='A....D', description='PCM signed 16|20|24-bit big-endian for Blu-ray media', options=()),
    FFMpegCodec(name='pcm_dvd', flags='A....D', description='PCM signed 16|20|24-bit big-endian for DVD media', options=()),
    FFMpegCodec(name='pcm_f16le', flags='A....D', description='PCM 16.8 floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f24le', flags='A....D', description='PCM 24.0 floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f32be', flags='A....D', description='PCM 32-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f32le', flags='A....D', description='PCM 32-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f64be', flags='A....D', description='PCM 64-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f64le', flags='A....D', description='PCM 64-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_lxf', flags='A....D', description='PCM signed 20-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_mulaw', flags='A....D', description='PCM mu-law / G.711 mu-law', options=()),
    FFMpegCodec(name='pcm_s16be', flags='A....D', description='PCM signed 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s16be_planar', flags='A....D', description='PCM signed 16-bit big-endian planar', options=()),
    FFMpegCodec(name='pcm_s16le', flags='A....D', description='PCM signed 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s16le_planar', flags='A....D', description='PCM signed 16-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s24be', flags='A....D', description='PCM signed 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s24daud', flags='A....D', description='PCM D-Cinema audio signed 24-bit', options=()),
    FFMpegCodec(name='pcm_s24le', flags='A....D', description='PCM signed 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s24le_planar', flags='A....D', description='PCM signed 24-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s32be', flags='A....D', description='PCM signed 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s32le', flags='A....D', description='PCM signed 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s32le_planar', flags='A....D', description='PCM signed 32-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s64be', flags='A....D', description='PCM signed 64-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s64le', flags='A....D', description='PCM signed 64-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s8', flags='A....D', description='PCM signed 8-bit', options=()),
    FFMpegCodec(name='pcm_s8_planar', flags='A....D', description='PCM signed 8-bit planar', options=()),
    FFMpegCodec(name='pcm_sga', flags='A....D', description='PCM SGA', options=()),
    FFMpegCodec(name='pcm_u16be', flags='A....D', description='PCM unsigned 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u16le', flags='A....D', description='PCM unsigned 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u24be', flags='A....D', description='PCM unsigned 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u24le', flags='A....D', description='PCM unsigned 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u32be', flags='A....D', description='PCM unsigned 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u32le', flags='A....D', description='PCM unsigned 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u8', flags='A....D', description='PCM unsigned 8-bit', options=()),
    FFMpegCodec(name='pcm_vidc', flags='A....D', description='PCM Archimedes VIDC', options=()),
    FFMpegCodec(name='qcelp', flags='A....D', description='QCELP / PureVoice', options=()),
    FFMpegCodec(name='qdm2', flags='A....D', description='QDesign Music Codec 2', options=()),
    FFMpegCodec(name='qdmc', flags='A....D', description='QDesign Music Codec 1', options=()),
    FFMpegCodec(name='real_144', flags='A....D', description='RealAudio 1.0 (14.4K) (codec ra_144)', options=()),
    FFMpegCodec(name='real_288', flags='A....D', description='RealAudio 2.0 (28.8K) (codec ra_288)', options=()),
    FFMpegCodec(name='ralf', flags='A....D', description='RealAudio Lossless', options=()),
    FFMpegCodec(name='rka', flags='A....D', description='RKA (RK Audio)', options=()),
    FFMpegCodec(name='roq_dpcm', flags='A....D', description='DPCM id RoQ', options=()),
    FFMpegCodec(name='s302m', flags='A....D', description='SMPTE 302M', options=()),
    FFMpegCodec(name='sbc', flags='A....D', description='SBC (low-complexity subband codec)', options=()),
    FFMpegCodec(name='sdx2_dpcm', flags='A....D', description='DPCM Squareroot-Delta-Exact', options=()),
    FFMpegCodec(name='shorten', flags='A....D', description='Shorten', options=()),
    FFMpegCodec(name='sipr', flags='A....D', description='RealAudio SIPR / ACELP.NET', options=()),
    FFMpegCodec(name='siren', flags='A....D', description='Siren', options=()),
    FFMpegCodec(name='smackaud', flags='A....D', description='Smacker audio (codec smackaudio)', options=()),
    FFMpegCodec(name='sol_dpcm', flags='A....D', description='DPCM Sol', options=()),
    FFMpegCodec(name='sonic', flags='A..X.D', description='Sonic', options=()),
    FFMpegCodec(name='speex', flags='A....D', description='Speex', options=()),
    FFMpegCodec(name='libspeex', flags='A....D', description='libspeex Speex (codec speex)', options=()),
    FFMpegCodec(name='tak', flags='AF...D', description="TAK (Tom's lossless Audio Kompressor)", options=()),
    FFMpegCodec(name='truehd', flags='A....D', description='TrueHD', options=()),
    FFMpegCodec(name='truespeech', flags='A....D', description='DSP Group TrueSpeech', options=()),
    FFMpegCodec(name='tta', flags='AF...D', description='TTA (True Audio)', options=()),
    FFMpegCodec(name='twinvq', flags='A....D', description='VQF TwinVQ', options=()),
    FFMpegCodec(name='vmdaudio', flags='A....D', description='Sierra VMD audio', options=()),
    FFMpegCodec(name='vorbis', flags='A....D', description='Vorbis', options=()),
    FFMpegCodec(name='libvorbis', flags='A.....', description='libvorbis (codec vorbis)', options=()),
    FFMpegCodec(name='wady_dpcm', flags='A....D', description='DPCM Marble WADY', options=()),
    FFMpegCodec(name='wavarc', flags='A....D', description='Waveform Archiver', options=()),
    FFMpegCodec(name='wavesynth', flags='A....D', description='Wave synthesis pseudo-codec', options=()),
    FFMpegCodec(name='wavpack', flags='AFS..D', description='WavPack', options=()),
    FFMpegCodec(name='ws_snd1', flags='A....D', description='Westwood Audio (SND1) (codec westwood_snd1)', options=()),
    FFMpegCodec(name='wmalossless', flags='A....D', description='Windows Media Audio Lossless', options=()),
    FFMpegCodec(name='wmapro', flags='A....D', description='Windows Media Audio 9 Professional', options=()),
    FFMpegCodec(name='wmav1', flags='A....D', description='Windows Media Audio 1', options=()),
    FFMpegCodec(name='wmav2', flags='A....D', description='Windows Media Audio 2', options=()),
    FFMpegCodec(name='wmavoice', flags='A....D', description='Windows Media Audio Voice', options=()),
    FFMpegCodec(name='xan_dpcm', flags='A....D', description='DPCM Xan', options=()),
    FFMpegCodec(name='xma1', flags='A....D', description='Xbox Media Audio 1', options=()),
    FFMpegCodec(name='xma2', flags='A....D', description='Xbox Media Audio 2', options=()),
    FFMpegCodec(name='ssa', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle (codec ass)', options=()),
    FFMpegCodec(name='ass', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle', options=()),
    FFMpegCodec(name='dvbsub', flags='S.....', description='DVB subtitles (codec dvb_subtitle)', options=()),
    FFMpegCodec(name='libzvbi_teletextdec', flags='S.....', description='Libzvbi DVB teletext decoder (codec dvb_teletext)', options=()),
    FFMpegCodec(name='dvdsub', flags='S.....', description='DVD subtitles (codec dvd_subtitle)', options=()),
    FFMpegCodec(name='cc_dec', flags='S.....', description='Closed Caption (EIA-608 / CEA-708) (codec eia_608)', options=()),
    FFMpegCodec(name='pgssub', flags='S.....', description='HDMV Presentation Graphic Stream subtitles (codec hdmv_pgs_subtitle)', options=()),
    FFMpegCodec(name='jacosub', flags='S.....', description='JACOsub subtitle', options=()),
    FFMpegCodec(name='microdvd', flags='S.....', description='MicroDVD subtitle', options=()),
    FFMpegCodec(name='mov_text', flags='S.....', description='3GPP Timed Text subtitle', options=()),
    FFMpegCodec(name='mpl2', flags='S.....', description='MPL2 subtitle', options=()),
    FFMpegCodec(name='pjs', flags='S.....', description='PJS subtitle', options=()),
    FFMpegCodec(name='realtext', flags='S.....', description='RealText subtitle', options=()),
    FFMpegCodec(name='sami', flags='S.....', description='SAMI subtitle', options=()),
    FFMpegCodec(name='stl', flags='S.....', description='Spruce subtitle format', options=()),
    FFMpegCodec(name='srt', flags='S.....', description='SubRip subtitle (codec subrip)', options=()),
    FFMpegCodec(name='subrip', flags='S.....', description='SubRip subtitle', options=()),
    FFMpegCodec(name='subviewer', flags='S.....', description='SubViewer subtitle', options=()),
    FFMpegCodec(name='subviewer1', flags='S.....', description='SubViewer1 subtitle', options=()),
    FFMpegCodec(name='text', flags='S.....', description='Raw text subtitle', options=()),
    FFMpegCodec(name='vplayer', flags='S.....', description='VPlayer subtitle', options=()),
    FFMpegCodec(name='webvtt', flags='S.....', description='WebVTT subtitle', options=()),
    FFMpegCodec(name='xsub', flags='S.....', description='XSUB', options=()),
  ])
# ---
# name: test_parse_codecs_help_text[encoders]
  list([
    FFMpegCodec(name='a64multi', flags='V....D', description='Multicolor charset for Commodore 64 (codec a64_multi)', options=()),
    FFMpegCodec(name='a64multi5', flags='V....D', description='Multicolor charset for Commodore 64, extended with 5th color (colram) (codec a64_multi5)', options=()),
    FFMpegCodec(name='alias_pix', flags='V....D', description='Alias/Wavefront PIX image', options=()),
    FFMpegCodec(name='amv', flags='V.....', description='AMV Video', options=()),
    FFMpegCodec(name='apng', flags='V....D', description='APNG (Animated Portable Network Graphics) image', options=()),
    FFMpegCodec(name='asv1', flags='V....D', description='ASUS V1', options=()),
    FFMpegCodec(name='asv2', flags='V....D', description='ASUS V2', options=()),
    FFMpegCodec(name='librav1e', flags='V....D', description='librav1e AV1 (codec av1)', options=()),
    FFMpegCodec(name='libsvtav1', flags='V.....', description='SVT-AV1(Scalable Video Technology for AV1) encoder (codec av1)', options=()),
    FFMpegCodec(name='av1_nvenc', flags='V....D', description='NVIDIA NVENC av1 encoder (codec av1)', options=()),
    FFMpegCodec(name='av1_vaapi', flags='V....D', description='AV1 (VAAPI) (codec av1)', options=()),
    FFMpegCodec(name='avrp', flags='V....D', description='Avid 1:1 10-bit RGB Packer', options=()),
    FFMpegCodec(name='avui', flags='V..X.D', description='Avid Meridien Uncompressed', options=()),
    FFMpegCodec(name='ayuv', flags='V....D', description='Uncompressed packed MS 4:4:4:4', options=()),
    FFMpegCodec(name='bitpacked', flags='VF...D', description='Bitpacked', options=()),
    FFMpegCodec(name='bmp', flags='V....D', description='BMP (Windows and OS/2 bitmap)', options=()),
    FFMpegCodec(name='cfhd', flags='VF...D', description='GoPro CineForm HD', options=()),
    FFMpegCodec(name='cinepak', flags='V....D', description='Cinepak', options=()),
    FFMpegCodec(name='cljr', flags='V....D', description='Cirrus Logic AccuPak', options=()),
    FFMpegCodec(name='vc2', flags='V.S..D', description='SMPTE VC-2 (codec dirac)', options=()),
    FFMpegCodec(name='dnxhd', flags='VFS..D', description='VC3/DNxHD', options=()),
    FFMpegCodec(name='dpx', flags='V....D', description='DPX (Digital Picture Exchange) image', options=()),
    FFMpegCodec(name='dvvideo', flags='VFS..D', description='DV (Digital Video)', options=()),
    FFMpegCodec(name='exr', flags='VF...D', description='OpenEXR image', options=()),
    FFMpegCodec(name='ffv1', flags='V.S..D', description='FFmpeg video codec #1', options=()),
    FFMpegCodec(name='ffvhuff', flags='VF...D', description='Huffyuv FFmpeg variant', options=()),
    FFMpegCodec(name='fits', flags='V....D', description='Flexible Image Transport System', options=()),
    FFMpegCodec(name='flashsv', flags='V....D', description='Flash Screen Video', options=()),
    FFMpegCodec(name='flashsv2', flags='V....D', description='Flash Screen Video Version 2', options=()),
    FFMpegCodec(name='flv', flags='V.....', description='FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (codec flv1)', options=()),
    FFMpegCodec(name='gif', flags='V....D', description='GIF (Graphics Interchange Format)', options=()),
    FFMpegCodec(name='h261', flags='V.....', description='H.261', options=()),
    FFMpegCodec(name='h263', flags='V.....', description='H.263 / H.263-1996', options=()),
    FFMpegCodec(name='h263_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.263 encoder wrapper (codec h263)', options=()),
    FFMpegCodec(name='h263p', flags='V.S...', description='H.263+ / H.263-1998 / H.263 version 2', options=()),
    FFMpegCodec(name='libx264', flags='V....D', description='libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (codec h264)', options=()),
    FFMpegCodec(name='libx264rgb', flags='V....D', description='libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 RGB (codec h264)', options=()),
    FFMpegCodec(name='h264_nvenc', flags='V....D', description='NVIDIA NVENC H.264 encoder (codec h264)', options=()),
    FFMpegCodec(name='h264_v4l2m2m', flags='V.....', description='V4L2 mem2mem H.264 encoder wrapper (codec h264)', options=()),
    FFMpegCodec(name='h264_vaapi', flags='V....D', description='H.264/AVC (VAAPI) (codec h264)', options=()),
    FFMpegCodec(name='hap', flags='V.S..D', description='Vidvox Hap', options=()),
    FFMpegCodec(name='hdr', flags='VF...D', description='HDR (Radiance RGBE format) image', options=()),
    FFMpegCodec(name='libx265', flags='V....D', description='libx265 H.265 / HEVC (codec hevc)', options=()),
    FFMpegCodec(name='hevc_nvenc', flags='V....D', description='NVIDIA NVENC hevc encoder (codec hevc)', options=()),
    FFMpegCodec(name='hevc_v4l2m2m', flags='V.....', description='V4L2 mem2mem HEVC encoder wrapper (codec hevc)', options=()),
    FFMpegCodec(name='hevc_vaapi', flags='V....D', description='H.265/HEVC (VAAPI) (codec hevc)', options=()),
    FFMpegCodec(name='huffyuv', flags='VF...D', description='Huffyuv / HuffYUV', options=()),
    FFMpegCodec(name='jpeg2000', flags='VF...D', description='JPEG 2000', options=()),
    FFMpegCodec(name='libopenjpeg', flags='VF....', description='OpenJPEG JPEG 2000 (codec jpeg2000)', options=()),
    FFMpegCodec(name='jpegls', flags='VF...D', description='JPEG-LS', options=()),
    FFMpegCodec(name='libjxl', flags='V.....', description='libjxl JPEG XL (codec jpegxl)', options=()),
    FFMpegCodec(name='ljpeg', flags='VF...D', description='Lossless JPEG', options=()),
    FFMpegCodec(name='magicyuv', flags='VFS..D', description='MagicYUV video', options=()),
    FFMpegCodec(name='mjpeg', flags='VFS...', description='MJPEG (Motion JPEG)', options=()),
    FFMpegCodec(name='mjpeg_vaapi', flags='V....D', description='MJPEG (VAAPI) (codec mjpeg)', options=()),
    FFMpegCodec(name='mpeg1video', flags='V.S...', description='MPEG-1 video', options=()),
    FFMpegCodec(name='mpeg2video', flags='V.S...', description='MPEG-2 video', options=()),
    FFMpegCodec(name='mpeg2_vaapi', flags='V....D', description='MPEG-2 (VAAPI) (codec mpeg2video)', options=()),
    FFMpegCodec(name='mpeg4', flags='V.S...', description='MPEG-4 part 2', options=()),
    FFMpegCodec(name='libxvid', flags='V....D', description='libxvidcore MPEG-4 part 2 (codec mpeg4)', options=()),
    FFMpegCodec(name='mpeg4_v4l2m2m', flags='V.....', description='V4L2 mem2mem MPEG4 encoder wrapper (codec mpeg4)', options=()),
    FFMpegCodec(name='msmpeg4v2', flags='V.....', description='MPEG-4 part 2 Microsoft variant version 2', options=()),
    FFMpegCodec(name='msmpeg4', flags='V.....', description='MPEG-4 part 2 Microsoft variant version 3 (codec msmpeg4v3)', options=()),
    FFMpegCodec(name='msrle', flags='V....D', description='Microsoft RLE', options=()),
    FFMpegCodec(name='msvideo1', flags='V.....', description='Microsoft Video-1', options=()),
    FFMpegCodec(name='pam', flags='V....D', description='PAM (Portable AnyMap) image', options=()),
    FFMpegCodec(name='pbm', flags='V....D', description='PBM (Portable BitMap) image', options=()),
    FFMpegCodec(name='pcx', flags='V....D', description='PC Paintbrush PCX image', options=()),
    FFMpegCodec(name='pfm', flags='V....D', description='PFM (Portable FloatMap) image', options=()),
    FFMpegCodec(name='pgm', flags='V....D', description='PGM (Portable GrayMap) image', options=()),
    FFMpegCodec(name='pgmyuv', flags='V....D', description='PGMYUV (Portable GrayMap YUV) image', options=()),
    FFMpegCodec(name='phm', flags='V....D', description='PHM (Portable HalfFloatMap) image', options=()),
    FFMpegCodec(name='png', flags='VF...D', description='PNG (Portable Network Graphics) image', options=()),
    FFMpegCodec(name='ppm', flags='V....D', description='PPM (Portable PixelMap) image', options=()),
    FFMpegCodec(name='prores', flags='VF...D', description='Apple ProRes', options=()),
    FFMpegCodec(name='prores_aw', flags='VF...D', description='Apple ProRes (codec prores)', options=()),
    FFMpegCodec(name='prores_ks', flags='VFS...', description='Apple ProRes (iCodec Pro) (codec prores)', options=()),
    FFMpegCodec(name='qoi', flags='VF...D', description='QOI (Quite OK Image format) image', options=()),
    FFMpegCodec(name='qtrle', flags='V....D', description='QuickTime Animation (RLE) video', options=()),
    FFMpegCodec(name='r10k', flags='V....D', description='AJA Kona 10-bit RGB Codec', options=()),
    FFMpegCodec(name='r210', flags='V....D', description='Uncompressed RGB 10-bit', options=()),
    FFMpegCodec(name='rawvideo', flags='VF...D', description='raw video', options=()),
    FFMpegCodec(name='roqvideo', flags='V....D', description='id RoQ video (codec roq)', options=()),
    FFMpegCodec(name='rpza', flags='V....D', description='QuickTime video (RPZA)', options=()),
    FFMpegCodec(name='rv10', flags='V.....', description='RealVideo 1.0', options=()),
    FFMpegCodec(name='rv20', flags='V.....', description='RealVideo 2.0', options=()),
    FFMpegCodec(name='sgi', flags='V....D', description='SGI image', options=()),
    FFMpegCodec(name='smc', flags='V....D', description='QuickTime Graphics (SMC)', options=()),
    FFMpegCodec(name='snow', flags='V....D', description='Snow', options=()),
    FFMpegCodec(name='speedhq', flags='V.....', description='NewTek SpeedHQ', options=()),
    FFMpegCodec(name='sunrast', flags='V....D', description='Sun Rasterfile image', options=()),
    FFMpegCodec(name='svq1', flags='V....D', description='Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1', options=()),
    FFMpegCodec(name='targa', flags='V....D', description='Truevision Targa image', options=()),
    FFMpegCodec(name='libtheora', flags='V....D', description='libtheora Theora (codec theora)', options=()),
    FFMpegCodec(name='tiff', flags='VF...D', description='TIFF image', options=()),
    FFMpegCodec(name='utvideo', flags='VF...D', description='Ut Video', options=()),
    FFMpegCodec(name='v210', flags='VF...D', description='Uncompressed 4:2:2 10-bit', options=()),
    FFMpegCodec(name='v308', flags='V....D', description='Uncompressed packed 4:4:4', options=()),
    FFMpegCodec(name='v408', flags='V....D', description='Uncompressed packed QT 4:4:4:4', options=()),
    FFMpegCodec(name='v410', flags='V....D', description='Uncompressed 4:4:4 10-bit', options=()),
    FFMpegCodec(name='vbn', flags='V.S..D', description='Vizrt Binary Image', options=()),
    FFMpegCodec(name='vnull', flags='V.....', description='null video', options=()),
    FFMpegCodec(name='libvpx', flags='V....D', description='libvpx VP8 (codec vp8)', options=()),
    FFMpegCodec(name='vp8_v4l2m2m', flags='V.....', description='V4L2 mem2mem VP8 encoder wrapper (codec vp8)', options=()),
    FFMpegCodec(name='vp8_vaapi', flags='V....D', description='VP8 (VAAPI) (codec vp8)', options=()),
    FFMpegCodec(name='vp9_vaapi', flags='V....D', description='VP9 (VAAPI) (codec vp9)', options=()),
    FFMpegCodec(name='wbmp', flags='VF...D', description='WBMP (Wireless Application Protocol Bitmap) image', options=()),
    FFMpegCodec(name='libwebp_anim', flags='V....D', description='libwebp WebP image (codec webp)', options=()),
    FFMpegCodec(name='libwebp', flags='V....D', description='libwebp WebP image (codec webp)', options=()),
    FFMpegCodec(name='wmv1', flags='V.....', description='Windows Media Video 7', options=()),
    FFMpegCodec(name='wmv2', flags='V.....', description='Windows Media Video 8', options=()),
    FFMpegCodec(name='wrapped_avframe', flags='V.....', description='AVFrame to AVPacket passthrough', options=()),
    FFMpegCodec(name='xbm', flags='V....D', description='XBM (X BitMap) image', options=()),
    FFMpegCodec(name='xface', flags='V....D', description='X-face image', options=()),
    FFMpegCodec(name='xwd', flags='V....D', description='XWD (X Window Dump) image', options=()),
    FFMpegCodec(name='y41p', flags='V....D', description='Uncompressed YUV 4:1:1 12-bit', options=()),
    FFMpegCodec(name='yuv4', flags='V....D', description='Uncompressed packed 4:2:0', options=()),
    FFMpegCodec(name='zlib', flags='VF...D', description='LCL (LossLess Codec Library) ZLIB', options=()),
    FFMpegCodec(name='zmbv', flags='V....D', description='Zip Motion Blocks Video', options=()),
    FFMpegCodec(name='aac', flags='A....D', description='AAC (Advanced Audio Coding)', options=()),
    FFMpegCodec(name='ac3', flags='A....D', description='ATSC A/52A (AC-3)', options=()),
    FFMpegCodec(name='ac3_fixed', flags='A....D', description='ATSC A/52A (AC-3) (codec ac3)', options=()),
    FFMpegCodec(name='adpcm_adx', flags='A....D', description='SEGA CRI ADX ADPCM', options=()),
    FFMpegCodec(name='adpcm_argo', flags='A....D', description='ADPCM Argonaut Games', options=()),
    FFMpegCodec(name='g722', flags='A....D', description='G.722 ADPCM (codec adpcm_g722)', options=()),
    FFMpegCodec(name='g726', flags='A....D', description='G.726 ADPCM (codec adpcm_g726)', options=()),
    FFMpegCodec(name='g726le', flags='A....D', description='G.726 little endian ADPCM ("right-justified") (codec adpcm_g726le)', options=()),
    FFMpegCodec(name='adpcm_ima_alp', flags='A....D', description='ADPCM IMA High Voltage Software ALP', options=()),
    FFMpegCodec(name='adpcm_ima_amv', flags='A....D', description='ADPCM IMA AMV', options=()),
    FFMpegCodec(name='adpcm_ima_apm', flags='A....D', description='ADPCM IMA Ubisoft APM', options=()),
    FFMpegCodec(name='adpcm_ima_qt', flags='A....D', description='ADPCM IMA QuickTime', options=()),
    FFMpegCodec(name='adpcm_ima_ssi', flags='A....D', description='ADPCM IMA Simon & Schuster Interactive', options=()),
    FFMpegCodec(name='adpcm_ima_wav', flags='A....D', description='ADPCM IMA WAV', options=()),
    FFMpegCodec(name='adpcm_ima_ws', flags='A....D', description='ADPCM IMA Westwood', options=()),
    FFMpegCodec(name='adpcm_ms', flags='A....D', description='ADPCM Microsoft', options=()),
    FFMpegCodec(name='adpcm_swf', flags='A....D', description='ADPCM Shockwave Flash', options=()),
    FFMpegCodec(name='adpcm_yamaha', flags='A....D', description='ADPCM Yamaha', options=()),
    FFMpegCodec(name='alac', flags='A....D', description='ALAC (Apple Lossless Audio Codec)', options=()),
    FFMpegCodec(name='anull', flags='A.....', description='null audio', options=()),
    FFMpegCodec(name='aptx', flags='A....D', description='aptX (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='aptx_hd', flags='A....D', description='aptX HD (Audio Processing Technology for Bluetooth)', options=()),
    FFMpegCodec(name='libcodec2', flags='A....D', description='codec2 encoder using libcodec2 (codec codec2)', options=()),
    FFMpegCodec(name='comfortnoise', flags='A....D', description='RFC 3389 comfort noise generator', options=()),
    FFMpegCodec(name='dfpwm', flags='A....D', description='DFPWM1a audio', options=()),
    FFMpegCodec(name='dca', flags='A..X.D', description='DCA (DTS Coherent Acoustics) (codec dts)', options=()),
    FFMpegCodec(name='eac3', flags='A....D', description='ATSC A/52 E-AC-3', options=()),
    FFMpegCodec(name='flac', flags='A....D', description='FLAC (Free Lossless Audio Codec)', options=()),
    FFMpegCodec(name='g723_1', flags='A....D', description='G.723.1', options=()),
    FFMpegCodec(name='libgsm', flags='A....D', description='libgsm GSM (codec gsm)', options=()),
    FFMpegCodec(name='libgsm_ms', flags='A....D', description='libgsm GSM Microsoft variant (codec gsm_ms)', options=()),
    FFMpegCodec(name='mlp', flags='A..X.D', description='MLP (Meridian Lossless Packing)', options=()),
    FFMpegCodec(name='mp2', flags='A....D', description='MP2 (MPEG audio layer 2)', options=()),
    FFMpegCodec(name='mp2fixed', flags='A....D', description='MP2 fixed point (MPEG audio layer 2) (codec mp2)', options=()),
    FFMpegCodec(name='libtwolame', flags='A....D', description='libtwolame MP2 (MPEG audio layer 2) (codec mp2)', options=()),
    FFMpegCodec(name='libmp3lame', flags='A....D', description='libmp3lame MP3 (MPEG audio layer 3) (codec mp3)', options=()),
    FFMpegCodec(name='libshine', flags='A....D', description='libshine MP3 (MPEG audio layer 3) (codec mp3)', options=()),
    FFMpegCodec(name='nellymoser', flags='A....D', description='Nellymoser Asao', options=()),
    FFMpegCodec(name='opus', flags='A..X.D', description='Opus', options=()),
    FFMpegCodec(name='libopus', flags='A....D', description='libopus Opus (codec opus)', options=()),
    FFMpegCodec(name='pcm_alaw', flags='A....D', description='PCM A-law / G.711 A-law', options=()),
    FFMpegCodec(name='pcm_bluray', flags='A....D', description='PCM signed 16|20|24-bit big-endian for Blu-ray media', options=()),
    FFMpegCodec(name='pcm_dvd', flags='A....D', description='PCM signed 16|20|24-bit big-endian for DVD media', options=()),
    FFMpegCodec(name='pcm_f32be', flags='A....D', description='PCM 32-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f32le', flags='A....D', description='PCM 32-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_f64be', flags='A....D', description='PCM 64-bit floating point big-endian', options=()),
    FFMpegCodec(name='pcm_f64le', flags='A....D', description='PCM 64-bit floating point little-endian', options=()),
    FFMpegCodec(name='pcm_mulaw', flags='A....D', description='PCM mu-law / G.711 mu-law', options=()),
    FFMpegCodec(name='pcm_s16be', flags='A....D', description='PCM signed 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s16be_planar', flags='A....D', description='PCM signed 16-bit big-endian planar', options=()),
    FFMpegCodec(name='pcm_s16le', flags='A....D', description='PCM signed 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s16le_planar', flags='A....D', description='PCM signed 16-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s24be', flags='A....D', description='PCM signed 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s24daud', flags='A....D', description='PCM D-Cinema audio signed 24-bit', options=()),
    FFMpegCodec(name='pcm_s24le', flags='A....D', description='PCM signed 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s24le_planar', flags='A....D', description='PCM signed 24-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s32be', flags='A....D', description='PCM signed 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s32le', flags='A....D', description='PCM signed 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s32le_planar', flags='A....D', description='PCM signed 32-bit little-endian planar', options=()),
    FFMpegCodec(name='pcm_s64be', flags='A....D', description='PCM signed 64-bit big-endian', options=()),
    FFMpegCodec(name='pcm_s64le', flags='A....D', description='PCM signed 64-bit little-endian', options=()),
    FFMpegCodec(name='pcm_s8', flags='A....D', description='PCM signed 8-bit', options=()),
    FFMpegCodec(name='pcm_s8_planar', flags='A....D', description='PCM signed 8-bit planar', options=()),
    FFMpegCodec(name='pcm_u16be', flags='A....D', description='PCM unsigned 16-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u16le', flags='A....D', description='PCM unsigned 16-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u24be', flags='A....D', description='PCM unsigned 24-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u24le', flags='A....D', description='PCM unsigned 24-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u32be', flags='A....D', description='PCM unsigned 32-bit big-endian', options=()),
    FFMpegCodec(name='pcm_u32le', flags='A....D', description='PCM unsigned 32-bit little-endian', options=()),
    FFMpegCodec(name='pcm_u8', flags='A....D', description='PCM unsigned 8-bit', options=()),
    FFMpegCodec(name='pcm_vidc', flags='A....D', description='PCM Archimedes VIDC', options=()),
    FFMpegCodec(name='real_144', flags='A....D', description='RealAudio 1.0 (14.4K) (codec ra_144)', options=()),
    FFMpegCodec(name='roq_dpcm', flags='A....D', description='id RoQ DPCM', options=()),
    FFMpegCodec(name='s302m', flags='A..X.D', description='SMPTE 302M', options=()),
    FFMpegCodec(name='sbc', flags='A....D', description='SBC (low-complexity subband codec)', options=()),
    FFMpegCodec(name='sonic', flags='A..X.D', description='Sonic', options=()),
    FFMpegCodec(name='sonicls', flags='A..X.D', description='Sonic lossless', options=()),
    FFMpegCodec(name='libspeex', flags='A....D', description='libspeex Speex (codec speex)', options=()),
    FFMpegCodec(name='truehd', flags='A..X.D', description='TrueHD', options=()),
    FFMpegCodec(name='tta', flags='A....D', description='TTA (True Audio)', options=()),
    FFMpegCodec(name='vorbis', flags='A..X.D', description='Vorbis', options=()),
    FFMpegCodec(name='libvorbis', flags='A....D', description='libvorbis (codec vorbis)', options=()),
    FFMpegCodec(name='wavpack', flags='A....D', description='WavPack', options=()),
    FFMpegCodec(name='wmav1', flags='A....D', description='Windows Media Audio 1', options=()),
    FFMpegCodec(name='wmav2', flags='A....D', description='Windows Media Audio 2', options=()),
    FFMpegCodec(name='ssa', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle (codec ass)', options=()),
    FFMpegCodec(name='ass', flags='S.....', description='ASS (Advanced SubStation Alpha) subtitle', options=()),
    FFMpegCodec(name='dvbsub', flags='S.....', description='DVB subtitles (codec dvb_subtitle)', options=()),
    FFMpegCodec(name='dvdsub', flags='S.....', description='DVD subtitles (codec dvd_subtitle)', options=()),
    FFMpegCodec(name='mov_text', flags='S.....', description='3GPP Timed Text subtitle', options=()),
    FFMpegCodec(name='srt', flags='S.....', description='SubRip subtitle (codec subrip)', options=()),
    FFMpegCodec(name='subrip', flags='S.....', description='SubRip subtitle', options=()),
    FFMpegCodec(name='text', flags='S.....', description='Raw text subtitle', options=()),
    FFMpegCodec(name='ttml', flags='S.....', description='TTML subtitle', options=()),
    FFMpegCodec(name='webvtt', flags='S.....', description='WebVTT subtitle', options=()),
    FFMpegCodec(name='xsub', flags='S.....', description='DivX subtitles (XSUB)', options=()),
  ])
# ---
