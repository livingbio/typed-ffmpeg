[
  "FFMpegCodec(name='012v', flags='D.VI.S', help='Uncompressed 4:2:2 10-bit', options=())",
  "FFMpegCodec(name='4xm', flags='D.V.L.', help='4X Movie', options=())",
  "FFMpegCodec(name='8bps', flags='D.VI.S', help='QuickTime 8BPS video', options=())",
  "FFMpegCodec(name='a64_multi', flags='.EVIL.', help='Multicolor charset for Commodore 64 (encoders: a64multi)', options=())",
  "FFMpegCodec(name='a64_multi5', flags='.EVIL.', help='Multicolor charset for Commodore 64, extended with 5th color (colram) (encoders: a64multi5)', options=())",
  "FFMpegCodec(name='aasc', flags='D.V..S', help='Autodesk RLE', options=())",
  "FFMpegCodec(name='agm', flags='D.V.L.', help='Amuse Graphics Movie', options=())",
  "FFMpegCodec(name='aic', flags='D.VIL.', help='Apple Intermediate Codec', options=())",
  "FFMpegCodec(name='alias_pix', flags='DEVI.S', help='Alias/Wavefront PIX image', options=())",
  "FFMpegCodec(name='amv', flags='DEVIL.', help='AMV Video', options=())",
  "FFMpegCodec(name='anm', flags='D.V.L.', help='Deluxe Paint Animation', options=())",
  "FFMpegCodec(name='ansi', flags='D.V.L.', help='ASCII/ANSI art', options=())",
  "FFMpegCodec(name='apng', flags='DEV..S', help='APNG (Animated Portable Network Graphics) image', options=())",
  "FFMpegCodec(name='arbc', flags='D.V.L.', help=\"Gryphon's Anim Compressor\", options=())",
  "FFMpegCodec(name='argo', flags='D.V.L.', help='Argonaut Games Video', options=())",
  "FFMpegCodec(name='asv1', flags='DEVIL.', help='ASUS V1', options=())",
  "FFMpegCodec(name='asv2', flags='DEVIL.', help='ASUS V2', options=())",
  "FFMpegCodec(name='aura', flags='D.VIL.', help='Auravision AURA', options=())",
  "FFMpegCodec(name='aura2', flags='D.VIL.', help='Auravision Aura 2', options=())",
  "FFMpegCodec(name='av1', flags='DEV.L.', help='Alliance for Open Media AV1 (decoders: libdav1d libaom-av1 av1 av1_cuvid) (encoders: libaom-av1 librav1e libsvtav1 av1_nvenc av1_vaapi)', options=())",
  "FFMpegCodec(name='avrn', flags='D.V...', help='Avid AVI Codec', options=())",
  "FFMpegCodec(name='avrp', flags='DEVI.S', help='Avid 1:1 10-bit RGB Packer', options=())",
  "FFMpegCodec(name='avs', flags='D.V.L.', help='AVS (Audio Video Standard) video', options=())",
  "FFMpegCodec(name='avs2', flags='..V.L.', help='AVS2-P2/IEEE1857.4', options=())",
  "FFMpegCodec(name='avs3', flags='..V.L.', help='AVS3-P2/IEEE1857.10', options=())",
  "FFMpegCodec(name='avui', flags='DEVI.S', help='Avid Meridien Uncompressed', options=())",
  "FFMpegCodec(name='ayuv', flags='DEVI.S', help='Uncompressed packed MS 4:4:4:4', options=())",
  "FFMpegCodec(name='bethsoftvid', flags='D.V.L.', help='Bethesda VID video', options=())",
  "FFMpegCodec(name='bfi', flags='D.V.L.', help='Brute Force & Ignorance', options=())",
  "FFMpegCodec(name='binkvideo', flags='D.V.L.', help='Bink video', options=())",
  "FFMpegCodec(name='bintext', flags='D.VI..', help='Binary text', options=())",
  "FFMpegCodec(name='bitpacked', flags='DEVI.S', help='Bitpacked', options=())",
  "FFMpegCodec(name='bmp', flags='DEVI.S', help='BMP (Windows and OS/2 bitmap)', options=())",
  "FFMpegCodec(name='bmv_video', flags='D.V..S', help='Discworld II BMV video', options=())",
  "FFMpegCodec(name='brender_pix', flags='D.VI.S', help='BRender PIX image', options=())",
  "FFMpegCodec(name='c93', flags='D.V.L.', help='Interplay C93', options=())",
  "FFMpegCodec(name='cavs', flags='D.V.L.', help='Chinese AVS (Audio Video Standard) (AVS1-P2, JiZhun profile)', options=())",
  "FFMpegCodec(name='cdgraphics', flags='D.V.L.', help='CD Graphics video', options=())",
  "FFMpegCodec(name='cdtoons', flags='D.V..S', help='CDToons video', options=())",
  "FFMpegCodec(name='cdxl', flags='D.VIL.', help='Commodore CDXL video', options=())",
  "FFMpegCodec(name='cfhd', flags='DEV.L.', help='GoPro CineForm HD', options=())",
  "FFMpegCodec(name='cinepak', flags='DEV.L.', help='Cinepak', options=())",
  "FFMpegCodec(name='clearvideo', flags='D.V.L.', help='Iterated Systems ClearVideo', options=())",
  "FFMpegCodec(name='cljr', flags='DEVIL.', help='Cirrus Logic AccuPak', options=())",
  "FFMpegCodec(name='cllc', flags='D.VI.S', help='Canopus Lossless Codec', options=())",
  "FFMpegCodec(name='cmv', flags='D.V.L.', help='Electronic Arts CMV video (decoders: eacmv)', options=())",
  "FFMpegCodec(name='cpia', flags='D.V...', help='CPiA video format', options=())",
  "FFMpegCodec(name='cri', flags='D.VILS', help='Cintel RAW', options=())",
  "FFMpegCodec(name='cscd', flags='D.V..S', help='CamStudio (decoders: camstudio)', options=())",
  "FFMpegCodec(name='cyuv', flags='D.VIL.', help='Creative YUV (CYUV)', options=())",
  "FFMpegCodec(name='daala', flags='..V.LS', help='Daala', options=())",
  "FFMpegCodec(name='dds', flags='D.VILS', help='DirectDraw Surface image decoder', options=())",
  "FFMpegCodec(name='dfa', flags='D.V.L.', help='Chronomaster DFA', options=())",
  "FFMpegCodec(name='dirac', flags='DEV.LS', help='Dirac (encoders: vc2)', options=())",
  "FFMpegCodec(name='dnxhd', flags='DEVIL.', help='VC3/DNxHD', options=())",
  "FFMpegCodec(name='dpx', flags='DEVI.S', help='DPX (Digital Picture Exchange) image', options=())",
  "FFMpegCodec(name='dsicinvideo', flags='D.V.L.', help='Delphine Software International CIN video', options=())",
  "FFMpegCodec(name='dvvideo', flags='DEVIL.', help='DV (Digital Video)', options=())",
  "FFMpegCodec(name='dxa', flags='D.V..S', help='Feeble Files/ScummVM DXA', options=())",
  "FFMpegCodec(name='dxtory', flags='D.VI.S', help='Dxtory', options=())",
  "FFMpegCodec(name='dxv', flags='D.VIL.', help='Resolume DXV', options=())",
  "FFMpegCodec(name='escape124', flags='D.V.L.', help='Escape 124', options=())",
  "FFMpegCodec(name='escape130', flags='D.V.L.', help='Escape 130', options=())",
  "FFMpegCodec(name='evc', flags='..V.L.', help='MPEG-5 EVC (Essential Video Coding)', options=())",
  "FFMpegCodec(name='exr', flags='DEVILS', help='OpenEXR image', options=())",
  "FFMpegCodec(name='ffv1', flags='DEV..S', help='FFmpeg video codec #1', options=())",
  "FFMpegCodec(name='ffvhuff', flags='DEVI.S', help='Huffyuv FFmpeg variant', options=())",
  "FFMpegCodec(name='fic', flags='D.V.L.', help='Mirillis FIC', options=())",
  "FFMpegCodec(name='fits', flags='DEVI.S', help='FITS (Flexible Image Transport System)', options=())",
  "FFMpegCodec(name='flashsv', flags='DEV..S', help='Flash Screen Video v1', options=())",
  "FFMpegCodec(name='flashsv2', flags='DEV.L.', help='Flash Screen Video v2', options=())",
  "FFMpegCodec(name='flic', flags='D.V..S', help='Autodesk Animator Flic video', options=())",
  "FFMpegCodec(name='flv1', flags='DEV.L.', help='FLV / Sorenson Spark / Sorenson H.263 (Flash Video) (decoders: flv) (encoders: flv)', options=())",
  "FFMpegCodec(name='fmvc', flags='D.V..S', help='FM Screen Capture Codec', options=())",
  "FFMpegCodec(name='fraps', flags='D.VI.S', help='Fraps', options=())",
  "FFMpegCodec(name='frwu', flags='D.VI.S', help='Forward Uncompressed', options=())",
  "FFMpegCodec(name='g2m', flags='D.V.L.', help='Go2Meeting', options=())",
  "FFMpegCodec(name='gdv', flags='D.V.L.', help='Gremlin Digital Video', options=())",
  "FFMpegCodec(name='gem', flags='D.V.L.', help='GEM Raster image', options=())",
  "FFMpegCodec(name='gif', flags='DEV..S', help='CompuServe GIF (Graphics Interchange Format)', options=())",
  "FFMpegCodec(name='h261', flags='DEV.L.', help='H.261', options=())",
  "FFMpegCodec(name='h263', flags='DEV.L.', help='H.263 / H.263-1996, H.263+ / H.263-1998 / H.263 version 2 (decoders: h263 h263_v4l2m2m) (encoders: h263 h263_v4l2m2m)', options=())",
  "FFMpegCodec(name='h263i', flags='D.V.L.', help='Intel H.263', options=())",
  "FFMpegCodec(name='h263p', flags='DEV.L.', help='H.263+ / H.263-1998 / H.263 version 2', options=())",
  "FFMpegCodec(name='h264', flags='DEV.LS', help='H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (decoders: h264 h264_v4l2m2m h264_cuvid) (encoders: libx264 libx264rgb h264_nvenc h264_v4l2m2m h264_vaapi)', options=())",
  "FFMpegCodec(name='hap', flags='DEVIL.', help='Vidvox Hap', options=())",
  "FFMpegCodec(name='hdr', flags='DEVIL.', help='HDR (Radiance RGBE format) image', options=())",
  "FFMpegCodec(name='hevc', flags='DEV.L.', help='H.265 / HEVC (High Efficiency Video Coding) (decoders: hevc hevc_v4l2m2m hevc_cuvid) (encoders: libx265 hevc_nvenc hevc_v4l2m2m hevc_vaapi)', options=())",
  "FFMpegCodec(name='hnm4video', flags='D.V.L.', help='HNM 4 video', options=())",
  "FFMpegCodec(name='hq_hqa', flags='D.VIL.', help='Canopus HQ/HQA', options=())",
  "FFMpegCodec(name='hqx', flags='D.VIL.', help='Canopus HQX', options=())",
  "FFMpegCodec(name='huffyuv', flags='DEVI.S', help='HuffYUV', options=())",
  "FFMpegCodec(name='hymt', flags='D.VI.S', help='HuffYUV MT', options=())",
  "FFMpegCodec(name='idcin', flags='D.V.L.', help='id Quake II CIN video (decoders: idcinvideo)', options=())",
  "FFMpegCodec(name='idf', flags='D.VI..', help='iCEDraw text', options=())",
  "FFMpegCodec(name='iff_ilbm', flags='D.V.L.', help='IFF ACBM/ANIM/DEEP/ILBM/PBM/RGB8/RGBN (decoders: iff)', options=())",
  "FFMpegCodec(name='imm4', flags='D.V.L.', help='Infinity IMM4', options=())",
  "FFMpegCodec(name='imm5', flags='D.V.L.', help='Infinity IMM5', options=())",
  "FFMpegCodec(name='indeo2', flags='D.V.L.', help='Intel Indeo 2', options=())",
  "FFMpegCodec(name='indeo3', flags='D.V.L.', help='Intel Indeo 3', options=())",
  "FFMpegCodec(name='indeo4', flags='D.V.L.', help='Intel Indeo Video Interactive 4', options=())",
  "FFMpegCodec(name='indeo5', flags='D.V.L.', help='Intel Indeo Video Interactive 5', options=())",
  "FFMpegCodec(name='interplayvideo', flags='D.V.L.', help='Interplay MVE video', options=())",
  "FFMpegCodec(name='ipu', flags='D.VIL.', help='IPU Video', options=())",
  "FFMpegCodec(name='jpeg2000', flags='DEVILS', help='JPEG 2000 (encoders: jpeg2000 libopenjpeg)', options=())",
  "FFMpegCodec(name='jpegls', flags='DEVILS', help='JPEG-LS', options=())",
  "FFMpegCodec(name='jpegxl', flags='DEVILS', help='JPEG XL (decoders: libjxl) (encoders: libjxl)', options=())",
  "FFMpegCodec(name='jv', flags='D.VIL.', help='Bitmap Brothers JV video', options=())",
  "FFMpegCodec(name='kgv1', flags='D.V.L.', help='Kega Game Video', options=())",
  "FFMpegCodec(name='kmvc', flags='D.V.L.', help=\"Karl Morton's video codec\", options=())",
  "FFMpegCodec(name='lagarith', flags='D.VI.S', help='Lagarith lossless', options=())",
  "FFMpegCodec(name='ljpeg', flags='.EVI.S', help='Lossless JPEG', options=())",
  "FFMpegCodec(name='loco', flags='D.VI.S', help='LOCO', options=())",
  "FFMpegCodec(name='lscr', flags='D.V.L.', help='LEAD Screen Capture', options=())",
  "FFMpegCodec(name='m101', flags='D.VI.S', help='Matrox Uncompressed SD', options=())",
  "FFMpegCodec(name='mad', flags='D.V.L.', help='Electronic Arts Madcow Video (decoders: eamad)', options=())",
  "FFMpegCodec(name='magicyuv', flags='DEVI.S', help='MagicYUV video', options=())",
  "FFMpegCodec(name='mdec', flags='D.VIL.', help='Sony PlayStation MDEC (Motion DECoder)', options=())",
  "FFMpegCodec(name='media100', flags='D.VIL.', help='Media 100i', options=())",
  "FFMpegCodec(name='mimic', flags='D.V.L.', help='Mimic', options=())",
  "FFMpegCodec(name='mjpeg', flags='DEVIL.', help='Motion JPEG (decoders: mjpeg mjpeg_cuvid) (encoders: mjpeg mjpeg_vaapi)', options=())",
  "FFMpegCodec(name='mjpegb', flags='D.VIL.', help='Apple MJPEG-B', options=())",
  "FFMpegCodec(name='mmvideo', flags='D.V.L.', help='American Laser Games MM Video', options=())",
  "FFMpegCodec(name='mobiclip', flags='D.V.L.', help='MobiClip Video', options=())",
  "FFMpegCodec(name='motionpixels', flags='D.V.L.', help='Motion Pixels video', options=())",
  "FFMpegCodec(name='mpeg1video', flags='DEV.L.', help='MPEG-1 video (decoders: mpeg1video mpeg1_v4l2m2m mpeg1_cuvid)', options=())",
  "FFMpegCodec(name='mpeg2video', flags='DEV.L.', help='MPEG-2 video (decoders: mpeg2video mpegvideo mpeg2_v4l2m2m mpeg2_cuvid) (encoders: mpeg2video mpeg2_vaapi)', options=())",
  "FFMpegCodec(name='mpeg4', flags='DEV.L.', help='MPEG-4 part 2 (decoders: mpeg4 mpeg4_v4l2m2m mpeg4_cuvid) (encoders: mpeg4 libxvid mpeg4_v4l2m2m)', options=())",
  "FFMpegCodec(name='msa1', flags='D.V.L.', help='MS ATC Screen', options=())",
  "FFMpegCodec(name='mscc', flags='D.VI.S', help='Mandsoft Screen Capture Codec', options=())",
  "FFMpegCodec(name='msmpeg4v1', flags='D.V.L.', help='MPEG-4 part 2 Microsoft variant version 1', options=())",
  "FFMpegCodec(name='msmpeg4v2', flags='DEV.L.', help='MPEG-4 part 2 Microsoft variant version 2', options=())",
  "FFMpegCodec(name='msmpeg4v3', flags='DEV.L.', help='MPEG-4 part 2 Microsoft variant version 3 (decoders: msmpeg4) (encoders: msmpeg4)', options=())",
  "FFMpegCodec(name='msp2', flags='D.VI.S', help='Microsoft Paint (MSP) version 2', options=())",
  "FFMpegCodec(name='msrle', flags='DEV..S', help='Microsoft RLE', options=())",
  "FFMpegCodec(name='mss1', flags='D.V.L.', help='MS Screen 1', options=())",
  "FFMpegCodec(name='mss2', flags='D.VIL.', help='MS Windows Media Video V9 Screen', options=())",
  "FFMpegCodec(name='msvideo1', flags='DEV.L.', help='Microsoft Video 1', options=())",
  "FFMpegCodec(name='mszh', flags='D.VI.S', help='LCL (LossLess Codec Library) MSZH', options=())",
  "FFMpegCodec(name='mts2', flags='D.V.L.', help='MS Expression Encoder Screen', options=())",
  "FFMpegCodec(name='mv30', flags='D.V.L.', help='MidiVid 3.0', options=())",
  "FFMpegCodec(name='mvc1', flags='D.VIL.', help='Silicon Graphics Motion Video Compressor 1', options=())",
  "FFMpegCodec(name='mvc2', flags='D.VIL.', help='Silicon Graphics Motion Video Compressor 2', options=())",
  "FFMpegCodec(name='mvdv', flags='D.V.L.', help='MidiVid VQ', options=())",
  "FFMpegCodec(name='mvha', flags='D.VIL.', help='MidiVid Archive Codec', options=())",
  "FFMpegCodec(name='mwsc', flags='D.V..S', help='MatchWare Screen Capture Codec', options=())",
  "FFMpegCodec(name='mxpeg', flags='D.V.L.', help='Mobotix MxPEG video', options=())",
  "FFMpegCodec(name='notchlc', flags='D.VIL.', help='NotchLC', options=())",
  "FFMpegCodec(name='nuv', flags='D.V.L.', help='NuppelVideo/RTJPEG', options=())",
  "FFMpegCodec(name='paf_video', flags='D.V.L.', help='Amazing Studio Packed Animation File Video', options=())",
  "FFMpegCodec(name='pam', flags='DEVI.S', help='PAM (Portable AnyMap) image', options=())",
  "FFMpegCodec(name='pbm', flags='DEVI.S', help='PBM (Portable BitMap) image', options=())",
  "FFMpegCodec(name='pcx', flags='DEVI.S', help='PC Paintbrush PCX image', options=())",
  "FFMpegCodec(name='pdv', flags='D.V.L.', help='PDV (PlayDate Video)', options=())",
  "FFMpegCodec(name='pfm', flags='DEVI.S', help='PFM (Portable FloatMap) image', options=())",
  "FFMpegCodec(name='pgm', flags='DEVI.S', help='PGM (Portable GrayMap) image', options=())",
  "FFMpegCodec(name='pgmyuv', flags='DEVI.S', help='PGMYUV (Portable GrayMap YUV) image', options=())",
  "FFMpegCodec(name='pgx', flags='D.VI.S', help='PGX (JPEG2000 Test Format)', options=())",
  "FFMpegCodec(name='phm', flags='DEVI.S', help='PHM (Portable HalfFloatMap) image', options=())",
  "FFMpegCodec(name='photocd', flags='D.V.L.', help='Kodak Photo CD', options=())",
  "FFMpegCodec(name='pictor', flags='D.VIL.', help='Pictor/PC Paint', options=())",
  "FFMpegCodec(name='pixlet', flags='D.VIL.', help='Apple Pixlet', options=())",
  "FFMpegCodec(name='png', flags='DEV..S', help='PNG (Portable Network Graphics) image', options=())",
  "FFMpegCodec(name='ppm', flags='DEVI.S', help='PPM (Portable PixelMap) image', options=())",
  "FFMpegCodec(name='prores', flags='DEVIL.', help='Apple ProRes (iCodec Pro) (encoders: prores prores_aw prores_ks)', options=())",
  "FFMpegCodec(name='prosumer', flags='D.VIL.', help='Brooktree ProSumer Video', options=())",
  "FFMpegCodec(name='psd', flags='D.VI.S', help='Photoshop PSD file', options=())",
  "FFMpegCodec(name='ptx', flags='D.VIL.', help='V.Flash PTX image', options=())",
  "FFMpegCodec(name='qdraw', flags='D.VI.S', help='Apple QuickDraw', options=())",
  "FFMpegCodec(name='qoi', flags='DEVI.S', help='QOI (Quite OK Image)', options=())",
  "FFMpegCodec(name='qpeg', flags='D.V.L.', help='Q-team QPEG', options=())",
  "FFMpegCodec(name='qtrle', flags='DEV..S', help='QuickTime Animation (RLE) video', options=())",
  "FFMpegCodec(name='r10k', flags='DEVI.S', help='AJA Kona 10-bit RGB Codec', options=())",
  "FFMpegCodec(name='r210', flags='DEVI.S', help='Uncompressed RGB 10-bit', options=())",
  "FFMpegCodec(name='rasc', flags='D.V.L.', help='RemotelyAnywhere Screen Capture', options=())",
  "FFMpegCodec(name='rawvideo', flags='DEVI.S', help='raw video', options=())",
  "FFMpegCodec(name='rl2', flags='D.VIL.', help='RL2 video', options=())",
  "FFMpegCodec(name='roq', flags='DEV.L.', help='id RoQ video (decoders: roqvideo) (encoders: roqvideo)', options=())",
  "FFMpegCodec(name='rpza', flags='DEV.L.', help='QuickTime video (RPZA)', options=())",
  "FFMpegCodec(name='rscc', flags='D.V..S', help='innoHeim/Rsupport Screen Capture Codec', options=())",
  "FFMpegCodec(name='rtv1', flags='D.VIL.', help='RTV1 (RivaTuner Video)', options=())",
  "FFMpegCodec(name='rv10', flags='DEV.L.', help='RealVideo 1.0', options=())",
  "FFMpegCodec(name='rv20', flags='DEV.L.', help='RealVideo 2.0', options=())",
  "FFMpegCodec(name='rv30', flags='D.V.L.', help='RealVideo 3.0', options=())",
  "FFMpegCodec(name='rv40', flags='D.V.L.', help='RealVideo 4.0', options=())",
  "FFMpegCodec(name='sanm', flags='D.V.L.', help='LucasArts SANM/SMUSH video', options=())",
  "FFMpegCodec(name='scpr', flags='D.V.LS', help='ScreenPressor', options=())",
  "FFMpegCodec(name='screenpresso', flags='D.V..S', help='Screenpresso', options=())",
  "FFMpegCodec(name='sga', flags='D.V.L.', help='Digital Pictures SGA Video', options=())",
  "FFMpegCodec(name='sgi', flags='DEVI.S', help='SGI image', options=())",
  "FFMpegCodec(name='sgirle', flags='D.VI.S', help='SGI RLE 8-bit', options=())",
  "FFMpegCodec(name='sheervideo', flags='D.VI.S', help='BitJazz SheerVideo', options=())",
  "FFMpegCodec(name='simbiosis_imx', flags='D.V.L.', help='Simbiosis Interactive IMX Video', options=())",
  "FFMpegCodec(name='smackvideo', flags='D.V.L.', help='Smacker video (decoders: smackvid)', options=())",
  "FFMpegCodec(name='smc', flags='DEV.L.', help='QuickTime Graphics (SMC)', options=())",
  "FFMpegCodec(name='smvjpeg', flags='D.VIL.', help='Sigmatel Motion Video', options=())",
  "FFMpegCodec(name='snow', flags='DEV.LS', help='Snow', options=())",
  "FFMpegCodec(name='sp5x', flags='D.VIL.', help='Sunplus JPEG (SP5X)', options=())",
  "FFMpegCodec(name='speedhq', flags='DEVIL.', help='NewTek SpeedHQ', options=())",
  "FFMpegCodec(name='srgc', flags='D.VI.S', help='Screen Recorder Gold Codec', options=())",
  "FFMpegCodec(name='sunrast', flags='DEVI.S', help='Sun Rasterfile image', options=())",
  "FFMpegCodec(name='svg', flags='D.V..S', help='Scalable Vector Graphics (decoders: librsvg)', options=())",
  "FFMpegCodec(name='svq1', flags='DEV.L.', help='Sorenson Vector Quantizer 1 / Sorenson Video 1 / SVQ1', options=())",
  "FFMpegCodec(name='svq3', flags='D.V.L.', help='Sorenson Vector Quantizer 3 / Sorenson Video 3 / SVQ3', options=())",
  "FFMpegCodec(name='targa', flags='DEVI.S', help='Truevision Targa image', options=())",
  "FFMpegCodec(name='targa_y216', flags='D.VI.S', help='Pinnacle TARGA CineWave YUV16', options=())",
  "FFMpegCodec(name='tdsc', flags='D.V.L.', help='TDSC', options=())",
  "FFMpegCodec(name='tgq', flags='D.V.L.', help='Electronic Arts TGQ video (decoders: eatgq)', options=())",
  "FFMpegCodec(name='tgv', flags='D.V.L.', help='Electronic Arts TGV video (decoders: eatgv)', options=())",
  "FFMpegCodec(name='theora', flags='DEV.L.', help='Theora (encoders: libtheora)', options=())",
  "FFMpegCodec(name='thp', flags='D.VIL.', help='Nintendo Gamecube THP video', options=())",
  "FFMpegCodec(name='tiertexseqvideo', flags='D.V.L.', help='Tiertex Limited SEQ video', options=())",
  "FFMpegCodec(name='tiff', flags='DEVI.S', help='TIFF image', options=())",
  "FFMpegCodec(name='tmv', flags='D.VIL.', help='8088flex TMV', options=())",
  "FFMpegCodec(name='tqi', flags='D.V.L.', help='Electronic Arts TQI video (decoders: eatqi)', options=())",
  "FFMpegCodec(name='truemotion1', flags='D.V.L.', help='Duck TrueMotion 1.0', options=())",
  "FFMpegCodec(name='truemotion2', flags='D.V.L.', help='Duck TrueMotion 2.0', options=())",
  "FFMpegCodec(name='truemotion2rt', flags='D.VIL.', help='Duck TrueMotion 2.0 Real Time', options=())",
  "FFMpegCodec(name='tscc', flags='D.V..S', help='TechSmith Screen Capture Codec (decoders: camtasia)', options=())",
  "FFMpegCodec(name='tscc2', flags='D.V.L.', help='TechSmith Screen Codec 2', options=())",
  "FFMpegCodec(name='txd', flags='D.VIL.', help='Renderware TXD (TeXture Dictionary) image', options=())",
  "FFMpegCodec(name='ulti', flags='D.V.L.', help='IBM UltiMotion (decoders: ultimotion)', options=())",
  "FFMpegCodec(name='utvideo', flags='DEVI.S', help='Ut Video', options=())",
  "FFMpegCodec(name='v210', flags='DEVI.S', help='Uncompressed 4:2:2 10-bit', options=())",
  "FFMpegCodec(name='v210x', flags='D.VI.S', help='Uncompressed 4:2:2 10-bit', options=())",
  "FFMpegCodec(name='v308', flags='DEVI.S', help='Uncompressed packed 4:4:4', options=())",
  "FFMpegCodec(name='v408', flags='DEVI.S', help='Uncompressed packed QT 4:4:4:4', options=())",
  "FFMpegCodec(name='v410', flags='DEVI.S', help='Uncompressed 4:4:4 10-bit', options=())",
  "FFMpegCodec(name='vb', flags='D.V.L.', help='Beam Software VB', options=())",
  "FFMpegCodec(name='vble', flags='D.VI.S', help='VBLE Lossless Codec', options=())",
  "FFMpegCodec(name='vbn', flags='DEV.L.', help='Vizrt Binary Image', options=())",
  "FFMpegCodec(name='vc1', flags='D.V.L.', help='SMPTE VC-1 (decoders: vc1 vc1_v4l2m2m vc1_cuvid)', options=())",
  "FFMpegCodec(name='vc1image', flags='D.V.L.', help='Windows Media Video 9 Image v2', options=())",
  "FFMpegCodec(name='vcr1', flags='D.VIL.', help='ATI VCR1', options=())",
  "FFMpegCodec(name='vixl', flags='D.VIL.', help='Miro VideoXL (decoders: xl)', options=())",
  "FFMpegCodec(name='vmdvideo', flags='D.V.L.', help='Sierra VMD video', options=())",
  "FFMpegCodec(name='vmix', flags='D.VIL.', help='vMix Video', options=())",
  "FFMpegCodec(name='vmnc', flags='D.V..S', help='VMware Screen Codec / VMware Video', options=())",
  "FFMpegCodec(name='vnull', flags='DEV...', help='Null video codec', options=())",
  "FFMpegCodec(name='vp3', flags='D.V.L.', help='On2 VP3', options=())",
  "FFMpegCodec(name='vp4', flags='D.V.L.', help='On2 VP4', options=())",
  "FFMpegCodec(name='vp5', flags='D.V.L.', help='On2 VP5', options=())",
  "FFMpegCodec(name='vp6', flags='D.V.L.', help='On2 VP6', options=())",
  "FFMpegCodec(name='vp6a', flags='D.V.L.', help='On2 VP6 (Flash version, with alpha channel)', options=())",
  "FFMpegCodec(name='vp6f', flags='D.V.L.', help='On2 VP6 (Flash version)', options=())",
  "FFMpegCodec(name='vp7', flags='D.V.L.', help='On2 VP7', options=())",
  "FFMpegCodec(name='vp8', flags='DEV.L.', help='On2 VP8 (decoders: vp8 vp8_v4l2m2m libvpx vp8_cuvid) (encoders: libvpx vp8_v4l2m2m vp8_vaapi)', options=())",
  "FFMpegCodec(name='vp9', flags='DEV.L.', help='Google VP9 (decoders: vp9 vp9_v4l2m2m libvpx-vp9 vp9_cuvid) (encoders: libvpx-vp9 vp9_vaapi)', options=())",
  "FFMpegCodec(name='vqc', flags='D.V.L.', help='ViewQuest VQC', options=())",
  "FFMpegCodec(name='vvc', flags='..V.L.', help='H.266 / VVC (Versatile Video Coding)', options=())",
  "FFMpegCodec(name='wbmp', flags='DEVI.S', help='WBMP (Wireless Application Protocol Bitmap) image', options=())",
  "FFMpegCodec(name='wcmv', flags='D.V..S', help='WinCAM Motion Video', options=())",
  "FFMpegCodec(name='webp', flags='DEVILS', help='WebP (encoders: libwebp_anim libwebp)', options=())",
  "FFMpegCodec(name='wmv1', flags='DEV.L.', help='Windows Media Video 7', options=())",
  "FFMpegCodec(name='wmv2', flags='DEV.L.', help='Windows Media Video 8', options=())",
  "FFMpegCodec(name='wmv3', flags='D.V.L.', help='Windows Media Video 9', options=())",
  "FFMpegCodec(name='wmv3image', flags='D.V.L.', help='Windows Media Video 9 Image', options=())",
  "FFMpegCodec(name='wnv1', flags='D.VIL.', help='Winnov WNV1', options=())",
  "FFMpegCodec(name='wrapped_avframe', flags='DEV..S', help='AVFrame to AVPacket passthrough', options=())",
  "FFMpegCodec(name='ws_vqa', flags='D.V.L.', help='Westwood Studios VQA (Vector Quantized Animation) video (decoders: vqavideo)', options=())",
  "FFMpegCodec(name='xan_wc3', flags='D.V.L.', help='Wing Commander III / Xan', options=())",
  "FFMpegCodec(name='xan_wc4', flags='D.V.L.', help='Wing Commander IV / Xxan', options=())",
  "FFMpegCodec(name='xbin', flags='D.VI..', help='eXtended BINary text', options=())",
  "FFMpegCodec(name='xbm', flags='DEVI.S', help='XBM (X BitMap) image', options=())",
  "FFMpegCodec(name='xface', flags='DEVIL.', help='X-face image', options=())",
  "FFMpegCodec(name='xpm', flags='D.VI.S', help='XPM (X PixMap) image', options=())",
  "FFMpegCodec(name='xwd', flags='DEVI.S', help='XWD (X Window Dump) image', options=())",
  "FFMpegCodec(name='y41p', flags='DEVI.S', help='Uncompressed YUV 4:1:1 12-bit', options=())",
  "FFMpegCodec(name='ylc', flags='D.VI.S', help='YUY2 Lossless Codec', options=())",
  "FFMpegCodec(name='yop', flags='D.V.L.', help='Psygnosis YOP Video', options=())",
  "FFMpegCodec(name='yuv4', flags='DEVI.S', help='Uncompressed packed 4:2:0', options=())",
  "FFMpegCodec(name='zerocodec', flags='D.V..S', help='ZeroCodec Lossless Video', options=())",
  "FFMpegCodec(name='zlib', flags='DEVI.S', help='LCL (LossLess Codec Library) ZLIB', options=())",
  "FFMpegCodec(name='zmbv', flags='DEV..S', help='Zip Motion Blocks Video', options=())",
  "FFMpegCodec(name='4gv', flags='..AIL.', help='4GV (Fourth Generation Vocoder)', options=())",
  "FFMpegCodec(name='8svx_exp', flags='D.AIL.', help='8SVX exponential', options=())",
  "FFMpegCodec(name='8svx_fib', flags='D.AIL.', help='8SVX fibonacci', options=())",
  "FFMpegCodec(name='aac', flags='DEAIL.', help='AAC (Advanced Audio Coding) (decoders: aac aac_fixed)', options=())",
  "FFMpegCodec(name='aac_latm', flags='D.AIL.', help='AAC LATM (Advanced Audio Coding LATM syntax)', options=())",
  "FFMpegCodec(name='ac3', flags='DEAIL.', help='ATSC A/52A (AC-3) (decoders: ac3 ac3_fixed) (encoders: ac3 ac3_fixed)', options=())",
  "FFMpegCodec(name='ac4', flags='..A.L.', help='AC-4', options=())",
  "FFMpegCodec(name='adpcm_4xm', flags='D.AIL.', help='ADPCM 4X Movie', options=())",
  "FFMpegCodec(name='adpcm_adx', flags='DEAIL.', help='SEGA CRI ADX ADPCM', options=())",
  "FFMpegCodec(name='adpcm_afc', flags='D.AIL.', help='ADPCM Nintendo Gamecube AFC', options=())",
  "FFMpegCodec(name='adpcm_agm', flags='D.AIL.', help='ADPCM AmuseGraphics Movie AGM', options=())",
  "FFMpegCodec(name='adpcm_aica', flags='D.AIL.', help='ADPCM Yamaha AICA', options=())",
  "FFMpegCodec(name='adpcm_argo', flags='DEAIL.', help='ADPCM Argonaut Games', options=())",
  "FFMpegCodec(name='adpcm_ct', flags='D.AIL.', help='ADPCM Creative Technology', options=())",
  "FFMpegCodec(name='adpcm_dtk', flags='D.AIL.', help='ADPCM Nintendo Gamecube DTK', options=())",
  "FFMpegCodec(name='adpcm_ea', flags='D.AIL.', help='ADPCM Electronic Arts', options=())",
  "FFMpegCodec(name='adpcm_ea_maxis_xa', flags='D.AIL.', help='ADPCM Electronic Arts Maxis CDROM XA', options=())",
  "FFMpegCodec(name='adpcm_ea_r1', flags='D.AIL.', help='ADPCM Electronic Arts R1', options=())",
  "FFMpegCodec(name='adpcm_ea_r2', flags='D.AIL.', help='ADPCM Electronic Arts R2', options=())",
  "FFMpegCodec(name='adpcm_ea_r3', flags='D.AIL.', help='ADPCM Electronic Arts R3', options=())",
  "FFMpegCodec(name='adpcm_ea_xas', flags='D.AIL.', help='ADPCM Electronic Arts XAS', options=())",
  "FFMpegCodec(name='adpcm_g722', flags='DEAIL.', help='G.722 ADPCM (decoders: g722) (encoders: g722)', options=())",
  "FFMpegCodec(name='adpcm_g726', flags='DEAIL.', help='G.726 ADPCM (decoders: g726) (encoders: g726)', options=())",
  "FFMpegCodec(name='adpcm_g726le', flags='DEAIL.', help='G.726 ADPCM little-endian (decoders: g726le) (encoders: g726le)', options=())",
  "FFMpegCodec(name='adpcm_ima_acorn', flags='D.AIL.', help='ADPCM IMA Acorn Replay', options=())",
  "FFMpegCodec(name='adpcm_ima_alp', flags='DEAIL.', help='ADPCM IMA High Voltage Software ALP', options=())",
  "FFMpegCodec(name='adpcm_ima_amv', flags='DEAIL.', help='ADPCM IMA AMV', options=())",
  "FFMpegCodec(name='adpcm_ima_apc', flags='D.AIL.', help='ADPCM IMA CRYO APC', options=())",
  "FFMpegCodec(name='adpcm_ima_apm', flags='DEAIL.', help='ADPCM IMA Ubisoft APM', options=())",
  "FFMpegCodec(name='adpcm_ima_cunning', flags='D.AIL.', help='ADPCM IMA Cunning Developments', options=())",
  "FFMpegCodec(name='adpcm_ima_dat4', flags='D.AIL.', help='ADPCM IMA Eurocom DAT4', options=())",
  "FFMpegCodec(name='adpcm_ima_dk3', flags='D.AIL.', help='ADPCM IMA Duck DK3', options=())",
  "FFMpegCodec(name='adpcm_ima_dk4', flags='D.AIL.', help='ADPCM IMA Duck DK4', options=())",
  "FFMpegCodec(name='adpcm_ima_ea_eacs', flags='D.AIL.', help='ADPCM IMA Electronic Arts EACS', options=())",
  "FFMpegCodec(name='adpcm_ima_ea_sead', flags='D.AIL.', help='ADPCM IMA Electronic Arts SEAD', options=())",
  "FFMpegCodec(name='adpcm_ima_iss', flags='D.AIL.', help='ADPCM IMA Funcom ISS', options=())",
  "FFMpegCodec(name='adpcm_ima_moflex', flags='D.AIL.', help='ADPCM IMA MobiClip MOFLEX', options=())",
  "FFMpegCodec(name='adpcm_ima_mtf', flags='D.AIL.', help=\"ADPCM IMA Capcom's MT Framework\", options=())",
  "FFMpegCodec(name='adpcm_ima_oki', flags='D.AIL.', help='ADPCM IMA Dialogic OKI', options=())",
  "FFMpegCodec(name='adpcm_ima_qt', flags='DEAIL.', help='ADPCM IMA QuickTime', options=())",
  "FFMpegCodec(name='adpcm_ima_rad', flags='D.AIL.', help='ADPCM IMA Radical', options=())",
  "FFMpegCodec(name='adpcm_ima_smjpeg', flags='D.AIL.', help='ADPCM IMA Loki SDL MJPEG', options=())",
  "FFMpegCodec(name='adpcm_ima_ssi', flags='DEAIL.', help='ADPCM IMA Simon & Schuster Interactive', options=())",
  "FFMpegCodec(name='adpcm_ima_wav', flags='DEAIL.', help='ADPCM IMA WAV', options=())",
  "FFMpegCodec(name='adpcm_ima_ws', flags='DEAIL.', help='ADPCM IMA Westwood', options=())",
  "FFMpegCodec(name='adpcm_ms', flags='DEAIL.', help='ADPCM Microsoft', options=())",
  "FFMpegCodec(name='adpcm_mtaf', flags='D.AIL.', help='ADPCM MTAF', options=())",
  "FFMpegCodec(name='adpcm_psx', flags='D.AIL.', help='ADPCM Playstation', options=())",
  "FFMpegCodec(name='adpcm_sbpro_2', flags='D.AIL.', help='ADPCM Sound Blaster Pro 2-bit', options=())",
  "FFMpegCodec(name='adpcm_sbpro_3', flags='D.AIL.', help='ADPCM Sound Blaster Pro 2.6-bit', options=())",
  "FFMpegCodec(name='adpcm_sbpro_4', flags='D.AIL.', help='ADPCM Sound Blaster Pro 4-bit', options=())",
  "FFMpegCodec(name='adpcm_swf', flags='DEAIL.', help='ADPCM Shockwave Flash', options=())",
  "FFMpegCodec(name='adpcm_thp', flags='D.AIL.', help='ADPCM Nintendo THP', options=())",
  "FFMpegCodec(name='adpcm_thp_le', flags='D.AIL.', help='ADPCM Nintendo THP (Little-Endian)', options=())",
  "FFMpegCodec(name='adpcm_vima', flags='D.AIL.', help='LucasArts VIMA audio', options=())",
  "FFMpegCodec(name='adpcm_xa', flags='D.AIL.', help='ADPCM CDROM XA', options=())",
  "FFMpegCodec(name='adpcm_xmd', flags='D.AIL.', help='ADPCM Konami XMD', options=())",
  "FFMpegCodec(name='adpcm_yamaha', flags='DEAIL.', help='ADPCM Yamaha', options=())",
  "FFMpegCodec(name='adpcm_zork', flags='D.AIL.', help='ADPCM Zork', options=())",
  "FFMpegCodec(name='alac', flags='DEAI.S', help='ALAC (Apple Lossless Audio Codec)', options=())",
  "FFMpegCodec(name='amr_nb', flags='D.AIL.', help='AMR-NB (Adaptive Multi-Rate NarrowBand) (decoders: amrnb)', options=())",
  "FFMpegCodec(name='amr_wb', flags='D.AIL.', help='AMR-WB (Adaptive Multi-Rate WideBand) (decoders: amrwb)', options=())",
  "FFMpegCodec(name='anull', flags='DEA...', help='Null audio codec', options=())",
  "FFMpegCodec(name='apac', flags='D.AI.S', help=\"Marian's A-pac audio\", options=())",
  "FFMpegCodec(name='ape', flags='D.AI.S', help=\"Monkey's Audio\", options=())",
  "FFMpegCodec(name='aptx', flags='DEAIL.', help='aptX (Audio Processing Technology for Bluetooth)', options=())",
  "FFMpegCodec(name='aptx_hd', flags='DEAIL.', help='aptX HD (Audio Processing Technology for Bluetooth)', options=())",
  "FFMpegCodec(name='atrac1', flags='D.AIL.', help='ATRAC1 (Adaptive TRansform Acoustic Coding)', options=())",
  "FFMpegCodec(name='atrac3', flags='D.AIL.', help='ATRAC3 (Adaptive TRansform Acoustic Coding 3)', options=())",
  "FFMpegCodec(name='atrac3al', flags='D.AI.S', help='ATRAC3 AL (Adaptive TRansform Acoustic Coding 3 Advanced Lossless)', options=())",
  "FFMpegCodec(name='atrac3p', flags='D.AIL.', help='ATRAC3+ (Adaptive TRansform Acoustic Coding 3+) (decoders: atrac3plus)', options=())",
  "FFMpegCodec(name='atrac3pal', flags='D.AI.S', help='ATRAC3+ AL (Adaptive TRansform Acoustic Coding 3+ Advanced Lossless) (decoders: atrac3plusal)', options=())",
  "FFMpegCodec(name='atrac9', flags='D.AIL.', help='ATRAC9 (Adaptive TRansform Acoustic Coding 9)', options=())",
  "FFMpegCodec(name='avc', flags='D.AIL.', help='On2 Audio for Video Codec (decoders: on2avc)', options=())",
  "FFMpegCodec(name='binkaudio_dct', flags='D.AIL.', help='Bink Audio (DCT)', options=())",
  "FFMpegCodec(name='binkaudio_rdft', flags='D.AIL.', help='Bink Audio (RDFT)', options=())",
  "FFMpegCodec(name='bmv_audio', flags='D.AIL.', help='Discworld II BMV audio', options=())",
  "FFMpegCodec(name='bonk', flags='D.AILS', help='Bonk audio', options=())",
  "FFMpegCodec(name='cbd2_dpcm', flags='D.AIL.', help='DPCM Cuberoot-Delta-Exact', options=())",
  "FFMpegCodec(name='celt', flags='..AIL.', help='Constrained Energy Lapped Transform (CELT)', options=())",
  "FFMpegCodec(name='codec2', flags='DEAIL.', help='codec2 (very low bitrate speech codec) (decoders: libcodec2) (encoders: libcodec2)', options=())",
  "FFMpegCodec(name='comfortnoise', flags='DEAIL.', help='RFC 3389 Comfort Noise', options=())",
  "FFMpegCodec(name='cook', flags='D.AIL.', help='Cook / Cooker / Gecko (RealAudio G2)', options=())",
  "FFMpegCodec(name='derf_dpcm', flags='D.AIL.', help='DPCM Xilam DERF', options=())",
  "FFMpegCodec(name='dfpwm', flags='DEA.L.', help='DFPWM (Dynamic Filter Pulse Width Modulation)', options=())",
  "FFMpegCodec(name='dolby_e', flags='D.AIL.', help='Dolby E', options=())",
  "FFMpegCodec(name='dsd_lsbf', flags='D.AIL.', help='DSD (Direct Stream Digital), least significant bit first', options=())",
  "FFMpegCodec(name='dsd_lsbf_planar', flags='D.AIL.', help='DSD (Direct Stream Digital), least significant bit first, planar', options=())",
  "FFMpegCodec(name='dsd_msbf', flags='D.AIL.', help='DSD (Direct Stream Digital), most significant bit first', options=())",
  "FFMpegCodec(name='dsd_msbf_planar', flags='D.AIL.', help='DSD (Direct Stream Digital), most significant bit first, planar', options=())",
  "FFMpegCodec(name='dsicinaudio', flags='D.AIL.', help='Delphine Software International CIN audio', options=())",
  "FFMpegCodec(name='dss_sp', flags='D.AIL.', help='Digital Speech Standard - Standard Play mode (DSS SP)', options=())",
  "FFMpegCodec(name='dst', flags='D.AI.S', help='DST (Direct Stream Transfer)', options=())",
  "FFMpegCodec(name='dts', flags='DEAILS', help='DCA (DTS Coherent Acoustics) (decoders: dca) (encoders: dca)', options=())",
  "FFMpegCodec(name='dvaudio', flags='D.AIL.', help='DV audio', options=())",
  "FFMpegCodec(name='eac3', flags='DEAIL.', help='ATSC A/52B (AC-3, E-AC-3)', options=())",
  "FFMpegCodec(name='evrc', flags='D.AIL.', help='EVRC (Enhanced Variable Rate Codec)', options=())",
  "FFMpegCodec(name='fastaudio', flags='D.AIL.', help='MobiClip FastAudio', options=())",
  "FFMpegCodec(name='flac', flags='DEAI.S', help='FLAC (Free Lossless Audio Codec)', options=())",
  "FFMpegCodec(name='ftr', flags='D.AIL.', help='FTR Voice', options=())",
  "FFMpegCodec(name='g723_1', flags='DEAIL.', help='G.723.1', options=())",
  "FFMpegCodec(name='g729', flags='D.AIL.', help='G.729', options=())",
  "FFMpegCodec(name='gremlin_dpcm', flags='D.AIL.', help='DPCM Gremlin', options=())",
  "FFMpegCodec(name='gsm', flags='DEAIL.', help='GSM (decoders: gsm libgsm) (encoders: libgsm)', options=())",
  "FFMpegCodec(name='gsm_ms', flags='DEAIL.', help='GSM Microsoft variant (decoders: gsm_ms libgsm_ms) (encoders: libgsm_ms)', options=())",
  "FFMpegCodec(name='hca', flags='D.AIL.', help='CRI HCA', options=())",
  "FFMpegCodec(name='hcom', flags='D.AIL.', help='HCOM Audio', options=())",
  "FFMpegCodec(name='iac', flags='D.AIL.', help='IAC (Indeo Audio Coder)', options=())",
  "FFMpegCodec(name='ilbc', flags='D.AIL.', help='iLBC (Internet Low Bitrate Codec)', options=())",
  "FFMpegCodec(name='imc', flags='D.AIL.', help='IMC (Intel Music Coder)', options=())",
  "FFMpegCodec(name='interplay_dpcm', flags='D.AIL.', help='DPCM Interplay', options=())",
  "FFMpegCodec(name='interplayacm', flags='D.AIL.', help='Interplay ACM', options=())",
  "FFMpegCodec(name='mace3', flags='D.AIL.', help='MACE (Macintosh Audio Compression/Expansion) 3:1', options=())",
  "FFMpegCodec(name='mace6', flags='D.AIL.', help='MACE (Macintosh Audio Compression/Expansion) 6:1', options=())",
  "FFMpegCodec(name='metasound', flags='D.AIL.', help='Voxware MetaSound', options=())",
  "FFMpegCodec(name='misc4', flags='D.AIL.', help='Micronas SC-4 Audio', options=())",
  "FFMpegCodec(name='mlp', flags='DEA..S', help='MLP (Meridian Lossless Packing)', options=())",
  "FFMpegCodec(name='mp1', flags='D.AIL.', help='MP1 (MPEG audio layer 1) (decoders: mp1 mp1float)', options=())",
  "FFMpegCodec(name='mp2', flags='DEAIL.', help='MP2 (MPEG audio layer 2) (decoders: mp2 mp2float) (encoders: mp2 mp2fixed libtwolame)', options=())",
  "FFMpegCodec(name='mp3', flags='DEAIL.', help='MP3 (MPEG audio layer 3) (decoders: mp3float mp3) (encoders: libmp3lame libshine)', options=())",
  "FFMpegCodec(name='mp3adu', flags='D.AIL.', help='ADU (Application Data Unit) MP3 (MPEG audio layer 3) (decoders: mp3adufloat mp3adu)', options=())",
  "FFMpegCodec(name='mp3on4', flags='D.AIL.', help='MP3onMP4 (decoders: mp3on4float mp3on4)', options=())",
  "FFMpegCodec(name='mp4als', flags='D.AI.S', help='MPEG-4 Audio Lossless Coding (ALS) (decoders: als)', options=())",
  "FFMpegCodec(name='mpegh_3d_audio', flags='..A.L.', help='MPEG-H 3D Audio', options=())",
  "FFMpegCodec(name='msnsiren', flags='D.AIL.', help='MSN Siren', options=())",
  "FFMpegCodec(name='musepack7', flags='D.AIL.', help='Musepack SV7 (decoders: mpc7)', options=())",
  "FFMpegCodec(name='musepack8', flags='D.AIL.', help='Musepack SV8 (decoders: mpc8)', options=())",
  "FFMpegCodec(name='nellymoser', flags='DEAIL.', help='Nellymoser Asao', options=())",
  "FFMpegCodec(name='opus', flags='DEAIL.', help='Opus (Opus Interactive Audio Codec) (decoders: opus libopus) (encoders: opus libopus)', options=())",
  "FFMpegCodec(name='osq', flags='D.AI.S', help='OSQ (Original Sound Quality)', options=())",
  "FFMpegCodec(name='paf_audio', flags='D.AIL.', help='Amazing Studio Packed Animation File Audio', options=())",
  "FFMpegCodec(name='pcm_alaw', flags='DEAIL.', help='PCM A-law / G.711 A-law', options=())",
  "FFMpegCodec(name='pcm_bluray', flags='DEAI.S', help='PCM signed 16|20|24-bit big-endian for Blu-ray media', options=())",
  "FFMpegCodec(name='pcm_dvd', flags='DEAI.S', help='PCM signed 20|24-bit big-endian', options=())",
  "FFMpegCodec(name='pcm_f16le', flags='D.AI.S', help='PCM 16.8 floating point little-endian', options=())",
  "FFMpegCodec(name='pcm_f24le', flags='D.AI.S', help='PCM 24.0 floating point little-endian', options=())",
  "FFMpegCodec(name='pcm_f32be', flags='DEAI.S', help='PCM 32-bit floating point big-endian', options=())",
  "FFMpegCodec(name='pcm_f32le', flags='DEAI.S', help='PCM 32-bit floating point little-endian', options=())",
  "FFMpegCodec(name='pcm_f64be', flags='DEAI.S', help='PCM 64-bit floating point big-endian', options=())",
  "FFMpegCodec(name='pcm_f64le', flags='DEAI.S', help='PCM 64-bit floating point little-endian', options=())",
  "FFMpegCodec(name='pcm_lxf', flags='D.AI.S', help='PCM signed 20-bit little-endian planar', options=())",
  "FFMpegCodec(name='pcm_mulaw', flags='DEAIL.', help='PCM mu-law / G.711 mu-law', options=())",
  "FFMpegCodec(name='pcm_s16be', flags='DEAI.S', help='PCM signed 16-bit big-endian', options=())",
  "FFMpegCodec(name='pcm_s16be_planar', flags='DEAI.S', help='PCM signed 16-bit big-endian planar', options=())",
  "FFMpegCodec(name='pcm_s16le', flags='DEAI.S', help='PCM signed 16-bit little-endian', options=())",
  "FFMpegCodec(name='pcm_s16le_planar', flags='DEAI.S', help='PCM signed 16-bit little-endian planar', options=())",
  "FFMpegCodec(name='pcm_s24be', flags='DEAI.S', help='PCM signed 24-bit big-endian', options=())",
  "FFMpegCodec(name='pcm_s24daud', flags='DEAI.S', help='PCM D-Cinema audio signed 24-bit', options=())",
  "FFMpegCodec(name='pcm_s24le', flags='DEAI.S', help='PCM signed 24-bit little-endian', options=())",
  "FFMpegCodec(name='pcm_s24le_planar', flags='DEAI.S', help='PCM signed 24-bit little-endian planar', options=())",
  "FFMpegCodec(name='pcm_s32be', flags='DEAI.S', help='PCM signed 32-bit big-endian', options=())",
  "FFMpegCodec(name='pcm_s32le', flags='DEAI.S', help='PCM signed 32-bit little-endian', options=())",
  "FFMpegCodec(name='pcm_s32le_planar', flags='DEAI.S', help='PCM signed 32-bit little-endian planar', options=())",
  "FFMpegCodec(name='pcm_s64be', flags='DEAI.S', help='PCM signed 64-bit big-endian', options=())",
  "FFMpegCodec(name='pcm_s64le', flags='DEAI.S', help='PCM signed 64-bit little-endian', options=())",
  "FFMpegCodec(name='pcm_s8', flags='DEAI.S', help='PCM signed 8-bit', options=())",
  "FFMpegCodec(name='pcm_s8_planar', flags='DEAI.S', help='PCM signed 8-bit planar', options=())",
  "FFMpegCodec(name='pcm_sga', flags='D.AI.S', help='PCM SGA', options=())",
  "FFMpegCodec(name='pcm_u16be', flags='DEAI.S', help='PCM unsigned 16-bit big-endian', options=())",
  "FFMpegCodec(name='pcm_u16le', flags='DEAI.S', help='PCM unsigned 16-bit little-endian', options=())",
  "FFMpegCodec(name='pcm_u24be', flags='DEAI.S', help='PCM unsigned 24-bit big-endian', options=())",
  "FFMpegCodec(name='pcm_u24le', flags='DEAI.S', help='PCM unsigned 24-bit little-endian', options=())",
  "FFMpegCodec(name='pcm_u32be', flags='DEAI.S', help='PCM unsigned 32-bit big-endian', options=())",
  "FFMpegCodec(name='pcm_u32le', flags='DEAI.S', help='PCM unsigned 32-bit little-endian', options=())",
  "FFMpegCodec(name='pcm_u8', flags='DEAI.S', help='PCM unsigned 8-bit', options=())",
  "FFMpegCodec(name='pcm_vidc', flags='DEAIL.', help='PCM Archimedes VIDC', options=())",
  "FFMpegCodec(name='qcelp', flags='D.AIL.', help='QCELP / PureVoice', options=())",
  "FFMpegCodec(name='qdm2', flags='D.AIL.', help='QDesign Music Codec 2', options=())",
  "FFMpegCodec(name='qdmc', flags='D.AIL.', help='QDesign Music', options=())",
  "FFMpegCodec(name='ra_144', flags='DEAIL.', help='RealAudio 1.0 (14.4K) (decoders: real_144) (encoders: real_144)', options=())",
  "FFMpegCodec(name='ra_288', flags='D.AIL.', help='RealAudio 2.0 (28.8K) (decoders: real_288)', options=())",
  "FFMpegCodec(name='ralf', flags='D.AI.S', help='RealAudio Lossless', options=())",
  "FFMpegCodec(name='rka', flags='D.AILS', help='RKA (RK Audio)', options=())",
  "FFMpegCodec(name='roq_dpcm', flags='DEAIL.', help='DPCM id RoQ', options=())",
  "FFMpegCodec(name='s302m', flags='DEAI.S', help='SMPTE 302M', options=())",
  "FFMpegCodec(name='sbc', flags='DEAIL.', help='SBC (low-complexity subband codec)', options=())",
  "FFMpegCodec(name='sdx2_dpcm', flags='D.AIL.', help='DPCM Squareroot-Delta-Exact', options=())",
  "FFMpegCodec(name='shorten', flags='D.AI.S', help='Shorten', options=())",
  "FFMpegCodec(name='sipr', flags='D.AIL.', help='RealAudio SIPR / ACELP.NET', options=())",
  "FFMpegCodec(name='siren', flags='D.AIL.', help='Siren', options=())",
  "FFMpegCodec(name='smackaudio', flags='D.AIL.', help='Smacker audio (decoders: smackaud)', options=())",
  "FFMpegCodec(name='smv', flags='..AIL.', help='SMV (Selectable Mode Vocoder)', options=())",
  "FFMpegCodec(name='sol_dpcm', flags='D.AIL.', help='DPCM Sol', options=())",
  "FFMpegCodec(name='sonic', flags='DEAI..', help='Sonic', options=())",
  "FFMpegCodec(name='sonicls', flags='.EAI..', help='Sonic lossless', options=())",
  "FFMpegCodec(name='speex', flags='DEAIL.', help='Speex (decoders: speex libspeex) (encoders: libspeex)', options=())",
  "FFMpegCodec(name='tak', flags='D.A..S', help=\"TAK (Tom's lossless Audio Kompressor)\", options=())",
  "FFMpegCodec(name='truehd', flags='DEA..S', help='TrueHD', options=())",
  "FFMpegCodec(name='truespeech', flags='D.AIL.', help='DSP Group TrueSpeech', options=())",
  "FFMpegCodec(name='tta', flags='DEAI.S', help='TTA (True Audio)', options=())",
  "FFMpegCodec(name='twinvq', flags='D.AIL.', help='VQF TwinVQ', options=())",
  "FFMpegCodec(name='vmdaudio', flags='D.AIL.', help='Sierra VMD audio', options=())",
  "FFMpegCodec(name='vorbis', flags='DEAIL.', help='Vorbis (decoders: vorbis libvorbis) (encoders: vorbis libvorbis)', options=())",
  "FFMpegCodec(name='wady_dpcm', flags='D.AIL.', help='DPCM Marble WADY', options=())",
  "FFMpegCodec(name='wavarc', flags='D.AI.S', help='Waveform Archiver', options=())",
  "FFMpegCodec(name='wavesynth', flags='D.AI..', help='Wave synthesis pseudo-codec', options=())",
  "FFMpegCodec(name='wavpack', flags='DEAILS', help='WavPack', options=())",
  "FFMpegCodec(name='westwood_snd1', flags='D.AIL.', help='Westwood Audio (SND1) (decoders: ws_snd1)', options=())",
  "FFMpegCodec(name='wmalossless', flags='D.AI.S', help='Windows Media Audio Lossless', options=())",
  "FFMpegCodec(name='wmapro', flags='D.AIL.', help='Windows Media Audio 9 Professional', options=())",
  "FFMpegCodec(name='wmav1', flags='DEAIL.', help='Windows Media Audio 1', options=())",
  "FFMpegCodec(name='wmav2', flags='DEAIL.', help='Windows Media Audio 2', options=())",
  "FFMpegCodec(name='wmavoice', flags='D.AIL.', help='Windows Media Audio Voice', options=())",
  "FFMpegCodec(name='xan_dpcm', flags='D.AIL.', help='DPCM Xan', options=())",
  "FFMpegCodec(name='xma1', flags='D.AIL.', help='Xbox Media Audio 1', options=())",
  "FFMpegCodec(name='xma2', flags='D.AIL.', help='Xbox Media Audio 2', options=())",
  "FFMpegCodec(name='bin_data', flags='..D...', help='binary data', options=())",
  "FFMpegCodec(name='dvd_nav_packet', flags='..D...', help='DVD Nav packet', options=())",
  "FFMpegCodec(name='epg', flags='..D...', help='Electronic Program Guide', options=())",
  "FFMpegCodec(name='klv', flags='..D...', help='SMPTE 336M Key-Length-Value (KLV) metadata', options=())",
  "FFMpegCodec(name='mpegts', flags='..D...', help='raw MPEG-TS stream', options=())",
  "FFMpegCodec(name='otf', flags='..D...', help='OpenType font', options=())",
  "FFMpegCodec(name='scte_35', flags='..D...', help='SCTE 35 Message Queue', options=())",
  "FFMpegCodec(name='smpte_2038', flags='..D...', help='SMPTE ST 2038 VANC in MPEG-2 TS', options=())",
  "FFMpegCodec(name='timed_id3', flags='..D...', help='timed ID3 metadata', options=())",
  "FFMpegCodec(name='ttf', flags='..D...', help='TrueType font', options=())",
  "FFMpegCodec(name='arib_caption', flags='..S...', help='ARIB STD-B24 caption', options=())",
  "FFMpegCodec(name='ass', flags='DES...', help='ASS (Advanced SSA) subtitle (decoders: ssa ass) (encoders: ssa ass)', options=())",
  "FFMpegCodec(name='dvb_subtitle', flags='DES...', help='DVB subtitles (decoders: dvbsub) (encoders: dvbsub)', options=())",
  "FFMpegCodec(name='dvb_teletext', flags='D.S...', help='DVB teletext (decoders: libzvbi_teletextdec)', options=())",
  "FFMpegCodec(name='dvd_subtitle', flags='DES...', help='DVD subtitles (decoders: dvdsub) (encoders: dvdsub)', options=())",
  "FFMpegCodec(name='eia_608', flags='D.S...', help='EIA-608 closed captions (decoders: cc_dec)', options=())",
  "FFMpegCodec(name='hdmv_pgs_subtitle', flags='D.S...', help='HDMV Presentation Graphic Stream subtitles (decoders: pgssub)', options=())",
  "FFMpegCodec(name='hdmv_text_subtitle', flags='..S...', help='HDMV Text subtitle', options=())",
  "FFMpegCodec(name='jacosub', flags='D.S...', help='JACOsub subtitle', options=())",
  "FFMpegCodec(name='microdvd', flags='D.S...', help='MicroDVD subtitle', options=())",
  "FFMpegCodec(name='mov_text', flags='DES...', help='MOV text', options=())",
  "FFMpegCodec(name='mpl2', flags='D.S...', help='MPL2 subtitle', options=())",
  "FFMpegCodec(name='pjs', flags='D.S...', help='PJS (Phoenix Japanimation Society) subtitle', options=())",
  "FFMpegCodec(name='realtext', flags='D.S...', help='RealText subtitle', options=())",
  "FFMpegCodec(name='sami', flags='D.S...', help='SAMI subtitle', options=())",
  "FFMpegCodec(name='srt', flags='..S...', help='SubRip subtitle with embedded timing', options=())",
  "FFMpegCodec(name='ssa', flags='..S...', help='SSA (SubStation Alpha) subtitle', options=())",
  "FFMpegCodec(name='stl', flags='D.S...', help='Spruce subtitle format', options=())",
  "FFMpegCodec(name='subrip', flags='DES...', help='SubRip subtitle (decoders: srt subrip) (encoders: srt subrip)', options=())",
  "FFMpegCodec(name='subviewer', flags='D.S...', help='SubViewer subtitle', options=())",
  "FFMpegCodec(name='subviewer1', flags='D.S...', help='SubViewer v1 subtitle', options=())",
  "FFMpegCodec(name='text', flags='DES...', help='raw UTF-8 text', options=())",
  "FFMpegCodec(name='ttml', flags='.ES...', help='Timed Text Markup Language', options=())",
  "FFMpegCodec(name='vplayer', flags='D.S...', help='VPlayer subtitle', options=())",
  "FFMpegCodec(name='webvtt', flags='DES...', help='WebVTT subtitle', options=())",
  "FFMpegCodec(name='xsub', flags='DES...', help='XSUB', options=())"
]
