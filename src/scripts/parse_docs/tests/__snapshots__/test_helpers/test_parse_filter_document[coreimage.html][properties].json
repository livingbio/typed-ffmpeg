{
  "description": "### 11.47 coreimage\n\nVideo filtering on GPU using Appleâ€™s CoreImage API on OSX.\n\nHardware acceleration is based on an OpenGL context. Usually, this means it is\nprocessed by video hardware. However, software-based OpenGL implementations\nexist which means there is no guarantee for hardware processing. It depends on\nthe respective OSX.\n\nThere are many filters and image generators provided by Apple that come with a\nlarge variety of options. The filter has to be referenced by its name along\nwith its options.\n\nThe coreimage filter accepts the following options:\n\n**list_filters**\n\n    List all available filters and generators along with all their respective options as well as possible minimum and maximum values along with the default values. list_filters=true \n\n**filter**\n\n    Specify all filters by their respective name and options. Use list_filters to determine all valid filter names and options. Numerical options are specified by a float value and are automatically clamped to their respective value range. Vector and color options have to be specified by a list of space separated float values. Character escaping has to be done. A special option name default is available to use default options for a filter. It is required to specify either default or at least one of the filter options. All omitted options are used with their default values. The syntax of the filter string is as follows: filter=<NAME>@<OPTION>=<VALUE>[@<OPTION>=<VALUE>][@...][#<NAME>@<OPTION>=<VALUE>[@<OPTION>=<VALUE>][@...]][#...] \n\n**output_rect**\n\n    Specify a rectangle where the output of the filter chain is copied into the input image. It is given by a list of space separated float values: output_rect=x y width height If not given, the output rectangle equals the dimensions of the input image. The output rectangle is automatically cropped at the borders of the input image. Negative values are valid for each component. output_rect=25 25 100 100 \n\nSeveral filters can be chained for successive processing without GPU-HOST\ntransfers allowing for fast processing of complex filter chains. Currently,\nonly filters with zero (generators) or exactly one (filters) input image and\none output image are supported. Also, transition filters are not yet usable as\nintended.\n\nSome filters generate output images with additional padding depending on the\nrespective filter kernel. The padding is automatically removed to ensure the\nfilter output has the same size as the input image.\n\nFor image generators, the size of the output image is determined by the\nprevious output image of the filter chain or the input image of the whole\nfilterchain, respectively. The generators do not use the pixel information of\nthis image to generate their output. However, the generated output is blended\nonto this image, resulting in partial or complete coverage of the output\nimage.\n\nThe coreimagesrc video source can be used for generating input images which\nare directly fed into the filter chain. By using it, providing input images by\nanother video source or an input video is not required.\n\n",
  "url": "https://ffmpeg.org/ffmpeg-filters.html#coreimage"
}
