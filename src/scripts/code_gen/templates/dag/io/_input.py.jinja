{% import "_components.jinja" as _components %}

from pathlib import Path
from ...utils.frozendict import FrozenDict

from ..nodes import InputNode
from ...streams.av import AVStream
from typing import Any
from ...utils.frozendict import merge

{{ _components.import_types('...types') }}

def input(
    filename: str | Path,
    *,
    {%- for option in options -%}
    {%- if option.is_input_option -%}
    {{ option.name }}: {{ option | option_typing }} = None,
    {%- endif -%}
    {%- endfor -%}
    extra_options: dict[str, Any] | None = None,
) -> AVStream:
    """
    Input file URL (ffmpeg ``-i`` option)

    Args:
        filename: Input file URL
        {% for option in options %}
        {%- if option.is_input_option -%}
        {{option.name | option_name_safe}}: {{option.help }}
        {% endif %}
        {%- endfor -%}
        extra_options: ffmpeg's input file options

    Returns:
        Input stream

    Examples:
    ```py
    >>> input('input.mp4')
    <AVStream:input.mp4:0>
    ```
    """
    return InputNode(
        filename=str(filename),
        kwargs=merge({
            {% for option in options %}
                {%- if option.is_input_option -%}
                "{{ option.name}}": {{ option.name | option_name_safe }},
                {% endif %}
                {% endfor %}
        }, extra_options )
    ).stream()
