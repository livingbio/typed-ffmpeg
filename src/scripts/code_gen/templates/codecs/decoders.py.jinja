from typing import Literal
from .schema import FFMpegDecoderOption
from ..utils.frozendict import FrozenDict, remap, exclude

{% for codec in codecs %}
{% if codec.is_decoder %}
def {{codec.name | option_name_safe }}(
    {% for option in codec.filterd_options() %}
    {{option.name| option_name_safe}}: {{option.code_gen_type}} = None,
    {% endfor %}
) -> FFMpegDecoderOption:
    """
    {{codec.description}}
    {% if codec.options | length > 0 %}
    Args:
    {%- for option in codec.filterd_options() %}
        {{option.name | option_name_safe}}: {{option.help}}
    {%- endfor %}
    {%- endif %}

    Returns:
        the set codec options
    """
    _remap: dict[str, str] = {
        {% for option in codec.filterd_options() %}
        {% if option.name != option.name | option_name_safe %}
        "{{ option.name | option_name_safe }}": "{{ option.name }}",
        {% endif %}
        {% endfor %}
    }
    return FFMpegDecoderOption(kwargs=exclude(remap(locals(), _remap), "_remap"))
{% endif %}
{% endfor %}
