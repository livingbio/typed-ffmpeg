# NOTE: this file is auto-generated, do not modify


from __future__ import annotations

import re
from typing import TYPE_CHECKING, Any, Literal

from ..dag.nodes import FilterableStream, FilterNode
from ..schema import Default, StreamType, Auto
from ..types import *
from ..utils.typing import override
from .channel_layout import CHANNEL_LAYOUT
from ..common.schema import FFMpegFilterDef
from ..dag.factory import filter_node_factory

if TYPE_CHECKING:
    from .video import VideoStream


class AudioStream(FilterableStream):
    
        
    
    def aap(
    
    self,


    
        
        
    
        
        _desired: AudioStream,
        
    


    *,
    order: Int = Default(None),projection: Int = Default(None),
    extra_options: dict[str, Any] = None,
    **kwargs: Any
    )-> AudioStream:
        """
        
description

Args:
    order: set the filter order
    projection: set the filter projection

Returns:
    default: the audio stream

References:
    [FFmpeg Documentation](None)

        """
        filter_node = filter_node_factory(
            FFMpegFilterDef(name='aap', typings_input=('audio', 'audio'), typings_output=('audio',)),
            
            self,


            
                
                
            
                
                _desired,
                
            


            **{
                
                "order": order,
                
                "projection": projection,
                
            } | (extra_options or {}) | kwargs
        )
        return filter_node.audio(0)


        
    