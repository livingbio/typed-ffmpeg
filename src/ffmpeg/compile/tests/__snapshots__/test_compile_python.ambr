# serializer version: 1
# name: test_compile_python[complex-stream][compile-python]
  '''
  input_0 = input('input1.mp4', )
  input_1 = input('input2.mp4', )
  node_0 = input_0.video.reverse()
  node_1 = input_1.audio.areverse()
  node_2 = node_0.video(0).split(outputs=2)
  node_3 = node_1.audio(0).asplit(outputs=2)
  node_4 = ffmpeg.filters.concat(node_2.video(1), node_3.audio(1), node_2.video(0), node_3.audio(0), n=2, v=1, a=1)
  output_0 = ffmpeg.output(filename='tmp.mp4', node_4.video(0), node_4.audio(0), )
  '''
# ---
# name: test_compile_python[not-utilize-split][compile-python]
  '''
  input_0 = input('input1.mp4', )
  node_0 = input_0.reverse()
  output_0 = node_0.video(0).output(filename='tmp.mp4', )
  '''
# ---
# name: test_compile_python[reduntant-split-duplicate][compile-python]
  '''
  input_0 = input('input1.mp4', )
  node_0 = input_0.reverse()
  node_1 = node_0.video(0).split(outputs=3)
  node_2 = ffmpeg.filters.concat(node_1.video(2), node_1.video(0), node_1.video(1), n=3)
  output_0 = node_2.video(0).output(filename='tmp.mp4', )
  '''
# ---
# name: test_compile_python[reduntant-split-outputs-1][compile-python]
  '''
  input_0 = input('input1.mp4', )
  node_0 = input_0.reverse()
  output_0 = node_0.video(0).output(filename='tmp.mp4', )
  '''
# ---
# name: test_compile_python[reuse-input][compile-python]
  '''
  input_0 = input('input.mp4', )
  node_0 = ffmpeg.filters.concat(input_0.video, input_0.video, n=2)
  output_0 = node_0.video(0).output(filename='tmp.mp4', )
  '''
# ---
# name: test_compile_python[reuse-stream][compile-python]
  '''
  input_0 = input('input.mp4', )
  node_0 = input_0.reverse()
  node_1 = node_0.video(0).split(outputs=2)
  node_2 = ffmpeg.filters.concat(node_1.video(1), node_1.video(0), n=2)
  output_0 = node_2.video(0).output(filename='tmp.mp4', )
  '''
# ---
