# serializer version: 1
# name: test_rebuild_graph[complex-stream][all_nodes]
  list([
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'),
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'),
    FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
    FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)),
    FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)),
    OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=1)), filename='tmp.mp4'),
  ])
# ---
# name: test_rebuild_graph[complex-stream][all_streams]
  list([
    VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),
    AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=0),
    AudioStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=1),
  ])
# ---
# name: test_rebuild_graph[complex-stream][outgoing_nodes]
  defaultdict({
    AudioStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=1): list([
      tuple(
        OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=1)), filename='tmp.mp4'),
        1,
      ),
    ]),
    AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)),
        1,
      ),
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)),
        3,
      ),
    ]),
    AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None): list([
      tuple(
        FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=0): list([
      tuple(
        OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=1)), filename='tmp.mp4'),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)),
        0,
      ),
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)),
        2,
      ),
    ]),
    VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None): list([
      tuple(
        FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
        0,
      ),
    ]),
  })
# ---
# name: test_rebuild_graph[complex-stream][outgoing_streams]
  defaultdict({
    FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=0),
      AudioStream(node=FilterNode(kwargs=FrozenDict({'n': 2, 'v': 1, 'a': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>, <StreamType.video: 'video'>, <StreamType.audio: 'audio'>), output_typings=(<StreamType.video: 'video'>, <StreamType.audio: 'audio'>)), index=1),
    ]),
    FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)): list([
      AudioStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),), name='areverse', input_typings=(<StreamType.audio: 'audio'>,), output_typings=(<StreamType.audio: 'audio'>,)), index=0),
    ]),
    FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    ]),
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'): list([
      VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),
    ]),
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'): list([
      AudioStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input2.mp4'), index=None),
    ]),
  })
# ---
# name: test_rebuild_graph[not-utilize-split][all_nodes]
  list([
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'),
    FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
    FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)),
    OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), filename='tmp.mp4'),
  ])
# ---
# name: test_rebuild_graph[not-utilize-split][all_streams]
  list([
    AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),
  ])
# ---
# name: test_rebuild_graph[not-utilize-split][outgoing_nodes]
  defaultdict({
    AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None): list([
      tuple(
        FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0): list([
      tuple(
        OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), filename='tmp.mp4'),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)),
        0,
      ),
    ]),
  })
# ---
# name: test_rebuild_graph[not-utilize-split][outgoing_streams]
  defaultdict({
    FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),
    ]),
    FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    ]),
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'): list([
      AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),
    ]),
  })
# ---
# name: test_rebuild_graph[reduntant-split-duplicate][all_nodes]
  list([
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'),
    FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
    FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)),
    FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)),
    FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
    OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),), filename='tmp.mp4'),
  ])
# ---
# name: test_rebuild_graph[reduntant-split-duplicate][all_streams]
  list([
    AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),
  ])
# ---
# name: test_rebuild_graph[reduntant-split-duplicate][outgoing_nodes]
  defaultdict({
    AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None): list([
      tuple(
        FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0): list([
      tuple(
        OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),), filename='tmp.mp4'),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
        1,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
        2,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)),
        0,
      ),
    ]),
  })
# ---
# name: test_rebuild_graph[reduntant-split-duplicate][outgoing_streams]
  defaultdict({
    FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 3}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1), VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),
    ]),
    FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),
      VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1),
    ]),
    FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=1),
      VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>)), index=0),
    ]),
    FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    ]),
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'): list([
      AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),
    ]),
  })
# ---
# name: test_rebuild_graph[reduntant-split-outputs-1][all_nodes]
  list([
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'),
    FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
    FilterNode(kwargs=FrozenDict({'outputs': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
    OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), filename='tmp.mp4'),
  ])
# ---
# name: test_rebuild_graph[reduntant-split-outputs-1][all_streams]
  list([
    AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
  ])
# ---
# name: test_rebuild_graph[reduntant-split-outputs-1][outgoing_nodes]
  defaultdict({
    AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None): list([
      tuple(
        FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0): list([
      tuple(
        OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), filename='tmp.mp4'),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'outputs': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
        0,
      ),
    ]),
  })
# ---
# name: test_rebuild_graph[reduntant-split-outputs-1][outgoing_streams]
  defaultdict({
    FilterNode(kwargs=FrozenDict({'outputs': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({'outputs': 1}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),), name='split', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    ]),
    FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    ]),
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'): list([
      AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input1.mp4'), index=None),
    ]),
  })
# ---
# name: test_rebuild_graph[reuse-input][all_nodes]
  list([
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'),
    FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None), VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
    OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None), VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),), filename='tmp.mp4'),
  ])
# ---
# name: test_rebuild_graph[reuse-input][all_streams]
  list([
    VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None), VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),
  ])
# ---
# name: test_rebuild_graph[reuse-input][outgoing_nodes]
  defaultdict({
    VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None), VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0): list([
      tuple(
        OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None), VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),), filename='tmp.mp4'),
        0,
      ),
    ]),
    VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None), VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
        0,
      ),
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None), VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
        1,
      ),
    ]),
  })
# ---
# name: test_rebuild_graph[reuse-input][outgoing_streams]
  defaultdict({
    FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None), VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None), VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),
    ]),
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'): list([
      VideoStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),
    ]),
  })
# ---
# name: test_rebuild_graph[reuse-stream][all_nodes]
  list([
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'),
    FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
    FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
    OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),), filename='tmp.mp4'),
  ])
# ---
# name: test_rebuild_graph[reuse-stream][all_streams]
  list([
    AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),
  ])
# ---
# name: test_rebuild_graph[reuse-stream][outgoing_nodes]
  defaultdict({
    AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None): list([
      tuple(
        FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0): list([
      tuple(
        OutputNode(kwargs=FrozenDict({}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),), filename='tmp.mp4'),
        0,
      ),
    ]),
    VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0): list([
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
        0,
      ),
      tuple(
        FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)),
        1,
      ),
    ]),
  })
# ---
# name: test_rebuild_graph[reuse-stream][outgoing_streams]
  defaultdict({
    FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({'n': 2}), inputs=(VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0), VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0)), name='concat', input_typings=(<StreamType.video: 'video'>, <StreamType.video: 'video'>), output_typings=(<StreamType.video: 'video'>,)), index=0),
    ]),
    FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)): list([
      VideoStream(node=FilterNode(kwargs=FrozenDict({}), inputs=(AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),), name='reverse', input_typings=(<StreamType.video: 'video'>,), output_typings=(<StreamType.video: 'video'>,)), index=0),
    ]),
    InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'): list([
      AVStream(node=InputNode(kwargs=FrozenDict({}), inputs=(), filename='input.mp4'), index=None),
    ]),
  })
# ---
