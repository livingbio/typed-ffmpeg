[
  "# 1 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\"\n# 1 \"<built-in>\" 1\n# 1 \"<built-in>\" 3\n# 418 \"<built-in>\" 3\n# 1 \"<command line>\" 1\n# 1 \"<built-in>\" 2\n# 1 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 26 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\"\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/float.h\" 1 3\n# 32 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/float.h\" 3\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/float.h\" 1 3 4\n# 33 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/float.h\" 2 3\n# 27 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 1 3 4\n# 64 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 1 3 4\n# 68 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h\" 1 3 4\n# 678 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_symbol_aliasing.h\" 1 3 4\n# 679 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h\" 2 3 4\n# 744 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_posix_availability.h\" 1 3 4\n# 745 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/cdefs.h\" 2 3 4\n# 69 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/Availability.h\" 1 3 4\n# 172 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/Availability.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/AvailabilityVersions.h\" 1 3 4\n# 173 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/Availability.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h\" 1 3 4\n# 176 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/AvailabilityInternalLegacy.h\" 1 3 4\n# 177 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h\" 2 3 4\n# 174 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/Availability.h\" 2 3 4\n# 70 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 2 3 4\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h\" 1 3 4\n# 27 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h\" 1 3 4\n# 33 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/_types.h\" 1 3 4\n# 34 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/_types.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/_types.h\" 1 3 4\n# 15 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/_types.h\" 3 4\ntypedef signed char __int8_t;\n\n\n\ntypedef unsigned char __uint8_t;\ntypedef short __int16_t;\ntypedef unsigned short __uint16_t;\ntypedef int __int32_t;\ntypedef unsigned int __uint32_t;\ntypedef long long __int64_t;\ntypedef unsigned long long __uint64_t;\n\ntypedef long __darwin_intptr_t;\ntypedef unsigned int __darwin_natural_t;\n# 48 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/_types.h\" 3 4\ntypedef int __darwin_ct_rune_t;\n\n\n\n\n\ntypedef union \n char __mbstate8[128];\n long long _mbstateL;\n __mbstate_t;\n\ntypedef __mbstate_t __darwin_mbstate_t;\n\n\ntypedef long int __darwin_ptrdiff_t;\n\n\n\n\n\n\n\ntypedef long unsigned int __darwin_size_t;\n\n\n\n\n\ntypedef __builtin_va_list __darwin_va_list;\n\n\n\n\n\ntypedef int __darwin_wchar_t;\n\n\n\n\ntypedef __darwin_wchar_t __darwin_rune_t;\n\n\ntypedef int __darwin_wint_t;\n\n\n\n\ntypedef unsigned long __darwin_clock_t;\ntypedef __uint32_t __darwin_socklen_t;\ntypedef long __darwin_ssize_t;\ntypedef long __darwin_time_t;\n# 35 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/_types.h\" 2 3 4\n# 34 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h\" 2 3 4\n# 55 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h\" 3 4\ntypedef __int64_t __darwin_blkcnt_t;\ntypedef __int32_t __darwin_blksize_t;\ntypedef __int32_t __darwin_dev_t;\ntypedef unsigned int __darwin_fsblkcnt_t;\ntypedef unsigned int __darwin_fsfilcnt_t;\ntypedef __uint32_t __darwin_gid_t;\ntypedef __uint32_t __darwin_id_t;\ntypedef __uint64_t __darwin_ino64_t;\n\ntypedef __darwin_ino64_t __darwin_ino_t;\n\n\n\ntypedef __darwin_natural_t __darwin_mach_port_name_t;\ntypedef __darwin_mach_port_name_t __darwin_mach_port_t;\ntypedef __uint16_t __darwin_mode_t;\ntypedef __int64_t __darwin_off_t;\ntypedef __int32_t __darwin_pid_t;\ntypedef __uint32_t __darwin_sigset_t;\ntypedef __int32_t __darwin_suseconds_t;\ntypedef __uint32_t __darwin_uid_t;\ntypedef __uint32_t __darwin_useconds_t;\ntypedef unsigned char __darwin_uuid_t[16];\ntypedef char __darwin_uuid_string_t[37];\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h\" 1 3 4\n# 57 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_types.h\" 3 4\nstruct __darwin_pthread_handler_rec \n void (*__routine)(void *);\n void *__arg;\n struct __darwin_pthread_handler_rec *__next;\n;\n\nstruct _opaque_pthread_attr_t \n long __sig;\n char __opaque[56];\n;\n\nstruct _opaque_pthread_cond_t \n long __sig;\n char __opaque[40];\n;\n\nstruct _opaque_pthread_condattr_t \n long __sig;\n char __opaque[8];\n;\n\nstruct _opaque_pthread_mutex_t \n long __sig;\n char __opaque[56];\n;\n\nstruct _opaque_pthread_mutexattr_t \n long __sig;\n char __opaque[8];\n;\n\nstruct _opaque_pthread_once_t \n long __sig;\n char __opaque[8];\n;\n\nstruct _opaque_pthread_rwlock_t \n long __sig;\n char __opaque[192];\n;\n\nstruct _opaque_pthread_rwlockattr_t \n long __sig;\n char __opaque[16];\n;\n\nstruct _opaque_pthread_t \n long __sig;\n struct __darwin_pthread_handler_rec *__cleanup_stack;\n char __opaque[8176];\n;\n\ntypedef struct _opaque_pthread_attr_t __darwin_pthread_attr_t;\ntypedef struct _opaque_pthread_cond_t __darwin_pthread_cond_t;\ntypedef struct _opaque_pthread_condattr_t __darwin_pthread_condattr_t;\ntypedef unsigned long __darwin_pthread_key_t;\ntypedef struct _opaque_pthread_mutex_t __darwin_pthread_mutex_t;\ntypedef struct _opaque_pthread_mutexattr_t __darwin_pthread_mutexattr_t;\ntypedef struct _opaque_pthread_once_t __darwin_pthread_once_t;\ntypedef struct _opaque_pthread_rwlock_t __darwin_pthread_rwlock_t;\ntypedef struct _opaque_pthread_rwlockattr_t __darwin_pthread_rwlockattr_t;\ntypedef struct _opaque_pthread_t *__darwin_pthread_t;\n# 81 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types.h\" 2 3 4\n# 28 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h\" 2 3 4\n# 40 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types.h\" 3 4\ntypedef int __darwin_nl_item;\ntypedef int __darwin_wctrans_t;\n\ntypedef __uint32_t __darwin_wctype_t;\n# 72 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 2 3 4\n\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_va_list.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_va_list.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/types.h\" 1 3 4\n# 37 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/types.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 1 3 4\n# 55 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int8_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int8_t.h\" 3 4\ntypedef signed char int8_t;\n# 56 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int16_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int16_t.h\" 3 4\ntypedef short int16_t;\n# 57 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int32_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int32_t.h\" 3 4\ntypedef int int32_t;\n# 58 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int64_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_int64_t.h\" 3 4\ntypedef long long int64_t;\n# 59 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int8_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int8_t.h\" 3 4\ntypedef unsigned char u_int8_t;\n# 61 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int16_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int16_t.h\" 3 4\ntypedef unsigned short u_int16_t;\n# 62 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int32_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int32_t.h\" 3 4\ntypedef unsigned int u_int32_t;\n# 63 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int64_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_u_int64_t.h\" 3 4\ntypedef unsigned long long u_int64_t;\n# 64 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n\n\ntypedef int64_t register_t;\n\n\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_intptr_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_intptr_t.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/types.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_intptr_t.h\" 2 3 4\n\ntypedef __darwin_intptr_t intptr_t;\n# 72 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uintptr_t.h\" 1 3 4\n# 34 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uintptr_t.h\" 3 4\ntypedef unsigned long uintptr_t;\n# 73 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 2 3 4\n\n\n\n\ntypedef u_int64_t user_addr_t;\ntypedef u_int64_t user_size_t;\ntypedef int64_t user_ssize_t;\ntypedef int64_t user_long_t;\ntypedef u_int64_t user_ulong_t;\ntypedef int64_t user_time_t;\ntypedef int64_t user_off_t;\n# 104 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/types.h\" 3 4\ntypedef u_int64_t syscall_arg_t;\n# 38 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/types.h\" 2 3 4\n# 32 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_va_list.h\" 2 3 4\ntypedef __darwin_va_list va_list;\n# 76 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_size_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_size_t.h\" 3 4\ntypedef __darwin_size_t size_t;\n# 77 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_null.h\" 1 3 4\n# 78 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 2 3 4\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/stdio.h\" 1 3 4\n# 47 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/stdio.h\" 3 4\nint renameat(int, const char *, int, const char *) __attribute__((availability(macosx,introduced=10.10)));\n\n\n\nint renamex_np(const char *, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));\nint renameatx_np(int, const char *, int, const char *, unsigned int) __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)));\n# 80 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 2 3 4\n\ntypedef __darwin_off_t fpos_t;\n# 92 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 3 4\nstruct __sbuf \n unsigned char *_base;\n int _size;\n;\n\n\nstruct __sFILEX;\n# 126 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_stdio.h\" 3 4\ntypedef struct __sFILE \n unsigned char *_p;\n int _r;\n int _w;\n short _flags;\n short _file;\n struct __sbuf _bf;\n int _lbfsize;\n\n\n void *_cookie;\n int (* _Nullable _close)(void *);\n int (* _Nullable _read) (void *, char *, int);\n fpos_t (* _Nullable _seek) (void *, fpos_t, int);\n int (* _Nullable _write)(void *, const char *, int);\n\n\n struct __sbuf _ub;\n struct __sFILEX *_extra;\n int _ur;\n\n\n unsigned char _ubuf[3];\n unsigned char _nbuf[1];\n\n\n struct __sbuf _lb;\n\n\n int _blksize;\n fpos_t _offset;\n FILE;\n# 65 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 2 3 4\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_seek_set.h\" 1 3 4\n# 67 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 2 3 4\n\n\nextern FILE *__stdinp;\nextern FILE *__stdoutp;\nextern FILE *__stderrp;\n# 134 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\nvoid clearerr(FILE *);\nint fclose(FILE *);\nint feof(FILE *);\nint ferror(FILE *);\nint fflush(FILE *);\nint fgetc(FILE *);\nint fgetpos(FILE * restrict, fpos_t *);\nchar *fgets(char * restrict, int, FILE *);\n\n\n\nFILE *fopen(const char * restrict __filename, const char * restrict __mode) __asm(\"_\" \"fopen\" );\n\nint fprintf(FILE * restrict, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3)));\nint fputc(int, FILE *);\nint fputs(const char * restrict, FILE * restrict) __asm(\"_\" \"fputs\" );\nsize_t fread(void * restrict __ptr, size_t __size, size_t __nitems, FILE * restrict __stream);\nFILE *freopen(const char * restrict, const char * restrict,\n                 FILE * restrict) __asm(\"_\" \"freopen\" );\nint fscanf(FILE * restrict, const char * restrict, ...) __attribute__((__format__ (__scanf__, 2, 3)));\nint fseek(FILE *, long, int);\nint fsetpos(FILE *, const fpos_t *);\nlong ftell(FILE *);\nsize_t fwrite(const void * restrict __ptr, size_t __size, size_t __nitems, FILE * restrict __stream) __asm(\"_\" \"fwrite\" );\nint getc(FILE *);\nint getchar(void);\n\n\n__attribute__((__deprecated__(\"This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of gets(3), it is highly recommended that you use fgets(3) instead.\")))\n\nchar *gets(char *);\n\nvoid perror(const char *) __attribute__((__cold__));\nint printf(const char * restrict, ...) __attribute__((__format__ (__printf__, 1, 2)));\nint putc(int, FILE *);\nint putchar(int);\nint puts(const char *);\nint remove(const char *);\nint rename (const char *__old, const char *__new);\nvoid rewind(FILE *);\nint scanf(const char * restrict, ...) __attribute__((__format__ (__scanf__, 1, 2)));\nvoid setbuf(FILE * restrict, char * restrict);\nint setvbuf(FILE * restrict, char * restrict, int, size_t);\n\n__attribute__((__availability__(swift, unavailable, message=\"Use snprintf instead.\")))\n\n__attribute__((__deprecated__(\"This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead.\")))\n\nint sprintf(char * restrict, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3)));\n\nint sscanf(const char * restrict, const char * restrict, ...) __attribute__((__format__ (__scanf__, 2, 3)));\nFILE *tmpfile(void);\n\n__attribute__((__availability__(swift, unavailable, message=\"Use mkstemp(3) instead.\")))\n\n__attribute__((__deprecated__(\"This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tmpnam(3), it is highly recommended that you use mkstemp(3) instead.\")))\n\nchar *tmpnam(char *);\n\nint ungetc(int, FILE *);\nint vfprintf(FILE * restrict, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0)));\nint vprintf(const char * restrict, va_list) __attribute__((__format__ (__printf__, 1, 0)));\n\n__attribute__((__availability__(swift, unavailable, message=\"Use vsnprintf instead.\")))\n\n__attribute__((__deprecated__(\"This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use vsnprintf(3) instead.\")))\n\nint vsprintf(char * restrict, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0)));\n# 213 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_ctermid.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_ctermid.h\" 3 4\nchar *ctermid(char *);\n# 214 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 2 3 4\n\n\n\n\n\n\nFILE *fdopen(int, const char *) __asm(\"_\" \"fdopen\" );\n\nint fileno(FILE *);\n# 233 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\nint pclose(FILE *) __attribute__((__availability__(swift, unavailable, message=\"Use posix_spawn APIs or NSTask instead. (On iOS, process spawning is unavailable.)\")));\n\n\n\nFILE *popen(const char *, const char *) __asm(\"_\" \"popen\" ) __attribute__((__availability__(swift, unavailable, message=\"Use posix_spawn APIs or NSTask instead. (On iOS, process spawning is unavailable.)\")));\n# 252 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\nint __srget(FILE *);\nint __svfscanf(FILE *, const char *, va_list) __attribute__((__format__ (__scanf__, 2, 0)));\nint __swbuf(int, FILE *);\n# 263 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\ninline __attribute__ ((__always_inline__)) int __sputc(int _c, FILE *_p) \n if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\\n'))\n  return (*_p->_p++ = _c);\n else\n  return (__swbuf(_c, _p));\n\n# 289 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\nvoid flockfile(FILE *);\nint ftrylockfile(FILE *);\nvoid funlockfile(FILE *);\nint getc_unlocked(FILE *);\nint getchar_unlocked(void);\nint putc_unlocked(int, FILE *);\nint putchar_unlocked(int);\n\n\n\nint getw(FILE *);\nint putw(int, FILE *);\n\n\n__attribute__((__availability__(swift, unavailable, message=\"Use mkstemp(3) instead.\")))\n\n__attribute__((__deprecated__(\"This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of tempnam(3), it is highly recommended that you use mkstemp(3) instead.\")))\n\nchar *tempnam(const char *__dir, const char *__prefix) __asm(\"_\" \"tempnam\" );\n# 327 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_off_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_off_t.h\" 3 4\ntypedef __darwin_off_t off_t;\n# 328 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 2 3 4\n\n\nint fseeko(FILE * __stream, off_t __offset, int __whence);\noff_t ftello(FILE * __stream);\n\n\n\n\n\nint snprintf(char * restrict __str, size_t __size, const char * restrict __format, ...) __attribute__((__format__ (__printf__, 3, 4)));\nint vfscanf(FILE * restrict __stream, const char * restrict __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));\nint vscanf(const char * restrict __format, va_list) __attribute__((__format__ (__scanf__, 1, 0)));\nint vsnprintf(char * restrict __str, size_t __size, const char * restrict __format, va_list) __attribute__((__format__ (__printf__, 3, 0)));\nint vsscanf(const char * restrict __str, const char * restrict __format, va_list) __attribute__((__format__ (__scanf__, 2, 0)));\n# 352 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ssize_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ssize_t.h\" 3 4\ntypedef __darwin_ssize_t ssize_t;\n# 353 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 2 3 4\n\n\nint dprintf(int, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3))) __attribute__((availability(macosx,introduced=10.7)));\nint vdprintf(int, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0))) __attribute__((availability(macosx,introduced=10.7)));\nssize_t getdelim(char ** restrict __linep, size_t * restrict __linecapp, int __delimiter, FILE * restrict __stream) __attribute__((availability(macosx,introduced=10.7)));\nssize_t getline(char ** restrict __linep, size_t * restrict __linecapp, FILE * restrict __stream) __attribute__((availability(macosx,introduced=10.7)));\nFILE *fmemopen(void * restrict __buf, size_t __size, const char * restrict __mode) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));\nFILE *open_memstream(char **__bufp, size_t *__sizep) __attribute__((availability(macos,introduced=10.13))) __attribute__((availability(ios,introduced=11.0))) __attribute__((availability(tvos,introduced=11.0))) __attribute__((availability(watchos,introduced=4.0)));\n# 370 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\nextern const int sys_nerr;\nextern const char *const sys_errlist[];\n\nint asprintf(char ** restrict, const char * restrict, ...) __attribute__((__format__ (__printf__, 2, 3)));\nchar *ctermid_r(char *);\nchar *fgetln(FILE *, size_t *);\nconst char *fmtcheck(const char *, const char *) __attribute__((format_arg(2)));\nint fpurge(FILE *);\nvoid setbuffer(FILE *, char *, int);\nint setlinebuf(FILE *);\nint vasprintf(char ** restrict, const char * restrict, va_list) __attribute__((__format__ (__printf__, 2, 0)));\n\n\n\n\n\nFILE *funopen(const void *,\n                 int (* _Nullable)(void *, char *, int),\n                 int (* _Nullable)(void *, const char *, int),\n                 fpos_t (* _Nullable)(void *, fpos_t, int),\n                 int (* _Nullable)(void *));\n# 409 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_common.h\" 1 3 4\n# 32 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h\" 2 3 4\n# 42 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h\" 3 4\nextern int __sprintf_chk (char * restrict, int, size_t,\n     const char * restrict, ...);\n# 52 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h\" 3 4\nextern int __snprintf_chk (char * restrict, size_t, int, size_t,\n      const char * restrict, ...);\n\n\n\n\n\n\n\nextern int __vsprintf_chk (char * restrict, int, size_t,\n      const char * restrict, va_list);\n\n\n\n\n\n\n\nextern int __vsnprintf_chk (char * restrict, size_t, int, size_t,\n       const char * restrict, va_list);\n# 410 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdio.h\" 2 3 4\n# 28 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 1 3 4\n# 70 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 3 4\nvoid *memchr(const void *__s, int __c, size_t __n);\nint memcmp(const void *__s1, const void *__s2, size_t __n);\nvoid *memcpy(void *__dst, const void *__src, size_t __n);\nvoid *memmove(void *__dst, const void *__src, size_t __len);\nvoid *memset(void *__b, int __c, size_t __len);\nchar *strcat(char *__s1, const char *__s2);\nchar *strchr(const char *__s, int __c);\nint strcmp(const char *__s1, const char *__s2);\nint strcoll(const char *__s1, const char *__s2);\nchar *strcpy(char *__dst, const char *__src);\nsize_t strcspn(const char *__s, const char *__charset);\nchar *strerror(int __errnum) __asm(\"_\" \"strerror\" );\nsize_t strlen(const char *__s);\nchar *strncat(char *__s1, const char *__s2, size_t __n);\nint strncmp(const char *__s1, const char *__s2, size_t __n);\nchar *strncpy(char *__dst, const char *__src, size_t __n);\nchar *strpbrk(const char *__s, const char *__charset);\nchar *strrchr(const char *__s, int __c);\nsize_t strspn(const char *__s, const char *__charset);\nchar *strstr(const char *__big, const char *__little);\nchar *strtok(char *__str, const char *__sep);\nsize_t strxfrm(char *__s1, const char *__s2, size_t __n);\n# 104 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 3 4\nchar *strtok_r(char *__str, const char *__sep, char **__lasts);\n# 116 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 3 4\nint strerror_r(int __errnum, char *__strerrbuf, size_t __buflen);\nchar *strdup(const char *__s1);\nvoid *memccpy(void *__dst, const void *__src, int __c, size_t __n);\n# 130 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 3 4\nchar *stpcpy(char *__dst, const char *__src);\nchar *stpncpy(char *__dst, const char *__src, size_t __n) __attribute__((availability(macosx,introduced=10.7)));\nchar *strndup(const char *__s1, size_t __n) __attribute__((availability(macosx,introduced=10.7)));\nsize_t strnlen(const char *__s1, size_t __n) __attribute__((availability(macosx,introduced=10.7)));\nchar *strsignal(int __sig);\n\n\n\n\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_rsize_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_rsize_t.h\" 3 4\ntypedef __darwin_size_t rsize_t;\n# 142 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_errno_t.h\" 1 3 4\n# 30 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_errno_t.h\" 3 4\ntypedef int errno_t;\n# 143 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 2 3 4\n\n\nerrno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n) __attribute__((availability(macosx,introduced=10.9)));\n# 155 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 3 4\nvoid *memmem(const void *__big, size_t __big_len, const void *__little, size_t __little_len) __attribute__((availability(macosx,introduced=10.7)));\nvoid memset_pattern4(void *__b, const void *__pattern4, size_t __len) __attribute__((availability(macosx,introduced=10.5)));\nvoid memset_pattern8(void *__b, const void *__pattern8, size_t __len) __attribute__((availability(macosx,introduced=10.5)));\nvoid memset_pattern16(void *__b, const void *__pattern16, size_t __len) __attribute__((availability(macosx,introduced=10.5)));\n\nchar *strcasestr(const char *__big, const char *__little);\nchar *strnstr(const char *__big, const char *__little, size_t __len);\nsize_t strlcat(char *__dst, const char *__source, size_t __size);\nsize_t strlcpy(char *__dst, const char *__source, size_t __size);\nvoid strmode(int __mode, char *__bp);\nchar *strsep(char **__stringp, const char *__delim);\n\n\nvoid swab(const void * restrict, void * restrict, ssize_t);\n\n__attribute__((availability(macosx,introduced=10.12.1))) __attribute__((availability(ios,introduced=10.1)))\n__attribute__((availability(tvos,introduced=10.0.1))) __attribute__((availability(watchos,introduced=3.1)))\nint timingsafe_bcmp(const void *__b1, const void *__b2, size_t __len);\n\n__attribute__((availability(macosx,introduced=11.0))) __attribute__((availability(ios,introduced=14.0)))\n__attribute__((availability(tvos,introduced=14.0))) __attribute__((availability(watchos,introduced=7.0)))\nint strsignal_r(int __sig, char *__strsignalbuf, size_t __buflen);\n\n\n\n\n\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h\" 1 3 4\n# 70 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h\" 3 4\nint bcmp(const void *, const void *, size_t) ;\nvoid bcopy(const void *, void *, size_t) ;\nvoid bzero(void *, size_t) ;\nchar *index(const char *, int) ;\nchar *rindex(const char *, int) ;\n\n\nint ffs(int);\nint strcasecmp(const char *, const char *);\nint strncasecmp(const char *, const char *, size_t);\n\n\n\n\n\nint ffsl(long) __attribute__((availability(macosx,introduced=10.5)));\nint ffsll(long long) __attribute__((availability(macosx,introduced=10.9)));\nint fls(int) __attribute__((availability(macosx,introduced=10.5)));\nint flsl(long) __attribute__((availability(macosx,introduced=10.5)));\nint flsll(long long) __attribute__((availability(macosx,introduced=10.9)));\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 1 3 4\n# 93 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h\" 2 3 4\n\n\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_strings.h\" 1 3 4\n# 98 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/strings.h\" 2 3 4\n# 185 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 2 3 4\n# 194 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_string.h\" 1 3 4\n# 195 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/string.h\" 2 3 4\n# 29 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n\n# 1 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\" 1\n# 38 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 1 3\n# 35 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 3\ntypedef long int ptrdiff_t;\n# 74 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 3\ntypedef int wchar_t;\n# 103 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 3\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/__stddef_max_align_t.h\" 1 3\n# 16 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/__stddef_max_align_t.h\" 3\ntypedef long double max_align_t;\n# 104 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 2 3\n# 39 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\" 2\n\n# 1 \"./libavutil/attributes.h\" 1\n# 41 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\" 2\n# 1 \"./libavutil/avutil.h\" 1\n# 171 \"./libavutil/avutil.h\"\nunsigned avutil_version(void);\n\n\n\n\n\n\nconst char *av_version_info(void);\n\n\n\n\nconst char *avutil_configuration(void);\n\n\n\n\nconst char *avutil_license(void);\n# 199 \"./libavutil/avutil.h\"\nenum AVMediaType \n    AVMEDIA_TYPE_UNKNOWN = -1",
  "AVMEDIA_TYPE_VIDEO",
  "AVMEDIA_TYPE_AUDIO",
  "AVMEDIA_TYPE_DATA",
  "AVMEDIA_TYPE_SUBTITLE",
  "AVMEDIA_TYPE_ATTACHMENT",
  "AVMEDIA_TYPE_NB\n;\n\n\n\n\n\nconst char *av_get_media_type_string(enum AVMediaType media_type);\n# 277 \"./libavutil/avutil.h\"\nenum AVPictureType \n    AV_PICTURE_TYPE_NONE = 0",
  "AV_PICTURE_TYPE_I",
  "AV_PICTURE_TYPE_P",
  "AV_PICTURE_TYPE_B",
  "AV_PICTURE_TYPE_S",
  "AV_PICTURE_TYPE_SI",
  "AV_PICTURE_TYPE_SP",
  "AV_PICTURE_TYPE_BI",
  [
    ";\n# 295 \"./libavutil/avutil.h\"\nchar av_get_picture_type_char(enum AVPictureType pict_type);\n\n\n\n\n\n# 1 \"./libavutil/common.h\" 1\n# 33 \"./libavutil/common.h\"\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/errno.h\" 1 3 4\n# 23 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/errno.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/errno.h\" 1 3 4\n# 80 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/errno.h\" 3 4\nextern int * __error(void);\n# 24 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/errno.h\" 2 3 4\n# 34 \"./libavutil/common.h\" 2\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/inttypes.h\" 1 3\n# 21 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/inttypes.h\" 3\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/inttypes.h\" 1 3 4\n# 227 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/inttypes.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_wchar_t.h\" 1 3 4\n# 228 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/inttypes.h\" 2 3 4\n\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stdint.h\" 1 3 4\n# 52 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stdint.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h\" 1 3 4\n# 23 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint8_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint8_t.h\" 3 4\ntypedef unsigned char uint8_t;\n# 24 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint16_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint16_t.h\" 3 4\ntypedef unsigned short uint16_t;\n# 25 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint32_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint32_t.h\" 3 4\ntypedef unsigned int uint32_t;\n# 26 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint64_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uint64_t.h\" 3 4\ntypedef unsigned long long uint64_t;\n# 27 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h\" 2 3 4\n\n\ntypedef int8_t int_least8_t;\ntypedef int16_t int_least16_t;\ntypedef int32_t int_least32_t;\ntypedef int64_t int_least64_t;\ntypedef uint8_t uint_least8_t;\ntypedef uint16_t uint_least16_t;\ntypedef uint32_t uint_least32_t;\ntypedef uint64_t uint_least64_t;\n\n\n\ntypedef int8_t int_fast8_t;\ntypedef int16_t int_fast16_t;\ntypedef int32_t int_fast32_t;\ntypedef int64_t int_fast64_t;\ntypedef uint8_t uint_fast8_t;\ntypedef uint16_t uint_fast16_t;\ntypedef uint32_t uint_fast32_t;\ntypedef uint64_t uint_fast64_t;\n# 58 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_intmax_t.h\" 1 3 4\n# 32 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_intmax_t.h\" 3 4\ntypedef long int intmax_t;\n# 59 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uintmax_t.h\" 1 3 4\n# 32 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/_types/_uintmax_t.h\" 3 4\ntypedef long unsigned int uintmax_t;\n# 60 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdint.h\" 2 3 4\n# 53 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stdint.h\" 2 3 4\n# 230 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/inttypes.h\" 2 3 4\n\n\n\n\n__attribute__((availability(macosx,introduced=10.4)))\nextern intmax_t\nimaxabs(intmax_t j);\n\n\ntypedef struct \n intmax_t quot;\n intmax_t rem;\n imaxdiv_t;\n\n__attribute__((availability(macosx,introduced=10.4)))\nextern imaxdiv_t\nimaxdiv(intmax_t __numer, intmax_t __denom);\n\n\n__attribute__((availability(macosx,introduced=10.4)))\nextern intmax_t\nstrtoimax(const char * restrict __nptr,\n   char ** restrict __endptr,\n   int __base);\n\n__attribute__((availability(macosx,introduced=10.4)))\nextern uintmax_t\nstrtoumax(const char * restrict __nptr,\n   char ** restrict __endptr,\n   int __base);\n\n\n__attribute__((availability(macosx,introduced=10.4)))\nextern intmax_t\nwcstoimax(const wchar_t * restrict __nptr,\n   wchar_t ** restrict __endptr,\n   int __base);\n\n__attribute__((availability(macosx,introduced=10.4)))\nextern uintmax_t\nwcstoumax(const wchar_t * restrict __nptr,\n   wchar_t ** restrict __endptr,\n   int __base);\n# 22 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/inttypes.h\" 2 3\n# 35 \"./libavutil/common.h\" 2\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/limits.h\" 1 3\n# 21 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/limits.h\" 3\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/limits.h\" 1 3 4\n# 64 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/limits.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/limits.h\" 1 3 4\n# 11 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/limits.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/limits.h\" 1 3 4\n# 45 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/limits.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/_limits.h\" 1 3 4\n# 46 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/limits.h\" 2 3 4\n# 12 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/limits.h\" 2 3 4\n# 65 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/limits.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/syslimits.h\" 1 3 4\n# 66 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/limits.h\" 2 3 4\n# 22 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/limits.h\" 2 3\n# 36 \"./libavutil/common.h\" 2\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 1 3 4\n# 45 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\n    typedef float float_t;\n    typedef double double_t;\n# 112 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\nextern int __math_errhandling(void);\n# 132 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\nextern int __fpclassifyf(float);\nextern int __fpclassifyd(double);\nextern int __fpclassifyl(long double);\n# 175 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\ninline __attribute__ ((__always_inline__)) int __inline_isfinitef(float);\ninline __attribute__ ((__always_inline__)) int __inline_isfinited(double);\ninline __attribute__ ((__always_inline__)) int __inline_isfinitel(long double);\ninline __attribute__ ((__always_inline__)) int __inline_isinff(float);\ninline __attribute__ ((__always_inline__)) int __inline_isinfd(double);\ninline __attribute__ ((__always_inline__)) int __inline_isinfl(long double);\ninline __attribute__ ((__always_inline__)) int __inline_isnanf(float);\ninline __attribute__ ((__always_inline__)) int __inline_isnand(double);\ninline __attribute__ ((__always_inline__)) int __inline_isnanl(long double);\ninline __attribute__ ((__always_inline__)) int __inline_isnormalf(float);\ninline __attribute__ ((__always_inline__)) int __inline_isnormald(double);\ninline __attribute__ ((__always_inline__)) int __inline_isnormall(long double);\ninline __attribute__ ((__always_inline__)) int __inline_signbitf(float);\ninline __attribute__ ((__always_inline__)) int __inline_signbitd(double);\ninline __attribute__ ((__always_inline__)) int __inline_signbitl(long double);\n\ninline __attribute__ ((__always_inline__)) int __inline_isfinitef(float __x) \n    return __x == __x && __builtin_fabsf(__x) != __builtin_inff();\n\ninline __attribute__ ((__always_inline__)) int __inline_isfinited(double __x) \n    return __x == __x && __builtin_fabs(__x) != __builtin_inf();\n\ninline __attribute__ ((__always_inline__)) int __inline_isfinitel(long double __x) \n    return __x == __x && __builtin_fabsl(__x) != __builtin_infl();\n\ninline __attribute__ ((__always_inline__)) int __inline_isinff(float __x) \n    return __builtin_fabsf(__x) == __builtin_inff();\n\ninline __attribute__ ((__always_inline__)) int __inline_isinfd(double __x) \n    return __builtin_fabs(__x) == __builtin_inf();\n\ninline __attribute__ ((__always_inline__)) int __inline_isinfl(long double __x) \n    return __builtin_fabsl(__x) == __builtin_infl();\n\ninline __attribute__ ((__always_inline__)) int __inline_isnanf(float __x) \n    return __x != __x;\n\ninline __attribute__ ((__always_inline__)) int __inline_isnand(double __x) \n    return __x != __x;\n\ninline __attribute__ ((__always_inline__)) int __inline_isnanl(long double __x) \n    return __x != __x;\n\ninline __attribute__ ((__always_inline__)) int __inline_signbitf(float __x) \n    union  float __f; unsigned int __u;"
  ],
  [
    "__u;\n    __u.__f = __x;\n    return (int)(__u.__u >> 31);\n\ninline __attribute__ ((__always_inline__)) int __inline_signbitd(double __x) \n    union  double __f; unsigned long long __u;"
  ],
  [
    "__u;\n    __u.__f = __x;\n    return (int)(__u.__u >> 63);\n\n# 238 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\ninline __attribute__ ((__always_inline__)) int __inline_signbitl(long double __x) \n    union  long double __f; unsigned long long __u;"
  ],
  "__u;\n    __u.__f = __x;\n    return (int)(__u.__u >> 63);\n\n\ninline __attribute__ ((__always_inline__)) int __inline_isnormalf(float __x) \n    return __inline_isfinitef(__x) && __builtin_fabsf(__x) >= 1.17549435e-38F;\n\ninline __attribute__ ((__always_inline__)) int __inline_isnormald(double __x) \n    return __inline_isfinited(__x) && __builtin_fabs(__x) >= 2.2250738585072014e-308;\n\ninline __attribute__ ((__always_inline__)) int __inline_isnormall(long double __x) \n    return __inline_isfinitel(__x) && __builtin_fabsl(__x) >= 2.2250738585072014e-308L;\n\n# 309 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\nextern float acosf(float);\nextern double acos(double);\nextern long double acosl(long double);\n\nextern float asinf(float);\nextern double asin(double);\nextern long double asinl(long double);\n\nextern float atanf(float);\nextern double atan(double);\nextern long double atanl(long double);\n\nextern float atan2f(float, float);\nextern double atan2(double, double);\nextern long double atan2l(long double, long double);\n\nextern float cosf(float);\nextern double cos(double);\nextern long double cosl(long double);\n\nextern float sinf(float);\nextern double sin(double);\nextern long double sinl(long double);\n\nextern float tanf(float);\nextern double tan(double);\nextern long double tanl(long double);\n\nextern float acoshf(float);\nextern double acosh(double);\nextern long double acoshl(long double);\n\nextern float asinhf(float);\nextern double asinh(double);\nextern long double asinhl(long double);\n\nextern float atanhf(float);\nextern double atanh(double);\nextern long double atanhl(long double);\n\nextern float coshf(float);\nextern double cosh(double);\nextern long double coshl(long double);\n\nextern float sinhf(float);\nextern double sinh(double);\nextern long double sinhl(long double);\n\nextern float tanhf(float);\nextern double tanh(double);\nextern long double tanhl(long double);\n\nextern float expf(float);\nextern double exp(double);\nextern long double expl(long double);\n\nextern float exp2f(float);\nextern double exp2(double);\nextern long double exp2l(long double);\n\nextern float expm1f(float);\nextern double expm1(double);\nextern long double expm1l(long double);\n\nextern float logf(float);\nextern double log(double);\nextern long double logl(long double);\n\nextern float log10f(float);\nextern double log10(double);\nextern long double log10l(long double);\n\nextern float log2f(float);\nextern double log2(double);\nextern long double log2l(long double);\n\nextern float log1pf(float);\nextern double log1p(double);\nextern long double log1pl(long double);\n\nextern float logbf(float);\nextern double logb(double);\nextern long double logbl(long double);\n\nextern float modff(float, float *);\nextern double modf(double, double *);\nextern long double modfl(long double, long double *);\n\nextern float ldexpf(float, int);\nextern double ldexp(double, int);\nextern long double ldexpl(long double, int);\n\nextern float frexpf(float, int *);\nextern double frexp(double, int *);\nextern long double frexpl(long double, int *);\n\nextern int ilogbf(float);\nextern int ilogb(double);\nextern int ilogbl(long double);\n\nextern float scalbnf(float, int);\nextern double scalbn(double, int);\nextern long double scalbnl(long double, int);\n\nextern float scalblnf(float, long int);\nextern double scalbln(double, long int);\nextern long double scalblnl(long double, long int);\n\nextern float fabsf(float);\nextern double fabs(double);\nextern long double fabsl(long double);\n\nextern float cbrtf(float);\nextern double cbrt(double);\nextern long double cbrtl(long double);\n\nextern float hypotf(float, float);\nextern double hypot(double, double);\nextern long double hypotl(long double, long double);\n\nextern float powf(float, float);\nextern double pow(double, double);\nextern long double powl(long double, long double);\n\nextern float sqrtf(float);\nextern double sqrt(double);\nextern long double sqrtl(long double);\n\nextern float erff(float);\nextern double erf(double);\nextern long double erfl(long double);\n\nextern float erfcf(float);\nextern double erfc(double);\nextern long double erfcl(long double);\n\n\n\n\nextern float lgammaf(float);\nextern double lgamma(double);\nextern long double lgammal(long double);\n\nextern float tgammaf(float);\nextern double tgamma(double);\nextern long double tgammal(long double);\n\nextern float ceilf(float);\nextern double ceil(double);\nextern long double ceill(long double);\n\nextern float floorf(float);\nextern double floor(double);\nextern long double floorl(long double);\n\nextern float nearbyintf(float);\nextern double nearbyint(double);\nextern long double nearbyintl(long double);\n\nextern float rintf(float);\nextern double rint(double);\nextern long double rintl(long double);\n\nextern long int lrintf(float);\nextern long int lrint(double);\nextern long int lrintl(long double);\n\nextern float roundf(float);\nextern double round(double);\nextern long double roundl(long double);\n\nextern long int lroundf(float);\nextern long int lround(double);\nextern long int lroundl(long double);\n\n\n\n\nextern long long int llrintf(float);\nextern long long int llrint(double);\nextern long long int llrintl(long double);\n\nextern long long int llroundf(float);\nextern long long int llround(double);\nextern long long int llroundl(long double);\n\n\nextern float truncf(float);\nextern double trunc(double);\nextern long double truncl(long double);\n\nextern float fmodf(float, float);\nextern double fmod(double, double);\nextern long double fmodl(long double, long double);\n\nextern float remainderf(float, float);\nextern double remainder(double, double);\nextern long double remainderl(long double, long double);\n\nextern float remquof(float, float, int *);\nextern double remquo(double, double, int *);\nextern long double remquol(long double, long double, int *);\n\nextern float copysignf(float, float);\nextern double copysign(double, double);\nextern long double copysignl(long double, long double);\n\nextern float nanf(const char *);\nextern double nan(const char *);\nextern long double nanl(const char *);\n\nextern float nextafterf(float, float);\nextern double nextafter(double, double);\nextern long double nextafterl(long double, long double);\n\nextern double nexttoward(double, long double);\nextern float nexttowardf(float, long double);\nextern long double nexttowardl(long double, long double);\n\nextern float fdimf(float, float);\nextern double fdim(double, double);\nextern long double fdiml(long double, long double);\n\nextern float fmaxf(float, float);\nextern double fmax(double, double);\nextern long double fmaxl(long double, long double);\n\nextern float fminf(float, float);\nextern double fmin(double, double);\nextern long double fminl(long double, long double);\n\nextern float fmaf(float, float, float);\nextern double fma(double, double, double);\nextern long double fmal(long double, long double, long double);\n# 589 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\nextern float __exp10f(float) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));\nextern double __exp10(double) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));\n\n\n\n\n\ninline __attribute__ ((__always_inline__)) void __sincosf(float __x, float *__sinp, float *__cosp);\ninline __attribute__ ((__always_inline__)) void __sincos(double __x, double *__sinp, double *__cosp);\n# 606 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\nextern float __cospif(float) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));\nextern double __cospi(double) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));\nextern float __sinpif(float) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));\nextern double __sinpi(double) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));\nextern float __tanpif(float) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));\nextern double __tanpi(double) __attribute__((availability(macos,introduced=10.9))) __attribute__((availability(ios,introduced=7.0)));\n# 637 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\ninline __attribute__ ((__always_inline__)) void __sincospif(float __x, float *__sinp, float *__cosp);\ninline __attribute__ ((__always_inline__)) void __sincospi(double __x, double *__sinp, double *__cosp);\n\n\n\n\n\n\nstruct __float2  float __sinval; float __cosval; ;\nstruct __double2  double __sinval; double __cosval; ;\n\nextern struct __float2 __sincosf_stret(float);\nextern struct __double2 __sincos_stret(double);\nextern struct __float2 __sincospif_stret(float);\nextern struct __double2 __sincospi_stret(double);\n\ninline __attribute__ ((__always_inline__)) void __sincosf(float __x, float *__sinp, float *__cosp) \n    const struct __float2 __stret = __sincosf_stret(__x);\n    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;\n\n\ninline __attribute__ ((__always_inline__)) void __sincos(double __x, double *__sinp, double *__cosp) \n    const struct __double2 __stret = __sincos_stret(__x);\n    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;\n\n\ninline __attribute__ ((__always_inline__)) void __sincospif(float __x, float *__sinp, float *__cosp) \n    const struct __float2 __stret = __sincospif_stret(__x);\n    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;\n\n\ninline __attribute__ ((__always_inline__)) void __sincospi(double __x, double *__sinp, double *__cosp) \n    const struct __double2 __stret = __sincospi_stret(__x);\n    *__sinp = __stret.__sinval; *__cosp = __stret.__cosval;\n\n\n\n\n\n\n\n\nextern double j0(double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));\nextern double j1(double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));\nextern double jn(int, double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));\nextern double y0(double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));\nextern double y1(double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));\nextern double yn(int, double) __attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,introduced=3.2)));\nextern double scalb(double, double);\nextern int signgam;\n# 764 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/math.h\" 3 4\nstruct exception \n    int type;\n    char *name;\n    double arg1;\n    double arg2;\n    double retval;\n;\n# 37 \"./libavutil/common.h\" 2\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 1 3 4\n# 66 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 1 3 4\n# 79 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 3 4\ntypedef enum \n P_ALL",
  "P_PID",
  [
    "P_PGID\n idtype_t;\n\n\n\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_pid_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_pid_t.h\" 3 4\ntypedef __darwin_pid_t pid_t;\n# 90 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_id_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_id_t.h\" 3 4\ntypedef __darwin_id_t id_t;\n# 91 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 2 3 4\n# 109 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 1 3 4\n# 73 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/appleapiopts.h\" 1 3 4\n# 74 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 2 3 4\n\n\n\n\n\n\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/signal.h\" 1 3 4\n# 34 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/signal.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/signal.h\" 1 3 4\n# 17 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/signal.h\" 3 4\ntypedef int sig_atomic_t;\n# 35 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/signal.h\" 2 3 4\n# 83 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 2 3 4\n# 146 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/_mcontext.h\" 1 3 4\n# 34 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/_mcontext.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/_mcontext.h\" 1 3 4\n# 36 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/_mcontext.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/machine/_structs.h\" 1 3 4\n# 35 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/machine/_structs.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 1 3 4\n# 41 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __darwin_arm_exception_state\n\n __uint32_t __exception;\n __uint32_t __fsr;\n __uint32_t __far;\n;\n# 59 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __darwin_arm_exception_state64\n\n __uint64_t __far;\n __uint32_t __esr;\n __uint32_t __exception;\n;\n# 77 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __darwin_arm_thread_state\n\n __uint32_t __r[13];\n __uint32_t __sp;\n __uint32_t __lr;\n __uint32_t __pc;\n __uint32_t __cpsr;\n;\n# 136 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __darwin_arm_thread_state64\n\n __uint64_t __x[29];\n __uint64_t __fp;\n __uint64_t __lr;\n __uint64_t __sp;\n __uint64_t __pc;\n __uint32_t __cpsr;\n __uint32_t __pad;\n;\n# 477 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __darwin_arm_vfp_state\n\n __uint32_t __r[64];\n __uint32_t __fpscr;\n;\n# 496 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __darwin_arm_neon_state64\n\n __uint128_t __v[32];\n __uint32_t __fpsr;\n __uint32_t __fpcr;\n;\n\nstruct __darwin_arm_neon_state\n\n __uint128_t __v[16];\n __uint32_t __fpsr;\n __uint32_t __fpcr;\n;\n# 567 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __arm_pagein_state\n\n int __pagein_error;\n;\n# 604 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __arm_legacy_debug_state\n\n __uint32_t __bvr[16];\n __uint32_t __bcr[16];\n __uint32_t __wvr[16];\n __uint32_t __wcr[16];\n;\n# 627 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __darwin_arm_debug_state32\n\n __uint32_t __bvr[16];\n __uint32_t __bcr[16];\n __uint32_t __wvr[16];\n __uint32_t __wcr[16];\n __uint64_t __mdscr_el1;\n;\n\n\nstruct __darwin_arm_debug_state64\n\n __uint64_t __bvr[16];\n __uint64_t __bcr[16];\n __uint64_t __wvr[16];\n __uint64_t __wcr[16];\n __uint64_t __mdscr_el1;\n;\n# 669 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/arm/_structs.h\" 3 4\nstruct __darwin_arm_cpmu_state64\n\n __uint64_t __ctrs[16];\n;\n# 36 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/mach/machine/_structs.h\" 2 3 4\n# 37 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/_mcontext.h\" 2 3 4\n\n\n\n\nstruct __darwin_mcontext32\n\n struct __darwin_arm_exception_state __es;\n struct __darwin_arm_thread_state __ss;\n struct __darwin_arm_vfp_state __fs;\n;\n# 64 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/_mcontext.h\" 3 4\nstruct __darwin_mcontext64\n\n struct __darwin_arm_exception_state64 __es;\n struct __darwin_arm_thread_state64 __ss;\n struct __darwin_arm_neon_state64 __ns;\n;\n# 85 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/_mcontext.h\" 3 4\ntypedef struct __darwin_mcontext64 *mcontext_t;\n# 35 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/_mcontext.h\" 2 3 4\n# 147 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 2 3 4\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_attr_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_pthread/_pthread_attr_t.h\" 3 4\ntypedef __darwin_pthread_attr_t pthread_attr_t;\n# 149 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 2 3 4\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h\" 1 3 4\n# 42 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigaltstack.h\" 3 4\nstruct __darwin_sigaltstack\n\n void *ss_sp;\n __darwin_size_t ss_size;\n int ss_flags;\n;\ntypedef struct __darwin_sigaltstack stack_t;\n# 151 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h\" 1 3 4\n# 43 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ucontext.h\" 3 4\nstruct __darwin_ucontext\n\n int uc_onstack;\n __darwin_sigset_t uc_sigmask;\n struct __darwin_sigaltstack uc_stack;\n struct __darwin_ucontext *uc_link;\n __darwin_size_t uc_mcsize;\n struct __darwin_mcontext64 *uc_mcontext;\n\n\n\n;\n\n\ntypedef struct __darwin_ucontext ucontext_t;\n# 152 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 2 3 4\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigset_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_sigset_t.h\" 3 4\ntypedef __darwin_sigset_t sigset_t;\n# 155 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 2 3 4\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uid_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_uid_t.h\" 3 4\ntypedef __darwin_uid_t uid_t;\n# 157 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 2 3 4\n\nunion sigval \n\n int sival_int;\n void *sival_ptr;\n;\n\n\n\n\n\nstruct sigevent \n int sigev_notify;\n int sigev_signo;\n union sigval sigev_value;\n void (*sigev_notify_function)(union sigval);\n pthread_attr_t *sigev_notify_attributes;\n;\n\n\ntypedef struct __siginfo \n int si_signo;\n int si_errno;\n int si_code;\n pid_t si_pid;\n uid_t si_uid;\n int si_status;\n void *si_addr;\n union sigval si_value;\n long si_band;\n unsigned long __pad[7];\n siginfo_t;\n# 269 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 3 4\nunion __sigaction_u \n void (*__sa_handler)(int);\n void (*__sa_sigaction)(int, struct __siginfo *,\n     void *);\n;\n\n\nstruct __sigaction \n union __sigaction_u __sigaction_u;\n void (*sa_tramp)(void *, int, int, siginfo_t *, void *);\n sigset_t sa_mask;\n int sa_flags;\n;\n\n\n\n\nstruct sigaction \n union __sigaction_u __sigaction_u;\n sigset_t sa_mask;\n int sa_flags;\n;\n# 331 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 3 4\ntypedef void (*sig_t)(int);\n# 348 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 3 4\nstruct sigvec \n void (*sv_handler)(int);\n int sv_mask;\n int sv_flags;\n;\n# 367 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 3 4\nstruct sigstack \n char *ss_sp;\n int ss_onstack;\n;\n# 390 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/signal.h\" 3 4\nvoid(*signal(int, void (*)(int)))(int);\n# 110 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h\" 1 3 4\n# 80 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval.h\" 1 3 4\n# 34 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timeval.h\" 3 4\nstruct timeval\n\n __darwin_time_t tv_sec;\n __darwin_suseconds_t tv_usec;\n;\n# 81 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h\" 2 3 4\n\n\n\n\n\n\n\n\ntypedef __uint64_t rlim_t;\n# 152 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h\" 3 4\nstruct rusage \n struct timeval ru_utime;\n struct timeval ru_stime;\n# 163 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h\" 3 4\n long ru_maxrss;\n\n long ru_ixrss;\n long ru_idrss;\n long ru_isrss;\n long ru_minflt;\n long ru_majflt;\n long ru_nswap;\n long ru_inblock;\n long ru_oublock;\n long ru_msgsnd;\n long ru_msgrcv;\n long ru_nsignals;\n long ru_nvcsw;\n long ru_nivcsw;\n\n\n;\n# 200 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h\" 3 4\ntypedef void *rusage_info_t;\n\nstruct rusage_info_v0 \n uint8_t ri_uuid[16];\n uint64_t ri_user_time;\n uint64_t ri_system_time;\n uint64_t ri_pkg_idle_wkups;\n uint64_t ri_interrupt_wkups;\n uint64_t ri_pageins;\n uint64_t ri_wired_size;\n uint64_t ri_resident_size;\n uint64_t ri_phys_footprint;\n uint64_t ri_proc_start_abstime;\n uint64_t ri_proc_exit_abstime;\n;\n\nstruct rusage_info_v1 \n uint8_t ri_uuid[16];\n uint64_t ri_user_time;\n uint64_t ri_system_time;\n uint64_t ri_pkg_idle_wkups;\n uint64_t ri_interrupt_wkups;\n uint64_t ri_pageins;\n uint64_t ri_wired_size;\n uint64_t ri_resident_size;\n uint64_t ri_phys_footprint;\n uint64_t ri_proc_start_abstime;\n uint64_t ri_proc_exit_abstime;\n uint64_t ri_child_user_time;\n uint64_t ri_child_system_time;\n uint64_t ri_child_pkg_idle_wkups;\n uint64_t ri_child_interrupt_wkups;\n uint64_t ri_child_pageins;\n uint64_t ri_child_elapsed_abstime;\n;\n\nstruct rusage_info_v2 \n uint8_t ri_uuid[16];\n uint64_t ri_user_time;\n uint64_t ri_system_time;\n uint64_t ri_pkg_idle_wkups;\n uint64_t ri_interrupt_wkups;\n uint64_t ri_pageins;\n uint64_t ri_wired_size;\n uint64_t ri_resident_size;\n uint64_t ri_phys_footprint;\n uint64_t ri_proc_start_abstime;\n uint64_t ri_proc_exit_abstime;\n uint64_t ri_child_user_time;\n uint64_t ri_child_system_time;\n uint64_t ri_child_pkg_idle_wkups;\n uint64_t ri_child_interrupt_wkups;\n uint64_t ri_child_pageins;\n uint64_t ri_child_elapsed_abstime;\n uint64_t ri_diskio_bytesread;\n uint64_t ri_diskio_byteswritten;\n;\n\nstruct rusage_info_v3 \n uint8_t ri_uuid[16];\n uint64_t ri_user_time;\n uint64_t ri_system_time;\n uint64_t ri_pkg_idle_wkups;\n uint64_t ri_interrupt_wkups;\n uint64_t ri_pageins;\n uint64_t ri_wired_size;\n uint64_t ri_resident_size;\n uint64_t ri_phys_footprint;\n uint64_t ri_proc_start_abstime;\n uint64_t ri_proc_exit_abstime;\n uint64_t ri_child_user_time;\n uint64_t ri_child_system_time;\n uint64_t ri_child_pkg_idle_wkups;\n uint64_t ri_child_interrupt_wkups;\n uint64_t ri_child_pageins;\n uint64_t ri_child_elapsed_abstime;\n uint64_t ri_diskio_bytesread;\n uint64_t ri_diskio_byteswritten;\n uint64_t ri_cpu_time_qos_default;\n uint64_t ri_cpu_time_qos_maintenance;\n uint64_t ri_cpu_time_qos_background;\n uint64_t ri_cpu_time_qos_utility;\n uint64_t ri_cpu_time_qos_legacy;\n uint64_t ri_cpu_time_qos_user_initiated;\n uint64_t ri_cpu_time_qos_user_interactive;\n uint64_t ri_billed_system_time;\n uint64_t ri_serviced_system_time;\n;\n\nstruct rusage_info_v4 \n uint8_t ri_uuid[16];\n uint64_t ri_user_time;\n uint64_t ri_system_time;\n uint64_t ri_pkg_idle_wkups;\n uint64_t ri_interrupt_wkups;\n uint64_t ri_pageins;\n uint64_t ri_wired_size;\n uint64_t ri_resident_size;\n uint64_t ri_phys_footprint;\n uint64_t ri_proc_start_abstime;\n uint64_t ri_proc_exit_abstime;\n uint64_t ri_child_user_time;\n uint64_t ri_child_system_time;\n uint64_t ri_child_pkg_idle_wkups;\n uint64_t ri_child_interrupt_wkups;\n uint64_t ri_child_pageins;\n uint64_t ri_child_elapsed_abstime;\n uint64_t ri_diskio_bytesread;\n uint64_t ri_diskio_byteswritten;\n uint64_t ri_cpu_time_qos_default;\n uint64_t ri_cpu_time_qos_maintenance;\n uint64_t ri_cpu_time_qos_background;\n uint64_t ri_cpu_time_qos_utility;\n uint64_t ri_cpu_time_qos_legacy;\n uint64_t ri_cpu_time_qos_user_initiated;\n uint64_t ri_cpu_time_qos_user_interactive;\n uint64_t ri_billed_system_time;\n uint64_t ri_serviced_system_time;\n uint64_t ri_logical_writes;\n uint64_t ri_lifetime_max_phys_footprint;\n uint64_t ri_instructions;\n uint64_t ri_cycles;\n uint64_t ri_billed_energy;\n uint64_t ri_serviced_energy;\n uint64_t ri_interval_max_phys_footprint;\n uint64_t ri_runnable_time;\n;\n\nstruct rusage_info_v5 \n uint8_t ri_uuid[16];\n uint64_t ri_user_time;\n uint64_t ri_system_time;\n uint64_t ri_pkg_idle_wkups;\n uint64_t ri_interrupt_wkups;\n uint64_t ri_pageins;\n uint64_t ri_wired_size;\n uint64_t ri_resident_size;\n uint64_t ri_phys_footprint;\n uint64_t ri_proc_start_abstime;\n uint64_t ri_proc_exit_abstime;\n uint64_t ri_child_user_time;\n uint64_t ri_child_system_time;\n uint64_t ri_child_pkg_idle_wkups;\n uint64_t ri_child_interrupt_wkups;\n uint64_t ri_child_pageins;\n uint64_t ri_child_elapsed_abstime;\n uint64_t ri_diskio_bytesread;\n uint64_t ri_diskio_byteswritten;\n uint64_t ri_cpu_time_qos_default;\n uint64_t ri_cpu_time_qos_maintenance;\n uint64_t ri_cpu_time_qos_background;\n uint64_t ri_cpu_time_qos_utility;\n uint64_t ri_cpu_time_qos_legacy;\n uint64_t ri_cpu_time_qos_user_initiated;\n uint64_t ri_cpu_time_qos_user_interactive;\n uint64_t ri_billed_system_time;\n uint64_t ri_serviced_system_time;\n uint64_t ri_logical_writes;\n uint64_t ri_lifetime_max_phys_footprint;\n uint64_t ri_instructions;\n uint64_t ri_cycles;\n uint64_t ri_billed_energy;\n uint64_t ri_serviced_energy;\n uint64_t ri_interval_max_phys_footprint;\n uint64_t ri_runnable_time;\n uint64_t ri_flags;\n;\n\nstruct rusage_info_v6 \n uint8_t ri_uuid[16];\n uint64_t ri_user_time;\n uint64_t ri_system_time;\n uint64_t ri_pkg_idle_wkups;\n uint64_t ri_interrupt_wkups;\n uint64_t ri_pageins;\n uint64_t ri_wired_size;\n uint64_t ri_resident_size;\n uint64_t ri_phys_footprint;\n uint64_t ri_proc_start_abstime;\n uint64_t ri_proc_exit_abstime;\n uint64_t ri_child_user_time;\n uint64_t ri_child_system_time;\n uint64_t ri_child_pkg_idle_wkups;\n uint64_t ri_child_interrupt_wkups;\n uint64_t ri_child_pageins;\n uint64_t ri_child_elapsed_abstime;\n uint64_t ri_diskio_bytesread;\n uint64_t ri_diskio_byteswritten;\n uint64_t ri_cpu_time_qos_default;\n uint64_t ri_cpu_time_qos_maintenance;\n uint64_t ri_cpu_time_qos_background;\n uint64_t ri_cpu_time_qos_utility;\n uint64_t ri_cpu_time_qos_legacy;\n uint64_t ri_cpu_time_qos_user_initiated;\n uint64_t ri_cpu_time_qos_user_interactive;\n uint64_t ri_billed_system_time;\n uint64_t ri_serviced_system_time;\n uint64_t ri_logical_writes;\n uint64_t ri_lifetime_max_phys_footprint;\n uint64_t ri_instructions;\n uint64_t ri_cycles;\n uint64_t ri_billed_energy;\n uint64_t ri_serviced_energy;\n uint64_t ri_interval_max_phys_footprint;\n uint64_t ri_runnable_time;\n uint64_t ri_flags;\n uint64_t ri_user_ptime;\n uint64_t ri_system_ptime;\n uint64_t ri_pinstructions;\n uint64_t ri_pcycles;\n uint64_t ri_energy_nj;\n uint64_t ri_penergy_nj;\n uint64_t ri_reserved[14];\n;\n\ntypedef struct rusage_info_v6 rusage_info_current;\n# 459 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h\" 3 4\nstruct rlimit \n rlim_t rlim_cur;\n rlim_t rlim_max;\n;\n# 494 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h\" 3 4\nstruct proc_rlimit_control_wakeupmon \n uint32_t wm_flags;\n int32_t wm_rate;\n;\n# 566 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/resource.h\" 3 4\nint getpriority(int, id_t);\n\nint getiopolicy_np(int, int) __attribute__((availability(macosx,introduced=10.5)));\n\nint getrlimit(int, struct rlimit *) __asm(\"_\" \"getrlimit\" );\nint getrusage(int, struct rusage *);\nint setpriority(int, id_t, int);\n\nint setiopolicy_np(int, int, int) __attribute__((availability(macosx,introduced=10.5)));\n\nint setrlimit(int, const struct rlimit *) __asm(\"_\" \"setrlimit\" );\n# 111 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 2 3 4\n# 186 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/endian.h\" 1 3 4\n# 37 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/endian.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/endian.h\" 1 3 4\n# 77 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/endian.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_endian.h\" 1 3 4\n# 94 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_endian.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/endian.h\" 1 3 4\n# 95 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_endian.h\" 2 3 4\n# 131 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_endian.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/_OSByteOrder.h\" 1 3 4\n# 80 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/_OSByteOrder.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/arm/OSByteOrder.h\" 1 3 4\n\n\n\n\n\n\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/arch.h\" 1 3 4\n# 10 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/arm/OSByteOrder.h\" 2 3 4\n\n\n\nstatic inline\nuint16_t\n_OSSwapInt16(\n uint16_t _data\n )\n\n\n return (uint16_t)(_data << 8 | _data >> 8);\n\n\nstatic inline\nuint32_t\n_OSSwapInt32(\n uint32_t _data\n )\n\n\n _data = __builtin_bswap32(_data);\n\n\n\n\n\n return _data;\n\n\nstatic inline\nuint64_t\n_OSSwapInt64(\n uint64_t _data\n )\n\n\n return __builtin_bswap64(_data);\n# 60 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/arm/OSByteOrder.h\" 3 4\n\n\n\n\nstruct _OSUnalignedU16 \n volatile uint16_t __val;\n __attribute__((__packed__));\n\nstruct _OSUnalignedU32 \n volatile uint32_t __val;\n __attribute__((__packed__));\n\nstruct _OSUnalignedU64 \n volatile uint64_t __val;\n __attribute__((__packed__));\n# 87 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/arm/OSByteOrder.h\" 3 4\nstatic inline\nuint16_t\nOSReadSwapInt16(\n const volatile void * _base,\n uintptr_t _offset\n )\n\n return _OSSwapInt16(((struct _OSUnalignedU16 *)((uintptr_t)_base + _offset))->__val);\n\n# 109 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/arm/OSByteOrder.h\" 3 4\nstatic inline\nuint32_t\nOSReadSwapInt32(\n const volatile void * _base,\n uintptr_t _offset\n )\n\n return _OSSwapInt32(((struct _OSUnalignedU32 *)((uintptr_t)_base + _offset))->__val);\n\n# 131 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/arm/OSByteOrder.h\" 3 4\nstatic inline\nuint64_t\nOSReadSwapInt64(\n const volatile void * _base,\n uintptr_t _offset\n )\n\n return _OSSwapInt64(((struct _OSUnalignedU64 *)((uintptr_t)_base + _offset))->__val);\n\n# 156 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/arm/OSByteOrder.h\" 3 4\nstatic inline\nvoid\nOSWriteSwapInt16(\n volatile void * _base,\n uintptr_t _offset,\n uint16_t _data\n )\n\n ((struct _OSUnalignedU16 *)((uintptr_t)_base + _offset))->__val = _OSSwapInt16(_data);\n\n# 180 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/arm/OSByteOrder.h\" 3 4\nstatic inline\nvoid\nOSWriteSwapInt32(\n volatile void * _base,\n uintptr_t _offset,\n uint32_t _data\n )\n\n ((struct _OSUnalignedU32 *)((uintptr_t)_base + _offset))->__val = _OSSwapInt32(_data);\n\n# 204 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/arm/OSByteOrder.h\" 3 4\nstatic inline\nvoid\nOSWriteSwapInt64(\n volatile void * _base,\n uintptr_t _offset,\n uint64_t _data\n )\n\n ((struct _OSUnalignedU64 *)((uintptr_t)_base + _offset))->__val = _OSSwapInt64(_data);\n\n# 81 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/libkern/_OSByteOrder.h\" 2 3 4\n# 132 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_endian.h\" 2 3 4\n# 78 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/arm/endian.h\" 2 3 4\n# 38 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/machine/endian.h\" 2 3 4\n# 187 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 2 3 4\n\n\n\n\n\n\n\nunion wait \n int w_status;\n\n\n\n struct \n\n  unsigned int w_Termsig:7",
    "w_Coredump:1",
    "w_Retcode:8",
    "w_Filler:16;"
  ],
  [
    "w_T;\n\n\n\n\n\n struct \n\n  unsigned int w_Stopval:8",
    "w_Stopsig:8",
    "w_Filler:16;"
  ],
  [
    "w_S;\n;\n# 248 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/wait.h\" 3 4\npid_t wait(int *) __asm(\"_\" \"wait\" );\npid_t waitpid(pid_t, int *, int) __asm(\"_\" \"waitpid\" );\n\nint waitid(idtype_t, id_t, siginfo_t *, int) __asm(\"_\" \"waitid\" );\n\n\npid_t wait3(int *, int, struct rusage *);\npid_t wait4(pid_t, int *, int, struct rusage *);\n# 67 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 2 3 4\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/alloca.h\" 1 3 4\n# 32 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/alloca.h\" 3 4\nvoid *alloca(size_t);\n# 69 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 2 3 4\n\n\n\n\n\n\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ct_rune_t.h\" 1 3 4\n# 32 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_ct_rune_t.h\" 3 4\ntypedef __darwin_ct_rune_t ct_rune_t;\n# 78 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_rune_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_rune_t.h\" 3 4\ntypedef __darwin_rune_t rune_t;\n# 79 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 2 3 4\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_wchar_t.h\" 1 3 4\n# 82 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 2 3 4\n\ntypedef struct \n int quot;\n int rem;\n div_t;\n\ntypedef struct \n long quot;\n long rem;\n ldiv_t;\n\n\ntypedef struct \n long long quot;\n long long rem;\n lldiv_t;\n# 118 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 3 4\nextern int __mb_cur_max;\n# 128 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h\" 1 3 4\n# 38 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc_type.h\" 1 3 4\n# 46 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc_type.h\" 3 4\ntypedef unsigned long long malloc_type_id_t;\n\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_malloc(size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1)));\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1,2)));\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void malloc_type_free(void *ptr, malloc_type_id_t type_id);\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2)));\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_valloc(size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1)));\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_aligned_alloc(size_t alignment, size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2)));\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) int malloc_type_posix_memalign(void **memptr, size_t alignment, size_t size, malloc_type_id_t type_id) ;\n\n\n\n\ntypedef struct _malloc_zone_t malloc_zone_t;\n\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_zone_malloc(malloc_zone_t *zone, size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2)));\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_zone_calloc(malloc_zone_t *zone, size_t count, size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2,3)));\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void malloc_type_zone_free(malloc_zone_t *zone, void *ptr, malloc_type_id_t type_id);\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_zone_realloc(malloc_zone_t *zone, void *ptr, size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(3)));\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_zone_valloc(malloc_zone_t *zone, size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2)));\n__attribute__((availability(macos,unavailable))) __attribute__((availability(ios,unavailable))) __attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(visionos,unavailable))) void *malloc_type_zone_memalign(malloc_zone_t *zone, size_t alignment, size_t size, malloc_type_id_t type_id) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(3)));\n# 39 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/malloc/_malloc.h\" 2 3 4\n\n\n\n\n\n\nvoid *malloc(size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1))) ;\nvoid *calloc(size_t __count, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(1,2))) ;\nvoid free(void *);\nvoid *realloc(void *__ptr, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2))) ;\n\nvoid *valloc(size_t) __attribute__((alloc_size(1))) ;\n\n\n\n\nvoid *aligned_alloc(size_t __alignment, size_t __size) __attribute__((__warn_unused_result__)) __attribute__((alloc_size(2))) __attribute__((availability(macosx,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));\n\nint posix_memalign(void **__memptr, size_t __alignment, size_t __size) __attribute__((availability(macosx,introduced=10.6)));\n# 129 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 2 3 4\n\n\nvoid abort(void) __attribute__((__cold__)) __attribute__((__noreturn__));\nint abs(int) __attribute__((__const__));\nint atexit(void (* _Nonnull)(void));\ndouble atof(const char *);\nint atoi(const char *);\nlong atol(const char *);\n\nlong long\n  atoll(const char *);\n\nvoid *bsearch(const void *__key, const void *__base, size_t __nel,\n     size_t __width, int (* _Nonnull __compar)(const void *, const void *));\n\ndiv_t div(int, int) __attribute__((__const__));\nvoid exit(int) __attribute__((__noreturn__));\n\nchar *getenv(const char *);\nlong labs(long) __attribute__((__const__));\nldiv_t ldiv(long, long) __attribute__((__const__));\n\nlong long\n  llabs(long long);\nlldiv_t lldiv(long long, long long);\n\n\nint mblen(const char *__s, size_t __n);\nsize_t mbstowcs(wchar_t * restrict , const char * restrict, size_t);\nint mbtowc(wchar_t * restrict, const char * restrict, size_t);\n\nvoid qsort(void *__base, size_t __nel, size_t __width,\n     int (* _Nonnull __compar)(const void *, const void *));\nint rand(void) __attribute__((__availability__(swift, unavailable, message=\"Use arc4random instead.\")));\n\nvoid srand(unsigned) __attribute__((__availability__(swift, unavailable, message=\"Use arc4random instead.\")));\ndouble strtod(const char *, char **) __asm(\"_\" \"strtod\" );\nfloat strtof(const char *, char **) __asm(\"_\" \"strtof\" );\nlong strtol(const char *__str, char **__endptr, int __base);\nlong double\n  strtold(const char *, char **);\n\nlong long\n  strtoll(const char *__str, char **__endptr, int __base);\n\nunsigned long\n  strtoul(const char *__str, char **__endptr, int __base);\n\nunsigned long long\n  strtoull(const char *__str, char **__endptr, int __base);\n\n\n__attribute__((__availability__(swift, unavailable, message=\"Use posix_spawn APIs or NSTask instead. (On iOS, process spawning is unavailable.)\")))\n__attribute__((availability(macos,introduced=10.0))) __attribute__((availability(ios,unavailable)))\n__attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)))\nint system(const char *) __asm(\"_\" \"system\" );\n\n\nsize_t wcstombs(char * restrict, const wchar_t * restrict, size_t);\nint wctomb(char *, wchar_t);\n\n\nvoid _Exit(int) __attribute__((__noreturn__));\nlong a64l(const char *);\ndouble drand48(void);\nchar *ecvt(double, int, int *restrict, int *restrict);\ndouble erand48(unsigned short[3]);\nchar *fcvt(double, int, int *restrict, int *restrict);\nchar *gcvt(double, int, char *);\nint getsubopt(char **, char * const *, char **);\nint grantpt(int);\n\nchar *initstate(unsigned, char *, size_t);\n\n\n\nlong jrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message=\"Use arc4random instead.\")));\nchar *l64a(long);\nvoid lcong48(unsigned short[7]);\nlong lrand48(void) __attribute__((__availability__(swift, unavailable, message=\"Use arc4random instead.\")));\n\n__attribute__((__deprecated__(\"This function is provided for compatibility reasons only.  Due to security concerns inherent in the design of mktemp(3), it is highly recommended that you use mkstemp(3) instead.\")))\n\nchar *mktemp(char *);\nint mkstemp(char *);\nlong mrand48(void) __attribute__((__availability__(swift, unavailable, message=\"Use arc4random instead.\")));\nlong nrand48(unsigned short[3]) __attribute__((__availability__(swift, unavailable, message=\"Use arc4random instead.\")));\nint posix_openpt(int);\nchar *ptsname(int);\n\n\nint ptsname_r(int fildes, char *buffer, size_t buflen) __attribute__((availability(macos,introduced=10.13.4))) __attribute__((availability(ios,introduced=11.3))) __attribute__((availability(tvos,introduced=11.3))) __attribute__((availability(watchos,introduced=4.3)));\n\n\nint putenv(char *) __asm(\"_\" \"putenv\" );\nlong random(void) __attribute__((__availability__(swift, unavailable, message=\"Use arc4random instead.\")));\nint rand_r(unsigned *) __attribute__((__availability__(swift, unavailable, message=\"Use arc4random instead.\")));\n\nchar *realpath(const char * restrict, char * restrict) __asm(\"_\" \"realpath\" \"$DARWIN_EXTSN\");\n\n\n\nunsigned short\n *seed48(unsigned short[3]);\nint setenv(const char * __name, const char * __value, int __overwrite) __asm(\"_\" \"setenv\" );\n\nvoid setkey(const char *) __asm(\"_\" \"setkey\" );\n\n\n\nchar *setstate(const char *);\nvoid srand48(long);\n\nvoid srandom(unsigned);\n\n\n\nint unlockpt(int);\n\nint unsetenv(const char *) __asm(\"_\" \"unsetenv\" );\n# 257 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_dev_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_dev_t.h\" 3 4\ntypedef __darwin_dev_t dev_t;\n# 258 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_mode_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_mode_t.h\" 3 4\ntypedef __darwin_mode_t mode_t;\n# 259 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 2 3 4\n\n\n\nuint32_t arc4random(void);\nvoid arc4random_addrandom(unsigned char * , int )\n    __attribute__((availability(macosx,introduced=10.0))) __attribute__((availability(macosx,deprecated=10.12,message=\"use arc4random_stir\")))\n    __attribute__((availability(ios,introduced=2.0))) __attribute__((availability(ios,deprecated=10.0,message=\"use arc4random_stir\")))\n    __attribute__((availability(tvos,introduced=2.0))) __attribute__((availability(tvos,deprecated=10.0,message=\"use arc4random_stir\")))\n    __attribute__((availability(watchos,introduced=1.0))) __attribute__((availability(watchos,deprecated=3.0,message=\"use arc4random_stir\")));\nvoid arc4random_buf(void * __buf, size_t __nbytes) __attribute__((availability(macosx,introduced=10.7)));\nvoid arc4random_stir(void);\nuint32_t\n  arc4random_uniform(uint32_t __upper_bound) __attribute__((availability(macosx,introduced=10.7)));\n\nint atexit_b(void (^ _Nonnull)(void)) __attribute__((availability(macosx,introduced=10.6)));\n# 282 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 3 4\nvoid *bsearch_b(const void *__key, const void *__base, size_t __nel,\n     size_t __width, int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))\n     __attribute__((availability(macosx,introduced=10.6)));\n\n\n\nchar *cgetcap(char *, const char *, int);\nint cgetclose(void);\nint cgetent(char **, char **, const char *);\nint cgetfirst(char **, char **);\nint cgetmatch(const char *, const char *);\nint cgetnext(char **, char **);\nint cgetnum(char *, const char *, long *);\nint cgetset(const char *);\nint cgetstr(char *, const char *, char **);\nint cgetustr(char *, const char *, char **);\n\nint daemon(int, int) __asm(\"_\" \"daemon\" ) __attribute__((availability(macosx,introduced=10.0,deprecated=10.5,message=\"Use posix_spawn APIs instead.\"))) __attribute__((availability(watchos,unavailable))) __attribute__((availability(tvos,unavailable)));\nchar *devname(dev_t, mode_t);\nchar *devname_r(dev_t, mode_t, char *buf, int len);\nchar *getbsize(int *, long *);\nint getloadavg(double [], int);\nconst char\n *getprogname(void);\nvoid setprogname(const char *);\n# 316 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h\" 3 4\nint heapsort(void *__base, size_t __nel, size_t __width,\n     int (* _Nonnull __compar)(const void *, const void *));\n\nint heapsort_b(void *__base, size_t __nel, size_t __width,\n     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))\n     __attribute__((availability(macosx,introduced=10.6)));\n\nint mergesort(void *__base, size_t __nel, size_t __width,\n     int (* _Nonnull __compar)(const void *, const void *));\n\nint mergesort_b(void *__base, size_t __nel, size_t __width,\n     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))\n     __attribute__((availability(macosx,introduced=10.6)));\n\nvoid psort(void *__base, size_t __nel, size_t __width,\n     int (* _Nonnull __compar)(const void *, const void *))\n     __attribute__((availability(macosx,introduced=10.6)));\n\nvoid psort_b(void *__base, size_t __nel, size_t __width,\n     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))\n     __attribute__((availability(macosx,introduced=10.6)));\n\nvoid psort_r(void *__base, size_t __nel, size_t __width, void *,\n     int (* _Nonnull __compar)(void *, const void *, const void *))\n     __attribute__((availability(macosx,introduced=10.6)));\n\nvoid qsort_b(void *__base, size_t __nel, size_t __width,\n     int (^ _Nonnull __compar)(const void *, const void *) __attribute__((__noescape__)))\n     __attribute__((availability(macosx,introduced=10.6)));\n\nvoid qsort_r(void *__base, size_t __nel, size_t __width, void *,\n     int (* _Nonnull __compar)(void *, const void *, const void *));\nint radixsort(const unsigned char **__base, int __nel, const unsigned char *__table,\n     unsigned __endbyte);\nint rpmatch(const char *)\n __attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)));\nint sradixsort(const unsigned char **__base, int __nel, const unsigned char *__table,\n     unsigned __endbyte);\nvoid sranddev(void);\nvoid srandomdev(void);\nvoid *reallocf(void *__ptr, size_t __size) __attribute__((alloc_size(2)));\nlong long\n strtonum(const char *__numstr, long long __minval, long long __maxval, const char **__errstrp)\n __attribute__((availability(macos,introduced=11.0))) __attribute__((availability(ios,introduced=14.0))) __attribute__((availability(tvos,introduced=14.0))) __attribute__((availability(watchos,introduced=7.0)));\n\nlong long\n  strtoq(const char *__str, char **__endptr, int __base);\nunsigned long long\n  strtouq(const char *__str, char **__endptr, int __base);\n\nextern char *suboptarg;\n# 40 \"./libavutil/common.h\" 2\n\n\n\n# 1 \"./libavutil/error.h\" 1\n# 27 \"./libavutil/error.h\"\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/errno.h\" 1 3 4\n# 28 \"./libavutil/error.h\" 2\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 1 3\n# 29 \"./libavutil/error.h\" 2\n\n# 1 \"./libavutil/macros.h\" 1\n# 28 \"./libavutil/macros.h\"\n# 1 \"./libavutil/avconfig.h\" 1\n# 29 \"./libavutil/macros.h\" 2\n# 31 \"./libavutil/error.h\" 2\n# 99 \"./libavutil/error.h\"\nint av_strerror(int errnum, char *errbuf, size_t errbuf_size);\n# 111 \"./libavutil/error.h\"\nstatic inline char *av_make_error_string(char *errbuf, size_t errbuf_size, int errnum)\n\n    av_strerror(errnum, errbuf, errbuf_size);\n    return errbuf;\n\n# 44 \"./libavutil/common.h\" 2\n# 160 \"./libavutil/common.h\"\n__attribute__((const)) int av_log2(unsigned v);\n\n\n\n__attribute__((const)) int av_log2_16bit(unsigned v);\n# 174 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline __attribute__((const)) int av_clip_c(int a, int amin, int amax)\n\n\n\n\n    if (a < amin) return amin;\n    else if (a > amax) return amax;\n    else return a;\n\n# 191 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline __attribute__((const)) int64_t av_clip64_c(int64_t a, int64_t amin, int64_t amax)\n\n\n\n\n    if (a < amin) return amin;\n    else if (a > amax) return amax;\n    else return a;\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) uint8_t av_clip_uint8_c(int a)\n\n    if (a&(~0xFF)) return (~a)>>31;\n    else return a;\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) int8_t av_clip_int8_c(int a)\n\n    if ((a+0x80U) & ~0xFF) return (a>>31) ^ 0x7F;\n    else return a;\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) uint16_t av_clip_uint16_c(int a)\n\n    if (a&(~0xFFFF)) return (~a)>>31;\n    else return a;\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) int16_t av_clip_int16_c(int a)\n\n    if ((a+0x8000U) & ~0xFFFF) return (a>>31) ^ 0x7FFF;\n    else return a;\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) int32_t av_clipl_int32_c(int64_t a)\n\n    if ((a+0x80000000u) & ~(0xFFFFFFFFULL)) return (int32_t)((a>>63) ^ 0x7FFFFFFF);\n    else return (int32_t)a;\n\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) int av_clip_intp2_c(int a, int p)\n\n    if (((unsigned)a + (1 << p)) & ~((2 << p) - 1))\n        return (a >> 31) ^ ((1 << p) - 1);\n    else\n        return a;\n\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) unsigned av_clip_uintp2_c(int a, int p)\n\n    if (a & ~((1<<p) - 1)) return (~a) >> 31 & ((1<<p) - 1);\n    else return a;\n\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) unsigned av_mod_uintp2_c(unsigned a, unsigned p)\n\n    return a & ((1U << p) - 1);\n\n# 300 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline int av_sat_add32_c(int a, int b)\n\n    return av_clipl_int32_c((int64_t)a + b);\n\n# 312 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline int av_sat_dadd32_c(int a, int b)\n\n    return av_sat_add32_c(a, av_sat_add32_c(b, b));\n\n# 324 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline int av_sat_sub32_c(int a, int b)\n\n    return av_clipl_int32_c((int64_t)a - b);\n\n# 336 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline int av_sat_dsub32_c(int a, int b)\n\n    return av_sat_sub32_c(a, av_sat_add32_c(b, b));\n\n# 348 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline int64_t av_sat_add64_c(int64_t a, int64_t b) \n\n    int64_t tmp;\n    return !__builtin_add_overflow(a, b, &tmp) ? tmp : (tmp < 0 ? 9223372036854775807LL : (-9223372036854775807LL -1));\n\n\n\n\n\n\n\n# 367 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline int64_t av_sat_sub64_c(int64_t a, int64_t b) \n\n    int64_t tmp;\n    return !__builtin_sub_overflow(a, b, &tmp) ? tmp : (tmp < 0 ? 9223372036854775807LL : (-9223372036854775807LL -1));\n\n\n\n\n\n\n\n\n# 389 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline __attribute__((const)) float av_clipf_c(float a, float amin, float amax)\n\n\n\n\n    return ((((a) > (amin) ? (a) : (amin))) > (amax) ? (amax) : (((a) > (amin) ? (a) : (amin))));\n\n# 406 \"./libavutil/common.h\"\nstatic __attribute__((always_inline)) inline __attribute__((const)) double av_clipd_c(double a, double amin, double amax)\n\n\n\n\n    return ((((a) > (amin) ? (a) : (amin))) > (amax) ? (amax) : (((a) > (amin) ? (a) : (amin))));\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) int av_ceil_log2_c(int x)\n\n    return av_log2((x - 1U) << 1);\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) int av_popcount_c(uint32_t x)\n\n    x -= (x >> 1) & 0x55555555;\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0F0F0F0F;\n    x += x >> 8;\n    return (x + (x >> 16)) & 0x3F;\n\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) int av_popcount64_c(uint64_t x)\n\n    return av_popcount_c((uint32_t)x) + av_popcount_c((uint32_t)(x >> 32));\n\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) int av_parity_c(uint32_t v)\n\n    return av_popcount_c(v) & 1;\n\n# 573 \"./libavutil/common.h\"\n# 1 \"./libavutil/mem.h\" 1\n# 30 \"./libavutil/mem.h\"\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 1 3\n# 31 \"./libavutil/mem.h\" 2\n# 119 \"./libavutil/mem.h\"\nvoid *av_malloc(size_t size) __attribute__((__malloc__)) ;\n# 130 \"./libavutil/mem.h\"\nvoid *av_mallocz(size_t size) __attribute__((__malloc__)) ;\n# 143 \"./libavutil/mem.h\"\n                    void *av_malloc_array(size_t nmemb, size_t size);\n# 158 \"./libavutil/mem.h\"\nvoid *av_calloc(size_t nmemb, size_t size) __attribute__((__malloc__)) ;\n# 180 \"./libavutil/mem.h\"\nvoid *av_realloc(void *ptr, size_t size) ;\n# 201 \"./libavutil/mem.h\"\n__attribute__((warn_unused_result))\nint av_reallocp(void *ptr, size_t size);\n# 219 \"./libavutil/mem.h\"\nvoid *av_realloc_f(void *ptr, size_t nelem, size_t elsize);\n# 239 \"./libavutil/mem.h\"\n                    void *av_realloc_array(void *ptr, size_t nmemb, size_t size);\n# 257 \"./libavutil/mem.h\"\nint av_reallocp_array(void *ptr, size_t nmemb, size_t size);\n# 291 \"./libavutil/mem.h\"\nvoid *av_fast_realloc(void *ptr, unsigned int *size, size_t min_size);\n# 322 \"./libavutil/mem.h\"\nvoid av_fast_malloc(void *ptr, unsigned int *size, size_t min_size);\n# 342 \"./libavutil/mem.h\"\nvoid av_fast_mallocz(void *ptr, unsigned int *size, size_t min_size);\n# 355 \"./libavutil/mem.h\"\nvoid av_free(void *ptr);\n# 378 \"./libavutil/mem.h\"\nvoid av_freep(void *ptr);\n# 388 \"./libavutil/mem.h\"\nchar *av_strdup(const char *s) __attribute__((__malloc__));\n# 399 \"./libavutil/mem.h\"\nchar *av_strndup(const char *s, size_t len) __attribute__((__malloc__));\n# 409 \"./libavutil/mem.h\"\nvoid *av_memdup(const void *p, size_t size);\n# 422 \"./libavutil/mem.h\"\nvoid av_memcpy_backptr(uint8_t *dst, int back, int cnt);\n# 524 \"./libavutil/mem.h\"\nvoid av_dynarray_add(void *tab_ptr, int *nb_ptr, void *elem);\n# 536 \"./libavutil/mem.h\"\n__attribute__((warn_unused_result))\nint av_dynarray_add_nofree(void *tab_ptr, int *nb_ptr, void *elem);\n# 562 \"./libavutil/mem.h\"\nvoid *av_dynarray2_add(void **tab_ptr, int *nb_ptr, size_t elem_size,\n                       const uint8_t *elem_data);\n# 585 \"./libavutil/mem.h\"\nint av_size_mult(size_t a, size_t b, size_t *r);\n# 600 \"./libavutil/mem.h\"\nvoid av_max_alloc(size_t max);\n# 574 \"./libavutil/common.h\" 2\n# 302 \"./libavutil/avutil.h\" 2\n# 1 \"./libavutil/rational.h\" 1\n# 58 \"./libavutil/rational.h\"\ntypedef struct AVRational\n    int num;\n    int den;\n AVRational;\n# 71 \"./libavutil/rational.h\"\nstatic inline AVRational av_make_q(int num, int den)\n\n    AVRational r =  num",
    "den"
  ],
  [
    ";\n    return r;\n\n# 89 \"./libavutil/rational.h\"\nstatic inline int av_cmp_q(AVRational a, AVRational b)\n    const int64_t tmp= a.num * (int64_t)b.den - b.num * (int64_t)a.den;\n\n    if(tmp) return (int)((tmp ^ a.den ^ b.den)>>63)|1;\n    else if(b.den && a.den) return 0;\n    else if(a.num && b.num) return (a.num>>31) - (b.num>>31);\n    else return (-2147483647 -1);\n\n\n\n\n\n\n\n\nstatic inline double av_q2d(AVRational a)\n    return a.num / (double) a.den;\n\n# 120 \"./libavutil/rational.h\"\nint av_reduce(int *dst_num, int *dst_den, int64_t num, int64_t den, int64_t max);\n\n\n\n\n\n\n\nAVRational av_mul_q(AVRational b, AVRational c) __attribute__((const));\n\n\n\n\n\n\n\nAVRational av_div_q(AVRational b, AVRational c) __attribute__((const));\n\n\n\n\n\n\n\nAVRational av_add_q(AVRational b, AVRational c) __attribute__((const));\n\n\n\n\n\n\n\nAVRational av_sub_q(AVRational b, AVRational c) __attribute__((const));\n\n\n\n\n\n\nstatic __attribute__((always_inline)) inline AVRational av_inv_q(AVRational q)\n\n    AVRational r =  q.den",
    "q.num"
  ],
  ";\n    return r;\n\n# 176 \"./libavutil/rational.h\"\nAVRational av_d2q(double d, int max) __attribute__((const));\n# 189 \"./libavutil/rational.h\"\nint av_nearer_q(AVRational q, AVRational q1, AVRational q2);\n# 198 \"./libavutil/rational.h\"\nint av_find_nearest_q_idx(AVRational q, const AVRational* q_list);\n# 209 \"./libavutil/rational.h\"\nuint32_t av_q2intfloat(AVRational q);\n\n\n\n\n\nAVRational av_gcd_q(AVRational a, AVRational b, int max_den, AVRational def);\n# 303 \"./libavutil/avutil.h\" 2\n# 1 \"./libavutil/version.h\" 1\n# 304 \"./libavutil/avutil.h\" 2\n\n# 1 \"./libavutil/mathematics.h\" 1\n# 34 \"./libavutil/mathematics.h\"\n# 1 \"./libavutil/intfloat.h\" 1\n# 27 \"./libavutil/intfloat.h\"\nunion av_intfloat32 \n    uint32_t i;\n    float f;\n;\n\nunion av_intfloat64 \n    uint64_t i;\n    double f;\n;\n\n\n\n\nstatic __attribute__((always_inline)) inline float av_int2float(uint32_t i)\n\n    union av_intfloat32 v;\n    v.i = i;\n    return v.f;\n\n\n\n\n\nstatic __attribute__((always_inline)) inline uint32_t av_float2int(float f)\n\n    union av_intfloat32 v;\n    v.f = f;\n    return v.i;\n\n\n\n\n\nstatic __attribute__((always_inline)) inline double av_int2double(uint64_t i)\n\n    union av_intfloat64 v;\n    v.i = i;\n    return v.f;\n\n\n\n\n\nstatic __attribute__((always_inline)) inline uint64_t av_double2int(double f)\n\n    union av_intfloat64 v;\n    v.f = f;\n    return v.i;\n\n# 35 \"./libavutil/mathematics.h\" 2\n# 130 \"./libavutil/mathematics.h\"\nenum AVRounding \n    AV_ROUND_ZERO = 0",
  "AV_ROUND_INF = 1",
  "AV_ROUND_DOWN = 2",
  "AV_ROUND_UP = 3",
  "AV_ROUND_NEAR_INF = 5",
  "# 159 \"./libavutil/mathematics.h\"\n    AV_ROUND_PASS_MINMAX = 8192",
  ";\n# 170 \"./libavutil/mathematics.h\"\nint64_t __attribute__((const)) av_gcd(int64_t a, int64_t b);\n# 182 \"./libavutil/mathematics.h\"\nint64_t av_rescale(int64_t a, int64_t b, int64_t c) __attribute__((const));\n# 193 \"./libavutil/mathematics.h\"\nint64_t av_rescale_rnd(int64_t a, int64_t b, int64_t c, enum AVRounding rnd) __attribute__((const));\n# 204 \"./libavutil/mathematics.h\"\nint64_t av_rescale_q(int64_t a, AVRational bq, AVRational cq) __attribute__((const));\n# 213 \"./libavutil/mathematics.h\"\nint64_t av_rescale_q_rnd(int64_t a, AVRational bq, AVRational cq,\n                         enum AVRounding rnd) __attribute__((const));\n# 228 \"./libavutil/mathematics.h\"\nint av_compare_ts(int64_t ts_a, AVRational tb_a, int64_t ts_b, AVRational tb_b);\n# 249 \"./libavutil/mathematics.h\"\nint64_t av_compare_mod(uint64_t a, uint64_t b, uint64_t mod);\n# 276 \"./libavutil/mathematics.h\"\nint64_t av_rescale_delta(AVRational in_tb, int64_t in_ts, AVRational fs_tb, int duration, int64_t *last, AVRational out_tb);\n# 289 \"./libavutil/mathematics.h\"\nint64_t av_add_stable(AVRational ts_tb, int64_t ts, AVRational inc_tb, int64_t inc);\n\n\n\n\ndouble av_bessel_i0(double x);\n# 306 \"./libavutil/avutil.h\" 2\n# 1 \"./libavutil/log.h\" 1\n# 24 \"./libavutil/log.h\"\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stdarg.h\" 1 3\n# 14 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stdarg.h\" 3\ntypedef __builtin_va_list va_list;\n# 34 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stdarg.h\" 3\ntypedef __builtin_va_list __gnuc_va_list;\n# 25 \"./libavutil/log.h\" 2\n\n\n\ntypedef enum \n    AV_CLASS_CATEGORY_NA = 0",
  "AV_CLASS_CATEGORY_INPUT",
  "AV_CLASS_CATEGORY_OUTPUT",
  "AV_CLASS_CATEGORY_MUXER",
  "AV_CLASS_CATEGORY_DEMUXER",
  "AV_CLASS_CATEGORY_ENCODER",
  "AV_CLASS_CATEGORY_DECODER",
  "AV_CLASS_CATEGORY_FILTER",
  "AV_CLASS_CATEGORY_BITSTREAM_FILTER",
  "AV_CLASS_CATEGORY_SWSCALER",
  "AV_CLASS_CATEGORY_SWRESAMPLER",
  "AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT = 40",
  "AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT",
  "AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT",
  "AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT",
  "AV_CLASS_CATEGORY_DEVICE_OUTPUT",
  "AV_CLASS_CATEGORY_DEVICE_INPUT",
  "AV_CLASS_CATEGORY_NB\nAVClassCategory;\n# 59 \"./libavutil/log.h\"\nstruct AVOptionRanges;\n\n\n\n\n\n\ntypedef struct AVClass \n\n\n\n\n    const char* class_name;\n\n\n\n\n\n    const char* (*item_name)(void* ctx);\n\n\n\n\n\n\n    const struct AVOption *option;\n\n\n\n\n\n\n\n    int version;\n\n\n\n\n\n    int log_level_offset_offset;\n# 107 \"./libavutil/log.h\"\n    int parent_log_context_offset;\n\n\n\n\n\n\n    AVClassCategory category;\n\n\n\n\n\n    AVClassCategory (*get_category)(void* ctx);\n\n\n\n\n\n    int (*query_ranges)(struct AVOptionRanges **, void *obj, const char *key, int flags);\n\n\n\n\n    void* (*child_next)(void *obj, void *prev);\n# 146 \"./libavutil/log.h\"\n    const struct AVClass* (*child_class_iterate)(void **iter);\n AVClass;\n# 238 \"./libavutil/log.h\"\nvoid av_log(void *avcl, int level, const char *fmt, ...) __attribute__((__format__(__printf__, 3, 4)));\n# 259 \"./libavutil/log.h\"\nvoid av_log_once(void* avcl, int initial_level, int subsequent_level, int *state, const char *fmt, ...) __attribute__((__format__(__printf__, 5, 6)));\n# 277 \"./libavutil/log.h\"\nvoid av_vlog(void *avcl, int level, const char *fmt, va_list vl);\n# 286 \"./libavutil/log.h\"\nint av_log_get_level(void);\n# 295 \"./libavutil/log.h\"\nvoid av_log_set_level(int level);\n# 307 \"./libavutil/log.h\"\nvoid av_log_set_callback(void (*callback)(void*, int, const char*, va_list));\n# 322 \"./libavutil/log.h\"\nvoid av_log_default_callback(void *avcl, int level, const char *fmt,\n                             va_list vl);\n# 332 \"./libavutil/log.h\"\nconst char* av_default_item_name(void* ctx);\nAVClassCategory av_default_get_category(void *ptr);\n# 342 \"./libavutil/log.h\"\nvoid av_log_format_line(void *ptr, int level, const char *fmt, va_list vl,\n                        char *line, int line_size, int *print_prefix);\n# 359 \"./libavutil/log.h\"\nint av_log_format_line2(void *ptr, int level, const char *fmt, va_list vl,\n                        char *line, int line_size, int *print_prefix);\n# 380 \"./libavutil/log.h\"\nvoid av_log_set_flags(int arg);\nint av_log_get_flags(void);\n# 307 \"./libavutil/avutil.h\" 2\n# 1 \"./libavutil/pixfmt.h\" 1\n# 64 \"./libavutil/pixfmt.h\"\nenum AVPixelFormat \n    AV_PIX_FMT_NONE = -1",
  "AV_PIX_FMT_YUV420P",
  "AV_PIX_FMT_YUYV422",
  "AV_PIX_FMT_RGB24",
  "AV_PIX_FMT_BGR24",
  "AV_PIX_FMT_YUV422P",
  "AV_PIX_FMT_YUV444P",
  "AV_PIX_FMT_YUV410P",
  "AV_PIX_FMT_YUV411P",
  "AV_PIX_FMT_GRAY8",
  "AV_PIX_FMT_MONOWHITE",
  "AV_PIX_FMT_MONOBLACK",
  "AV_PIX_FMT_PAL8",
  "AV_PIX_FMT_YUVJ420P",
  "AV_PIX_FMT_YUVJ422P",
  "AV_PIX_FMT_YUVJ444P",
  "AV_PIX_FMT_UYVY422",
  "AV_PIX_FMT_UYYVYY411",
  "AV_PIX_FMT_BGR8",
  "AV_PIX_FMT_BGR4",
  "AV_PIX_FMT_BGR4_BYTE",
  "AV_PIX_FMT_RGB8",
  "AV_PIX_FMT_RGB4",
  "AV_PIX_FMT_RGB4_BYTE",
  "AV_PIX_FMT_NV12",
  "AV_PIX_FMT_NV21",
  "AV_PIX_FMT_ARGB",
  "AV_PIX_FMT_RGBA",
  "AV_PIX_FMT_ABGR",
  "AV_PIX_FMT_BGRA",
  "AV_PIX_FMT_GRAY16BE",
  "AV_PIX_FMT_GRAY16LE",
  "AV_PIX_FMT_YUV440P",
  "AV_PIX_FMT_YUVJ440P",
  "AV_PIX_FMT_YUVA420P",
  "AV_PIX_FMT_RGB48BE",
  "AV_PIX_FMT_RGB48LE",
  "AV_PIX_FMT_RGB565BE",
  "AV_PIX_FMT_RGB565LE",
  "AV_PIX_FMT_RGB555BE",
  "AV_PIX_FMT_RGB555LE",
  "AV_PIX_FMT_BGR565BE",
  "AV_PIX_FMT_BGR565LE",
  "AV_PIX_FMT_BGR555BE",
  "AV_PIX_FMT_BGR555LE",
  "AV_PIX_FMT_VAAPI",
  "AV_PIX_FMT_YUV420P16LE",
  "AV_PIX_FMT_YUV420P16BE",
  "AV_PIX_FMT_YUV422P16LE",
  "AV_PIX_FMT_YUV422P16BE",
  "AV_PIX_FMT_YUV444P16LE",
  "AV_PIX_FMT_YUV444P16BE",
  "AV_PIX_FMT_DXVA2_VLD",
  "AV_PIX_FMT_RGB444LE",
  "AV_PIX_FMT_RGB444BE",
  "AV_PIX_FMT_BGR444LE",
  "AV_PIX_FMT_BGR444BE",
  "AV_PIX_FMT_YA8",
  "AV_PIX_FMT_Y400A = AV_PIX_FMT_YA8",
  "AV_PIX_FMT_GRAY8A= AV_PIX_FMT_YA8",
  "AV_PIX_FMT_BGR48BE",
  "AV_PIX_FMT_BGR48LE",
  "AV_PIX_FMT_YUV420P9BE",
  "AV_PIX_FMT_YUV420P9LE",
  "AV_PIX_FMT_YUV420P10BE",
  "AV_PIX_FMT_YUV420P10LE",
  "AV_PIX_FMT_YUV422P10BE",
  "AV_PIX_FMT_YUV422P10LE",
  "AV_PIX_FMT_YUV444P9BE",
  "AV_PIX_FMT_YUV444P9LE",
  "AV_PIX_FMT_YUV444P10BE",
  "AV_PIX_FMT_YUV444P10LE",
  "AV_PIX_FMT_YUV422P9BE",
  "AV_PIX_FMT_YUV422P9LE",
  "AV_PIX_FMT_GBRP",
  "AV_PIX_FMT_GBR24P = AV_PIX_FMT_GBRP",
  "AV_PIX_FMT_GBRP9BE",
  "AV_PIX_FMT_GBRP9LE",
  "AV_PIX_FMT_GBRP10BE",
  "AV_PIX_FMT_GBRP10LE",
  "AV_PIX_FMT_GBRP16BE",
  "AV_PIX_FMT_GBRP16LE",
  "AV_PIX_FMT_YUVA422P",
  "AV_PIX_FMT_YUVA444P",
  "AV_PIX_FMT_YUVA420P9BE",
  "AV_PIX_FMT_YUVA420P9LE",
  "AV_PIX_FMT_YUVA422P9BE",
  "AV_PIX_FMT_YUVA422P9LE",
  "AV_PIX_FMT_YUVA444P9BE",
  "AV_PIX_FMT_YUVA444P9LE",
  "AV_PIX_FMT_YUVA420P10BE",
  "AV_PIX_FMT_YUVA420P10LE",
  "AV_PIX_FMT_YUVA422P10BE",
  "AV_PIX_FMT_YUVA422P10LE",
  "AV_PIX_FMT_YUVA444P10BE",
  "AV_PIX_FMT_YUVA444P10LE",
  "AV_PIX_FMT_YUVA420P16BE",
  "AV_PIX_FMT_YUVA420P16LE",
  "AV_PIX_FMT_YUVA422P16BE",
  "AV_PIX_FMT_YUVA422P16LE",
  "AV_PIX_FMT_YUVA444P16BE",
  "AV_PIX_FMT_YUVA444P16LE",
  "AV_PIX_FMT_VDPAU",
  "AV_PIX_FMT_XYZ12LE",
  "AV_PIX_FMT_XYZ12BE",
  "AV_PIX_FMT_NV16",
  "AV_PIX_FMT_NV20LE",
  "AV_PIX_FMT_NV20BE",
  "AV_PIX_FMT_RGBA64BE",
  "AV_PIX_FMT_RGBA64LE",
  "AV_PIX_FMT_BGRA64BE",
  "AV_PIX_FMT_BGRA64LE",
  "AV_PIX_FMT_YVYU422",
  "AV_PIX_FMT_YA16BE",
  "AV_PIX_FMT_YA16LE",
  "AV_PIX_FMT_GBRAP",
  "AV_PIX_FMT_GBRAP16BE",
  "AV_PIX_FMT_GBRAP16LE",
  "# 240 \"./libavutil/pixfmt.h\"\n    AV_PIX_FMT_QSV",
  "AV_PIX_FMT_MMAL",
  "AV_PIX_FMT_D3D11VA_VLD",
  "AV_PIX_FMT_CUDA",
  "AV_PIX_FMT_0RGB",
  "AV_PIX_FMT_RGB0",
  "AV_PIX_FMT_0BGR",
  "AV_PIX_FMT_BGR0",
  "AV_PIX_FMT_YUV420P12BE",
  "AV_PIX_FMT_YUV420P12LE",
  "AV_PIX_FMT_YUV420P14BE",
  "AV_PIX_FMT_YUV420P14LE",
  "AV_PIX_FMT_YUV422P12BE",
  "AV_PIX_FMT_YUV422P12LE",
  "AV_PIX_FMT_YUV422P14BE",
  "AV_PIX_FMT_YUV422P14LE",
  "AV_PIX_FMT_YUV444P12BE",
  "AV_PIX_FMT_YUV444P12LE",
  "AV_PIX_FMT_YUV444P14BE",
  "AV_PIX_FMT_YUV444P14LE",
  "AV_PIX_FMT_GBRP12BE",
  "AV_PIX_FMT_GBRP12LE",
  "AV_PIX_FMT_GBRP14BE",
  "AV_PIX_FMT_GBRP14LE",
  "AV_PIX_FMT_YUVJ411P",
  "AV_PIX_FMT_BAYER_BGGR8",
  "AV_PIX_FMT_BAYER_RGGB8",
  "AV_PIX_FMT_BAYER_GBRG8",
  "AV_PIX_FMT_BAYER_GRBG8",
  "AV_PIX_FMT_BAYER_BGGR16LE",
  "AV_PIX_FMT_BAYER_BGGR16BE",
  "AV_PIX_FMT_BAYER_RGGB16LE",
  "AV_PIX_FMT_BAYER_RGGB16BE",
  "AV_PIX_FMT_BAYER_GBRG16LE",
  "AV_PIX_FMT_BAYER_GBRG16BE",
  "AV_PIX_FMT_BAYER_GRBG16LE",
  "AV_PIX_FMT_BAYER_GRBG16BE",
  "AV_PIX_FMT_XVMC",
  "AV_PIX_FMT_YUV440P10LE",
  "AV_PIX_FMT_YUV440P10BE",
  "AV_PIX_FMT_YUV440P12LE",
  "AV_PIX_FMT_YUV440P12BE",
  "AV_PIX_FMT_AYUV64LE",
  "AV_PIX_FMT_AYUV64BE",
  "AV_PIX_FMT_VIDEOTOOLBOX",
  "AV_PIX_FMT_P010LE",
  "AV_PIX_FMT_P010BE",
  "AV_PIX_FMT_GBRAP12BE",
  "AV_PIX_FMT_GBRAP12LE",
  "AV_PIX_FMT_GBRAP10BE",
  "AV_PIX_FMT_GBRAP10LE",
  "AV_PIX_FMT_MEDIACODEC",
  "AV_PIX_FMT_GRAY12BE",
  "AV_PIX_FMT_GRAY12LE",
  "AV_PIX_FMT_GRAY10BE",
  "AV_PIX_FMT_GRAY10LE",
  "AV_PIX_FMT_P016LE",
  "AV_PIX_FMT_P016BE",
  "# 333 \"./libavutil/pixfmt.h\"\n    AV_PIX_FMT_D3D11",
  "AV_PIX_FMT_GRAY9BE",
  "AV_PIX_FMT_GRAY9LE",
  "AV_PIX_FMT_GBRPF32BE",
  "AV_PIX_FMT_GBRPF32LE",
  "AV_PIX_FMT_GBRAPF32BE",
  "AV_PIX_FMT_GBRAPF32LE",
  "AV_PIX_FMT_DRM_PRIME",
  "AV_PIX_FMT_OPENCL",
  "AV_PIX_FMT_GRAY14BE",
  "AV_PIX_FMT_GRAY14LE",
  "AV_PIX_FMT_GRAYF32BE",
  "AV_PIX_FMT_GRAYF32LE",
  "AV_PIX_FMT_YUVA422P12BE",
  "AV_PIX_FMT_YUVA422P12LE",
  "AV_PIX_FMT_YUVA444P12BE",
  "AV_PIX_FMT_YUVA444P12LE",
  "AV_PIX_FMT_NV24",
  "AV_PIX_FMT_NV42",
  "AV_PIX_FMT_VULKAN",
  "AV_PIX_FMT_Y210BE",
  "AV_PIX_FMT_Y210LE",
  "AV_PIX_FMT_X2RGB10LE",
  "AV_PIX_FMT_X2RGB10BE",
  "AV_PIX_FMT_X2BGR10LE",
  "AV_PIX_FMT_X2BGR10BE",
  "AV_PIX_FMT_P210BE",
  "AV_PIX_FMT_P210LE",
  "AV_PIX_FMT_P410BE",
  "AV_PIX_FMT_P410LE",
  "AV_PIX_FMT_P216BE",
  "AV_PIX_FMT_P216LE",
  "AV_PIX_FMT_P416BE",
  "AV_PIX_FMT_P416LE",
  "AV_PIX_FMT_VUYA",
  "AV_PIX_FMT_RGBAF16BE",
  "AV_PIX_FMT_RGBAF16LE",
  "AV_PIX_FMT_VUYX",
  "AV_PIX_FMT_P012LE",
  "AV_PIX_FMT_P012BE",
  "AV_PIX_FMT_Y212BE",
  "AV_PIX_FMT_Y212LE",
  "AV_PIX_FMT_XV30BE",
  "AV_PIX_FMT_XV30LE",
  "AV_PIX_FMT_XV36BE",
  "AV_PIX_FMT_XV36LE",
  "AV_PIX_FMT_RGBF32BE",
  "AV_PIX_FMT_RGBF32LE",
  "AV_PIX_FMT_RGBAF32BE",
  "AV_PIX_FMT_RGBAF32LE",
  "AV_PIX_FMT_P212BE",
  "AV_PIX_FMT_P212LE",
  "AV_PIX_FMT_P412BE",
  "AV_PIX_FMT_P412LE",
  "AV_PIX_FMT_GBRAP14BE",
  "AV_PIX_FMT_GBRAP14LE",
  "AV_PIX_FMT_D3D12",
  "AV_PIX_FMT_NB\n;\n# 552 \"./libavutil/pixfmt.h\"\nenum AVColorPrimaries \n    AVCOL_PRI_RESERVED0 = 0",
  "AVCOL_PRI_BT709 = 1",
  "AVCOL_PRI_UNSPECIFIED = 2",
  "AVCOL_PRI_RESERVED = 3",
  "AVCOL_PRI_BT470M = 4",
  "AVCOL_PRI_BT470BG = 5",
  "AVCOL_PRI_SMPTE170M = 6",
  "AVCOL_PRI_SMPTE240M = 7",
  "AVCOL_PRI_FILM = 8",
  "AVCOL_PRI_BT2020 = 9",
  "AVCOL_PRI_SMPTE428 = 10",
  "AVCOL_PRI_SMPTEST428_1 = AVCOL_PRI_SMPTE428",
  "AVCOL_PRI_SMPTE431 = 11",
  "AVCOL_PRI_SMPTE432 = 12",
  "AVCOL_PRI_EBU3213 = 22",
  "AVCOL_PRI_JEDEC_P22 = AVCOL_PRI_EBU3213",
  "AVCOL_PRI_NB\n;\n\n\n\n\n\nenum AVColorTransferCharacteristic \n    AVCOL_TRC_RESERVED0 = 0",
  "AVCOL_TRC_BT709 = 1",
  "AVCOL_TRC_UNSPECIFIED = 2",
  "AVCOL_TRC_RESERVED = 3",
  "AVCOL_TRC_GAMMA22 = 4",
  "AVCOL_TRC_GAMMA28 = 5",
  "AVCOL_TRC_SMPTE170M = 6",
  "AVCOL_TRC_SMPTE240M = 7",
  "AVCOL_TRC_LINEAR = 8",
  "AVCOL_TRC_LOG = 9",
  "AVCOL_TRC_LOG_SQRT = 10",
  "AVCOL_TRC_IEC61966_2_4 = 11",
  "AVCOL_TRC_BT1361_ECG = 12",
  "AVCOL_TRC_IEC61966_2_1 = 13",
  "AVCOL_TRC_BT2020_10 = 14",
  "AVCOL_TRC_BT2020_12 = 15",
  "AVCOL_TRC_SMPTE2084 = 16",
  "AVCOL_TRC_SMPTEST2084 = AVCOL_TRC_SMPTE2084",
  "AVCOL_TRC_SMPTE428 = 17",
  "AVCOL_TRC_SMPTEST428_1 = AVCOL_TRC_SMPTE428",
  "AVCOL_TRC_ARIB_STD_B67 = 18",
  "AVCOL_TRC_NB\n;\n\n\n\n\n\nenum AVColorSpace \n    AVCOL_SPC_RGB = 0",
  "AVCOL_SPC_BT709 = 1",
  "AVCOL_SPC_UNSPECIFIED = 2",
  "AVCOL_SPC_RESERVED = 3",
  "AVCOL_SPC_FCC = 4",
  "AVCOL_SPC_BT470BG = 5",
  "AVCOL_SPC_SMPTE170M = 6",
  "AVCOL_SPC_SMPTE240M = 7",
  "AVCOL_SPC_YCGCO = 8",
  "AVCOL_SPC_YCOCG = AVCOL_SPC_YCGCO",
  "AVCOL_SPC_BT2020_NCL = 9",
  "AVCOL_SPC_BT2020_CL = 10",
  "AVCOL_SPC_SMPTE2085 = 11",
  "AVCOL_SPC_CHROMA_DERIVED_NCL = 12",
  "AVCOL_SPC_CHROMA_DERIVED_CL = 13",
  "AVCOL_SPC_ICTCP = 14",
  "AVCOL_SPC_NB\n;\n# 645 \"./libavutil/pixfmt.h\"\nenum AVColorRange \n    AVCOL_RANGE_UNSPECIFIED = 0",
  "# 663 \"./libavutil/pixfmt.h\"\n    AVCOL_RANGE_MPEG = 1",
  "# 680 \"./libavutil/pixfmt.h\"\n    AVCOL_RANGE_JPEG = 2",
  "AVCOL_RANGE_NB\n;\n# 699 \"./libavutil/pixfmt.h\"\nenum AVChromaLocation \n    AVCHROMA_LOC_UNSPECIFIED = 0",
  "AVCHROMA_LOC_LEFT = 1",
  "AVCHROMA_LOC_CENTER = 2",
  "AVCHROMA_LOC_TOPLEFT = 3",
  "AVCHROMA_LOC_TOP = 4",
  "AVCHROMA_LOC_BOTTOMLEFT = 5",
  "AVCHROMA_LOC_BOTTOM = 6",
  "AVCHROMA_LOC_NB\n;\n# 308 \"./libavutil/avutil.h\" 2\n\n\n\n\nstatic inline void *av_x_if_null(const void *p, const void *x)\n\n    return (void *)(intptr_t)(p ? p : x);\n\n# 325 \"./libavutil/avutil.h\"\nunsigned av_int_list_length_for_size(unsigned elsize,\n                                     const void *list, uint64_t term) __attribute__((pure));\n# 347 \"./libavutil/avutil.h\"\n__attribute__((deprecated))\nFILE *av_fopen_utf8(const char *path, const char *mode);\n\n\n\n\n\nAVRational av_get_time_base_q(void);\n# 368 \"./libavutil/avutil.h\"\nchar *av_fourcc_make_string(char *buf, uint32_t fourcc);\n# 42 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\" 2\n# 1 \"./libavutil/buffer.h\" 1\n# 28 \"./libavutil/buffer.h\"\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 1 3\n# 29 \"./libavutil/buffer.h\" 2\n# 74 \"./libavutil/buffer.h\"\ntypedef struct AVBuffer AVBuffer;\n\n\n\n\n\n\n\ntypedef struct AVBufferRef \n    AVBuffer *buffer;\n\n\n\n\n\n\n    uint8_t *data;\n\n\n\n    size_t size;\n AVBufferRef;\n\n\n\n\n\n\nAVBufferRef *av_buffer_alloc(size_t size);\n\n\n\n\n\nAVBufferRef *av_buffer_allocz(size_t size);\n# 131 \"./libavutil/buffer.h\"\nAVBufferRef *av_buffer_create(uint8_t *data, size_t size,\n                              void (*free)(void *opaque, uint8_t *data),\n                              void *opaque, int flags);\n\n\n\n\n\n\nvoid av_buffer_default_free(void *opaque, uint8_t *data);\n\n\n\n\n\n\n\nAVBufferRef *av_buffer_ref(const AVBufferRef *buf);\n\n\n\n\n\n\n\nvoid av_buffer_unref(AVBufferRef **buf);\n\n\n\n\n\n\n\nint av_buffer_is_writable(const AVBufferRef *buf);\n\n\n\n\nvoid *av_buffer_get_opaque(const AVBufferRef *buf);\n\nint av_buffer_get_ref_count(const AVBufferRef *buf);\n# 182 \"./libavutil/buffer.h\"\nint av_buffer_make_writable(AVBufferRef **buf);\n# 199 \"./libavutil/buffer.h\"\nint av_buffer_realloc(AVBufferRef **buf, size_t size);\n# 215 \"./libavutil/buffer.h\"\nint av_buffer_replace(AVBufferRef **dst, const AVBufferRef *src);\n# 255 \"./libavutil/buffer.h\"\ntypedef struct AVBufferPool AVBufferPool;\n# 266 \"./libavutil/buffer.h\"\nAVBufferPool *av_buffer_pool_init(size_t size, AVBufferRef* (*alloc)(size_t size));\n# 283 \"./libavutil/buffer.h\"\nAVBufferPool *av_buffer_pool_init2(size_t size, void *opaque,\n                                   AVBufferRef* (*alloc)(void *opaque, size_t size),\n                                   void (*pool_free)(void *opaque));\n# 295 \"./libavutil/buffer.h\"\nvoid av_buffer_pool_uninit(AVBufferPool **pool);\n\n\n\n\n\n\n\nAVBufferRef *av_buffer_pool_get(AVBufferPool *pool);\n# 316 \"./libavutil/buffer.h\"\nvoid *av_buffer_pool_buffer_get_opaque(const AVBufferRef *ref);\n# 43 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\" 2\n# 1 \"./libavutil/dict.h\" 1\n# 89 \"./libavutil/dict.h\"\ntypedef struct AVDictionaryEntry \n    char *key;\n    char *value;\n AVDictionaryEntry;\n\ntypedef struct AVDictionary AVDictionary;\n# 110 \"./libavutil/dict.h\"\nAVDictionaryEntry *av_dict_get(const AVDictionary *m, const char *key,\n                               const AVDictionaryEntry *prev, int flags);\n# 137 \"./libavutil/dict.h\"\nconst AVDictionaryEntry *av_dict_iterate(const AVDictionary *m,\n                                         const AVDictionaryEntry *prev);\n\n\n\n\n\n\n\nint av_dict_count(const AVDictionary *m);\n# 165 \"./libavutil/dict.h\"\nint av_dict_set(AVDictionary **pm, const char *key, const char *value, int flags);\n\n\n\n\n\n\n\nint av_dict_set_int(AVDictionary **pm, const char *key, int64_t value, int flags);\n# 192 \"./libavutil/dict.h\"\nint av_dict_parse_string(AVDictionary **pm, const char *str,\n                         const char *key_val_sep, const char *pairs_sep,\n                         int flags);\n# 209 \"./libavutil/dict.h\"\nint av_dict_copy(AVDictionary **dst, const AVDictionary *src, int flags);\n\n\n\n\n\nvoid av_dict_free(AVDictionary **m);\n# 234 \"./libavutil/dict.h\"\nint av_dict_get_string(const AVDictionary *m, char **buffer,\n                       const char key_val_sep, const char pairs_sep);\n# 44 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\" 2\n# 1 \"./libavutil/frame.h\" 1\n# 28 \"./libavutil/frame.h\"\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 1 3\n# 29 \"./libavutil/frame.h\" 2\n\n\n\n\n# 1 \"./libavutil/channel_layout.h\" 1\n# 47 \"./libavutil/channel_layout.h\"\nenum AVChannel \n\n    AV_CHAN_NONE = -1",
  "AV_CHAN_FRONT_LEFT",
  "AV_CHAN_FRONT_RIGHT",
  "AV_CHAN_FRONT_CENTER",
  "AV_CHAN_LOW_FREQUENCY",
  "AV_CHAN_BACK_LEFT",
  "AV_CHAN_BACK_RIGHT",
  "AV_CHAN_FRONT_LEFT_OF_CENTER",
  "AV_CHAN_FRONT_RIGHT_OF_CENTER",
  "AV_CHAN_BACK_CENTER",
  "AV_CHAN_SIDE_LEFT",
  "AV_CHAN_SIDE_RIGHT",
  "AV_CHAN_TOP_CENTER",
  "AV_CHAN_TOP_FRONT_LEFT",
  "AV_CHAN_TOP_FRONT_CENTER",
  "AV_CHAN_TOP_FRONT_RIGHT",
  "AV_CHAN_TOP_BACK_LEFT",
  "AV_CHAN_TOP_BACK_CENTER",
  "AV_CHAN_TOP_BACK_RIGHT",
  "AV_CHAN_STEREO_LEFT = 29",
  "AV_CHAN_STEREO_RIGHT",
  "AV_CHAN_WIDE_LEFT",
  "AV_CHAN_WIDE_RIGHT",
  "AV_CHAN_SURROUND_DIRECT_LEFT",
  "AV_CHAN_SURROUND_DIRECT_RIGHT",
  "AV_CHAN_LOW_FREQUENCY_2",
  "AV_CHAN_TOP_SIDE_LEFT",
  "AV_CHAN_TOP_SIDE_RIGHT",
  "AV_CHAN_BOTTOM_FRONT_CENTER",
  "AV_CHAN_BOTTOM_FRONT_LEFT",
  "AV_CHAN_BOTTOM_FRONT_RIGHT",
  "AV_CHAN_UNUSED = 0x200",
  "AV_CHAN_UNKNOWN = 0x300",
  "# 101 \"./libavutil/channel_layout.h\"\n    AV_CHAN_AMBISONIC_BASE = 0x400",
  "AV_CHAN_AMBISONIC_END = 0x7ff",
  ";\n\nenum AVChannelOrder \n\n\n\n\n    AV_CHANNEL_ORDER_UNSPEC",
  "AV_CHANNEL_ORDER_NATIVE",
  "AV_CHANNEL_ORDER_CUSTOM",
  "# 148 \"./libavutil/channel_layout.h\"\n    AV_CHANNEL_ORDER_AMBISONIC",
  ";\n# 250 \"./libavutil/channel_layout.h\"\nenum AVMatrixEncoding \n    AV_MATRIX_ENCODING_NONE",
  "AV_MATRIX_ENCODING_DOLBY",
  "AV_MATRIX_ENCODING_DPLII",
  "AV_MATRIX_ENCODING_DPLIIX",
  "AV_MATRIX_ENCODING_DPLIIZ",
  "AV_MATRIX_ENCODING_DOLBYEX",
  "AV_MATRIX_ENCODING_DOLBYHEADPHONE",
  [
    "AV_MATRIX_ENCODING_NB\n;\n# 273 \"./libavutil/channel_layout.h\"\ntypedef struct AVChannelCustom \n    enum AVChannel id;\n    char name[16];\n    void *opaque;\n AVChannelCustom;\n# 309 \"./libavutil/channel_layout.h\"\ntypedef struct AVChannelLayout \n\n\n\n\n    enum AVChannelOrder order;\n\n\n\n\n    int nb_channels;\n\n\n\n\n\n\n    union \n# 341 \"./libavutil/channel_layout.h\"\n        uint64_t mask;\n# 360 \"./libavutil/channel_layout.h\"\n        AVChannelCustom *map;"
  ],
  "u;\n\n\n\n\n    void *opaque;\n AVChannelLayout;\n# 431 \"./libavutil/channel_layout.h\"\nstruct AVBPrint;\n# 458 \"./libavutil/channel_layout.h\"\n__attribute__((deprecated))\nuint64_t av_get_channel_layout(const char *name);\n# 474 \"./libavutil/channel_layout.h\"\n__attribute__((deprecated))\nint av_get_extended_channel_layout(const char *name, uint64_t* channel_layout, int* nb_channels);\n# 487 \"./libavutil/channel_layout.h\"\n__attribute__((deprecated))\nvoid av_get_channel_layout_string(char *buf, int buf_size, int nb_channels, uint64_t channel_layout);\n\n\n\n\n\n__attribute__((deprecated))\nvoid av_bprint_channel_layout(struct AVBPrint *bp, int nb_channels, uint64_t channel_layout);\n\n\n\n\n\n__attribute__((deprecated))\nint av_get_channel_layout_nb_channels(uint64_t channel_layout);\n\n\n\n\n\n\n__attribute__((deprecated))\nint64_t av_get_default_channel_layout(int nb_channels);\n# 524 \"./libavutil/channel_layout.h\"\n__attribute__((deprecated))\nint av_get_channel_layout_channel_index(uint64_t channel_layout,\n                                        uint64_t channel);\n\n\n\n\n\n__attribute__((deprecated))\nuint64_t av_channel_layout_extract_channel(uint64_t channel_layout, int index);\n# 542 \"./libavutil/channel_layout.h\"\n__attribute__((deprecated))\nconst char *av_get_channel_name(uint64_t channel);\n# 552 \"./libavutil/channel_layout.h\"\n__attribute__((deprecated))\nconst char *av_get_channel_description(uint64_t channel);\n# 565 \"./libavutil/channel_layout.h\"\n__attribute__((deprecated))\nint av_get_standard_channel_layout(unsigned index, uint64_t *layout,\n                                   const char **name);\n# 584 \"./libavutil/channel_layout.h\"\nint av_channel_name(char *buf, size_t buf_size, enum AVChannel channel);\n\n\n\n\n\n\nvoid av_channel_name_bprint(struct AVBPrint *bp, enum AVChannel channel_id);\n# 603 \"./libavutil/channel_layout.h\"\nint av_channel_description(char *buf, size_t buf_size, enum AVChannel channel);\n\n\n\n\n\n\nvoid av_channel_description_bprint(struct AVBPrint *bp, enum AVChannel channel_id);\n\n\n\n\n\n\n\nenum AVChannel av_channel_from_string(const char *name);\n# 630 \"./libavutil/channel_layout.h\"\nint av_channel_layout_from_mask(AVChannelLayout *channel_layout, uint64_t mask);\n# 649 \"./libavutil/channel_layout.h\"\nint av_channel_layout_from_string(AVChannelLayout *channel_layout,\n                                  const char *str);\n\n\n\n\n\n\n\nvoid av_channel_layout_default(AVChannelLayout *ch_layout, int nb_channels);\n# 669 \"./libavutil/channel_layout.h\"\nconst AVChannelLayout *av_channel_layout_standard(void **opaque);\n\n\n\n\n\n\n\nvoid av_channel_layout_uninit(AVChannelLayout *channel_layout);\n# 689 \"./libavutil/channel_layout.h\"\nint av_channel_layout_copy(AVChannelLayout *dst, const AVChannelLayout *src);\n# 704 \"./libavutil/channel_layout.h\"\nint av_channel_layout_describe(const AVChannelLayout *channel_layout,\n                               char *buf, size_t buf_size);\n\n\n\n\n\n\n\nint av_channel_layout_describe_bprint(const AVChannelLayout *channel_layout,\n                                      struct AVBPrint *bp);\n# 725 \"./libavutil/channel_layout.h\"\nenum AVChannel\nav_channel_layout_channel_from_index(const AVChannelLayout *channel_layout, unsigned int idx);\n# 737 \"./libavutil/channel_layout.h\"\nint av_channel_layout_index_from_channel(const AVChannelLayout *channel_layout,\n                                         enum AVChannel channel);\n# 752 \"./libavutil/channel_layout.h\"\nint av_channel_layout_index_from_string(const AVChannelLayout *channel_layout,\n                                        const char *name);\n# 767 \"./libavutil/channel_layout.h\"\nenum AVChannel\nav_channel_layout_channel_from_string(const AVChannelLayout *channel_layout,\n                                      const char *name);\n# 780 \"./libavutil/channel_layout.h\"\nuint64_t av_channel_layout_subset(const AVChannelLayout *channel_layout,\n                                  uint64_t mask);\n# 790 \"./libavutil/channel_layout.h\"\nint av_channel_layout_check(const AVChannelLayout *channel_layout);\n# 805 \"./libavutil/channel_layout.h\"\nint av_channel_layout_compare(const AVChannelLayout *chl, const AVChannelLayout *chl1);\n# 34 \"./libavutil/frame.h\" 2\n\n\n# 1 \"./libavutil/samplefmt.h\" 1\n# 55 \"./libavutil/samplefmt.h\"\nenum AVSampleFormat \n    AV_SAMPLE_FMT_NONE = -1",
  "AV_SAMPLE_FMT_U8",
  "AV_SAMPLE_FMT_S16",
  "AV_SAMPLE_FMT_S32",
  "AV_SAMPLE_FMT_FLT",
  "AV_SAMPLE_FMT_DBL",
  "AV_SAMPLE_FMT_U8P",
  "AV_SAMPLE_FMT_S16P",
  "AV_SAMPLE_FMT_S32P",
  "AV_SAMPLE_FMT_FLTP",
  "AV_SAMPLE_FMT_DBLP",
  "AV_SAMPLE_FMT_S64",
  "AV_SAMPLE_FMT_S64P",
  "AV_SAMPLE_FMT_NB\n;\n\n\n\n\n\nconst char *av_get_sample_fmt_name(enum AVSampleFormat sample_fmt);\n\n\n\n\n\nenum AVSampleFormat av_get_sample_fmt(const char *name);\n\n\n\n\n\n\n\nenum AVSampleFormat av_get_alt_sample_fmt(enum AVSampleFormat sample_fmt, int planar);\n# 103 \"./libavutil/samplefmt.h\"\nenum AVSampleFormat av_get_packed_sample_fmt(enum AVSampleFormat sample_fmt);\n# 114 \"./libavutil/samplefmt.h\"\nenum AVSampleFormat av_get_planar_sample_fmt(enum AVSampleFormat sample_fmt);\n# 128 \"./libavutil/samplefmt.h\"\nchar *av_get_sample_fmt_string(char *buf, int buf_size, enum AVSampleFormat sample_fmt);\n# 137 \"./libavutil/samplefmt.h\"\nint av_get_bytes_per_sample(enum AVSampleFormat sample_fmt);\n\n\n\n\n\n\n\nint av_sample_fmt_is_planar(enum AVSampleFormat sample_fmt);\n# 157 \"./libavutil/samplefmt.h\"\nint av_samples_get_buffer_size(int *linesize, int nb_channels, int nb_samples,\n                               enum AVSampleFormat sample_fmt, int align);\n# 198 \"./libavutil/samplefmt.h\"\nint av_samples_fill_arrays(uint8_t **audio_data, int *linesize,\n                           const uint8_t *buf,\n                           int nb_channels, int nb_samples,\n                           enum AVSampleFormat sample_fmt, int align);\n# 223 \"./libavutil/samplefmt.h\"\nint av_samples_alloc(uint8_t **audio_data, int *linesize, int nb_channels,\n                     int nb_samples, enum AVSampleFormat sample_fmt, int align);\n# 235 \"./libavutil/samplefmt.h\"\nint av_samples_alloc_array_and_samples(uint8_t ***audio_data, int *linesize, int nb_channels,\n                                       int nb_samples, enum AVSampleFormat sample_fmt, int align);\n# 249 \"./libavutil/samplefmt.h\"\nint av_samples_copy(uint8_t * const *dst, uint8_t * const *src, int dst_offset,\n                    int src_offset, int nb_samples, int nb_channels,\n                    enum AVSampleFormat sample_fmt);\n# 262 \"./libavutil/samplefmt.h\"\nint av_samples_set_silence(uint8_t * const *audio_data, int offset, int nb_samples,\n                           int nb_channels, enum AVSampleFormat sample_fmt);\n# 37 \"./libavutil/frame.h\" 2\n# 49 \"./libavutil/frame.h\"\nenum AVFrameSideDataType \n\n\n\n    AV_FRAME_DATA_PANSCAN",
  "AV_FRAME_DATA_A53_CC",
  "AV_FRAME_DATA_STEREO3D",
  "AV_FRAME_DATA_MATRIXENCODING",
  "AV_FRAME_DATA_DOWNMIX_INFO",
  "AV_FRAME_DATA_REPLAYGAIN",
  "AV_FRAME_DATA_DISPLAYMATRIX",
  "AV_FRAME_DATA_AFD",
  "AV_FRAME_DATA_MOTION_VECTORS",
  "# 109 \"./libavutil/frame.h\"\n    AV_FRAME_DATA_SKIP_SAMPLES",
  "AV_FRAME_DATA_AUDIO_SERVICE_TYPE",
  "AV_FRAME_DATA_MASTERING_DISPLAY_METADATA",
  "AV_FRAME_DATA_GOP_TIMECODE",
  "AV_FRAME_DATA_SPHERICAL",
  "AV_FRAME_DATA_CONTENT_LIGHT_LEVEL",
  "AV_FRAME_DATA_ICC_PROFILE",
  "AV_FRAME_DATA_S12M_TIMECODE",
  "AV_FRAME_DATA_DYNAMIC_HDR_PLUS",
  "AV_FRAME_DATA_REGIONS_OF_INTEREST",
  "AV_FRAME_DATA_VIDEO_ENC_PARAMS",
  "AV_FRAME_DATA_SEI_UNREGISTERED",
  "AV_FRAME_DATA_FILM_GRAIN_PARAMS",
  "AV_FRAME_DATA_DETECTION_BBOXES",
  "AV_FRAME_DATA_DOVI_RPU_BUFFER",
  "AV_FRAME_DATA_DOVI_METADATA",
  "AV_FRAME_DATA_DYNAMIC_HDR_VIVID",
  "AV_FRAME_DATA_AMBIENT_VIEWING_ENVIRONMENT",
  "# 226 \"./libavutil/frame.h\"\n    AV_FRAME_DATA_VIDEO_HINT",
  ";\n\nenum AVActiveFormatDescription \n    AV_AFD_SAME = 8",
  "AV_AFD_4_3 = 9",
  "AV_AFD_16_9 = 10",
  "AV_AFD_14_9 = 11",
  "AV_AFD_4_3_SP_14_9 = 13",
  "AV_AFD_16_9_SP_14_9 = 14",
  "AV_AFD_SP_4_3 = 15",
  ";\n# 246 \"./libavutil/frame.h\"\ntypedef struct AVFrameSideData \n    enum AVFrameSideDataType type;\n    uint8_t *data;\n    size_t size;\n    AVDictionary *metadata;\n    AVBufferRef *buf;\n AVFrameSideData;\n# 265 \"./libavutil/frame.h\"\ntypedef struct AVRegionOfInterest \n\n\n\n\n    uint32_t self_size;\n# 280 \"./libavutil/frame.h\"\n    int top;\n    int bottom;\n    int left;\n    int right;\n# 307 \"./libavutil/frame.h\"\n    AVRational qoffset;\n AVRegionOfInterest;\n# 340 \"./libavutil/frame.h\"\ntypedef struct AVFrame \n# 361 \"./libavutil/frame.h\"\n    uint8_t *data[8];\n# 385 \"./libavutil/frame.h\"\n    int linesize[8];\n# 401 \"./libavutil/frame.h\"\n    uint8_t **extended_data;\n# 412 \"./libavutil/frame.h\"\n    int width",
  "height;\n\n\n\n\n\n\n\n    int nb_samples;\n\n\n\n\n\n\n    int format;\n\n\n\n\n\n\n\n    __attribute__((deprecated))\n    int key_frame;\n\n\n\n\n\n    enum AVPictureType pict_type;\n\n\n\n\n    AVRational sample_aspect_ratio;\n\n\n\n\n    int64_t pts;\n\n\n\n\n\n\n    int64_t pkt_dts;\n\n\n\n\n\n\n\n    AVRational time_base;\n\n\n\n\n\n    __attribute__((deprecated))\n    int coded_picture_number;\n\n\n\n    __attribute__((deprecated))\n    int display_picture_number;\n\n\n\n\n\n    int quality;\n# 501 \"./libavutil/frame.h\"\n    void *opaque;\n# 521 \"./libavutil/frame.h\"\n    int repeat_pict;\n\n\n\n\n\n\n\n    __attribute__((deprecated))\n    int interlaced_frame;\n\n\n\n\n\n\n    __attribute__((deprecated))\n    int top_field_first;\n\n\n\n\n\n\n    __attribute__((deprecated))\n    int palette_has_changed;\n# 560 \"./libavutil/frame.h\"\n    __attribute__((deprecated))\n    int64_t reordered_opaque;\n\n\n\n\n\n    int sample_rate;\n\n\n\n\n\n\n    __attribute__((deprecated))\n    uint64_t channel_layout;\n# 590 \"./libavutil/frame.h\"\n    AVBufferRef *buf[8];\n# 604 \"./libavutil/frame.h\"\n    AVBufferRef **extended_buf;\n\n\n\n    int nb_extended_buf;\n\n    AVFrameSideData **side_data;\n    int nb_side_data;\n# 649 \"./libavutil/frame.h\"\n    int flags;\n\n\n\n\n\n\n    enum AVColorRange color_range;\n\n    enum AVColorPrimaries color_primaries;\n\n    enum AVColorTransferCharacteristic color_trc;\n\n\n\n\n\n\n    enum AVColorSpace colorspace;\n\n    enum AVChromaLocation chroma_location;\n\n\n\n\n\n\n    int64_t best_effort_timestamp;\n# 686 \"./libavutil/frame.h\"\n    __attribute__((deprecated))\n    int64_t pkt_pos;\n# 699 \"./libavutil/frame.h\"\n    __attribute__((deprecated))\n    int64_t pkt_duration;\n\n\n\n\n\n\n\n    AVDictionary *metadata;\n# 717 \"./libavutil/frame.h\"\n    int decode_error_flags;\n# 730 \"./libavutil/frame.h\"\n    __attribute__((deprecated))\n    int channels;\n# 744 \"./libavutil/frame.h\"\n    __attribute__((deprecated))\n    int pkt_size;\n\n\n\n\n\n\n    AVBufferRef *hw_frames_ctx;\n# 768 \"./libavutil/frame.h\"\n    AVBufferRef *opaque_ref;\n# 778 \"./libavutil/frame.h\"\n    size_t crop_top;\n    size_t crop_bottom;\n    size_t crop_left;\n    size_t crop_right;\n# 797 \"./libavutil/frame.h\"\n    AVBufferRef *private_ref;\n\n\n\n\n    AVChannelLayout ch_layout;\n\n\n\n\n    int64_t duration;\n AVFrame;\n# 821 \"./libavutil/frame.h\"\nAVFrame *av_frame_alloc(void);\n# 830 \"./libavutil/frame.h\"\nvoid av_frame_free(AVFrame **frame);\n# 847 \"./libavutil/frame.h\"\nint av_frame_ref(AVFrame *dst, const AVFrame *src);\n# 860 \"./libavutil/frame.h\"\nint av_frame_replace(AVFrame *dst, const AVFrame *src);\n# 869 \"./libavutil/frame.h\"\nAVFrame *av_frame_clone(const AVFrame *src);\n\n\n\n\nvoid av_frame_unref(AVFrame *frame);\n# 883 \"./libavutil/frame.h\"\nvoid av_frame_move_ref(AVFrame *dst, AVFrame *src);\n# 908 \"./libavutil/frame.h\"\nint av_frame_get_buffer(AVFrame *frame, int align);\n# 922 \"./libavutil/frame.h\"\nint av_frame_is_writable(AVFrame *frame);\n# 936 \"./libavutil/frame.h\"\nint av_frame_make_writable(AVFrame *frame);\n# 949 \"./libavutil/frame.h\"\nint av_frame_copy(AVFrame *dst, const AVFrame *src);\n# 959 \"./libavutil/frame.h\"\nint av_frame_copy_props(AVFrame *dst, const AVFrame *src);\n# 970 \"./libavutil/frame.h\"\nAVBufferRef *av_frame_get_plane_buffer(const AVFrame *frame, int plane);\n# 981 \"./libavutil/frame.h\"\nAVFrameSideData *av_frame_new_side_data(AVFrame *frame,\n                                        enum AVFrameSideDataType type,\n                                        size_t size);\n# 997 \"./libavutil/frame.h\"\nAVFrameSideData *av_frame_new_side_data_from_buf(AVFrame *frame,\n                                                 enum AVFrameSideDataType type,\n                                                 AVBufferRef *buf);\n\n\n\n\n\nAVFrameSideData *av_frame_get_side_data(const AVFrame *frame,\n                                        enum AVFrameSideDataType type);\n\n\n\n\nvoid av_frame_remove_side_data(AVFrame *frame, enum AVFrameSideDataType type);\n\n\n\n\n\nenum \n# 1026 \"./libavutil/frame.h\"\n    AV_FRAME_CROP_UNALIGNED = 1 << 0",
  [
    ";\n# 1045 \"./libavutil/frame.h\"\nint av_frame_apply_cropping(AVFrame *frame, int flags);\n\n\n\n\nconst char *av_frame_side_data_name(enum AVFrameSideDataType type);\n# 45 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\" 2\n\n\n\n\n\n# 1 \"./libavfilter/version_major.h\" 1\n# 51 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\" 2\n\n\n\n\n# 1 \"./libavfilter/version.h\" 1\n# 56 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\" 2\n\n\n\n\n\nunsigned avfilter_version(void);\n\n\n\n\nconst char *avfilter_configuration(void);\n\n\n\n\nconst char *avfilter_license(void);\n\ntypedef struct AVFilterContext AVFilterContext;\ntypedef struct AVFilterLink AVFilterLink;\ntypedef struct AVFilterPad AVFilterPad;\ntypedef struct AVFilterFormats AVFilterFormats;\ntypedef struct AVFilterChannelLayouts AVFilterChannelLayouts;\n# 88 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nconst char *avfilter_pad_get_name(const AVFilterPad *pads, int pad_idx);\n# 99 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nenum AVMediaType avfilter_pad_get_type(const AVFilterPad *pads, int pad_idx);\n# 166 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\ntypedef struct AVFilter \n\n\n\n    const char *name;\n\n\n\n\n\n\n    const char *description;\n# 186 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    const AVFilterPad *inputs;\n# 195 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    const AVFilterPad *outputs;\n# 205 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    const AVClass *priv_class;\n\n\n\n\n    int flags;\n# 223 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    uint8_t nb_inputs;\n\n\n\n\n    uint8_t nb_outputs;\n\n\n\n\n\n    uint8_t formats_state;\n# 249 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    int (*preinit)(AVFilterContext *ctx);\n# 272 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    int (*init)(AVFilterContext *ctx);\n# 284 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    void (*uninit)(AVFilterContext *ctx);\n\n\n\n\n\n    union \n# 318 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n        int (*query_func)(AVFilterContext *);\n# 329 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n        const enum AVPixelFormat *pixels_list;\n# 340 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n        const enum AVSampleFormat *samples_list;\n\n\n\n        enum AVPixelFormat pix_fmt;\n\n\n\n        enum AVSampleFormat sample_fmt;"
  ],
  [
    "formats;\n\n    int priv_size;\n\n    int flags_internal;\n# 367 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    int (*process_command)(AVFilterContext *, const char *cmd, const char *arg, char *res, int res_len, int flags);\n# 381 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    int (*activate)(AVFilterContext *ctx);\n AVFilter;\n\n\n\n\nunsigned avfilter_filter_pad_count(const AVFilter *filter, int is_output);\n\n\n\n\n\n\ntypedef struct AVFilterInternal AVFilterInternal;\n\n\nstruct AVFilterContext \n    const AVClass *av_class;\n\n    const AVFilter *filter;\n\n    char *name;\n\n    AVFilterPad *input_pads;\n    AVFilterLink **inputs;\n    unsigned nb_inputs;\n\n    AVFilterPad *output_pads;\n    AVFilterLink **outputs;\n    unsigned nb_outputs;\n\n    void *priv;\n\n    struct AVFilterGraph *graph;\n# 432 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    int thread_type;\n\n\n\n\n    AVFilterInternal *internal;\n\n    struct AVFilterCommand *command_queue;\n\n    char *enable_str;\n    void *enable;\n    double *var_values;\n    int is_disabled;\n# 457 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    AVBufferRef *hw_device_ctx;\n\n\n\n\n\n\n    int nb_threads;\n\n\n\n\n\n\n    unsigned ready;\n# 487 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    int extra_hw_frames;\n;\n# 500 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\ntypedef struct AVFilterFormatsConfig \n\n\n\n\n    AVFilterFormats *formats;\n\n\n\n\n    AVFilterFormats *samplerates;\n\n\n\n\n    AVFilterChannelLayouts *channel_layouts;\n\n AVFilterFormatsConfig;\n# 531 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nstruct AVFilterLink \n    AVFilterContext *src;\n    AVFilterPad *srcpad;\n\n    AVFilterContext *dst;\n    AVFilterPad *dstpad;\n\n    enum AVMediaType type;\n\n\n    int w;\n    int h;\n    AVRational sample_aspect_ratio;\n\n\n\n\n\n\n    __attribute__((deprecated))\n    uint64_t channel_layout;\n\n    int sample_rate;\n\n    int format;\n# 564 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    AVRational time_base;\n\n    AVChannelLayout ch_layout;\n# 579 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    AVFilterFormatsConfig incfg;\n\n\n\n\n    AVFilterFormatsConfig outcfg;\n\n\n    enum \n        AVLINK_UNINIT = 0",
    "AVLINK_STARTINIT",
    "AVLINK_INIT"
  ],
  "init_state;\n\n\n\n\n    struct AVFilterGraph *graph;\n\n\n\n\n\n    int64_t current_pts;\n\n\n\n\n\n    int64_t current_pts_us;\n\n\n\n\n    int age_index;\n# 626 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    AVRational frame_rate;\n# 635 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    int min_samples;\n\n\n\n\n\n    int max_samples;\n\n\n\n\n    int64_t frame_count_in",
  "frame_count_out;\n\n\n\n\n    int64_t sample_count_in",
  "sample_count_out;\n\n\n\n\n    void *frame_pool;\n\n\n\n\n\n\n    int frame_wanted_out;\n\n\n\n\n\n    AVBufferRef *hw_frames_ctx;\n# 678 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    char reserved[0xF000];\n# 715 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n;\n# 726 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_link(AVFilterContext *src, unsigned srcpad,\n                  AVFilterContext *dst, unsigned dstpad);\n\n\n\n\nvoid avfilter_link_free(AVFilterLink **link);\n\n\n\n\n\n\n\nint avfilter_config_links(AVFilterContext *filter);\n# 749 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_process_command(AVFilterContext *filter, const char *cmd, const char *arg, char *res, int res_len, int flags);\n# 760 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nconst AVFilter *av_filter_iterate(void **opaque);\n# 769 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nconst AVFilter *avfilter_get_by_name(const char *name);\n# 782 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_init_str(AVFilterContext *ctx, const char *args);\n# 804 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_init_dict(AVFilterContext *ctx, AVDictionary **options);\n\n\n\n\n\n\n\nvoid avfilter_free(AVFilterContext *filter);\n# 823 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_insert_filter(AVFilterLink *link, AVFilterContext *filt,\n                           unsigned filt_srcpad_idx, unsigned filt_dstpad_idx);\n\n\n\n\n\n\nconst AVClass *avfilter_get_class(void);\n\ntypedef struct AVFilterGraphInternal AVFilterGraphInternal;\n# 847 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\ntypedef int (avfilter_action_func)(AVFilterContext *ctx, void *arg, int jobnr, int nb_jobs);\n# 861 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\ntypedef int (avfilter_execute_func)(AVFilterContext *ctx, avfilter_action_func *func,\n                                    void *arg, int *ret, int nb_jobs);\n\ntypedef struct AVFilterGraph \n    const AVClass *av_class;\n    AVFilterContext **filters;\n    unsigned nb_filters;\n\n    char *scale_sws_opts;\n# 883 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    int thread_type;\n\n\n\n\n\n\n    int nb_threads;\n\n\n\n\n    AVFilterGraphInternal *internal;\n\n\n\n\n\n\n    void *opaque;\n# 916 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    avfilter_execute_func *execute;\n\n    char *aresample_swr_opts;\n# 927 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    AVFilterLink **sink_links;\n    int sink_links_count;\n\n    unsigned disable_auto_convert;\n AVFilterGraph;\n\n\n\n\n\n\nAVFilterGraph *avfilter_graph_alloc(void);\n# 954 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nAVFilterContext *avfilter_graph_alloc_filter(AVFilterGraph *graph,\n                                             const AVFilter *filter,\n                                             const char *name);\n# 966 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nAVFilterContext *avfilter_graph_get_filter(AVFilterGraph *graph, const char *name);\n# 981 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_create_filter(AVFilterContext **filt_ctx, const AVFilter *filt,\n                                 const char *name, const char *args, void *opaque,\n                                 AVFilterGraph *graph_ctx);\n# 993 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nvoid avfilter_graph_set_auto_convert(AVFilterGraph *graph, unsigned flags);\n\nenum \n    AVFILTER_AUTO_CONVERT_ALL = 0",
  "AVFILTER_AUTO_CONVERT_NONE = -1",
  [
    ";\n# 1007 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_config(AVFilterGraph *graphctx, void *log_ctx);\n\n\n\n\n\nvoid avfilter_graph_free(AVFilterGraph **graph);\n# 1024 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\ntypedef struct AVFilterInOut \n\n    char *name;\n\n\n    AVFilterContext *filter_ctx;\n\n\n    int pad_idx;\n\n\n    struct AVFilterInOut *next;\n AVFilterInOut;\n\n\n\n\n\n\nAVFilterInOut *avfilter_inout_alloc(void);\n\n\n\n\n\nvoid avfilter_inout_free(AVFilterInOut **inout);\n# 1069 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_parse(AVFilterGraph *graph, const char *filters,\n                         AVFilterInOut *inputs, AVFilterInOut *outputs,\n                         void *log_ctx);\n# 1090 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_parse_ptr(AVFilterGraph *graph, const char *filters,\n                             AVFilterInOut **inputs, AVFilterInOut **outputs,\n                             void *log_ctx);\n# 1116 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_parse2(AVFilterGraph *graph, const char *filters,\n                          AVFilterInOut **inputs,\n                          AVFilterInOut **outputs);\n\n\n\n\n\n\n\ntypedef struct AVFilterPadParams \n\n\n\n\n\n\n\n    char *label;\n AVFilterPadParams;\n\n\n\n\n\n\n\ntypedef struct AVFilterParams \n# 1154 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    AVFilterContext *filter;\n# 1171 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    char *filter_name;\n# 1183 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    char *instance_name;\n# 1195 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    AVDictionary *opts;\n\n    AVFilterPadParams **inputs;\n    unsigned nb_inputs;\n\n    AVFilterPadParams **outputs;\n    unsigned nb_outputs;\n AVFilterParams;\n\n\n\n\n\n\n\ntypedef struct AVFilterChain \n    AVFilterParams **filters;\n    size_t nb_filters;\n AVFilterChain;\n# 1224 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\ntypedef struct AVFilterGraphSegment \n\n\n\n\n    AVFilterGraph *graph;\n\n\n\n\n\n    AVFilterChain **chains;\n    size_t nb_chains;\n# 1246 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\n    char *scale_sws_opts;\n AVFilterGraphSegment;\n# 1273 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_segment_parse(AVFilterGraph *graph, const char *graph_str,\n                                 int flags, AVFilterGraphSegment **seg);\n# 1301 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_segment_create_filters(AVFilterGraphSegment *seg, int flags);\n# 1330 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_segment_apply_opts(AVFilterGraphSegment *seg, int flags);\n# 1352 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_segment_init(AVFilterGraphSegment *seg, int flags);\n# 1387 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_segment_link(AVFilterGraphSegment *seg, int flags,\n                                AVFilterInOut **inputs,\n                                AVFilterInOut **outputs);\n# 1415 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_segment_apply(AVFilterGraphSegment *seg, int flags,\n                                 AVFilterInOut **inputs,\n                                 AVFilterInOut **outputs);\n# 1429 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nvoid avfilter_graph_segment_free(AVFilterGraphSegment **seg);\n# 1446 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_send_command(AVFilterGraph *graph, const char *target, const char *cmd, const char *arg, char *res, int res_len, int flags);\n# 1463 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_queue_command(AVFilterGraph *graph, const char *target, const char *cmd, const char *arg, int flags, double ts);\n# 1474 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nchar *avfilter_graph_dump(AVFilterGraph *graph, const char *options);\n# 1494 \"/Users/davidchen/repo/ffmpeg/libavfilter/avfilter.h\"\nint avfilter_graph_request_oldest(AVFilterGraph *graph);\n# 31 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\" 1\n# 64 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\"\nstruct AVFilterFormats \n    unsigned nb_formats;\n    int *formats;\n\n    unsigned refcount;\n    struct AVFilterFormats ***refs;\n;\n# 85 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\"\nstruct AVFilterChannelLayouts \n    AVChannelLayout *channel_layouts;\n    int nb_channel_layouts;\n    char all_layouts;\n    char all_counts;\n\n    unsigned refcount;\n    struct AVFilterChannelLayouts ***refs;\n;\n# 117 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\"\n__attribute__((warn_unused_result))\nAVFilterChannelLayouts *ff_all_channel_layouts(void);\n\n__attribute__((warn_unused_result))\nAVFilterFormats *ff_all_samplerates(void);\n\n\n\n\n\n__attribute__((warn_unused_result))\nAVFilterChannelLayouts *ff_all_channel_counts(void);\n\n__attribute__((warn_unused_result))\nAVFilterChannelLayouts *ff_make_channel_layout_list(const AVChannelLayout *fmts);\n\n\n\n\n\n\n__attribute__((warn_unused_result))\nint ff_set_common_channel_layouts(AVFilterContext *ctx,\n                                  AVFilterChannelLayouts *layouts);\n\n\n\n__attribute__((warn_unused_result))\nint ff_set_common_channel_layouts_from_list(AVFilterContext *ctx,\n                                            const AVChannelLayout *fmts);\n\n\n\n__attribute__((warn_unused_result))\nint ff_set_common_all_channel_counts(AVFilterContext *ctx);\n\n__attribute__((warn_unused_result))\nint ff_set_common_samplerates(AVFilterContext *ctx,\n                              AVFilterFormats *samplerates);\n\n\n\n__attribute__((warn_unused_result))\nint ff_set_common_samplerates_from_list(AVFilterContext *ctx,\n                                        const int *samplerates);\n\n\n\n__attribute__((warn_unused_result))\nint ff_set_common_all_samplerates(AVFilterContext *ctx);\n\n\n\n\n\n\n__attribute__((warn_unused_result))\nint ff_set_common_formats(AVFilterContext *ctx, AVFilterFormats *formats);\n\n\n\n\n__attribute__((warn_unused_result))\nint ff_set_common_formats_from_list(AVFilterContext *ctx, const int *fmts);\n\n__attribute__((warn_unused_result))\nint ff_add_channel_layout(AVFilterChannelLayouts **l,\n                          const AVChannelLayout *channel_layout);\n\n\n\n\n__attribute__((warn_unused_result))\nint ff_channel_layouts_ref(AVFilterChannelLayouts *f,\n                           AVFilterChannelLayouts **ref);\n\n\n\n\nvoid ff_channel_layouts_unref(AVFilterChannelLayouts **ref);\n\nvoid ff_channel_layouts_changeref(AVFilterChannelLayouts **oldref,\n                                  AVFilterChannelLayouts **newref);\n\n__attribute__((warn_unused_result))\nint ff_default_query_formats(AVFilterContext *ctx);\n# 211 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\"\n__attribute__((warn_unused_result))\nAVFilterFormats *ff_make_format_list(const int *fmts);\n\n\n\n\n__attribute__((warn_unused_result))\nAVFilterFormats *ff_make_formats_list_singleton(int fmt);\n# 228 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\"\n__attribute__((warn_unused_result))\nint ff_add_format(AVFilterFormats **avff, int64_t fmt);\n\n\n\n\n__attribute__((warn_unused_result))\nAVFilterFormats *ff_all_formats(enum AVMediaType type);\n\n\n\n\n\n__attribute__((warn_unused_result))\nAVFilterFormats *ff_formats_pixdesc_filter(unsigned want, unsigned rej);\n\n\n\n\n\n\n\n__attribute__((warn_unused_result))\nAVFilterFormats *ff_planar_sample_fmts(void);\n# 265 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\"\n__attribute__((warn_unused_result))\nint ff_formats_ref(AVFilterFormats *formats, AVFilterFormats **ref);\n# 283 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\"\nvoid ff_formats_unref(AVFilterFormats **ref);\n# 297 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\"\nvoid ff_formats_changeref(AVFilterFormats **oldref, AVFilterFormats **newref);\n\n\n\n\n\n\nint ff_formats_check_pixel_formats(void *log, const AVFilterFormats *fmts);\n\n\n\n\n\n\nint ff_formats_check_sample_formats(void *log, const AVFilterFormats *fmts);\n\n\n\n\n\n\nint ff_formats_check_sample_rates(void *log, const AVFilterFormats *fmts);\n\n\n\n\n\n\nint ff_formats_check_channel_layouts(void *log, const AVFilterChannelLayouts *fmts);\n\ntypedef struct AVFilterFormatMerger \n    unsigned offset;\n    int (*merge)(void *a, void *b);\n    int (*can_merge)(const void *a, const void *b);\n AVFilterFormatsMerger;\n# 418 \"/Users/davidchen/repo/ffmpeg/libavfilter/formats.h\"\ntypedef struct AVFilterNegotiation \n    unsigned nb_mergers;\n    const AVFilterFormatsMerger *mergers;\n    const char *conversion_filter;\n    unsigned conversion_opts_offset;\n AVFilterNegotiation;\n\nconst AVFilterNegotiation *ff_filter_get_negotiation(AVFilterLink *link);\n# 32 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\" 1\n# 27 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n# 1 \"./libavutil/internal.h\" 1\n# 38 \"./libavutil/internal.h\"\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 1 3\n# 39 \"./libavutil/internal.h\" 2\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/assert.h\" 1 3 4\n# 40 \"./libavutil/internal.h\" 2\n\n# 1 \"./config.h\" 1\n# 42 \"./libavutil/internal.h\" 2\n# 97 \"./libavutil/internal.h\"\n# 1 \"./libavutil/libm.h\" 1\n# 98 \"./libavutil/internal.h\" 2\n# 116 \"./libavutil/internal.h\"\nvoid avpriv_report_missing_feature(void *avc,\n                                   const char *msg, ...) __attribute__((__format__(__printf__, 2, 3)));\n# 127 \"./libavutil/internal.h\"\nvoid avpriv_request_sample(void *avc,\n                           const char *msg, ...) __attribute__((__format__(__printf__, 2, 3)));\n# 166 \"./libavutil/internal.h\"\nint avpriv_set_systematic_pal2(uint32_t pal[256], enum AVPixelFormat pix_fmt);\n\nstatic __attribute__((always_inline)) inline __attribute__((const)) int avpriv_mirror(int x, int w)\n\n    if (!w)\n        return 0;\n\n    while ((unsigned)x > (unsigned)w) \n        x = -x;\n        if (x < 0)\n            x += 2 * w;"
  ],
  [
    "return x;\n\n# 28 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\" 2\n\n# 1 \"/Users/davidchen/repo/ffmpeg/libavfilter/framequeue.h\" 1\n# 34 \"/Users/davidchen/repo/ffmpeg/libavfilter/framequeue.h\"\ntypedef struct FFFrameBucket \n    AVFrame *frame;\n FFFrameBucket;\n# 46 \"/Users/davidchen/repo/ffmpeg/libavfilter/framequeue.h\"\ntypedef struct FFFrameQueueGlobal \n    char dummy;\n FFFrameQueueGlobal;\n\n\n\n\ntypedef struct FFFrameQueue \n\n\n\n\n    FFFrameBucket *queue;\n\n\n\n\n    size_t allocated;\n\n\n\n\n\n    size_t tail;\n\n\n\n\n    size_t queued;\n\n\n\n\n    FFFrameBucket first_bucket;\n\n\n\n\n    uint64_t total_frames_head;\n\n\n\n\n\n    uint64_t total_frames_tail;\n\n\n\n\n    uint64_t total_samples_head;\n\n\n\n\n\n    uint64_t total_samples_tail;\n\n\n\n\n    int samples_skipped;\n\n FFFrameQueue;\n\n\n\n\nvoid ff_framequeue_global_init(FFFrameQueueGlobal *fqg);\n\n\n\n\nvoid ff_framequeue_init(FFFrameQueue *fq, FFFrameQueueGlobal *fqg);\n\n\n\n\nvoid ff_framequeue_free(FFFrameQueue *fq);\n\n\n\n\n\nint ff_framequeue_add(FFFrameQueue *fq, AVFrame *frame);\n\n\n\n\n\nAVFrame *ff_framequeue_take(FFFrameQueue *fq);\n\n\n\n\n\nAVFrame *ff_framequeue_peek(FFFrameQueue *fq, size_t idx);\n\n\n\n\nstatic inline size_t ff_framequeue_queued_frames(const FFFrameQueue *fq)\n\n    return fq->queued;\n\n\n\n\n\nstatic inline uint64_t ff_framequeue_queued_samples(const FFFrameQueue *fq)\n\n    return fq->total_samples_head - fq->total_samples_tail;\n\n\n\n\n\n\n\nstatic inline void ff_framequeue_update_peeked(FFFrameQueue *fq, size_t idx)\n\n\n# 176 \"/Users/davidchen/repo/ffmpeg/libavfilter/framequeue.h\"\nvoid ff_framequeue_skip_samples(FFFrameQueue *fq, size_t samples, AVRational time_base);\n# 30 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\" 2\n\ntypedef struct AVFilterCommand \n    double time;\n    char *command;\n    char *arg;\n    int flags;\n    struct AVFilterCommand *next;\n AVFilterCommand;\n\n\n\n\nvoid ff_avfilter_graph_update_heap(AVFilterGraph *graph, AVFilterLink *link);\n\n\n\n\nstruct AVFilterPad \n\n\n\n\n\n    const char *name;\n\n\n\n\n    enum AVMediaType type;\n# 76 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n    int flags;\n# 87 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n    union \n        AVFrame *(*video)(AVFilterLink *link, int w, int h);\n        AVFrame *(*audio)(AVFilterLink *link, int nb_samples);"
  ],
  "get_buffer;\n# 102 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n    int (*filter_frame)(AVFilterLink *link, AVFrame *frame);\n# 111 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n    int (*request_frame)(AVFilterLink *link);\n# 127 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n    int (*config_props)(AVFilterLink *link);\n;\n\nstruct AVFilterGraphInternal \n    void *thread;\n    avfilter_execute_func *thread_execute;\n    FFFrameQueueGlobal frame_queues;\n;\n\nstruct AVFilterInternal \n    avfilter_execute_func *execute;\n\n\n\n    int initialized;\n;\n\nstatic __attribute__((always_inline)) inline int ff_filter_execute(AVFilterContext *ctx, avfilter_action_func *func,\n                                              void *arg, int *ret, int nb_jobs)\n\n    return ctx->internal->execute(ctx, func, arg, ret, nb_jobs);\n\n\nenum FilterFormatsState \n# 161 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n    FF_FILTER_FORMATS_PASSTHROUGH = 0",
  "FF_FILTER_FORMATS_QUERY_FUNC",
  "FF_FILTER_FORMATS_PIXFMT_LIST",
  "FF_FILTER_FORMATS_SAMPLEFMTS_LIST",
  "FF_FILTER_FORMATS_SINGLE_PIXFMT",
  "FF_FILTER_FORMATS_SINGLE_SAMPLEFMT",
  ";\n# 204 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\nint ff_fmt_is_in(int fmt, const int *fmts);\n# 216 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n__attribute__((warn_unused_result))\nint ff_parse_pixel_format(enum AVPixelFormat *ret, const char *arg, void *log_ctx);\n# 227 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n__attribute__((warn_unused_result))\nint ff_parse_sample_rate(int *ret, const char *arg, void *log_ctx);\n# 240 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\n__attribute__((warn_unused_result))\nint ff_parse_channel_layout(AVChannelLayout *ret, int *nret, const char *arg,\n                            void *log_ctx);\n# 251 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\nvoid ff_avfilter_link_set_in_status(AVFilterLink *link, int status, int64_t pts);\n# 273 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\nint ff_append_inpad (AVFilterContext *f, AVFilterPad *p);\nint ff_append_outpad(AVFilterContext *f, AVFilterPad *p);\nint ff_append_inpad_free_name (AVFilterContext *f, AVFilterPad *p);\nint ff_append_outpad_free_name(AVFilterContext *f, AVFilterPad *p);\n# 309 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\nint ff_request_frame(AVFilterLink *link);\n# 341 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\nint ff_filter_frame(AVFilterLink *link, AVFrame *frame);\n# 351 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\nAVFilterContext *ff_filter_alloc(const AVFilter *filter, const char *inst_name);\n\nint ff_filter_activate(AVFilterContext *filter);\n\n\n\n\nvoid ff_filter_graph_remove_filter(AVFilterGraph *graph, AVFilterContext *filter);\n# 369 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\nint ff_filter_graph_run_once(AVFilterGraph *graph);\n\n\n\n\n\nint ff_filter_get_nb_threads(AVFilterContext *ctx) __attribute__((pure));\n\n\n\n\n\n\n\nint ff_filter_process_command(AVFilterContext *ctx, const char *cmd,\n                              const char *arg, char *res, int res_len, int flags);\n# 399 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\nint ff_filter_init_hw_frames(AVFilterContext *avctx, AVFilterLink *link,\n                             int default_pool_size);\n# 412 \"/Users/davidchen/repo/ffmpeg/libavfilter/internal.h\"\nint ff_filter_opt_parse(void *logctx, const AVClass *priv_class,\n                        AVDictionary **options, const char *args);\n# 33 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"/Users/davidchen/repo/ffmpeg/libavfilter/scale_eval.h\" 1\n# 32 \"/Users/davidchen/repo/ffmpeg/libavfilter/scale_eval.h\"\nint ff_scale_eval_dimensions(void *ctx,\n    const char *w_expr, const char *h_expr,\n    AVFilterLink *inlink, AVFilterLink *outlink,\n    int *ret_w, int *ret_h);\n# 46 \"/Users/davidchen/repo/ffmpeg/libavfilter/scale_eval.h\"\nint ff_scale_adjust_dimensions(AVFilterLink *inlink,\n    int *ret_w, int *ret_h,\n    int force_original_aspect_ratio, int force_divisible_by);\n# 34 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"/Users/davidchen/repo/ffmpeg/libavfilter/video.h\" 1\n# 31 \"/Users/davidchen/repo/ffmpeg/libavfilter/video.h\"\nextern const AVFilterPad ff_video_default_filterpad[1];\n\nAVFrame *ff_default_get_video_buffer(AVFilterLink *link, int w, int h);\nAVFrame *ff_default_get_video_buffer2(AVFilterLink *link, int w, int h, int align);\nAVFrame *ff_null_get_video_buffer(AVFilterLink *link, int w, int h);\n# 46 \"/Users/davidchen/repo/ffmpeg/libavfilter/video.h\"\nAVFrame *ff_get_video_buffer(AVFilterLink *link, int w, int h);\n# 35 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"./libavutil/avstring.h\" 1\n# 24 \"./libavutil/avstring.h\"\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 1 3\n# 25 \"./libavutil/avstring.h\" 2\n# 42 \"./libavutil/avstring.h\"\nint av_strstart(const char *str, const char *pfx, const char **ptr);\n# 54 \"./libavutil/avstring.h\"\nint av_stristart(const char *str, const char *pfx, const char **ptr);\n# 68 \"./libavutil/avstring.h\"\nchar *av_stristr(const char *haystack, const char *needle);\n# 83 \"./libavutil/avstring.h\"\nchar *av_strnstr(const char *haystack, const char *needle, size_t hay_length);\n# 100 \"./libavutil/avstring.h\"\nsize_t av_strlcpy(char *dst, const char *src, size_t size);\n# 118 \"./libavutil/avstring.h\"\nsize_t av_strlcat(char *dst, const char *src, size_t size);\n# 132 \"./libavutil/avstring.h\"\nsize_t av_strlcatf(char *dst, size_t size, const char *fmt, ...) __attribute__((__format__(__printf__, 3, 4)));\n# 141 \"./libavutil/avstring.h\"\nstatic inline size_t av_strnlen(const char *s, size_t len)\n\n    size_t i;\n    for (i = 0; i < len && s[i]; i++)\n        ;\n    return i;\n\n# 157 \"./libavutil/avstring.h\"\nchar *av_asprintf(const char *fmt, ...) __attribute__((__format__(__printf__, 1, 2)));\n# 173 \"./libavutil/avstring.h\"\nchar *av_get_token(const char **buf, const char *term);\n# 197 \"./libavutil/avstring.h\"\nchar *av_strtok(char *s, const char *delim, char **saveptr);\n\n\n\n\nstatic inline __attribute__((const)) int av_isdigit(int c)\n\n    return c >= '0' && c <= '9';\n\n\n\n\n\nstatic inline __attribute__((const)) int av_isgraph(int c)\n\n    return c > 32 && c < 127;\n\n\n\n\n\nstatic inline __attribute__((const)) int av_isspace(int c)\n\n    return c == ' ' || c == '\\f' || c == '\\n' || c == '\\r' || c == '\\t' ||\n           c == '\\v';\n\n\n\n\n\nstatic inline __attribute__((const)) int av_toupper(int c)\n\n    if (c >= 'a' && c <= 'z')\n        c ^= 0x20;\n    return c;\n\n\n\n\n\nstatic inline __attribute__((const)) int av_tolower(int c)\n\n    if (c >= 'A' && c <= 'Z')\n        c ^= 0x20;\n    return c;\n\n\n\n\n\nstatic inline __attribute__((const)) int av_isxdigit(int c)\n\n    c = av_tolower(c);\n    return av_isdigit(c) || (c >= 'a' && c <= 'f');\n\n\n\n\n\n\nint av_strcasecmp(const char *a, const char *b);\n\n\n\n\n\nint av_strncasecmp(const char *a, const char *b, size_t n);\n\n\n\n\n\nchar *av_strireplace(const char *str, const char *from, const char *to);\n# 279 \"./libavutil/avstring.h\"\nconst char *av_basename(const char *path);\n# 289 \"./libavutil/avstring.h\"\nconst char *av_dirname(char *path);\n# 302 \"./libavutil/avstring.h\"\nint av_match_name(const char *name, const char *names);\n# 312 \"./libavutil/avstring.h\"\nchar *av_append_path_component(const char *path, const char *component);\n\nenum AVEscapeMode \n    AV_ESCAPE_MODE_AUTO",
  "AV_ESCAPE_MODE_BACKSLASH",
  "AV_ESCAPE_MODE_QUOTE",
  "AV_ESCAPE_MODE_XML",
  ";\n# 367 \"./libavutil/avstring.h\"\n__attribute__((warn_unused_result))\nint av_escape(char **dst, const char *src, const char *special_chars,\n              enum AVEscapeMode mode, int flags);\n# 407 \"./libavutil/avstring.h\"\n__attribute__((warn_unused_result))\nint av_utf8_decode(int32_t *codep, const uint8_t **bufp, const uint8_t *buf_end,\n                   unsigned int flags);\n\n\n\n\n\n\nint av_match_list(const char *name, const char *list, char separator);\n\n\n\n\n\nint av_sscanf(const char *string, const char *format, ...);\n# 36 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"./libavutil/eval.h\" 1\n# 29 \"./libavutil/eval.h\"\ntypedef struct AVExpr AVExpr;\n# 50 \"./libavutil/eval.h\"\nint av_expr_parse_and_eval(double *res, const char *s,\n                           const char * const *const_names, const double *const_values,\n                           const char * const *func1_names, double (* const *funcs1)(void *, double),\n                           const char * const *func2_names, double (* const *funcs2)(void *, double, double),\n                           void *opaque, int log_offset, void *log_ctx);\n# 74 \"./libavutil/eval.h\"\nint av_expr_parse(AVExpr **expr, const char *s,\n                  const char * const *const_names,\n                  const char * const *func1_names, double (* const *funcs1)(void *, double),\n                  const char * const *func2_names, double (* const *funcs2)(void *, double, double),\n                  int log_offset, void *log_ctx);\n# 88 \"./libavutil/eval.h\"\ndouble av_expr_eval(AVExpr *e, const double *const_values, void *opaque);\n# 99 \"./libavutil/eval.h\"\nint av_expr_count_vars(AVExpr *e, unsigned *counter, int size);\n# 114 \"./libavutil/eval.h\"\nint av_expr_count_func(AVExpr *e, unsigned *counter, int size, int arg);\n\n\n\n\nvoid av_expr_free(AVExpr *e);\n# 138 \"./libavutil/eval.h\"\ndouble av_strtod(const char *numstr, char **tail);\n# 37 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n\n\n# 1 \"./libavutil/opt.h\" 1\n# 223 \"./libavutil/opt.h\"\nenum AVOptionType\n    AV_OPT_TYPE_FLAGS",
  "AV_OPT_TYPE_INT",
  "AV_OPT_TYPE_INT64",
  "AV_OPT_TYPE_DOUBLE",
  "AV_OPT_TYPE_FLOAT",
  "AV_OPT_TYPE_STRING",
  "AV_OPT_TYPE_RATIONAL",
  "AV_OPT_TYPE_BINARY",
  "AV_OPT_TYPE_DICT",
  "AV_OPT_TYPE_UINT64",
  "AV_OPT_TYPE_CONST",
  "AV_OPT_TYPE_IMAGE_SIZE",
  "AV_OPT_TYPE_PIXEL_FMT",
  "AV_OPT_TYPE_SAMPLE_FMT",
  "AV_OPT_TYPE_VIDEO_RATE",
  "AV_OPT_TYPE_DURATION",
  "AV_OPT_TYPE_COLOR",
  "AV_OPT_TYPE_CHANNEL_LAYOUT",
  "AV_OPT_TYPE_BOOL",
  "AV_OPT_TYPE_CHLAYOUT",
  [
    ";\n\n\n\n\ntypedef struct AVOption \n    const char *name;\n\n\n\n\n\n    const char *help;\n\n\n\n\n\n    int offset;\n    enum AVOptionType type;\n\n\n\n\n    union \n        int64_t i64;\n        double dbl;\n        const char *str;\n\n        AVRational q;"
  ],
  "default_val;\n    double min;\n    double max;\n\n    int flags;\n# 307 \"./libavutil/opt.h\"\n    const char *unit;\n AVOption;\n\n\n\n\ntypedef struct AVOptionRange \n    const char *str;\n\n\n\n\n\n    double value_min",
  "value_max;\n\n\n\n\n    double component_min",
  "component_max;\n\n\n\n\n    int is_range;\n AVOptionRange;\n\n\n\n\ntypedef struct AVOptionRanges \n# 367 \"./libavutil/opt.h\"\n    AVOptionRange **range;\n\n\n\n    int nb_ranges;\n\n\n\n    int nb_components;\n AVOptionRanges;\n# 387 \"./libavutil/opt.h\"\nint av_opt_show2(void *obj, void *av_log_obj, int req_flags, int rej_flags);\n\n\n\n\n\n\nvoid av_opt_set_defaults(void *s);\n# 405 \"./libavutil/opt.h\"\nvoid av_opt_set_defaults2(void *s, int mask, int flags);\n# 424 \"./libavutil/opt.h\"\nint av_set_options_string(void *ctx, const char *opts,\n                          const char *key_val_sep, const char *pairs_sep);\n# 454 \"./libavutil/opt.h\"\nint av_opt_set_from_string(void *ctx, const char *opts,\n                           const char *const *shorthand,\n                           const char *key_val_sep, const char *pairs_sep);\n\n\n\nvoid av_opt_free(void *obj);\n# 470 \"./libavutil/opt.h\"\nint av_opt_flag_is_set(void *obj, const char *field_name, const char *flag_name);\n# 486 \"./libavutil/opt.h\"\nint av_opt_set_dict(void *obj, struct AVDictionary **options);\n# 504 \"./libavutil/opt.h\"\nint av_opt_set_dict2(void *obj, struct AVDictionary **options, int search_flags);\n# 525 \"./libavutil/opt.h\"\nint av_opt_get_key_value(const char **ropts,\n                         const char *key_val_sep, const char *pairs_sep,\n                         unsigned flags,\n                         char **rkey, char **rval);\n\nenum \n\n\n\n\n\n    AV_OPT_FLAG_IMPLICIT_KEY = 1",
  ";\n# 553 \"./libavutil/opt.h\"\nint av_opt_eval_flags (void *obj, const AVOption *o, const char *val, int *flags_out);\nint av_opt_eval_int (void *obj, const AVOption *o, const char *val, int *int_out);\nint av_opt_eval_int64 (void *obj, const AVOption *o, const char *val, int64_t *int64_out);\nint av_opt_eval_float (void *obj, const AVOption *o, const char *val, float *float_out);\nint av_opt_eval_double(void *obj, const AVOption *o, const char *val, double *double_out);\nint av_opt_eval_q (void *obj, const AVOption *o, const char *val, AVRational *q_out);\n# 608 \"./libavutil/opt.h\"\nconst AVOption *av_opt_find(void *obj, const char *name, const char *unit,\n                            int opt_flags, int search_flags);\n# 632 \"./libavutil/opt.h\"\nconst AVOption *av_opt_find2(void *obj, const char *name, const char *unit,\n                             int opt_flags, int search_flags, void **target_obj);\n# 644 \"./libavutil/opt.h\"\nconst AVOption *av_opt_next(const void *obj, const AVOption *prev);\n\n\n\n\n\n\n\nvoid *av_opt_child_next(void *obj, void *prev);\n\n\n\n\n\n\n\nconst AVClass *av_opt_child_class_iterate(const AVClass *parent, void **iter);\n# 691 \"./libavutil/opt.h\"\nint av_opt_set (void *obj, const char *name, const char *val, int search_flags);\nint av_opt_set_int (void *obj, const char *name, int64_t val, int search_flags);\nint av_opt_set_double (void *obj, const char *name, double val, int search_flags);\nint av_opt_set_q (void *obj, const char *name, AVRational val, int search_flags);\nint av_opt_set_bin (void *obj, const char *name, const uint8_t *val, int size, int search_flags);\nint av_opt_set_image_size(void *obj, const char *name, int w, int h, int search_flags);\nint av_opt_set_pixel_fmt (void *obj, const char *name, enum AVPixelFormat fmt, int search_flags);\nint av_opt_set_sample_fmt(void *obj, const char *name, enum AVSampleFormat fmt, int search_flags);\nint av_opt_set_video_rate(void *obj, const char *name, AVRational val, int search_flags);\n\n__attribute__((deprecated))\nint av_opt_set_channel_layout(void *obj, const char *name, int64_t ch_layout, int search_flags);\n\nint av_opt_set_chlayout(void *obj, const char *name, const AVChannelLayout *layout, int search_flags);\n\n\n\n\nint av_opt_set_dict_val(void *obj, const char *name, const AVDictionary *val, int search_flags);\n# 751 \"./libavutil/opt.h\"\nint av_opt_get (void *obj, const char *name, int search_flags, uint8_t **out_val);\nint av_opt_get_int (void *obj, const char *name, int search_flags, int64_t *out_val);\nint av_opt_get_double (void *obj, const char *name, int search_flags, double *out_val);\nint av_opt_get_q (void *obj, const char *name, int search_flags, AVRational *out_val);\nint av_opt_get_image_size(void *obj, const char *name, int search_flags, int *w_out, int *h_out);\nint av_opt_get_pixel_fmt (void *obj, const char *name, int search_flags, enum AVPixelFormat *out_fmt);\nint av_opt_get_sample_fmt(void *obj, const char *name, int search_flags, enum AVSampleFormat *out_fmt);\nint av_opt_get_video_rate(void *obj, const char *name, int search_flags, AVRational *out_val);\n\n__attribute__((deprecated))\nint av_opt_get_channel_layout(void *obj, const char *name, int search_flags, int64_t *ch_layout);\n\nint av_opt_get_chlayout(void *obj, const char *name, int search_flags, AVChannelLayout *layout);\n\n\n\n\nint av_opt_get_dict_val(void *obj, const char *name, int search_flags, AVDictionary **out_val);\n# 780 \"./libavutil/opt.h\"\nvoid *av_opt_ptr(const AVClass *avclass, void *obj, const char *name);\n\n\n\n\nvoid av_opt_freep_ranges(AVOptionRanges **ranges);\n# 800 \"./libavutil/opt.h\"\nint av_opt_query_ranges(AVOptionRanges **, void *obj, const char *key, int flags);\n# 819 \"./libavutil/opt.h\"\nint av_opt_copy(void *dest, const void *src);\n# 835 \"./libavutil/opt.h\"\nint av_opt_query_ranges_default(AVOptionRanges **, void *obj, const char *key, int flags);\n# 849 \"./libavutil/opt.h\"\nint av_opt_is_set_to_default(void *obj, const AVOption *o);\n# 861 \"./libavutil/opt.h\"\nint av_opt_is_set_to_default_by_name(void *obj, const char *name, int search_flags);\n# 885 \"./libavutil/opt.h\"\nint av_opt_serialize(void *obj, int opt_flags, int flags, char **buffer,\n                     const char key_val_sep, const char pairs_sep);\n# 40 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"./libavutil/parseutils.h\" 1\n# 22 \"./libavutil/parseutils.h\"\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h\" 1 3 4\n# 69 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h\" 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_clock_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_clock_t.h\" 3 4\ntypedef __darwin_clock_t clock_t;\n# 70 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h\" 2 3 4\n\n\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_time_t.h\" 1 3 4\n# 31 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_time_t.h\" 3 4\ntypedef __darwin_time_t time_t;\n# 73 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h\" 2 3 4\n# 1 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timespec.h\" 1 3 4\n# 33 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/sys/_types/_timespec.h\" 3 4\nstruct timespec\n\n __darwin_time_t tv_sec;\n long tv_nsec;\n;\n# 74 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h\" 2 3 4\n\nstruct tm \n int tm_sec;\n int tm_min;\n int tm_hour;\n int tm_mday;\n int tm_mon;\n int tm_year;\n int tm_wday;\n int tm_yday;\n int tm_isdst;\n long tm_gmtoff;\n char *tm_zone;\n;\n# 98 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h\" 3 4\nextern char *tzname[];\n\n\nextern int getdate_err;\n\nextern long timezone __asm(\"_\" \"timezone\" );\n\nextern int daylight;\n\n\nchar *asctime(const struct tm *);\nclock_t clock(void) __asm(\"_\" \"clock\" );\nchar *ctime(const time_t *);\ndouble difftime(time_t, time_t);\nstruct tm *getdate(const char *);\nstruct tm *gmtime(const time_t *);\nstruct tm *localtime(const time_t *);\ntime_t mktime(struct tm *) __asm(\"_\" \"mktime\" );\nsize_t strftime(char * restrict, size_t, const char * restrict, const struct tm * restrict) __asm(\"_\" \"strftime\" );\nchar *strptime(const char * restrict, const char * restrict, struct tm * restrict) __asm(\"_\" \"strptime\" );\ntime_t time(time_t *);\n\n\nvoid tzset(void);\n\n\n\nchar *asctime_r(const struct tm * restrict, char * restrict);\nchar *ctime_r(const time_t *, char *);\nstruct tm *gmtime_r(const time_t * restrict, struct tm * restrict);\nstruct tm *localtime_r(const time_t * restrict, struct tm * restrict);\n\n\ntime_t posix2time(time_t);\n\n\n\nvoid tzsetwall(void);\ntime_t time2posix(time_t);\ntime_t timelocal(struct tm * const);\ntime_t timegm(struct tm * const);\n\n\n\nint nanosleep(const struct timespec *__rqtp, struct timespec *__rmtp) __asm(\"_\" \"nanosleep\" );\n# 153 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h\" 3 4\ntypedef enum \n_CLOCK_REALTIME __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 0",
  "_CLOCK_MONOTONIC __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 6",
  "_CLOCK_MONOTONIC_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 4",
  "_CLOCK_MONOTONIC_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 5",
  "_CLOCK_UPTIME_RAW __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 8",
  "_CLOCK_UPTIME_RAW_APPROX __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 9",
  "_CLOCK_PROCESS_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 12",
  "_CLOCK_THREAD_CPUTIME_ID __attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0))) = 16\n\n clockid_t;\n\n__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))\nint clock_getres(clockid_t __clock_id, struct timespec *__res);\n\n__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))\nint clock_gettime(clockid_t __clock_id, struct timespec *__tp);\n\n\n__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,introduced=10.0))) __attribute__((availability(tvos,introduced=10.0))) __attribute__((availability(watchos,introduced=3.0)))\n__uint64_t clock_gettime_nsec_np(clockid_t __clock_id);\n\n\n__attribute__((availability(macosx,introduced=10.12))) __attribute__((availability(ios,unavailable)))\n__attribute__((availability(tvos,unavailable))) __attribute__((availability(watchos,unavailable)))\nint clock_settime(clockid_t __clock_id, const struct timespec *__tp);\n# 198 \"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/time.h\" 3 4\n__attribute__((availability(macos,introduced=10.15))) __attribute__((availability(ios,introduced=13.0))) __attribute__((availability(tvos,introduced=13.0))) __attribute__((availability(watchos,introduced=6.0)))\nint timespec_get(struct timespec *ts, int base);\n# 23 \"./libavutil/parseutils.h\" 2\n# 49 \"./libavutil/parseutils.h\"\nint av_parse_ratio(AVRational *q, const char *str, int max,\n                   int log_offset, void *log_ctx);\n# 66 \"./libavutil/parseutils.h\"\nint av_parse_video_size(int *width_ptr, int *height_ptr, const char *str);\n# 77 \"./libavutil/parseutils.h\"\nint av_parse_video_rate(AVRational *rate, const char *str);\n# 102 \"./libavutil/parseutils.h\"\nint av_parse_color(uint8_t *rgba_color, const char *color_string, int slen,\n                   void *log_ctx);\n# 116 \"./libavutil/parseutils.h\"\nconst char *av_get_known_color_name(int color_idx, const uint8_t **rgb);\n# 150 \"./libavutil/parseutils.h\"\nint av_parse_time(int64_t *timeval, const char *timestr, int duration);\n\n\n\n\n\n\n\nint av_find_info_tag(char *arg, int arg_size, const char *tag1, const char *info);\n# 190 \"./libavutil/parseutils.h\"\nchar *av_small_strptime(const char *p, const char *fmt, struct tm *dt);\n\n\n\n\ntime_t av_timegm(struct tm *tm);\n# 41 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"./libavutil/pixdesc.h\" 1\n# 30 \"./libavutil/pixdesc.h\"\ntypedef struct AVComponentDescriptor \n\n\n\n    int plane;\n\n\n\n\n\n    int step;\n\n\n\n\n\n    int offset;\n\n\n\n\n\n    int shift;\n\n\n\n\n    int depth;\n AVComponentDescriptor;\n# 69 \"./libavutil/pixdesc.h\"\ntypedef struct AVPixFmtDescriptor \n    const char *name;\n    uint8_t nb_components;\n# 80 \"./libavutil/pixdesc.h\"\n    uint8_t log2_chroma_w;\n# 89 \"./libavutil/pixdesc.h\"\n    uint8_t log2_chroma_h;\n\n\n\n\n    uint64_t flags;\n# 105 \"./libavutil/pixdesc.h\"\n    AVComponentDescriptor comp[4];\n\n\n\n\n    const char *alias;\n AVPixFmtDescriptor;\n# 174 \"./libavutil/pixdesc.h\"\nint av_get_bits_per_pixel(const AVPixFmtDescriptor *pixdesc);\n\n\n\n\n\nint av_get_padded_bits_per_pixel(const AVPixFmtDescriptor *pixdesc);\n\n\n\n\n\nconst AVPixFmtDescriptor *av_pix_fmt_desc_get(enum AVPixelFormat pix_fmt);\n# 195 \"./libavutil/pixdesc.h\"\nconst AVPixFmtDescriptor *av_pix_fmt_desc_next(const AVPixFmtDescriptor *prev);\n\n\n\n\n\nenum AVPixelFormat av_pix_fmt_desc_get_id(const AVPixFmtDescriptor *desc);\n# 213 \"./libavutil/pixdesc.h\"\nint av_pix_fmt_get_chroma_sub_sample(enum AVPixelFormat pix_fmt,\n                                     int *h_shift, int *v_shift);\n\n\n\n\n\nint av_pix_fmt_count_planes(enum AVPixelFormat pix_fmt);\n\n\n\n\nconst char *av_color_range_name(enum AVColorRange range);\n\n\n\n\nint av_color_range_from_name(const char *name);\n\n\n\n\nconst char *av_color_primaries_name(enum AVColorPrimaries primaries);\n\n\n\n\nint av_color_primaries_from_name(const char *name);\n\n\n\n\nconst char *av_color_transfer_name(enum AVColorTransferCharacteristic transfer);\n\n\n\n\nint av_color_transfer_from_name(const char *name);\n\n\n\n\nconst char *av_color_space_name(enum AVColorSpace space);\n\n\n\n\nint av_color_space_from_name(const char *name);\n\n\n\n\nconst char *av_chroma_location_name(enum AVChromaLocation location);\n\n\n\n\nint av_chroma_location_from_name(const char *name);\n# 281 \"./libavutil/pixdesc.h\"\nint av_chroma_location_enum_to_pos(int *xpos, int *ypos, enum AVChromaLocation pos);\n# 292 \"./libavutil/pixdesc.h\"\nenum AVChromaLocation av_chroma_location_pos_to_enum(int xpos, int ypos);\n# 305 \"./libavutil/pixdesc.h\"\nenum AVPixelFormat av_get_pix_fmt(const char *name);\n\n\n\n\n\n\n\nconst char *av_get_pix_fmt_name(enum AVPixelFormat pix_fmt);\n# 325 \"./libavutil/pixdesc.h\"\nchar *av_get_pix_fmt_string(char *buf, int buf_size,\n                            enum AVPixelFormat pix_fmt);\n# 345 \"./libavutil/pixdesc.h\"\nvoid av_read_image_line2(void *dst, const uint8_t *data[4],\n                        const int linesize[4], const AVPixFmtDescriptor *desc,\n                        int x, int y, int c, int w, int read_pal_component,\n                        int dst_element_size);\n\nvoid av_read_image_line(uint16_t *dst, const uint8_t *data[4],\n                        const int linesize[4], const AVPixFmtDescriptor *desc,\n                        int x, int y, int c, int w, int read_pal_component);\n# 369 \"./libavutil/pixdesc.h\"\nvoid av_write_image_line2(const void *src, uint8_t *data[4],\n                         const int linesize[4], const AVPixFmtDescriptor *desc,\n                         int x, int y, int c, int w, int src_element_size);\n\nvoid av_write_image_line(const uint16_t *src, uint8_t *data[4],\n                         const int linesize[4], const AVPixFmtDescriptor *desc,\n                         int x, int y, int c, int w);\n# 385 \"./libavutil/pixdesc.h\"\nenum AVPixelFormat av_pix_fmt_swap_endianness(enum AVPixelFormat pix_fmt);\n# 415 \"./libavutil/pixdesc.h\"\nint av_get_pix_fmt_loss(enum AVPixelFormat dst_pix_fmt,\n                        enum AVPixelFormat src_pix_fmt,\n                        int has_alpha);\n# 437 \"./libavutil/pixdesc.h\"\nenum AVPixelFormat av_find_best_pix_fmt_of_2(enum AVPixelFormat dst_pix_fmt1, enum AVPixelFormat dst_pix_fmt2,\n                                             enum AVPixelFormat src_pix_fmt, int has_alpha, int *loss_ptr);\n# 42 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"./libavutil/imgutils.h\" 1\n# 30 \"./libavutil/imgutils.h\"\n# 1 \"/Library/Developer/CommandLineTools/usr/lib/clang/15.0.0/include/stddef.h\" 1 3\n# 31 \"./libavutil/imgutils.h\" 2\n# 53 \"./libavutil/imgutils.h\"\nvoid av_image_fill_max_pixsteps(int max_pixsteps[4], int max_pixstep_comps[4],\n                                const AVPixFmtDescriptor *pixdesc);\n\n\n\n\n\n\n\nint av_image_get_linesize(enum AVPixelFormat pix_fmt, int width, int plane);\n# 73 \"./libavutil/imgutils.h\"\nint av_image_fill_linesizes(int linesizes[4], enum AVPixelFormat pix_fmt, int width);\n# 88 \"./libavutil/imgutils.h\"\nint av_image_fill_plane_sizes(size_t size[4], enum AVPixelFormat pix_fmt,\n                              int height, const ptrdiff_t linesizes[4]);\n# 104 \"./libavutil/imgutils.h\"\nint av_image_fill_pointers(uint8_t *data[4], enum AVPixelFormat pix_fmt, int height,\n                           uint8_t *ptr, const int linesizes[4]);\n# 122 \"./libavutil/imgutils.h\"\nint av_image_alloc(uint8_t *pointers[4], int linesizes[4],\n                   int w, int h, enum AVPixelFormat pix_fmt, int align);\n# 140 \"./libavutil/imgutils.h\"\nvoid av_image_copy_plane(uint8_t *dst, int dst_linesize,\n                         const uint8_t *src, int src_linesize,\n                         int bytewidth, int height);\n# 158 \"./libavutil/imgutils.h\"\nvoid av_image_copy_plane_uc_from(uint8_t *dst, ptrdiff_t dst_linesize,\n                                 const uint8_t *src, ptrdiff_t src_linesize,\n                                 ptrdiff_t bytewidth, int height);\n# 173 \"./libavutil/imgutils.h\"\nvoid av_image_copy(uint8_t * const dst_data[4], const int dst_linesizes[4],\n                   const uint8_t * const src_data[4], const int src_linesizes[4],\n                   enum AVPixelFormat pix_fmt, int width, int height);\n\n\n\n\n\n\n\nstatic inline\nvoid av_image_copy2(uint8_t * const dst_data[4], const int dst_linesizes[4],\n                    uint8_t * const src_data[4], const int src_linesizes[4],\n                    enum AVPixelFormat pix_fmt, int width, int height)\n\n    av_image_copy(dst_data, dst_linesizes,\n                  (const uint8_t * const *)src_data",
  "src_linesizes",
  "pix_fmt",
  "width",
  "height);\n\n# 207 \"./libavutil/imgutils.h\"\nvoid av_image_copy_uc_from(uint8_t * const dst_data[4], const ptrdiff_t dst_linesizes[4],\n                           const uint8_t * const src_data[4], const ptrdiff_t src_linesizes[4],\n                           enum AVPixelFormat pix_fmt, int width, int height);\n# 237 \"./libavutil/imgutils.h\"\nint av_image_fill_arrays(uint8_t *dst_data[4], int dst_linesize[4],\n                         const uint8_t *src,\n                         enum AVPixelFormat pix_fmt, int width, int height, int align);\n# 251 \"./libavutil/imgutils.h\"\nint av_image_get_buffer_size(enum AVPixelFormat pix_fmt, int width, int height, int align);\n# 270 \"./libavutil/imgutils.h\"\nint av_image_copy_to_buffer(uint8_t *dst, int dst_size,\n                            const uint8_t * const src_data[4], const int src_linesize[4],\n                            enum AVPixelFormat pix_fmt, int width, int height, int align);\n# 284 \"./libavutil/imgutils.h\"\nint av_image_check_size(unsigned int w, unsigned int h, int log_offset, void *log_ctx);\n# 299 \"./libavutil/imgutils.h\"\nint av_image_check_size2(unsigned int w, unsigned int h, int64_t max_pixels, enum AVPixelFormat pix_fmt, int log_offset, void *log_ctx);\n# 313 \"./libavutil/imgutils.h\"\nint av_image_check_sar(unsigned int w, unsigned int h, AVRational sar);\n# 338 \"./libavutil/imgutils.h\"\nint av_image_fill_black(uint8_t * const dst_data[4], const ptrdiff_t dst_linesize[4],\n                        enum AVPixelFormat pix_fmt, enum AVColorRange range,\n                        int width, int height);\n# 368 \"./libavutil/imgutils.h\"\nint av_image_fill_color(uint8_t * const dst_data[4], const ptrdiff_t dst_linesize[4],\n                        enum AVPixelFormat pix_fmt, const uint32_t color[4],\n                        int width, int height, int flags);\n# 43 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n# 1 \"./libswscale/swscale.h\" 1\n# 36 \"./libswscale/swscale.h\"\n# 1 \"./libswscale/version_major.h\" 1\n# 37 \"./libswscale/swscale.h\" 2\n\n\n\n\n# 1 \"./libswscale/version.h\" 1\n# 42 \"./libswscale/swscale.h\" 2\n# 52 \"./libswscale/swscale.h\"\nunsigned swscale_version(void);\n\n\n\n\nconst char *swscale_configuration(void);\n\n\n\n\nconst char *swscale_license(void);\n# 112 \"./libswscale/swscale.h\"\nconst int *sws_getCoefficients(int colorspace);\n\n\n\ntypedef struct SwsVector \n    double *coeff;\n    int length;\n SwsVector;\n\n\ntypedef struct SwsFilter \n    SwsVector *lumH;\n    SwsVector *lumV;\n    SwsVector *chrH;\n    SwsVector *chrV;\n SwsFilter;\n\nstruct SwsContext;\n\n\n\n\n\nint sws_isSupportedInput(enum AVPixelFormat pix_fmt);\n\n\n\n\n\nint sws_isSupportedOutput(enum AVPixelFormat pix_fmt);\n\n\n\n\n\n\nint sws_isSupportedEndiannessConversion(enum AVPixelFormat pix_fmt);\n\n\n\n\n\n\nstruct SwsContext *sws_alloc_context(void);\n\n\n\n\n\n\n\n__attribute__((warn_unused_result))\nint sws_init_context(struct SwsContext *sws_context, SwsFilter *srcFilter, SwsFilter *dstFilter);\n\n\n\n\n\nvoid sws_freeContext(struct SwsContext *swsContext);\n# 193 \"./libswscale/swscale.h\"\nstruct SwsContext *sws_getContext(int srcW, int srcH, enum AVPixelFormat srcFormat,\n                                  int dstW, int dstH, enum AVPixelFormat dstFormat,\n                                  int flags, SwsFilter *srcFilter,\n                                  SwsFilter *dstFilter, const double *param);\n# 224 \"./libswscale/swscale.h\"\nint sws_scale(struct SwsContext *c, const uint8_t *const srcSlice[],\n              const int srcStride[], int srcSliceY, int srcSliceH,\n              uint8_t *const dst[], const int dstStride[]);\n# 244 \"./libswscale/swscale.h\"\nint sws_scale_frame(struct SwsContext *c, AVFrame *dst, const AVFrame *src);\n# 271 \"./libswscale/swscale.h\"\nint sws_frame_start(struct SwsContext *c, AVFrame *dst, const AVFrame *src);\n# 281 \"./libswscale/swscale.h\"\nvoid sws_frame_end(struct SwsContext *c);\n# 295 \"./libswscale/swscale.h\"\nint sws_send_slice(struct SwsContext *c, unsigned int slice_start,\n                   unsigned int slice_height);\n# 315 \"./libswscale/swscale.h\"\nint sws_receive_slice(struct SwsContext *c, unsigned int slice_start,\n                      unsigned int slice_height);\n# 326 \"./libswscale/swscale.h\"\nunsigned int sws_receive_slice_alignment(const struct SwsContext *c);\n# 341 \"./libswscale/swscale.h\"\nint sws_setColorspaceDetails(struct SwsContext *c, const int inv_table[4],\n                             int srcRange, const int table[4], int dstRange,\n                             int brightness, int contrast, int saturation);\n\n\n\n\n\nint sws_getColorspaceDetails(struct SwsContext *c, int **inv_table,\n                             int *srcRange, int **table, int *dstRange,\n                             int *brightness, int *contrast, int *saturation);\n\n\n\n\nSwsVector *sws_allocVec(int length);\n\n\n\n\n\nSwsVector *sws_getGaussianVec(double variance, double quality);\n\n\n\n\nvoid sws_scaleVec(SwsVector *a, double scalar);\n\n\n\n\nvoid sws_normalizeVec(SwsVector *a, double height);\n\nvoid sws_freeVec(SwsVector *a);\n\nSwsFilter *sws_getDefaultFilter(float lumaGBlur, float chromaGBlur,\n                                float lumaSharpen, float chromaSharpen,\n                                float chromaHShift, float chromaVShift,\n                                int verbose);\nvoid sws_freeFilter(SwsFilter *filter);\n# 394 \"./libswscale/swscale.h\"\nstruct SwsContext *sws_getCachedContext(struct SwsContext *context,\n                                        int srcW, int srcH, enum AVPixelFormat srcFormat,\n                                        int dstW, int dstH, enum AVPixelFormat dstFormat,\n                                        int flags, SwsFilter *srcFilter,\n                                        SwsFilter *dstFilter, const double *param);\n# 410 \"./libswscale/swscale.h\"\nvoid sws_convertPalette8ToPacked32(const uint8_t *src, uint8_t *dst, int num_pixels, const uint8_t *palette);\n# 422 \"./libswscale/swscale.h\"\nvoid sws_convertPalette8ToPacked24(const uint8_t *src, uint8_t *dst, int num_pixels, const uint8_t *palette);\n\n\n\n\n\n\n\nconst AVClass *sws_get_class(void);\n# 44 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\" 2\n\nstatic const char *const var_names[] = \n    \"in_w\"",
  "\"iw\"",
  "\"in_h\"",
  "\"ih\"",
  "\"out_w\"",
  "\"ow\"",
  "\"out_h\"",
  "\"oh\"",
  "\"a\"",
  "\"sar\"",
  "\"dar\"",
  "\"hsub\"",
  "\"vsub\"",
  "\"ohsub\"",
  "\"ovsub\"",
  "\"n\"",
  "\"t\"",
  "\"pos\"",
  "\"main_w\"",
  "\"main_h\"",
  "\"main_a\"",
  "\"main_sar\"",
  "\"main_dar\"",
  "\"mdar\"",
  "\"main_hsub\"",
  "\"main_vsub\"",
  "\"main_n\"",
  "\"main_t\"",
  "\"main_pos\"",
  "((void*)0)\n;\n\nenum var_name \n    VAR_IN_W",
  "VAR_IW",
  "VAR_IN_H",
  "VAR_IH",
  "VAR_OUT_W",
  "VAR_OW",
  "VAR_OUT_H",
  "VAR_OH",
  "VAR_A",
  "VAR_SAR",
  "VAR_DAR",
  "VAR_HSUB",
  "VAR_VSUB",
  "VAR_OHSUB",
  "VAR_OVSUB",
  "VAR_N",
  "VAR_T",
  "VAR_POS",
  "VAR_S2R_MAIN_W",
  "VAR_S2R_MAIN_H",
  "VAR_S2R_MAIN_A",
  "VAR_S2R_MAIN_SAR",
  "VAR_S2R_MAIN_DAR",
  "VAR_S2R_MDAR",
  "VAR_S2R_MAIN_HSUB",
  "VAR_S2R_MAIN_VSUB",
  "VAR_S2R_MAIN_N",
  "VAR_S2R_MAIN_T",
  "VAR_S2R_MAIN_POS",
  "VARS_NB\n;\n\nenum EvalMode \n    EVAL_MODE_INIT",
  "EVAL_MODE_FRAME",
  "EVAL_MODE_NB\n;\n\ntypedef struct ScaleContext \n    const AVClass *class;\n    struct SwsContext *sws;\n    struct SwsContext *isws[2];\n\n    struct SwsContext *sws_opts;\n\n\n\n\n\n\n\n    int w",
  "h;\n    char *size_str;\n    double param[2];\n\n    int hsub",
  [
    "vsub;\n    int slice_y;\n    int input_is_pal;\n    int output_is_pal;\n    int interlaced;\n\n    char *w_expr;\n    char *h_expr;\n    AVExpr *w_pexpr;\n    AVExpr *h_pexpr;\n    double var_values[VARS_NB];\n\n    char *flags_str;\n\n    int in_color_matrix;\n    int out_color_matrix;\n\n    int in_range;\n    int in_frame_range;\n    int out_range;\n\n    int out_h_chr_pos;\n    int out_v_chr_pos;\n    int in_h_chr_pos;\n    int in_v_chr_pos;\n\n    int force_original_aspect_ratio;\n    int force_divisible_by;\n\n    int eval_mode;\n\n ScaleContext;\n\nconst AVFilter ff_vf_scale2ref;\n\nstatic int config_props(AVFilterLink *outlink);\n\nstatic int check_exprs(AVFilterContext *ctx)\n\n    ScaleContext *scale = ctx->priv;\n    unsigned vars_w[VARS_NB] =  0"
  ],
  [
    "vars_h[VARS_NB] =  0"
  ],
  [
    ";\n\n    if (!scale->w_pexpr && !scale->h_pexpr)\n        return (-(22));\n\n    if (scale->w_pexpr)\n        av_expr_count_vars(scale->w_pexpr, vars_w, VARS_NB);\n    if (scale->h_pexpr)\n        av_expr_count_vars(scale->h_pexpr, vars_h, VARS_NB);\n\n    if (vars_w[VAR_OUT_W] || vars_w[VAR_OW]) \n        av_log(ctx, 16, \"Width expression cannot be self-referencing: '%s'.\\n\", scale->w_expr);\n        return (-(22));"
  ],
  [
    "if (vars_h[VAR_OUT_H] || vars_h[VAR_OH]) \n        av_log(ctx, 16, \"Height expression cannot be self-referencing: '%s'.\\n\", scale->h_expr);\n        return (-(22));"
  ],
  [
    "if ((vars_w[VAR_OUT_H] || vars_w[VAR_OH]) &&\n        (vars_h[VAR_OUT_W] || vars_h[VAR_OW])) \n        av_log(ctx, 24, \"Circular references detected for width '%s' and height '%s' - possibly invalid.\\n\", scale->w_expr, scale->h_expr);"
  ],
  [
    "if (ctx->filter != &ff_vf_scale2ref &&\n        (vars_w[VAR_S2R_MAIN_W] || vars_h[VAR_S2R_MAIN_W] ||\n         vars_w[VAR_S2R_MAIN_H] || vars_h[VAR_S2R_MAIN_H] ||\n         vars_w[VAR_S2R_MAIN_A] || vars_h[VAR_S2R_MAIN_A] ||\n         vars_w[VAR_S2R_MAIN_SAR] || vars_h[VAR_S2R_MAIN_SAR] ||\n         vars_w[VAR_S2R_MAIN_DAR] || vars_h[VAR_S2R_MAIN_DAR] ||\n         vars_w[VAR_S2R_MDAR] || vars_h[VAR_S2R_MDAR] ||\n         vars_w[VAR_S2R_MAIN_HSUB] || vars_h[VAR_S2R_MAIN_HSUB] ||\n         vars_w[VAR_S2R_MAIN_VSUB] || vars_h[VAR_S2R_MAIN_VSUB] ||\n         vars_w[VAR_S2R_MAIN_N] || vars_h[VAR_S2R_MAIN_N] ||\n         vars_w[VAR_S2R_MAIN_T] || vars_h[VAR_S2R_MAIN_T] ||\n         vars_w[VAR_S2R_MAIN_POS] || vars_h[VAR_S2R_MAIN_POS]) ) \n        av_log(ctx, 16, \"Expressions with scale2ref variables are not valid in scale filter.\\n\");\n        return (-(22));"
  ],
  [
    "if (scale->eval_mode == EVAL_MODE_INIT &&\n        (vars_w[VAR_N] || vars_h[VAR_N] ||\n         vars_w[VAR_T] || vars_h[VAR_T] ||\n\n         vars_w[VAR_POS] || vars_h[VAR_POS] ||\n\n         vars_w[VAR_S2R_MAIN_N] || vars_h[VAR_S2R_MAIN_N] ||\n         vars_w[VAR_S2R_MAIN_T] || vars_h[VAR_S2R_MAIN_T] ||\n         vars_w[VAR_S2R_MAIN_POS] || vars_h[VAR_S2R_MAIN_POS]) ) \n        av_log(ctx, 16, \"Expressions with frame variables 'n', 't', 'pos' are not valid in init eval_mode.\\n\");\n        return (-(22));"
  ],
  "return 0;\n\n\nstatic int scale_parse_expr(AVFilterContext *ctx, char *str_expr, AVExpr **pexpr_ptr, const char *var, const char *args)\n\n    ScaleContext *scale = ctx->priv;\n    int ret",
  [
    "is_inited = 0;\n    char *old_str_expr = ((void*)0);\n    AVExpr *old_pexpr = ((void*)0);\n\n    if (str_expr) \n        old_str_expr = av_strdup(str_expr);\n        if (!old_str_expr)\n            return (-(12));\n        av_opt_set(scale, var, args, 0);"
  ],
  [
    "if (*pexpr_ptr) \n        old_pexpr = *pexpr_ptr;\n        *pexpr_ptr = ((void*)0);\n        is_inited = 1;"
  ],
  "ret = av_expr_parse(pexpr_ptr, args, var_names,\n                        ((void*)0)",
  "((void*)0)",
  "((void*)0)",
  "((void*)0)",
  "0",
  [
    "ctx);\n    if (ret < 0) \n        av_log(ctx, 16, \"Cannot parse expression for %s: '%s'\\n\", var, args);\n        goto revert;"
  ],
  [
    "ret = check_exprs(ctx);\n    if (ret < 0)\n        goto revert;\n\n    if (is_inited && (ret = config_props(ctx->outputs[0])) < 0)\n        goto revert;\n\n    av_expr_free(old_pexpr);\n    old_pexpr = ((void*)0);\n    av_freep(&old_str_expr);\n\n    return 0;\n\nrevert:\n    av_expr_free(*pexpr_ptr);\n    *pexpr_ptr = ((void*)0);\n    if (old_str_expr) \n        av_opt_set(scale, var, old_str_expr, 0);\n        av_free(old_str_expr);"
  ],
  [
    "if (old_pexpr)\n        *pexpr_ptr = old_pexpr;\n\n    return ret;\n\n\nstatic __attribute__((cold)) int preinit(AVFilterContext *ctx)\n\n    ScaleContext *scale = ctx->priv;\n    int ret;\n\n    scale->sws_opts = sws_alloc_context();\n    if (!scale->sws_opts)\n        return (-(12));\n\n\n    ret = av_opt_set_int(scale->sws_opts, \"threads\", 0, 0);\n    if (ret < 0)\n        return ret;\n\n    return 0;\n\n\nstatic __attribute__((cold)) int init(AVFilterContext *ctx)\n\n    ScaleContext *scale = ctx->priv;\n    int64_t threads;\n    int ret;\n\n    if (scale->size_str && (scale->w_expr || scale->h_expr)) \n        av_log(ctx, 16,\n               \"Size and width/height expressions cannot be set at the same time.\\n\");\n            return (-(22));"
  ],
  [
    "if (scale->w_expr && !scale->h_expr)\n        dochar * SWAP_tmp= scale->size_str; scale->size_str= scale->w_expr; scale->w_expr= SWAP_tmp;"
  ],
  [
    [
      "while(0);\n\n    if (scale->size_str) \n        char buf[32];\n        if ((ret = av_parse_video_size(&scale->w, &scale->h, scale->size_str)) < 0) \n            av_log(ctx, 16,\n                   \"Invalid size '%s'\\n\", scale->size_str);\n            return ret;"
    ],
    "__builtin___snprintf_chk (buf, sizeof(buf)-1",
    "0",
    "__builtin_object_size (buf, 2 > 1 ? 1 : 0)",
    "\"%d\"",
    "scale->w);\n        av_opt_set(scale, \"w\", buf, 0);\n        __builtin___snprintf_chk (buf, sizeof(buf)-1",
    "0",
    "__builtin_object_size (buf, 2 > 1 ? 1 : 0)",
    "\"%d\"",
    "scale->h);\n        av_opt_set(scale, \"h\", buf, 0);"
  ],
  "if (!scale->w_expr)\n        av_opt_set(scale, \"w\", \"iw\", 0);\n    if (!scale->h_expr)\n        av_opt_set(scale, \"h\", \"ih\", 0);\n\n    ret = scale_parse_expr(ctx, ((void*)0)",
  "&scale->w_pexpr",
  "\"width\"",
  "scale->w_expr);\n    if (ret < 0)\n        return ret;\n\n    ret = scale_parse_expr(ctx, ((void*)0)",
  "&scale->h_pexpr",
  "\"height\"",
  "scale->h_expr);\n    if (ret < 0)\n        return ret;\n\n    av_log(ctx, 40, \"w:%s h:%s flags:'%s' interl:%d\\n\",\n           scale->w_expr, scale->h_expr, (char *)av_x_if_null(scale->flags_str, \"\")",
  [
    "scale->interlaced);\n\n    if (scale->flags_str && *scale->flags_str) \n        ret = av_opt_set(scale->sws_opts, \"sws_flags\", scale->flags_str, 0);\n        if (ret < 0)\n            return ret;"
  ],
  [
    "for (int i = 0; i < (sizeof(scale->param) / sizeof((scale->param)[0])); i++)\n        if (scale->param[i] != 1.7976931348623157e+308) \n            ret = av_opt_set_double(scale->sws_opts, i ? \"param1\" : \"param0\",\n                                    scale->param[i], 0);\n            if (ret < 0)\n                return ret;"
  ],
  "ret = av_opt_get_int(scale->sws_opts, \"threads\", 0, &threads);\n    if (ret < 0)\n        return ret;\n    if (!threads)\n        av_opt_set_int(scale->sws_opts, \"threads\", ff_filter_get_nb_threads(ctx)",
  [
    [
      "0);\n\n    scale->in_frame_range = AVCOL_RANGE_UNSPECIFIED;\n\n    return 0;\n\n\nstatic __attribute__((cold)) void uninit(AVFilterContext *ctx)\n\n    ScaleContext *scale = ctx->priv;\n    av_expr_free(scale->w_pexpr);\n    av_expr_free(scale->h_pexpr);\n    scale->w_pexpr = scale->h_pexpr = ((void*)0);\n    sws_freeContext(scale->sws_opts);\n    sws_freeContext(scale->sws);\n    sws_freeContext(scale->isws[0]);\n    sws_freeContext(scale->isws[1]);\n    scale->sws = ((void*)0);\n\n\nstatic int query_formats(AVFilterContext *ctx)\n\n    AVFilterFormats *formats;\n    const AVPixFmtDescriptor *desc;\n    enum AVPixelFormat pix_fmt;\n    int ret;\n\n    desc = ((void*)0);\n    formats = ((void*)0);\n    while ((desc = av_pix_fmt_desc_next(desc))) \n        pix_fmt = av_pix_fmt_desc_get_id(desc);\n        if ((sws_isSupportedInput(pix_fmt) ||\n             sws_isSupportedEndiannessConversion(pix_fmt))\n            && (ret = ff_add_format(&formats, pix_fmt)) < 0) \n            return ret;"
    ]
  ],
  [
    [
      "if ((ret = ff_formats_ref(formats, &ctx->inputs[0]->outcfg.formats)) < 0)\n        return ret;\n\n    desc = ((void*)0);\n    formats = ((void*)0);\n    while ((desc = av_pix_fmt_desc_next(desc))) \n        pix_fmt = av_pix_fmt_desc_get_id(desc);\n        if ((sws_isSupportedOutput(pix_fmt) || pix_fmt == AV_PIX_FMT_PAL8 ||\n             sws_isSupportedEndiannessConversion(pix_fmt))\n            && (ret = ff_add_format(&formats, pix_fmt)) < 0) \n            return ret;"
    ]
  ],
  "if ((ret = ff_formats_ref(formats, &ctx->outputs[0]->incfg.formats)) < 0)\n        return ret;\n\n    return 0;\n\n\nstatic int scale_eval_dimensions(AVFilterContext *ctx)\n\n    ScaleContext *scale = ctx->priv;\n    const char scale2ref = ctx->filter == &ff_vf_scale2ref;\n    const AVFilterLink *inlink = scale2ref ? ctx->inputs[1] : ctx->inputs[0];\n    const AVFilterLink *outlink = ctx->outputs[0];\n    const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n    const AVPixFmtDescriptor *out_desc = av_pix_fmt_desc_get(outlink->format);\n    char *expr;\n    int eval_w",
  [
    "eval_h;\n    int ret;\n    double res;\n    const AVPixFmtDescriptor *main_desc;\n    const AVFilterLink *main_link;\n\n    if (scale2ref) \n        main_link = ctx->inputs[0];\n        main_desc = av_pix_fmt_desc_get(main_link->format);"
  ],
  [
    "scale->var_values[VAR_IN_W] = scale->var_values[VAR_IW] = inlink->w;\n    scale->var_values[VAR_IN_H] = scale->var_values[VAR_IH] = inlink->h;\n    scale->var_values[VAR_OUT_W] = scale->var_values[VAR_OW] = __builtin_nanf(\"0x7fc00000\");\n    scale->var_values[VAR_OUT_H] = scale->var_values[VAR_OH] = __builtin_nanf(\"0x7fc00000\");\n    scale->var_values[VAR_A] = (double) inlink->w / inlink->h;\n    scale->var_values[VAR_SAR] = inlink->sample_aspect_ratio.num ?\n        (double) inlink->sample_aspect_ratio.num / inlink->sample_aspect_ratio.den : 1;\n    scale->var_values[VAR_DAR] = scale->var_values[VAR_A] * scale->var_values[VAR_SAR];\n    scale->var_values[VAR_HSUB] = 1 << desc->log2_chroma_w;\n    scale->var_values[VAR_VSUB] = 1 << desc->log2_chroma_h;\n    scale->var_values[VAR_OHSUB] = 1 << out_desc->log2_chroma_w;\n    scale->var_values[VAR_OVSUB] = 1 << out_desc->log2_chroma_h;\n\n    if (scale2ref) \n        scale->var_values[VAR_S2R_MAIN_W] = main_link->w;\n        scale->var_values[VAR_S2R_MAIN_H] = main_link->h;\n        scale->var_values[VAR_S2R_MAIN_A] = (double) main_link->w / main_link->h;\n        scale->var_values[VAR_S2R_MAIN_SAR] = main_link->sample_aspect_ratio.num ?\n            (double) main_link->sample_aspect_ratio.num / main_link->sample_aspect_ratio.den : 1;\n        scale->var_values[VAR_S2R_MAIN_DAR] = scale->var_values[VAR_S2R_MDAR] =\n            scale->var_values[VAR_S2R_MAIN_A] * scale->var_values[VAR_S2R_MAIN_SAR];\n        scale->var_values[VAR_S2R_MAIN_HSUB] = 1 << main_desc->log2_chroma_w;\n        scale->var_values[VAR_S2R_MAIN_VSUB] = 1 << main_desc->log2_chroma_h;"
  ],
  [
    "res = av_expr_eval(scale->w_pexpr, scale->var_values, ((void*)0));\n    eval_w = scale->var_values[VAR_OUT_W] = scale->var_values[VAR_OW] = (int) res == 0 ? inlink->w : (int) res;\n\n    res = av_expr_eval(scale->h_pexpr, scale->var_values, ((void*)0));\n    if (( sizeof(res) == sizeof(float) ? __inline_isnanf((float)(res)) : sizeof(res) == sizeof(double) ? __inline_isnand((double)(res)) : __inline_isnanl((long double)(res)))) \n        expr = scale->h_expr;\n        ret = (-(22));\n        goto fail;"
  ],
  [
    "eval_h = scale->var_values[VAR_OUT_H] = scale->var_values[VAR_OH] = (int) res == 0 ? inlink->h : (int) res;\n\n    res = av_expr_eval(scale->w_pexpr, scale->var_values, ((void*)0));\n    if (( sizeof(res) == sizeof(float) ? __inline_isnanf((float)(res)) : sizeof(res) == sizeof(double) ? __inline_isnand((double)(res)) : __inline_isnanl((long double)(res)))) \n        expr = scale->w_expr;\n        ret = (-(22));\n        goto fail;"
  ],
  [
    [
      "eval_w = scale->var_values[VAR_OUT_W] = scale->var_values[VAR_OW] = (int) res == 0 ? inlink->w : (int) res;\n\n    scale->w = eval_w;\n    scale->h = eval_h;\n\n    return 0;\n\nfail:\n    av_log(ctx, 16,\n           \"Error when evaluating the expression '%s'.\\n\", expr);\n    return ret;\n\n\nstatic int config_props(AVFilterLink *outlink)\n\n    AVFilterContext *ctx = outlink->src;\n    AVFilterLink *inlink0 = outlink->src->inputs[0];\n    AVFilterLink *inlink = ctx->filter == &ff_vf_scale2ref ?\n                            outlink->src->inputs[1] :\n                            outlink->src->inputs[0];\n    enum AVPixelFormat outfmt = outlink->format;\n    const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(inlink->format);\n    const AVPixFmtDescriptor *outdesc = av_pix_fmt_desc_get(outfmt);\n    ScaleContext *scale = ctx->priv;\n    uint8_t *flags_val = ((void*)0);\n    int ret;\n\n    if ((ret = scale_eval_dimensions(ctx)) < 0)\n        goto fail;\n\n    outlink->w = scale->w;\n    outlink->h = scale->h;\n\n    ff_scale_adjust_dimensions(inlink, &outlink->w, &outlink->h,\n                               scale->force_original_aspect_ratio,\n                               scale->force_divisible_by);\n\n    if (outlink->w > 2147483647 ||\n        outlink->h > 2147483647 ||\n        (outlink->h * inlink->w) > 2147483647 ||\n        (outlink->w * inlink->h) > 2147483647)\n        av_log(ctx, 16, \"Rescaled value for width or height is too big.\\n\");\n\n\n\n    scale->input_is_pal = desc->flags & (1 << 1);\n    if (outfmt == AV_PIX_FMT_PAL8) outfmt = AV_PIX_FMT_BGR8;\n    scale->output_is_pal = av_pix_fmt_desc_get(outfmt)->flags & (1 << 1);\n\n    if (scale->sws)\n        sws_freeContext(scale->sws);\n    if (scale->isws[0])\n        sws_freeContext(scale->isws[0]);\n    if (scale->isws[1])\n        sws_freeContext(scale->isws[1]);\n    scale->isws[0] = scale->isws[1] = scale->sws = ((void*)0);\n    if (inlink0->w == outlink->w &&\n        inlink0->h == outlink->h &&\n        scale->out_color_matrix == AVCOL_SPC_UNSPECIFIED &&\n        scale->in_range == scale->out_range &&\n        inlink0->format == outlink->format)\n        ;\n    else \n        struct SwsContext **swscs[3] = &scale->sws",
      "&scale->isws[0]",
      "&scale->isws[1]"
    ],
    [
      ";\n        int i;\n\n        for (i = 0; i < 3; i++) \n            int in_v_chr_pos = scale->in_v_chr_pos",
      [
        "out_v_chr_pos = scale->out_v_chr_pos;\n            struct SwsContext *const s = sws_alloc_context();\n            if (!s)\n                return (-(12));\n            *swscs[i] = s;\n\n            ret = av_opt_copy(s, scale->sws_opts);\n            if (ret < 0)\n                return ret;\n\n            av_opt_set_int(s, \"srcw\", inlink0 ->w, 0);\n            av_opt_set_int(s, \"srch\", inlink0 ->h >> !!i, 0);\n            av_opt_set_int(s, \"src_format\", inlink0->format, 0);\n            av_opt_set_int(s, \"dstw\", outlink->w, 0);\n            av_opt_set_int(s, \"dsth\", outlink->h >> !!i, 0);\n            av_opt_set_int(s, \"dst_format\", outfmt, 0);\n            if (scale->in_range != AVCOL_RANGE_UNSPECIFIED)\n                av_opt_set_int(s, \"src_range\",\n                               scale->in_range == AVCOL_RANGE_JPEG, 0);\n            else if (scale->in_frame_range != AVCOL_RANGE_UNSPECIFIED)\n                av_opt_set_int(s, \"src_range\",\n                               scale->in_frame_range == AVCOL_RANGE_JPEG, 0);\n            if (scale->out_range != AVCOL_RANGE_UNSPECIFIED)\n                av_opt_set_int(s, \"dst_range\",\n                               scale->out_range == AVCOL_RANGE_JPEG, 0);\n\n\n\n\n\n            if (desc->log2_chroma_h == 1 && scale->in_v_chr_pos == -513) \n                in_v_chr_pos = (i == 0) ? 128 : (i == 1) ? 64 : 192;"
      ],
      [
        "if (outdesc->log2_chroma_h == 1 && scale->out_v_chr_pos == -513) \n                out_v_chr_pos = (i == 0) ? 128 : (i == 1) ? 64 : 192;"
      ],
      "av_opt_set_int(s, \"src_h_chr_pos\", scale->in_h_chr_pos, 0);\n            av_opt_set_int(s, \"src_v_chr_pos\", in_v_chr_pos, 0);\n            av_opt_set_int(s, \"dst_h_chr_pos\", scale->out_h_chr_pos, 0);\n            av_opt_set_int(s, \"dst_v_chr_pos\", out_v_chr_pos, 0);\n\n            if ((ret = sws_init_context(s, ((void*)0)",
      "((void*)0))) < 0)\n                return ret;\n            if (!scale->interlaced)\n                break;"
    ]
  ],
  [
    [
      "if (inlink0->sample_aspect_ratio.num)\n        outlink->sample_aspect_ratio = av_mul_q((AVRational)outlink->h * inlink0->w",
      "outlink->w * inlink0->h"
    ],
    "inlink0->sample_aspect_ratio);"
  ],
  "else\n        outlink->sample_aspect_ratio = inlink0->sample_aspect_ratio;\n\n    if (scale->sws)\n        av_opt_get(scale->sws, \"sws_flags\", 0, &flags_val);\n\n    av_log(ctx, 40, \"w:%d h:%d fmt:%s sar:%d/%d -> w:%d h:%d fmt:%s sar:%d/%d flags:%s\\n\",\n           inlink ->w, inlink ->h, av_get_pix_fmt_name( inlink->format)",
  "inlink->sample_aspect_ratio.num",
  "inlink->sample_aspect_ratio.den",
  "outlink->w",
  "outlink->h",
  "av_get_pix_fmt_name(outlink->format)",
  "outlink->sample_aspect_ratio.num",
  "outlink->sample_aspect_ratio.den",
  [
    "flags_val);\n    av_freep(&flags_val);\n\n    return 0;\n\nfail:\n    return ret;\n\n\nstatic int config_props_ref(AVFilterLink *outlink)\n\n    AVFilterLink *inlink = outlink->src->inputs[1];\n\n    outlink->w = inlink->w;\n    outlink->h = inlink->h;\n    outlink->sample_aspect_ratio = inlink->sample_aspect_ratio;\n    outlink->time_base = inlink->time_base;\n    outlink->frame_rate = inlink->frame_rate;\n\n    return 0;\n\n\nstatic int request_frame(AVFilterLink *outlink)\n\n    return ff_request_frame(outlink->src->inputs[0]);\n\n\nstatic int request_frame_ref(AVFilterLink *outlink)\n\n    return ff_request_frame(outlink->src->inputs[1]);\n\n\nstatic void frame_offset(AVFrame *frame, int dir, int is_pal)\n\n    for (int i = 0; i < 4 && frame->data[i]; i++) \n        if (i == 1 && is_pal)\n            break;\n        frame->data[i] += frame->linesize[i] * dir;"
  ],
  [
    "static int scale_field(ScaleContext *scale, AVFrame *dst, AVFrame *src,\n                       int field)\n\n    int orig_h_src = src->height;\n    int orig_h_dst = dst->height;\n    int ret;\n\n\n    if (field) \n        frame_offset(src, 1, scale->input_is_pal);\n        frame_offset(dst, 1, scale->output_is_pal);"
  ],
  [
    "for (int i = 0; i < 4; i++) \n        src->linesize[i] *= 2;\n        dst->linesize[i] *= 2;"
  ],
  [
    "src->height /= 2;\n    dst->height /= 2;\n\n    ret = sws_scale_frame(scale->isws[field], dst, src);\n    if (ret < 0)\n        return ret;\n\n\n    for (int i = 0; i < 4; i++) \n        src->linesize[i] /= 2;\n        dst->linesize[i] /= 2;"
  ],
  [
    "src->height = orig_h_src;\n    dst->height = orig_h_dst;\n\n    if (field) \n        frame_offset(src, -1, scale->input_is_pal);\n        frame_offset(dst, -1, scale->output_is_pal);"
  ],
  [
    "return 0;\n\n\nstatic int scale_frame(AVFilterLink *link, AVFrame *in, AVFrame **frame_out)\n\n    AVFilterContext *ctx = link->dst;\n    ScaleContext *scale = ctx->priv;\n    AVFilterLink *outlink = ctx->outputs[0];\n    AVFrame *out;\n    const AVPixFmtDescriptor *desc = av_pix_fmt_desc_get(link->format);\n    char buf[32];\n    int ret;\n    int in_range;\n    int frame_changed;\n\n    *frame_out = ((void*)0);\n    if (in->colorspace == AVCOL_SPC_YCGCO)\n        av_log(link->dst, 24, \"Detected unsupported YCgCo colorspace.\\n\");\n\n    frame_changed = in->width != link->w ||\n                    in->height != link->h ||\n                    in->format != link->format ||\n                    in->sample_aspect_ratio.den != link->sample_aspect_ratio.den ||\n                    in->sample_aspect_ratio.num != link->sample_aspect_ratio.num;\n\n    if (in->color_range != AVCOL_RANGE_UNSPECIFIED &&\n        scale->in_range == AVCOL_RANGE_UNSPECIFIED &&\n        in->color_range != scale->in_frame_range) \n        scale->in_frame_range = in->color_range;\n        frame_changed = 1;"
  ],
  [
    [
      "if (scale->eval_mode == EVAL_MODE_FRAME || frame_changed) \n        unsigned vars_w[VARS_NB] =  0"
    ],
    [
      "vars_h[VARS_NB] =  0"
    ],
    [
      ";\n\n        av_expr_count_vars(scale->w_pexpr, vars_w, VARS_NB);\n        av_expr_count_vars(scale->h_pexpr, vars_h, VARS_NB);\n\n        if (scale->eval_mode == EVAL_MODE_FRAME &&\n            !frame_changed &&\n            ctx->filter != &ff_vf_scale2ref &&\n            !(vars_w[VAR_N] || vars_w[VAR_T]\n\n              || vars_w[VAR_POS]\n\n              ) &&\n            !(vars_h[VAR_N] || vars_h[VAR_T]\n\n              || vars_h[VAR_POS]\n\n              ) &&\n            scale->w && scale->h)\n            goto scale;\n\n        if (scale->eval_mode == EVAL_MODE_INIT) \n            __builtin___snprintf_chk (buf, sizeof(buf) - 1",
      "0",
      "__builtin_object_size (buf, 2 > 1 ? 1 : 0)",
      "\"%d\"",
      "scale->w);\n            av_opt_set(scale, \"w\", buf, 0);\n            __builtin___snprintf_chk (buf, sizeof(buf) - 1",
      "0",
      "__builtin_object_size (buf, 2 > 1 ? 1 : 0)",
      "\"%d\"",
      "scale->h);\n            av_opt_set(scale, \"h\", buf, 0);\n\n            ret = scale_parse_expr(ctx, ((void*)0)",
      "&scale->w_pexpr",
      "\"width\"",
      "scale->w_expr);\n            if (ret < 0)\n                return ret;\n\n            ret = scale_parse_expr(ctx, ((void*)0)",
      "&scale->h_pexpr",
      "\"height\"",
      "scale->h_expr);\n            if (ret < 0)\n                return ret;"
    ],
    [
      "if (ctx->filter == &ff_vf_scale2ref) \n            scale->var_values[VAR_S2R_MAIN_N] = link->frame_count_out;\n            scale->var_values[VAR_S2R_MAIN_T] = ((in->pts) == ((int64_t)(0x8000000000000000ULL)) ? __builtin_nanf(\"0x7fc00000\") : (double)(in->pts) * av_q2d(link->time_base));\n\n#pragma GCC diagnostic push\n# 757 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\"\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n            scale->var_values[VAR_S2R_MAIN_POS] = in->pkt_pos == -1 ? __builtin_nanf(\"0x7fc00000\") : in->pkt_pos;\n#pragma GCC diagnostic pop"
    ],
    [
      "else \n            scale->var_values[VAR_N] = link->frame_count_out;\n            scale->var_values[VAR_T] = ((in->pts) == ((int64_t)(0x8000000000000000ULL)) ? __builtin_nanf(\"0x7fc00000\") : (double)(in->pts) * av_q2d(link->time_base));\n\n#pragma GCC diagnostic push\n# 765 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\"\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n            scale->var_values[VAR_POS] = in->pkt_pos == -1 ? __builtin_nanf(\"0x7fc00000\") : in->pkt_pos;\n#pragma GCC diagnostic pop"
    ],
    "link->dst->inputs[0]->format = in->format;\n        link->dst->inputs[0]->w = in->width;\n        link->dst->inputs[0]->h = in->height;\n\n        link->dst->inputs[0]->sample_aspect_ratio.den = in->sample_aspect_ratio.den;\n        link->dst->inputs[0]->sample_aspect_ratio.num = in->sample_aspect_ratio.num;\n\n        if ((ret = config_props(outlink)) < 0)\n            return ret;"
  ],
  [
    "scale:\n    if (!scale->sws) \n        *frame_out = in;\n        return 0;"
  ],
  [
    "scale->hsub = desc->log2_chroma_w;\n    scale->vsub = desc->log2_chroma_h;\n\n    out = ff_get_video_buffer(outlink, outlink->w, outlink->h);\n    if (!out) \n        av_frame_free(&in);\n        return (-(12));"
  ],
  "*frame_out = out;\n\n    av_frame_copy_props(out, in);\n    out->width = outlink->w;\n    out->height = outlink->h;\n\n    if (scale->output_is_pal)\n        avpriv_set_systematic_pal2((uint32_t*)out->data[1]",
  [
    "outlink->format == AV_PIX_FMT_PAL8 ? AV_PIX_FMT_BGR8 : outlink->format);\n\n    in_range = in->color_range;\n\n    if ( scale->in_color_matrix != AVCOL_SPC_UNSPECIFIED\n        || scale->out_color_matrix != AVCOL_SPC_UNSPECIFIED\n        || scale-> in_range != AVCOL_RANGE_UNSPECIFIED\n        || in_range != AVCOL_RANGE_UNSPECIFIED\n        || scale->out_range != AVCOL_RANGE_UNSPECIFIED) \n        int in_full",
    "out_full",
    "brightness",
    "contrast",
    "saturation;\n        const int *inv_table",
    "*table;\n\n        sws_getColorspaceDetails(scale->sws, (int **)&inv_table",
    "&in_full",
    "(int **)&table",
    "&out_full",
    "&brightness",
    "&contrast",
    "&saturation);\n\n        if (scale->in_color_matrix == -1 )\n            inv_table = sws_getCoefficients(in->colorspace);\n        else if (scale->in_color_matrix != AVCOL_SPC_UNSPECIFIED)\n            inv_table = sws_getCoefficients(scale->in_color_matrix);\n        if (scale->out_color_matrix != AVCOL_SPC_UNSPECIFIED)\n            table = sws_getCoefficients(scale->out_color_matrix);\n        else if (scale->in_color_matrix != AVCOL_SPC_UNSPECIFIED)\n            table = inv_table;\n\n        if (scale-> in_range != AVCOL_RANGE_UNSPECIFIED)\n            in_full = (scale-> in_range == AVCOL_RANGE_JPEG);\n        else if (in_range != AVCOL_RANGE_UNSPECIFIED)\n            in_full = (in_range == AVCOL_RANGE_JPEG);\n        if (scale->out_range != AVCOL_RANGE_UNSPECIFIED)\n            out_full = (scale->out_range == AVCOL_RANGE_JPEG);\n\n        sws_setColorspaceDetails(scale->sws, inv_table, in_full,\n                                 table, out_full,\n                                 brightness, contrast, saturation);\n        if (scale->isws[0])\n            sws_setColorspaceDetails(scale->isws[0], inv_table, in_full,\n                                     table, out_full,\n                                     brightness, contrast, saturation);\n        if (scale->isws[1])\n            sws_setColorspaceDetails(scale->isws[1], inv_table, in_full,\n                                     table, out_full,\n                                     brightness, contrast, saturation);\n\n        out->color_range = out_full ? AVCOL_RANGE_JPEG : AVCOL_RANGE_MPEG;\n        if (scale->out_color_matrix != AVCOL_SPC_UNSPECIFIED)\n            out->colorspace = scale->out_color_matrix;"
  ],
  "# 859 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\"\n    if (av_pix_fmt_desc_get(out->format)->flags & (1 << 5))\n        out->colorspace = AVCOL_SPC_RGB;\n    else if (out->colorspace == AVCOL_SPC_RGB)\n        out->colorspace = AVCOL_SPC_UNSPECIFIED;\n\n    av_reduce(&out->sample_aspect_ratio.num, &out->sample_aspect_ratio.den,\n              (int64_t)in->sample_aspect_ratio.num * outlink->h * link->w",
  "(int64_t)in->sample_aspect_ratio.den * outlink->w * link->h",
  [
    "2147483647);\n\n    if (scale->interlaced>0 || (scale->interlaced<0 &&\n        (in->flags & (1 << 3)))) \n        ret = scale_field(scale, out, in, 0);\n        if (ret >= 0)\n            ret = scale_field(scale, out, in, 1);"
  ],
  [
    "else \n        ret = sws_scale_frame(scale->sws, out, in);"
  ],
  [
    "av_frame_free(&in);\n    if (ret < 0)\n        av_frame_free(frame_out);\n    return ret;\n\n\nstatic int filter_frame(AVFilterLink *link, AVFrame *in)\n\n    AVFilterContext *ctx = link->dst;\n    AVFilterLink *outlink = ctx->outputs[0];\n    AVFrame *out;\n    int ret;\n\n    ret = scale_frame(link, in, &out);\n    if (out)\n        return ff_filter_frame(outlink, out);\n\n    return ret;\n\n\nstatic int filter_frame_ref(AVFilterLink *link, AVFrame *in)\n\n    ScaleContext *scale = link->dst->priv;\n    AVFilterLink *outlink = link->dst->outputs[1];\n    int frame_changed;\n\n    frame_changed = in->width != link->w ||\n                    in->height != link->h ||\n                    in->format != link->format ||\n                    in->sample_aspect_ratio.den != link->sample_aspect_ratio.den ||\n                    in->sample_aspect_ratio.num != link->sample_aspect_ratio.num;\n\n    if (frame_changed) \n        link->format = in->format;\n        link->w = in->width;\n        link->h = in->height;\n        link->sample_aspect_ratio.num = in->sample_aspect_ratio.num;\n        link->sample_aspect_ratio.den = in->sample_aspect_ratio.den;\n\n        config_props_ref(outlink);"
  ],
  [
    "if (scale->eval_mode == EVAL_MODE_FRAME) \n        scale->var_values[VAR_N] = link->frame_count_out;\n        scale->var_values[VAR_T] = ((in->pts) == ((int64_t)(0x8000000000000000ULL)) ? __builtin_nanf(\"0x7fc00000\") : (double)(in->pts) * av_q2d(link->time_base));\n\n#pragma GCC diagnostic push\n# 924 \"/Users/davidchen/repo/ffmpeg/libavfilter/vf_scale.c\"\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n        scale->var_values[VAR_POS] = in->pkt_pos == -1 ? __builtin_nanf(\"0x7fc00000\") : in->pkt_pos;\n#pragma GCC diagnostic pop"
  ],
  "return ff_filter_frame(outlink, in);\n\n\nstatic int process_command(AVFilterContext *ctx, const char *cmd, const char *args,\n                           char *res, int res_len, int flags)\n\n    ScaleContext *scale = ctx->priv;\n    char *str_expr;\n    AVExpr **pexpr_ptr;\n    int ret",
  "w",
  [
    "h;\n\n    w = !strcmp(cmd, \"width\") || !strcmp(cmd, \"w\");\n    h = !strcmp(cmd, \"height\") || !strcmp(cmd, \"h\");\n\n    if (w || h) \n        str_expr = w ? scale->w_expr : scale->h_expr;\n        pexpr_ptr = w ? &scale->w_pexpr : &scale->h_pexpr;\n\n        ret = scale_parse_expr(ctx, str_expr, pexpr_ptr, cmd, args);"
  ],
  [
    "else\n        ret = (-(78));\n\n    if (ret < 0)\n        av_log(ctx, 16, \"Failed to process command. Continuing with existing parameters.\\n\");\n\n    return ret;\n\n\nstatic const AVClass *child_class_iterate(void **iter)\n\n    const AVClass *c = *iter ? ((void*)0) : sws_get_class();\n    *iter = (void*)(uintptr_t)c;\n    return c;\n\n\nstatic void *child_next(void *obj, void *prev)\n\n    ScaleContext *s = obj;\n    if (!prev)\n        return s->sws_opts;\n    return ((void*)0);\n\n\n\n\n\n\nstatic const AVOption scale_options[] = \n     \"w\"",
    "\"Output video width\"",
    "__builtin_offsetof(ScaleContext, w_expr)",
    "AV_OPT_TYPE_STRING",
    ".flags = 16|(1<<16)|(1<<15)"
  ],
  [
    "\"width\"",
    "\"Output video width\"",
    "__builtin_offsetof(ScaleContext, w_expr)",
    "AV_OPT_TYPE_STRING",
    ".flags = 16|(1<<16)|(1<<15)"
  ],
  [
    "\"h\"",
    "\"Output video height\"",
    "__builtin_offsetof(ScaleContext, h_expr)",
    "AV_OPT_TYPE_STRING",
    ".flags = 16|(1<<16)|(1<<15)"
  ],
  [
    "\"height\"",
    "\"Output video height\"",
    "__builtin_offsetof(ScaleContext, h_expr)",
    "AV_OPT_TYPE_STRING",
    ".flags = 16|(1<<16)|(1<<15)"
  ],
  [
    "\"flags\"",
    "\"Flags to pass to libswscale\"",
    "__builtin_offsetof(ScaleContext, flags_str)",
    "AV_OPT_TYPE_STRING",
    [
      ".str = \"\""
    ],
    ".flags = 16|(1<<16)"
  ],
  [
    "\"interl\"",
    "\"set interlacing\"",
    "__builtin_offsetof(ScaleContext, interlaced)",
    "AV_OPT_TYPE_BOOL",
    [
      ".i64 = 0"
    ],
    "-1",
    "1",
    "16|(1<<16)"
  ],
  [
    "\"size\"",
    "\"set video size\"",
    "__builtin_offsetof(ScaleContext, size_str)",
    "AV_OPT_TYPE_STRING",
    [
      ".str = ((void*)0)"
    ],
    "0",
    "16|(1<<16)"
  ],
  [
    "\"s\"",
    "\"set video size\"",
    "__builtin_offsetof(ScaleContext, size_str)",
    "AV_OPT_TYPE_STRING",
    [
      ".str = ((void*)0)"
    ],
    "0",
    "16|(1<<16)"
  ],
  [
    "\"in_color_matrix\"",
    "\"set input YCbCr type\"",
    "__builtin_offsetof(ScaleContext, in_color_matrix)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = -1"
    ],
    "-1",
    "AVCOL_SPC_NB-1",
    ".flags = 16|(1<<16)",
    "\"color\""
  ],
  [
    "\"out_color_matrix\"",
    "\"set output YCbCr type\"",
    "__builtin_offsetof(ScaleContext, out_color_matrix)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = AVCOL_SPC_UNSPECIFIED"
    ],
    "0",
    "AVCOL_SPC_NB-1",
    ".flags = 16|(1<<16)",
    "\"color\""
  ],
  [
    "\"auto\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = -1"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"color\""
  ],
  [
    "\"bt601\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_SPC_BT470BG"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"color\""
  ],
  [
    "\"bt470\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_SPC_BT470BG"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"color\""
  ],
  [
    "\"smpte170m\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_SPC_BT470BG"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"color\""
  ],
  [
    "\"bt709\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_SPC_BT709"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"color\""
  ],
  [
    "\"fcc\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_SPC_FCC"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"color\""
  ],
  [
    "\"smpte240m\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_SPC_SMPTE240M"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"color\""
  ],
  [
    "\"bt2020\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_SPC_BT2020_NCL"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"color\""
  ],
  [
    "\"in_range\"",
    "\"set input color range\"",
    "__builtin_offsetof(ScaleContext, in_range)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = AVCOL_RANGE_UNSPECIFIED"
    ],
    "0",
    "2",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"out_range\"",
    "\"set output color range\"",
    "__builtin_offsetof(ScaleContext, out_range)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = AVCOL_RANGE_UNSPECIFIED"
    ],
    "0",
    "2",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"auto\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_RANGE_UNSPECIFIED"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"unknown\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_RANGE_UNSPECIFIED"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"full\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_RANGE_JPEG"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"limited\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_RANGE_MPEG"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"jpeg\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_RANGE_JPEG"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"mpeg\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_RANGE_MPEG"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"tv\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_RANGE_MPEG"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"pc\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = AVCOL_RANGE_JPEG"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"range\""
  ],
  [
    "\"in_v_chr_pos\"",
    "\"input vertical chroma position in luma grid/256\"",
    "__builtin_offsetof(ScaleContext, in_v_chr_pos)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = -513"
    ],
    "-513",
    "512",
    "16|(1<<16)"
  ],
  [
    "\"in_h_chr_pos\"",
    "\"input horizontal chroma position in luma grid/256\"",
    "__builtin_offsetof(ScaleContext, in_h_chr_pos)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = -513"
    ],
    "-513",
    "512",
    "16|(1<<16)"
  ],
  [
    "\"out_v_chr_pos\"",
    "\"output vertical chroma position in luma grid/256\"",
    "__builtin_offsetof(ScaleContext, out_v_chr_pos)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = -513"
    ],
    "-513",
    "512",
    "16|(1<<16)"
  ],
  [
    "\"out_h_chr_pos\"",
    "\"output horizontal chroma position in luma grid/256\"",
    "__builtin_offsetof(ScaleContext, out_h_chr_pos)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = -513"
    ],
    "-513",
    "512",
    "16|(1<<16)"
  ],
  [
    "\"force_original_aspect_ratio\"",
    "\"decrease or increase w/h if necessary to keep the original AR\"",
    "__builtin_offsetof(ScaleContext, force_original_aspect_ratio)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = 0"
    ],
    "0",
    "2",
    "16|(1<<16)",
    "\"force_oar\""
  ],
  [
    "\"disable\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = 0"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"force_oar\""
  ],
  [
    "\"decrease\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = 1"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"force_oar\""
  ],
  [
    "\"increase\"",
    "((void*)0)",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64 = 2"
    ],
    "0",
    "0",
    "16|(1<<16)",
    "\"force_oar\""
  ],
  [
    "\"force_divisible_by\"",
    "\"enforce that the output resolution is divisible by a defined integer when force_original_aspect_ratio is used\"",
    "__builtin_offsetof(ScaleContext, force_divisible_by)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = 1"
    ],
    "1",
    "256",
    "16|(1<<16)"
  ],
  [
    "\"param0\"",
    "\"Scaler param 0\"",
    "__builtin_offsetof(ScaleContext, param[0])",
    "AV_OPT_TYPE_DOUBLE",
    [
      ".dbl = 1.7976931348623157e+308"
    ],
    "-1.7976931348623157e+308",
    "1.7976931348623157e+308",
    "16|(1<<16)"
  ],
  [
    "\"param1\"",
    "\"Scaler param 1\"",
    "__builtin_offsetof(ScaleContext, param[1])",
    "AV_OPT_TYPE_DOUBLE",
    [
      ".dbl = 1.7976931348623157e+308"
    ],
    "-1.7976931348623157e+308",
    "1.7976931348623157e+308",
    "16|(1<<16)"
  ],
  [
    "\"eval\"",
    "\"specify when to evaluate expressions\"",
    "__builtin_offsetof(ScaleContext, eval_mode)",
    "AV_OPT_TYPE_INT",
    [
      ".i64 = EVAL_MODE_INIT"
    ],
    "0",
    "EVAL_MODE_NB-1",
    "16|(1<<16)",
    "\"eval\""
  ],
  [
    "\"init\"",
    "\"eval expressions once during initialization\"",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64=EVAL_MODE_INIT"
    ],
    ".flags = 16|(1<<16)",
    ".unit = \"eval\""
  ],
  [
    "\"frame\"",
    "\"eval expressions during initialization and per-frame\"",
    "0",
    "AV_OPT_TYPE_CONST",
    [
      ".i64=EVAL_MODE_FRAME"
    ],
    ".flags = 16|(1<<16)",
    ".unit = \"eval\""
  ],
  [
    "((void*)0)"
  ],
  ";\n\nstatic const AVClass scale_class = \n    .class_name = \"scale(2ref)\"",
  ".item_name = av_default_item_name",
  ".option = scale_options",
  ".version = ((58)<<16 | (36)<<8 | (100))",
  ".category = AV_CLASS_CATEGORY_FILTER",
  ".child_class_iterate = child_class_iterate",
  ".child_next = child_next",
  [
    ";\n\nstatic const AVFilterPad avfilter_vf_scale_inputs[] = \n    \n        .name = \"default\"",
    ".type = AVMEDIA_TYPE_VIDEO",
    ".filter_frame = filter_frame"
  ],
  [
    ";\n\nstatic const AVFilterPad avfilter_vf_scale_outputs[] = \n    \n        .name = \"default\"",
    ".type = AVMEDIA_TYPE_VIDEO",
    ".config_props = config_props"
  ],
  ";\n\nconst AVFilter ff_vf_scale = \n    .name = \"scale\"",
  ".description = \"Scale the input video size and/or convert the image format.\"",
  ".preinit = preinit",
  ".init = init",
  ".uninit = uninit",
  ".priv_size = sizeof(ScaleContext)",
  ".priv_class = &scale_class",
  ".inputs = (avfilter_vf_scale_inputs)",
  ".nb_inputs = (sizeof((avfilter_vf_scale_inputs)) / sizeof(((avfilter_vf_scale_inputs))[0]))",
  ".outputs = (avfilter_vf_scale_outputs)",
  ".nb_outputs = (sizeof((avfilter_vf_scale_outputs)) / sizeof(((avfilter_vf_scale_outputs))[0]))",
  ".formats.query_func = query_formats",
  ".formats_state = FF_FILTER_FORMATS_QUERY_FUNC",
  ".process_command = process_command",
  [
    ";\n\nstatic const AVFilterPad avfilter_vf_scale2ref_inputs[] = \n    \n        .name = \"default\"",
    ".type = AVMEDIA_TYPE_VIDEO",
    ".filter_frame = filter_frame"
  ],
  [
    ".name = \"ref\"",
    ".type = AVMEDIA_TYPE_VIDEO",
    ".filter_frame = filter_frame_ref"
  ],
  [
    ";\n\nstatic const AVFilterPad avfilter_vf_scale2ref_outputs[] = \n    \n        .name = \"default\"",
    ".type = AVMEDIA_TYPE_VIDEO",
    ".config_props = config_props",
    ".request_frame= request_frame"
  ],
  [
    ".name = \"ref\"",
    ".type = AVMEDIA_TYPE_VIDEO",
    ".config_props = config_props_ref",
    ".request_frame= request_frame_ref"
  ],
  ";\n\nconst AVFilter ff_vf_scale2ref = \n    .name = \"scale2ref\"",
  ".description = \"Scale the input video size and/or convert the image format to the given reference.\"",
  ".preinit = preinit",
  ".init = init",
  ".uninit = uninit",
  ".priv_size = sizeof(ScaleContext)",
  ".priv_class = &scale_class",
  ".inputs = (avfilter_vf_scale2ref_inputs)",
  ".nb_inputs = (sizeof((avfilter_vf_scale2ref_inputs)) / sizeof(((avfilter_vf_scale2ref_inputs))[0]))",
  ".outputs = (avfilter_vf_scale2ref_outputs)",
  ".nb_outputs = (sizeof((avfilter_vf_scale2ref_outputs)) / sizeof(((avfilter_vf_scale2ref_outputs))[0]))",
  ".formats.query_func = query_formats",
  ".formats_state = FF_FILTER_FORMATS_QUERY_FUNC",
  ".process_command = process_command",
  ";"
]
