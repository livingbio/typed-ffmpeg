[
  {
    "description": "Apply LV2 effect.",
    "flags": "(1 << 0)",
    "id": "ff_af_lv2",
    "init": "init",
    "init_src": "static __attribute__((cold)) int init(AVFilterContext *ctx)\n{\n    LV2Context *s = ctx->priv;\n    const LilvPlugins *plugins;\n    const LilvPlugin *plugin;\n    AVFilterPad pad = { ((void*)0) };\n    LilvNode *uri;\n    int i, ret;\n\n    s->world = lilv_world_new();\n    if (!s->world)\n        return (-(12));\n\n    uri = lilv_new_uri(s->world, s->plugin_uri);\n    if (!uri) {\n        av_log(s, 16, \"Invalid plugin URI <%s>\\n\", s->plugin_uri);\n        return (-(22));\n    }\n\n    lilv_world_load_all(s->world);\n    plugins = lilv_world_get_all_plugins(s->world);\n    plugin = lilv_plugins_get_by_uri(plugins, uri);\n    lilv_node_free(uri);\n\n    if (!plugin) {\n        av_log(s, 16, \"Plugin <%s> not found\\n\", s->plugin_uri);\n        return (-(22));\n    }\n\n    s->plugin = plugin;\n    s->nb_ports = lilv_plugin_get_num_ports(s->plugin);\n\n    s->lv2_InputPort = lilv_new_uri(s->world, LV2_CORE__InputPort);\n    s->lv2_OutputPort = lilv_new_uri(s->world, LV2_CORE__OutputPort);\n    s->lv2_AudioPort = lilv_new_uri(s->world, LV2_CORE__AudioPort);\n    s->lv2_ControlPort = lilv_new_uri(s->world, LV2_CORE__ControlPort);\n    s->lv2_Optional = lilv_new_uri(s->world, LV2_CORE__connectionOptional);\n    s->atom_AtomPort = lilv_new_uri(s->world, LV2_ATOM__AtomPort);\n    s->atom_Sequence = lilv_new_uri(s->world, LV2_ATOM__Sequence);\n    s->urid_map = lilv_new_uri(s->world, LV2_URID__map);\n    s->powerOf2BlockLength = lilv_new_uri(s->world, LV2_BUF_SIZE__powerOf2BlockLength);\n    s->fixedBlockLength = lilv_new_uri(s->world, LV2_BUF_SIZE__fixedBlockLength);\n    s->boundedBlockLength = lilv_new_uri(s->world, LV2_BUF_SIZE__boundedBlockLength);\n\n    for (i = 0; i < s->nb_ports; i++) {\n        const LilvPort *lport = lilv_plugin_get_port_by_index(s->plugin, i);\n        int is_input = 0;\n        int is_optional = 0;\n\n        is_optional = lilv_port_has_property(s->plugin, lport, s->lv2_Optional);\n\n        if (lilv_port_is_a(s->plugin, lport, s->lv2_InputPort)) {\n            is_input = 1;\n        } else if (!lilv_port_is_a(s->plugin, lport, s->lv2_OutputPort) && !is_optional) {\n            return (-(22));\n        }\n\n        if (lilv_port_is_a(s->plugin, lport, s->lv2_ControlPort)) {\n            if (is_input) {\n                s->nb_inputcontrols++;\n            }\n        } else if (lilv_port_is_a(s->plugin, lport, s->lv2_AudioPort)) {\n            if (is_input) {\n                s->nb_inputs++;\n            } else {\n                s->nb_outputs++;\n            }\n        }\n    }\n\n    pad.type = AVMEDIA_TYPE_AUDIO;\n\n    if (s->nb_inputs) {\n        pad.name = av_asprintf(\"in0:%s:%u\", s->plugin_uri, s->nb_inputs);\n        if (!pad.name)\n            return (-(12));\n\n        pad.filter_frame = filter_frame;\n        if ((ret = ff_append_inpad_free_name(ctx, &pad)) < 0)\n            return ret;\n    }\n\n    return 0;\n}",
    "input_filter_pads": [],
    "inputs": "0",
    "name": "lv2",
    "options": [
      {
        "default": null,
        "flags": ".flags = 8 | (1<<16)",
        "help": "set plugin uri",
        "max": null,
        "min": null,
        "name": "plugin",
        "offset": "__builtin_offsetof(LV2Context, plugin_uri)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": null,
        "flags": ".flags = 8 | (1<<16)",
        "help": "set plugin uri",
        "max": null,
        "min": null,
        "name": "p",
        "offset": "__builtin_offsetof(LV2Context, plugin_uri)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": null,
        "flags": ".flags = 8 | (1<<16)",
        "help": "set plugin options",
        "max": null,
        "min": null,
        "name": "controls",
        "offset": "__builtin_offsetof(LV2Context, options)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": null,
        "flags": ".flags = 8 | (1<<16)",
        "help": "set plugin options",
        "max": null,
        "min": null,
        "name": "c",
        "offset": "__builtin_offsetof(LV2Context, options)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.i64=44100']",
        "flags": "8 | (1<<16)",
        "help": "set sample rate",
        "max": "2147483647",
        "min": "1",
        "name": "sample_rate",
        "offset": "__builtin_offsetof(LV2Context, sample_rate)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.i64=44100']",
        "flags": "8 | (1<<16)",
        "help": "set sample rate",
        "max": "2147483647",
        "min": "1",
        "name": "s",
        "offset": "__builtin_offsetof(LV2Context, sample_rate)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.i64=1024']",
        "flags": "8 | (1<<16)",
        "help": "set the number of samples per requested frame",
        "max": "2147483647",
        "min": "1",
        "name": "nb_samples",
        "offset": "__builtin_offsetof(LV2Context, nb_samples)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.i64=1024']",
        "flags": "8 | (1<<16)",
        "help": "set the number of samples per requested frame",
        "max": "2147483647",
        "min": "1",
        "name": "n",
        "offset": "__builtin_offsetof(LV2Context, nb_samples)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.i64=-1']",
        "flags": "8 | (1<<16)",
        "help": "set audio duration",
        "max": "9223372036854775807LL",
        "min": "-1",
        "name": "duration",
        "offset": "__builtin_offsetof(LV2Context, duration)",
        "type": "AV_OPT_TYPE_DURATION",
        "unit": null
      },
      {
        "default": "['.i64=-1']",
        "flags": "8 | (1<<16)",
        "help": "set audio duration",
        "max": "9223372036854775807LL",
        "min": "-1",
        "name": "d",
        "offset": "__builtin_offsetof(LV2Context, duration)",
        "type": "AV_OPT_TYPE_DURATION",
        "unit": null
      }
    ],
    "output_filter_pads": [
      {
        "name": "default",
        "type": "AVMEDIA_TYPE_AUDIO"
      }
    ],
    "outputs": "(lv2_outputs)",
    "preinit": null,
    "priv_class": "&lv2_class"
  }
]
