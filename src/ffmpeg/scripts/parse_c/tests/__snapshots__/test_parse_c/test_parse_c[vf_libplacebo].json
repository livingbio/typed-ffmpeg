[
  {
    "description": "Apply various GPU filters from libplacebo",
    "flags": "(1 << 4) | (1 << 0)",
    "id": "ff_vf_libplacebo",
    "init": "&libplacebo_init",
    "init_src": "static int libplacebo_init(AVFilterContext *avctx)\n{\n    int err = 0;\n    LibplaceboContext *s = avctx->priv;\n\n\n    s->log = pl_log_create(PL_API_VER, pl_log_params(\n        .log_level = get_log_level(),\n        .log_cb = pl_av_log,\n        .log_priv = s,\n    ));\n\n    if (!s->log)\n        return (-(12));\n\n    s->opts = av_mallocz(sizeof(struct pl_options_t));\n    if (!s->opts) {\n        libplacebo_uninit(avctx);\n        return (-(12));\n    }\n\n    if (s->out_format_string) {\n        s->out_format = av_get_pix_fmt(s->out_format_string);\n        if (s->out_format == AV_PIX_FMT_NONE) {\n            av_log(avctx, 16, \"Invalid output format: %s\\n\",\n                   s->out_format_string);\n            libplacebo_uninit(avctx);\n            return (-(22));\n        }\n    } else {\n        s->out_format = AV_PIX_FMT_NONE;\n    }\n\n    for (int i = 0; i < s->nb_inputs; i++) {\n        AVFilterPad pad = {\n            .name = av_asprintf(\"input%d\", i),\n            .type = AVMEDIA_TYPE_VIDEO,\n            .config_props = &libplacebo_config_input,\n        };\n        if (!pad.name)\n            return (-(12));\n        do { if ((err = (ff_append_inpad_free_name(avctx, &pad))) < 0) goto fail; } while (0);\n    }\n\n    do { if ((err = (update_settings(avctx))) < 0) goto fail; } while (0);\n    do { if ((err = (av_expr_parse(&s->crop_x_pexpr, s->crop_x_expr, var_names, ((void*)0), ((void*)0), ((void*)0), ((void*)0), 0, s))) < 0) goto fail; } while (0);\n\n    do { if ((err = (av_expr_parse(&s->crop_y_pexpr, s->crop_y_expr, var_names, ((void*)0), ((void*)0), ((void*)0), ((void*)0), 0, s))) < 0) goto fail; } while (0);\n\n    do { if ((err = (av_expr_parse(&s->crop_w_pexpr, s->crop_w_expr, var_names, ((void*)0), ((void*)0), ((void*)0), ((void*)0), 0, s))) < 0) goto fail; } while (0);\n\n    do { if ((err = (av_expr_parse(&s->crop_h_pexpr, s->crop_h_expr, var_names, ((void*)0), ((void*)0), ((void*)0), ((void*)0), 0, s))) < 0) goto fail; } while (0);\n\n    do { if ((err = (av_expr_parse(&s->pos_x_pexpr, s->pos_x_expr, var_names, ((void*)0), ((void*)0), ((void*)0), ((void*)0), 0, s))) < 0) goto fail; } while (0);\n\n    do { if ((err = (av_expr_parse(&s->pos_y_pexpr, s->pos_y_expr, var_names, ((void*)0), ((void*)0), ((void*)0), ((void*)0), 0, s))) < 0) goto fail; } while (0);\n\n    do { if ((err = (av_expr_parse(&s->pos_w_pexpr, s->pos_w_expr, var_names, ((void*)0), ((void*)0), ((void*)0), ((void*)0), 0, s))) < 0) goto fail; } while (0);\n\n    do { if ((err = (av_expr_parse(&s->pos_h_pexpr, s->pos_h_expr, var_names, ((void*)0), ((void*)0), ((void*)0), ((void*)0), 0, s))) < 0) goto fail; } while (0);\n\n\n    if (strcmp(s->fps_string, \"none\") != 0)\n        do { if ((err = (av_parse_video_rate(&s->fps, s->fps_string))) < 0) goto fail; } while (0);\n\n\n    return 0;\n\nfail:\n    return err;\n}",
    "input_filter_pads": [],
    "inputs": null,
    "name": "libplacebo",
    "options": [
      {
        "default": "['.i64 = 1']",
        "flags": ".flags = ((1<<16) | 16)",
        "help": "Number of inputs",
        "max": "2147483647",
        "min": "1",
        "name": "inputs",
        "offset": "__builtin_offsetof(LibplaceboContext, nb_inputs)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.str = \"iw\"']",
        "flags": ".flags = ((1<<16) | 16)",
        "help": "Output video frame width",
        "max": null,
        "min": null,
        "name": "w",
        "offset": "__builtin_offsetof(LibplaceboContext, w_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"ih\"']",
        "flags": ".flags = ((1<<16) | 16)",
        "help": "Output video frame height",
        "max": null,
        "min": null,
        "name": "h",
        "offset": "__builtin_offsetof(LibplaceboContext, h_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"none\"']",
        "flags": ".flags = ((1<<16) | 16)",
        "help": "Output video frame rate",
        "max": null,
        "min": null,
        "name": "fps",
        "offset": "__builtin_offsetof(LibplaceboContext, fps_string)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"(iw-cw)/2\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Input video crop x",
        "max": null,
        "min": null,
        "name": "crop_x",
        "offset": "__builtin_offsetof(LibplaceboContext, crop_x_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"(ih-ch)/2\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Input video crop y",
        "max": null,
        "min": null,
        "name": "crop_y",
        "offset": "__builtin_offsetof(LibplaceboContext, crop_y_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"iw\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Input video crop w",
        "max": null,
        "min": null,
        "name": "crop_w",
        "offset": "__builtin_offsetof(LibplaceboContext, crop_w_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"ih\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Input video crop h",
        "max": null,
        "min": null,
        "name": "crop_h",
        "offset": "__builtin_offsetof(LibplaceboContext, crop_h_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"(ow-pw)/2\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Output video placement x",
        "max": null,
        "min": null,
        "name": "pos_x",
        "offset": "__builtin_offsetof(LibplaceboContext, pos_x_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"(oh-ph)/2\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Output video placement y",
        "max": null,
        "min": null,
        "name": "pos_y",
        "offset": "__builtin_offsetof(LibplaceboContext, pos_y_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"ow\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Output video placement w",
        "max": null,
        "min": null,
        "name": "pos_w",
        "offset": "__builtin_offsetof(LibplaceboContext, pos_w_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"oh\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Output video placement h",
        "max": null,
        "min": null,
        "name": "pos_h",
        "offset": "__builtin_offsetof(LibplaceboContext, pos_h_expr)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": null,
        "flags": ".flags = ((1<<16) | 16)",
        "help": "Output video format",
        "max": null,
        "min": null,
        "name": "format",
        "offset": "__builtin_offsetof(LibplaceboContext, out_format_string)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "((1<<16) | 16)",
        "help": "decrease or increase w/h if necessary to keep the original AR",
        "max": "2",
        "min": "0",
        "name": "force_original_aspect_ratio",
        "offset": "__builtin_offsetof(LibplaceboContext, force_original_aspect_ratio)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "force_oar"
      },
      {
        "default": "['.i64 = 0']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "disable",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "force_oar"
      },
      {
        "default": "['.i64 = 1']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "decrease",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "force_oar"
      },
      {
        "default": "['.i64 = 2']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "increase",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "force_oar"
      },
      {
        "default": "['.i64 = 1']",
        "flags": "((1<<16) | 16)",
        "help": "enforce that the output resolution is divisible by a defined integer when force_original_aspect_ratio is used",
        "max": "256",
        "min": "1",
        "name": "force_divisible_by",
        "offset": "__builtin_offsetof(LibplaceboContext, force_divisible_by)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "((1<<16) | 16)",
        "help": "force SAR normalization to 1:1 by adjusting pos_x/y/w/h",
        "max": "1",
        "min": "0",
        "name": "normalize_sar",
        "offset": "__builtin_offsetof(LibplaceboContext, normalize_sar)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.dbl=0.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "ratio between padding and cropping when normalizing SAR (0=pad, 1=crop)",
        "max": "1.0",
        "min": "0.0",
        "name": "pad_crop_ratio",
        "offset": "__builtin_offsetof(LibplaceboContext, pad_crop_ratio)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.str = \"black\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Background fill color",
        "max": null,
        "min": null,
        "name": "fillcolor",
        "offset": "__builtin_offsetof(LibplaceboContext, fillcolor)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.dbl = 0.0']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Corner rounding radius",
        "max": "1.0",
        "min": "0.0",
        "name": "corner_rounding",
        "offset": "__builtin_offsetof(LibplaceboContext, corner_rounding)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": null,
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Pass extra libplacebo-specific options using a :-separated list of key=value pairs",
        "max": null,
        "min": null,
        "name": "extra_opts",
        "offset": "__builtin_offsetof(LibplaceboContext, extra_opts)",
        "type": "AV_OPT_TYPE_DICT",
        "unit": null
      },
      {
        "default": "['.i64=-1']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "select colorspace",
        "max": "AVCOL_SPC_NB-1",
        "min": "-1",
        "name": "colorspace",
        "offset": "__builtin_offsetof(LibplaceboContext, colorspace)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=-1']",
        "flags": "((1<<16) | 16)",
        "help": "keep the same colorspace",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "auto",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_RGB']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "gbr",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_BT709']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt709",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_UNSPECIFIED']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "unknown",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_BT470BG']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt470bg",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_SMPTE170M']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte170m",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_SMPTE240M']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte240m",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_YCGCO']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "ycgco",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_BT2020_NCL']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt2020nc",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_BT2020_CL']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt2020c",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=AVCOL_SPC_ICTCP']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "ictcp",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "colorspace"
      },
      {
        "default": "['.i64=-1']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "select color range",
        "max": "AVCOL_RANGE_NB-1",
        "min": "-1",
        "name": "range",
        "offset": "__builtin_offsetof(LibplaceboContext, color_range)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "range"
      },
      {
        "default": "['.i64=-1']",
        "flags": "((1<<16) | 16)",
        "help": "keep the same color range",
        "max": "0",
        "min": "0",
        "name": "auto",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "range"
      },
      {
        "default": "['.i64=AVCOL_RANGE_UNSPECIFIED']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "unspecified",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "range"
      },
      {
        "default": "['.i64=AVCOL_RANGE_UNSPECIFIED']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "unknown",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "range"
      },
      {
        "default": "['.i64=AVCOL_RANGE_MPEG']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "limited",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "range"
      },
      {
        "default": "['.i64=AVCOL_RANGE_MPEG']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "tv",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "range"
      },
      {
        "default": "['.i64=AVCOL_RANGE_MPEG']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "mpeg",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "range"
      },
      {
        "default": "['.i64=AVCOL_RANGE_JPEG']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "full",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "range"
      },
      {
        "default": "['.i64=AVCOL_RANGE_JPEG']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "pc",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "range"
      },
      {
        "default": "['.i64=AVCOL_RANGE_JPEG']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "0",
        "min": "0",
        "name": "jpeg",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "range"
      },
      {
        "default": "['.i64=-1']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "select color primaries",
        "max": "AVCOL_PRI_NB-1",
        "min": "-1",
        "name": "color_primaries",
        "offset": "__builtin_offsetof(LibplaceboContext, color_primaries)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=-1']",
        "flags": "((1<<16) | 16)",
        "help": "keep the same color primaries",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "auto",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_BT709']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt709",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_UNSPECIFIED']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "unknown",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_BT470M']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt470m",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_BT470BG']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt470bg",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_SMPTE170M']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte170m",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_SMPTE240M']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte240m",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_FILM']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "film",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_BT2020']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt2020",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_SMPTE428']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte428",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_SMPTE431']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte431",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_SMPTE432']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte432",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_JEDEC_P22']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "jedec-p22",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=AVCOL_PRI_EBU3213']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "ebu3213",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_primaries"
      },
      {
        "default": "['.i64=-1']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "select color transfer",
        "max": "AVCOL_TRC_NB-1",
        "min": "-1",
        "name": "color_trc",
        "offset": "__builtin_offsetof(LibplaceboContext, color_trc)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=-1']",
        "flags": "((1<<16) | 16)",
        "help": "keep the same color transfer",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "auto",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_BT709']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt709",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_UNSPECIFIED']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "unknown",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_GAMMA22']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt470m",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_GAMMA28']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt470bg",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_SMPTE170M']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte170m",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_SMPTE240M']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte240m",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_LINEAR']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "linear",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_IEC61966_2_4']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "iec61966-2-4",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_BT1361_ECG']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt1361e",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_IEC61966_2_1']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "iec61966-2-1",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_BT2020_10']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt2020-10",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_BT2020_12']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "bt2020-12",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_SMPTE2084']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "smpte2084",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.i64=AVCOL_TRC_ARIB_STD_B67']",
        "flags": "((1<<16) | 16)",
        "help": "((void*)0)",
        "max": "2147483647",
        "min": "(-2147483647 -1)",
        "name": "arib-std-b67",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "color_trc"
      },
      {
        "default": "['.str = \"spline36\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Upscaler function",
        "max": null,
        "min": null,
        "name": "upscaler",
        "offset": "__builtin_offsetof(LibplaceboContext, upscaler)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"mitchell\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Downscaler function",
        "max": null,
        "min": null,
        "name": "downscaler",
        "offset": "__builtin_offsetof(LibplaceboContext, downscaler)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.str = \"none\"']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Frame mixing function",
        "max": null,
        "min": null,
        "name": "frame_mixer",
        "offset": "__builtin_offsetof(LibplaceboContext, frame_mixer)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Number of scaler LUT entries",
        "max": "256",
        "min": "0",
        "name": "lut_entries",
        "offset": "__builtin_offsetof(LibplaceboContext, lut_entries)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.dbl = 0.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Antiringing strength (for non-EWA filters)",
        "max": "1.0",
        "min": "0.0",
        "name": "antiringing",
        "offset": "__builtin_offsetof(LibplaceboContext, antiringing)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.i64 = 1']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Enable sigmoid upscaling",
        "max": "1",
        "min": "0",
        "name": "sigmoid",
        "offset": "__builtin_offsetof(LibplaceboContext, sigmoid)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 1']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Apply film grain metadata",
        "max": "1",
        "min": "0",
        "name": "apply_filmgrain",
        "offset": "__builtin_offsetof(LibplaceboContext, apply_filmgrain)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 1']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Apply Dolby Vision metadata",
        "max": "1",
        "min": "0",
        "name": "apply_dolbyvision",
        "offset": "__builtin_offsetof(LibplaceboContext, apply_dovi)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Enable debanding",
        "max": "1",
        "min": "0",
        "name": "deband",
        "offset": "__builtin_offsetof(LibplaceboContext, deband)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 1']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Deband iterations",
        "max": "16",
        "min": "0",
        "name": "deband_iterations",
        "offset": "__builtin_offsetof(LibplaceboContext, deband_iterations)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.dbl = 4.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Deband threshold",
        "max": "1024.0",
        "min": "0.0",
        "name": "deband_threshold",
        "offset": "__builtin_offsetof(LibplaceboContext, deband_threshold)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 16.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Deband radius",
        "max": "1024.0",
        "min": "0.0",
        "name": "deband_radius",
        "offset": "__builtin_offsetof(LibplaceboContext, deband_radius)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 6.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Deband grain",
        "max": "1024.0",
        "min": "0.0",
        "name": "deband_grain",
        "offset": "__builtin_offsetof(LibplaceboContext, deband_grain)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 0.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Brightness boost",
        "max": "1.0",
        "min": "-1.0",
        "name": "brightness",
        "offset": "__builtin_offsetof(LibplaceboContext, brightness)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 1.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Contrast gain",
        "max": "16.0",
        "min": "0.0",
        "name": "contrast",
        "offset": "__builtin_offsetof(LibplaceboContext, contrast)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 1.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Saturation gain",
        "max": "16.0",
        "min": "0.0",
        "name": "saturation",
        "offset": "__builtin_offsetof(LibplaceboContext, saturation)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 0.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Hue shift",
        "max": "3.14159265358979323846264338327950288",
        "min": "-3.14159265358979323846264338327950288",
        "name": "hue",
        "offset": "__builtin_offsetof(LibplaceboContext, hue)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 1.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Gamma adjustment",
        "max": "16.0",
        "min": "0.0",
        "name": "gamma",
        "offset": "__builtin_offsetof(LibplaceboContext, gamma)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.i64 = 1']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Enable dynamic peak detection for HDR tone-mapping",
        "max": "1",
        "min": "0",
        "name": "peak_detect",
        "offset": "__builtin_offsetof(LibplaceboContext, peakdetect)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.dbl = 100.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Peak detection smoothing period",
        "max": "1000.0",
        "min": "0.0",
        "name": "smoothing_period",
        "offset": "__builtin_offsetof(LibplaceboContext, smoothing)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 1.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Peak detection minimum peak",
        "max": "100.0",
        "min": "0.0",
        "name": "minimum_peak",
        "offset": "__builtin_offsetof(LibplaceboContext, min_peak)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 5.5']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Scene change low threshold",
        "max": "100.0",
        "min": "-1.0",
        "name": "scene_threshold_low",
        "offset": "__builtin_offsetof(LibplaceboContext, scene_low)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 10.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Scene change high threshold",
        "max": "100.0",
        "min": "-1.0",
        "name": "scene_threshold_high",
        "offset": "__builtin_offsetof(LibplaceboContext, scene_high)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 99.995']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Peak detection percentile",
        "max": "100.0",
        "min": "0.0",
        "name": "percentile",
        "offset": "__builtin_offsetof(LibplaceboContext, percentile)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.i64 = GAMUT_MAP_PERCEPTUAL']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Gamut-mapping mode",
        "max": "GAMUT_MAP_COUNT - 1",
        "min": "0",
        "name": "gamut_mode",
        "offset": "__builtin_offsetof(LibplaceboContext, gamut_mode)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = GAMUT_MAP_CLIP']",
        "flags": "((1<<16) | 16)",
        "help": "Hard-clip (RGB per-channel)",
        "max": "0",
        "min": "0",
        "name": "clip",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = GAMUT_MAP_PERCEPTUAL']",
        "flags": "((1<<16) | 16)",
        "help": "Colorimetric soft clipping",
        "max": "0",
        "min": "0",
        "name": "perceptual",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = GAMUT_MAP_RELATIVE']",
        "flags": "((1<<16) | 16)",
        "help": "Relative colorimetric clipping",
        "max": "0",
        "min": "0",
        "name": "relative",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = GAMUT_MAP_SATURATION']",
        "flags": "((1<<16) | 16)",
        "help": "Saturation mapping (RGB -> RGB)",
        "max": "0",
        "min": "0",
        "name": "saturation",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = GAMUT_MAP_ABSOLUTE']",
        "flags": "((1<<16) | 16)",
        "help": "Absolute colorimetric clipping",
        "max": "0",
        "min": "0",
        "name": "absolute",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = GAMUT_MAP_DESATURATE']",
        "flags": "((1<<16) | 16)",
        "help": "Colorimetrically desaturate colors towards white",
        "max": "0",
        "min": "0",
        "name": "desaturate",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = GAMUT_MAP_DARKEN']",
        "flags": "((1<<16) | 16)",
        "help": "Colorimetric clip with bias towards darkening image to fit gamut",
        "max": "0",
        "min": "0",
        "name": "darken",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = GAMUT_MAP_HIGHLIGHT']",
        "flags": "((1<<16) | 16)",
        "help": "Highlight out-of-gamut colors",
        "max": "0",
        "min": "0",
        "name": "warn",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = GAMUT_MAP_LINEAR']",
        "flags": "((1<<16) | 16)",
        "help": "Linearly reduce chromaticity to fit gamut",
        "max": "0",
        "min": "0",
        "name": "linear",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "gamut_mode"
      },
      {
        "default": "['.i64 = TONE_MAP_AUTO']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Tone-mapping algorithm",
        "max": "TONE_MAP_COUNT - 1",
        "min": "0",
        "name": "tonemapping",
        "offset": "__builtin_offsetof(LibplaceboContext, tonemapping)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_AUTO']",
        "flags": "((1<<16) | 16)",
        "help": "Automatic selection",
        "max": "0",
        "min": "0",
        "name": "auto",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_CLIP']",
        "flags": "((1<<16) | 16)",
        "help": "No tone mapping (clip",
        "max": "0",
        "min": "0",
        "name": "clip",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_BT2390']",
        "flags": "((1<<16) | 16)",
        "help": "ITU-R BT.2390 EETF",
        "max": "0",
        "min": "0",
        "name": "bt.2390",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_BT2446A']",
        "flags": "((1<<16) | 16)",
        "help": "ITU-R BT.2446 Method A",
        "max": "0",
        "min": "0",
        "name": "bt.2446a",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_SPLINE']",
        "flags": "((1<<16) | 16)",
        "help": "Single-pivot polynomial spline",
        "max": "0",
        "min": "0",
        "name": "spline",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_REINHARD']",
        "flags": "((1<<16) | 16)",
        "help": "Reinhard",
        "max": "0",
        "min": "0",
        "name": "reinhard",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_MOBIUS']",
        "flags": "((1<<16) | 16)",
        "help": "Mobius",
        "max": "0",
        "min": "0",
        "name": "mobius",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_HABLE']",
        "flags": "((1<<16) | 16)",
        "help": "Filmic tone-mapping (Hable)",
        "max": "0",
        "min": "0",
        "name": "hable",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_GAMMA']",
        "flags": "((1<<16) | 16)",
        "help": "Gamma function with knee",
        "max": "0",
        "min": "0",
        "name": "gamma",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.i64 = TONE_MAP_LINEAR']",
        "flags": "((1<<16) | 16)",
        "help": "Perceptually linear stretch",
        "max": "0",
        "min": "0",
        "name": "linear",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap"
      },
      {
        "default": "['.dbl = 0.0']",
        "flags": ".flags = (((1<<16) | 16) | (1<<15))",
        "help": "Tunable parameter for some tone-mapping functions",
        "max": "100.0",
        "min": "0.0",
        "name": "tonemapping_param",
        "offset": "__builtin_offsetof(LibplaceboContext, tonemapping_param)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Inverse tone mapping (range expansion)",
        "max": "1",
        "min": "0",
        "name": "inverse_tonemapping",
        "offset": "__builtin_offsetof(LibplaceboContext, inverse_tonemapping)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 256']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Tone-mapping LUT size",
        "max": "1024",
        "min": "2",
        "name": "tonemapping_lut_size",
        "offset": "__builtin_offsetof(LibplaceboContext, tonemapping_lut_size)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.dbl = 0.30']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "HDR contrast recovery strength",
        "max": "3.0",
        "min": "0.0",
        "name": "contrast_recovery",
        "offset": "__builtin_offsetof(LibplaceboContext, contrast_recovery)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 3.50']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "HDR contrast recovery smoothness",
        "max": "32.0",
        "min": "1.0",
        "name": "contrast_smoothness",
        "offset": "__builtin_offsetof(LibplaceboContext, contrast_smoothness)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = -1.0']",
        "flags": "(((1<<16) | 16) | (1<<15)) | (1<<17)",
        "help": "Desaturation strength",
        "max": "1.0",
        "min": "-1.0",
        "name": "desaturation_strength",
        "offset": "__builtin_offsetof(LibplaceboContext, desat_str)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = -1.0']",
        "flags": "(((1<<16) | 16) | (1<<15)) | (1<<17)",
        "help": "Desaturation exponent",
        "max": "10.0",
        "min": "-1.0",
        "name": "desaturation_exponent",
        "offset": "__builtin_offsetof(LibplaceboContext, desat_exp)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15)) | (1<<17)",
        "help": "Highlight out-of-gamut colors",
        "max": "1",
        "min": "0",
        "name": "gamut_warning",
        "offset": "__builtin_offsetof(LibplaceboContext, gamut_warning)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15)) | (1<<17)",
        "help": "Enable desaturating colorimetric gamut clipping",
        "max": "1",
        "min": "0",
        "name": "gamut_clipping",
        "offset": "__builtin_offsetof(LibplaceboContext, gamut_clipping)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = PL_INTENT_PERCEPTUAL']",
        "flags": "(((1<<16) | 16) | (1<<15)) | (1<<17)",
        "help": "Rendering intent",
        "max": "3",
        "min": "0",
        "name": "intent",
        "offset": "__builtin_offsetof(LibplaceboContext, intent)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "intent"
      },
      {
        "default": "['.i64 = PL_INTENT_PERCEPTUAL']",
        "flags": "((1<<16) | 16)",
        "help": "Perceptual",
        "max": "0",
        "min": "0",
        "name": "perceptual",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "intent"
      },
      {
        "default": "['.i64 = PL_INTENT_RELATIVE_COLORIMETRIC']",
        "flags": "((1<<16) | 16)",
        "help": "Relative colorimetric",
        "max": "0",
        "min": "0",
        "name": "relative",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "intent"
      },
      {
        "default": "['.i64 = PL_INTENT_ABSOLUTE_COLORIMETRIC']",
        "flags": "((1<<16) | 16)",
        "help": "Absolute colorimetric",
        "max": "0",
        "min": "0",
        "name": "absolute",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "intent"
      },
      {
        "default": "['.i64 = PL_INTENT_SATURATION']",
        "flags": "((1<<16) | 16)",
        "help": "Saturation mapping",
        "max": "0",
        "min": "0",
        "name": "saturation",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "intent"
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15)) | (1<<17)",
        "help": "Tone-mapping mode",
        "max": "4",
        "min": "0",
        "name": "tonemapping_mode",
        "offset": "__builtin_offsetof(LibplaceboContext, tonemapping_mode)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "tonemap_mode"
      },
      {
        "default": "['.i64 = 0']",
        "flags": "((1<<16) | 16)",
        "help": "Automatic selection",
        "max": "0",
        "min": "0",
        "name": "auto",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap_mode"
      },
      {
        "default": "['.i64 = 1']",
        "flags": "((1<<16) | 16)",
        "help": "Per-channel (RGB)",
        "max": "0",
        "min": "0",
        "name": "rgb",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap_mode"
      },
      {
        "default": "['.i64 = 2']",
        "flags": "((1<<16) | 16)",
        "help": "Maximum component",
        "max": "0",
        "min": "0",
        "name": "max",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap_mode"
      },
      {
        "default": "['.i64 = 3']",
        "flags": "((1<<16) | 16)",
        "help": "Hybrid of Luma/RGB",
        "max": "0",
        "min": "0",
        "name": "hybrid",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap_mode"
      },
      {
        "default": "['.i64 = 4']",
        "flags": "((1<<16) | 16)",
        "help": "Luminance",
        "max": "0",
        "min": "0",
        "name": "luma",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "tonemap_mode"
      },
      {
        "default": "['.dbl = 0.04']",
        "flags": "(((1<<16) | 16) | (1<<15)) | (1<<17)",
        "help": "Crosstalk factor for tone-mapping",
        "max": "0.30",
        "min": "0.0",
        "name": "tonemapping_crosstalk",
        "offset": "__builtin_offsetof(LibplaceboContext, crosstalk)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 0.05']",
        "flags": "(((1<<16) | 16) | (1<<15)) | (1<<17)",
        "help": "Tone-mapping overshoot margin",
        "max": "1.0",
        "min": "0.0",
        "name": "overshoot",
        "offset": "__builtin_offsetof(LibplaceboContext, overshoot)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.dbl = 0.20']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Tone-mapping hybrid LMS mixing coefficient",
        "max": "1.00",
        "min": "0.0",
        "name": "hybrid_mix",
        "offset": "__builtin_offsetof(LibplaceboContext, hybrid_mix)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.i64 = PL_DITHER_BLUE_NOISE']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Dither method to use",
        "max": "PL_DITHER_METHOD_COUNT - 1",
        "min": "-1",
        "name": "dithering",
        "offset": "__builtin_offsetof(LibplaceboContext, dithering)",
        "type": "AV_OPT_TYPE_INT",
        "unit": "dither"
      },
      {
        "default": "['.i64 = -1']",
        "flags": "((1<<16) | 16)",
        "help": "Disable dithering",
        "max": "0",
        "min": "0",
        "name": "none",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "dither"
      },
      {
        "default": "['.i64 = PL_DITHER_BLUE_NOISE']",
        "flags": "((1<<16) | 16)",
        "help": "Blue noise",
        "max": "0",
        "min": "0",
        "name": "blue",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "dither"
      },
      {
        "default": "['.i64 = PL_DITHER_ORDERED_LUT']",
        "flags": "((1<<16) | 16)",
        "help": "Ordered LUT",
        "max": "0",
        "min": "0",
        "name": "ordered",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "dither"
      },
      {
        "default": "['.i64 = PL_DITHER_ORDERED_FIXED']",
        "flags": "((1<<16) | 16)",
        "help": "Fixed function ordered",
        "max": "0",
        "min": "0",
        "name": "ordered_fixed",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "dither"
      },
      {
        "default": "['.i64 = PL_DITHER_WHITE_NOISE']",
        "flags": "((1<<16) | 16)",
        "help": "White noise",
        "max": "0",
        "min": "0",
        "name": "white",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "dither"
      },
      {
        "default": "['.i64 = 6']",
        "flags": "((1<<16) | 16)",
        "help": "Dithering LUT size",
        "max": "8",
        "min": "1",
        "name": "dither_lut_size",
        "offset": "__builtin_offsetof(LibplaceboContext, dither_lut_size)",
        "type": "AV_OPT_TYPE_INT",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Enable temporal dithering",
        "max": "1",
        "min": "0",
        "name": "dither_temporal",
        "offset": "__builtin_offsetof(LibplaceboContext, dither_temporal)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Colorblindness adaptation model",
        "max": "PL_CONE_LMS",
        "min": "0",
        "name": "cones",
        "offset": "__builtin_offsetof(LibplaceboContext, cones)",
        "type": "AV_OPT_TYPE_FLAGS",
        "unit": "cone"
      },
      {
        "default": "['.i64 = PL_CONE_L']",
        "flags": "((1<<16) | 16)",
        "help": "L cone",
        "max": "0",
        "min": "0",
        "name": "l",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "cone"
      },
      {
        "default": "['.i64 = PL_CONE_M']",
        "flags": "((1<<16) | 16)",
        "help": "M cone",
        "max": "0",
        "min": "0",
        "name": "m",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "cone"
      },
      {
        "default": "['.i64 = PL_CONE_S']",
        "flags": "((1<<16) | 16)",
        "help": "S cone",
        "max": "0",
        "min": "0",
        "name": "s",
        "offset": "0",
        "type": "AV_OPT_TYPE_CONST",
        "unit": "cone"
      },
      {
        "default": "['.dbl = 0.0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Colorblindness adaptation strength",
        "max": "10.0",
        "min": "0.0",
        "name": "cone-strength",
        "offset": "__builtin_offsetof(LibplaceboContext, cone_str)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": null,
        "flags": ".flags = ((1<<16) | 16)",
        "help": "Path to custom user shader (mpv .hook format)",
        "max": null,
        "min": null,
        "name": "custom_shader_path",
        "offset": "__builtin_offsetof(LibplaceboContext, shader_path)",
        "type": "AV_OPT_TYPE_STRING",
        "unit": null
      },
      {
        "default": null,
        "flags": ".flags = ((1<<16) | 16)",
        "help": "Custom user shader as binary (mpv .hook format)",
        "max": null,
        "min": null,
        "name": "custom_shader_bin",
        "offset": "__builtin_offsetof(LibplaceboContext, shader_bin)",
        "type": "AV_OPT_TYPE_BINARY",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Skip anti-aliasing",
        "max": "1",
        "min": "0",
        "name": "skip_aa",
        "offset": "__builtin_offsetof(LibplaceboContext, skip_aa)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.dbl = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Polar LUT cutoff",
        "max": "1.0",
        "min": "0.0",
        "name": "polar_cutoff",
        "offset": "__builtin_offsetof(LibplaceboContext, polar_cutoff)",
        "type": "AV_OPT_TYPE_FLOAT",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Disable linear scaling",
        "max": "1",
        "min": "0",
        "name": "disable_linear",
        "offset": "__builtin_offsetof(LibplaceboContext, disable_linear)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Disable built-in scalers",
        "max": "1",
        "min": "0",
        "name": "disable_builtin",
        "offset": "__builtin_offsetof(LibplaceboContext, disable_builtin)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15)) | (1<<17)",
        "help": "Deprecated, does nothing",
        "max": "1",
        "min": "0",
        "name": "force_icc_lut",
        "offset": "__builtin_offsetof(LibplaceboContext, force_icc_lut)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Force dithering",
        "max": "1",
        "min": "0",
        "name": "force_dither",
        "offset": "__builtin_offsetof(LibplaceboContext, force_dither)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      },
      {
        "default": "['.i64 = 0']",
        "flags": "(((1<<16) | 16) | (1<<15))",
        "help": "Force-disable FBOs",
        "max": "1",
        "min": "0",
        "name": "disable_fbos",
        "offset": "__builtin_offsetof(LibplaceboContext, disable_fbos)",
        "type": "AV_OPT_TYPE_BOOL",
        "unit": null
      }
    ],
    "output_filter_pads": [
      {
        "name": "default",
        "type": "AVMEDIA_TYPE_VIDEO"
      }
    ],
    "outputs": "(libplacebo_outputs)",
    "preinit": null,
    "priv_class": "&libplacebo_class"
  }
]
