# 0 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
# 21 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
# 1 "./config.h" 1
# 22 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2

# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 392 "/usr/include/features.h" 3 4
# 1 "/usr/include/features-time64.h" 1 3 4
# 20 "/usr/include/features-time64.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 21 "/usr/include/features-time64.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/timesize.h" 1 3 4
# 22 "/usr/include/features-time64.h" 2 3 4
# 393 "/usr/include/features.h" 2 3 4
# 489 "/usr/include/features.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/sys/cdefs.h" 1 3 4
# 561 "/usr/include/aarch64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 562 "/usr/include/aarch64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/long-double.h" 1 3 4
# 563 "/usr/include/aarch64-linux-gnu/sys/cdefs.h" 2 3 4
# 490 "/usr/include/features.h" 2 3 4
# 513 "/usr/include/features.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/gnu/stubs.h" 1 3 4




# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 6 "/usr/include/aarch64-linux-gnu/gnu/stubs.h" 2 3 4


# 1 "/usr/include/aarch64-linux-gnu/gnu/stubs-lp64.h" 1 3 4
# 9 "/usr/include/aarch64-linux-gnu/gnu/stubs.h" 2 3 4
# 514 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 27 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/aarch64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/timesize.h" 1 3 4
# 29 "/usr/include/aarch64-linux-gnu/bits/types.h" 2 3 4



# 31 "/usr/include/aarch64-linux-gnu/bits/types.h" 3 4
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/aarch64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/aarch64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/aarch64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;
typedef long int __suseconds64_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 28 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wchar.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 30 "/usr/include/stdint.h" 2 3 4




# 1 "/usr/include/aarch64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 35 "/usr/include/stdint.h" 2 3 4


# 1 "/usr/include/aarch64-linux-gnu/bits/stdint-uintn.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/stdint-uintn.h" 3 4
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
# 38 "/usr/include/stdint.h" 2 3 4





typedef __int_least8_t int_least8_t;
typedef __int_least16_t int_least16_t;
typedef __int_least32_t int_least32_t;
typedef __int_least64_t int_least64_t;


typedef __uint_least8_t uint_least8_t;
typedef __uint_least16_t uint_least16_t;
typedef __uint_least32_t uint_least32_t;
typedef __uint_least64_t uint_least64_t;





typedef signed char int_fast8_t;

typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
# 71 "/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
# 87 "/usr/include/stdint.h" 3 4
typedef long int intptr_t;


typedef unsigned long int uintptr_t;
# 101 "/usr/include/stdint.h" 3 4
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
# 10 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdint.h" 2 3 4
# 24 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2


# 1 "/usr/include/aarch64-linux-gnu/sys/time.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/sys/time.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/time_t.h" 1 3 4
# 10 "/usr/include/aarch64-linux-gnu/bits/types/time_t.h" 3 4
typedef __time_t time_t;
# 25 "/usr/include/aarch64-linux-gnu/sys/time.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/struct_timeval.h" 1 3 4







struct timeval
{




  __time_t tv_sec;
  __suseconds_t tv_usec;

};
# 26 "/usr/include/aarch64-linux-gnu/sys/time.h" 2 3 4


typedef __suseconds_t suseconds_t;



# 1 "/usr/include/aarch64-linux-gnu/sys/select.h" 1 3 4
# 30 "/usr/include/aarch64-linux-gnu/sys/select.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/select.h" 1 3 4
# 31 "/usr/include/aarch64-linux-gnu/sys/select.h" 2 3 4


# 1 "/usr/include/aarch64-linux-gnu/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/aarch64-linux-gnu/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/aarch64-linux-gnu/sys/select.h" 2 3 4





# 1 "/usr/include/aarch64-linux-gnu/bits/types/struct_timespec.h" 1 3 4





# 1 "/usr/include/aarch64-linux-gnu/bits/endian.h" 1 3 4
# 35 "/usr/include/aarch64-linux-gnu/bits/endian.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/endianness.h" 1 3 4
# 36 "/usr/include/aarch64-linux-gnu/bits/endian.h" 2 3 4
# 7 "/usr/include/aarch64-linux-gnu/bits/types/struct_timespec.h" 2 3 4




struct timespec
{



  __time_t tv_sec;




  __syscall_slong_t tv_nsec;
# 31 "/usr/include/aarch64-linux-gnu/bits/types/struct_timespec.h" 3 4
};
# 40 "/usr/include/aarch64-linux-gnu/sys/select.h" 2 3 4
# 49 "/usr/include/aarch64-linux-gnu/sys/select.h" 3 4
typedef long int __fd_mask;
# 59 "/usr/include/aarch64-linux-gnu/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/aarch64-linux-gnu/sys/select.h" 3 4

# 102 "/usr/include/aarch64-linux-gnu/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 127 "/usr/include/aarch64-linux-gnu/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 153 "/usr/include/aarch64-linux-gnu/sys/select.h" 3 4

# 33 "/usr/include/aarch64-linux-gnu/sys/time.h" 2 3 4


# 52 "/usr/include/aarch64-linux-gnu/sys/time.h" 3 4
struct timezone
  {
    int tz_minuteswest;
    int tz_dsttime;
  };
# 67 "/usr/include/aarch64-linux-gnu/sys/time.h" 3 4
extern int gettimeofday (struct timeval *__restrict __tv,
    void *__restrict __tz) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 86 "/usr/include/aarch64-linux-gnu/sys/time.h" 3 4
extern int settimeofday (const struct timeval *__tv,
    const struct timezone *__tz)
     __attribute__ ((__nothrow__ , __leaf__));





extern int adjtime (const struct timeval *__delta,
      struct timeval *__olddelta) __attribute__ ((__nothrow__ , __leaf__));
# 114 "/usr/include/aarch64-linux-gnu/sys/time.h" 3 4
enum __itimer_which
  {

    ITIMER_REAL = 0,


    ITIMER_VIRTUAL = 1,



    ITIMER_PROF = 2

  };



struct itimerval
  {

    struct timeval it_interval;

    struct timeval it_value;
  };






typedef int __itimer_which_t;





extern int getitimer (__itimer_which_t __which,
        struct itimerval *__value) __attribute__ ((__nothrow__ , __leaf__));




extern int setitimer (__itimer_which_t __which,
        const struct itimerval *__restrict __new,
        struct itimerval *__restrict __old) __attribute__ ((__nothrow__ , __leaf__));




extern int utimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 189 "/usr/include/aarch64-linux-gnu/sys/time.h" 3 4
extern int lutimes (const char *__file, const struct timeval __tvp[2])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int futimes (int __fd, const struct timeval __tvp[2]) __attribute__ ((__nothrow__ , __leaf__));
# 258 "/usr/include/aarch64-linux-gnu/sys/time.h" 3 4

# 27 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2
# 1 "/usr/include/aarch64-linux-gnu/sys/resource.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/sys/resource.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/resource.h" 1 3 4
# 31 "/usr/include/aarch64-linux-gnu/bits/resource.h" 3 4
enum __rlimit_resource
{

  RLIMIT_CPU = 0,



  RLIMIT_FSIZE = 1,



  RLIMIT_DATA = 2,



  RLIMIT_STACK = 3,



  RLIMIT_CORE = 4,






  __RLIMIT_RSS = 5,



  RLIMIT_NOFILE = 7,
  __RLIMIT_OFILE = RLIMIT_NOFILE,




  RLIMIT_AS = 9,



  __RLIMIT_NPROC = 6,



  __RLIMIT_MEMLOCK = 8,



  __RLIMIT_LOCKS = 10,



  __RLIMIT_SIGPENDING = 11,



  __RLIMIT_MSGQUEUE = 12,





  __RLIMIT_NICE = 13,




  __RLIMIT_RTPRIO = 14,





  __RLIMIT_RTTIME = 15,


  __RLIMIT_NLIMITS = 16,
  __RLIM_NLIMITS = __RLIMIT_NLIMITS


};
# 131 "/usr/include/aarch64-linux-gnu/bits/resource.h" 3 4
typedef __rlim_t rlim_t;







struct rlimit
  {

    rlim_t rlim_cur;

    rlim_t rlim_max;
  };
# 158 "/usr/include/aarch64-linux-gnu/bits/resource.h" 3 4
enum __rusage_who
{

  RUSAGE_SELF = 0,



  RUSAGE_CHILDREN = -1
# 176 "/usr/include/aarch64-linux-gnu/bits/resource.h" 3 4
};


# 1 "/usr/include/aarch64-linux-gnu/bits/types/struct_rusage.h" 1 3 4
# 33 "/usr/include/aarch64-linux-gnu/bits/types/struct_rusage.h" 3 4
struct rusage
  {

    struct timeval ru_utime;

    struct timeval ru_stime;

    __extension__ union
      {
 long int ru_maxrss;
 __syscall_slong_t __ru_maxrss_word;
      };


    __extension__ union
      {
 long int ru_ixrss;
 __syscall_slong_t __ru_ixrss_word;
      };

    __extension__ union
      {
 long int ru_idrss;
 __syscall_slong_t __ru_idrss_word;
      };

    __extension__ union
      {
 long int ru_isrss;
  __syscall_slong_t __ru_isrss_word;
      };


    __extension__ union
      {
 long int ru_minflt;
 __syscall_slong_t __ru_minflt_word;
      };

    __extension__ union
      {
 long int ru_majflt;
 __syscall_slong_t __ru_majflt_word;
      };

    __extension__ union
      {
 long int ru_nswap;
 __syscall_slong_t __ru_nswap_word;
      };


    __extension__ union
      {
 long int ru_inblock;
 __syscall_slong_t __ru_inblock_word;
      };

    __extension__ union
      {
 long int ru_oublock;
 __syscall_slong_t __ru_oublock_word;
      };

    __extension__ union
      {
 long int ru_msgsnd;
 __syscall_slong_t __ru_msgsnd_word;
      };

    __extension__ union
      {
 long int ru_msgrcv;
 __syscall_slong_t __ru_msgrcv_word;
      };

    __extension__ union
      {
 long int ru_nsignals;
 __syscall_slong_t __ru_nsignals_word;
      };



    __extension__ union
      {
 long int ru_nvcsw;
 __syscall_slong_t __ru_nvcsw_word;
      };


    __extension__ union
      {
 long int ru_nivcsw;
 __syscall_slong_t __ru_nivcsw_word;
      };
  };
# 180 "/usr/include/aarch64-linux-gnu/bits/resource.h" 2 3 4







enum __priority_which
{
  PRIO_PROCESS = 0,

  PRIO_PGRP = 1,

  PRIO_USER = 2

};



# 223 "/usr/include/aarch64-linux-gnu/bits/resource.h" 3 4

# 25 "/usr/include/aarch64-linux-gnu/sys/resource.h" 2 3 4


typedef __id_t id_t;




# 42 "/usr/include/aarch64-linux-gnu/sys/resource.h" 3 4
typedef int __rlimit_resource_t;
typedef int __rusage_who_t;
typedef int __priority_which_t;





extern int getrlimit (__rlimit_resource_t __resource,
        struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 70 "/usr/include/aarch64-linux-gnu/sys/resource.h" 3 4
extern int setrlimit (__rlimit_resource_t __resource,
        const struct rlimit *__rlimits) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 89 "/usr/include/aarch64-linux-gnu/sys/resource.h" 3 4
extern int getrusage (__rusage_who_t __who, struct rusage *__usage) __attribute__ ((__nothrow__ , __leaf__));
# 105 "/usr/include/aarch64-linux-gnu/sys/resource.h" 3 4
extern int getpriority (__priority_which_t __which, id_t __who) __attribute__ ((__nothrow__ , __leaf__));



extern int setpriority (__priority_which_t __which, id_t __who, int __prio)
     __attribute__ ((__nothrow__ , __leaf__));


# 28 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2


# 1 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 1
# 24 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdatomic.h" 1 3 4
# 29 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdatomic.h" 3 4
typedef enum
  {
    memory_order_relaxed = 0,
    memory_order_consume = 1,
    memory_order_acquire = 2,
    memory_order_release = 3,
    memory_order_acq_rel = 4,
    memory_order_seq_cst = 5
  } memory_order;


typedef _Atomic _Bool atomic_bool;
typedef _Atomic char atomic_char;
typedef _Atomic signed char atomic_schar;
typedef _Atomic unsigned char atomic_uchar;
typedef _Atomic short atomic_short;
typedef _Atomic unsigned short atomic_ushort;
typedef _Atomic int atomic_int;
typedef _Atomic unsigned int atomic_uint;
typedef _Atomic long atomic_long;
typedef _Atomic unsigned long atomic_ulong;
typedef _Atomic long long atomic_llong;
typedef _Atomic unsigned long long atomic_ullong;
typedef _Atomic short unsigned int atomic_char16_t;
typedef _Atomic unsigned int atomic_char32_t;
typedef _Atomic unsigned int atomic_wchar_t;
typedef _Atomic signed char atomic_int_least8_t;
typedef _Atomic unsigned char atomic_uint_least8_t;
typedef _Atomic short int atomic_int_least16_t;
typedef _Atomic short unsigned int atomic_uint_least16_t;
typedef _Atomic int atomic_int_least32_t;
typedef _Atomic unsigned int atomic_uint_least32_t;
typedef _Atomic long int atomic_int_least64_t;
typedef _Atomic long unsigned int atomic_uint_least64_t;
typedef _Atomic signed char atomic_int_fast8_t;
typedef _Atomic unsigned char atomic_uint_fast8_t;
typedef _Atomic long int atomic_int_fast16_t;
typedef _Atomic long unsigned int atomic_uint_fast16_t;
typedef _Atomic long int atomic_int_fast32_t;
typedef _Atomic long unsigned int atomic_uint_fast32_t;
typedef _Atomic long int atomic_int_fast64_t;
typedef _Atomic long unsigned int atomic_uint_fast64_t;
typedef _Atomic long int atomic_intptr_t;
typedef _Atomic long unsigned int atomic_uintptr_t;
typedef _Atomic long unsigned int atomic_size_t;
typedef _Atomic long int atomic_ptrdiff_t;
typedef _Atomic long int atomic_intmax_t;
typedef _Atomic long unsigned int atomic_uintmax_t;
# 92 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdatomic.h" 3 4
extern void atomic_thread_fence (memory_order);

extern void atomic_signal_fence (memory_order);
# 218 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdatomic.h" 3 4
typedef _Atomic struct
{

  _Bool __val;



} atomic_flag;




extern _Bool atomic_flag_test_and_set (volatile atomic_flag *);


extern _Bool atomic_flag_test_and_set_explicit (volatile atomic_flag *,
      memory_order);



extern void atomic_flag_clear (volatile atomic_flag *);

extern void atomic_flag_clear_explicit (volatile atomic_flag *, memory_order);
# 25 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2

# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 214 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 37 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/include/aarch64-linux-gnu/bits/types/__fpos_t.h" 1 3 4




# 1 "/usr/include/aarch64-linux-gnu/bits/types/__mbstate_t.h" 1 3 4
# 13 "/usr/include/aarch64-linux-gnu/bits/types/__mbstate_t.h" 3 4
typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
# 6 "/usr/include/aarch64-linux-gnu/bits/types/__fpos_t.h" 2 3 4




typedef struct _G_fpos_t
{
  __off_t __pos;
  __mbstate_t __state;
} __fpos_t;
# 40 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/__fpos64_t.h" 1 3 4
# 10 "/usr/include/aarch64-linux-gnu/bits/types/__fpos64_t.h" 3 4
typedef struct _G_fpos64_t
{
  __off64_t __pos;
  __mbstate_t __state;
} __fpos64_t;
# 41 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/__FILE.h" 1 3 4



struct _IO_FILE;
typedef struct _IO_FILE __FILE;
# 42 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/FILE.h" 1 3 4



struct _IO_FILE;


typedef struct _IO_FILE FILE;
# 43 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/struct_FILE.h" 1 3 4
# 35 "/usr/include/aarch64-linux-gnu/bits/types/struct_FILE.h" 3 4
struct _IO_FILE;
struct _IO_marker;
struct _IO_codecvt;
struct _IO_wide_data;




typedef void _IO_lock_t;





struct _IO_FILE
{
  int _flags;


  char *_IO_read_ptr;
  char *_IO_read_end;
  char *_IO_read_base;
  char *_IO_write_base;
  char *_IO_write_ptr;
  char *_IO_write_end;
  char *_IO_buf_base;
  char *_IO_buf_end;


  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;
  int _flags2;
  __off_t _old_offset;


  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];

  _IO_lock_t *_lock;







  __off64_t _offset;

  struct _IO_codecvt *_codecvt;
  struct _IO_wide_data *_wide_data;
  struct _IO_FILE *_freeres_list;
  void *_freeres_buf;
  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
};
# 44 "/usr/include/stdio.h" 2 3 4
# 52 "/usr/include/stdio.h" 3 4
typedef __gnuc_va_list va_list;
# 63 "/usr/include/stdio.h" 3 4
typedef __off_t off_t;
# 77 "/usr/include/stdio.h" 3 4
typedef __ssize_t ssize_t;






typedef __fpos_t fpos_t;
# 133 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/stdio_lim.h" 1 3 4
# 134 "/usr/include/stdio.h" 2 3 4
# 143 "/usr/include/stdio.h" 3 4
extern FILE *stdin;
extern FILE *stdout;
extern FILE *stderr;






extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));



extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));
# 178 "/usr/include/stdio.h" 3 4
extern int fclose (FILE *__stream);
# 188 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile (void)
  __attribute__ ((__malloc__)) __attribute__ ((__malloc__ (fclose, 1))) ;
# 205 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char[20]) __attribute__ ((__nothrow__ , __leaf__)) ;




extern char *tmpnam_r (char __s[20]) __attribute__ ((__nothrow__ , __leaf__)) ;
# 222 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
   __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__malloc__ (__builtin_free, 1)));






extern int fflush (FILE *__stream);
# 239 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 258 "/usr/include/stdio.h" 3 4
extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes)
  __attribute__ ((__malloc__)) __attribute__ ((__malloc__ (fclose, 1))) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 293 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__malloc__)) __attribute__ ((__malloc__ (fclose, 1))) ;
# 308 "/usr/include/stdio.h" 3 4
extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__malloc__ (fclose, 1))) ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__malloc__)) __attribute__ ((__malloc__ (fclose, 1))) ;
# 328 "/usr/include/stdio.h" 3 4
extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));




extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));







extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));



extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));
# 403 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));







extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));





# 1 "/usr/include/aarch64-linux-gnu/bits/floatn.h" 1 3 4
# 23 "/usr/include/aarch64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/long-double.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/floatn.h" 2 3 4
# 95 "/usr/include/aarch64-linux-gnu/bits/floatn.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/floatn-common.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/floatn-common.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/long-double.h" 1 3 4
# 25 "/usr/include/aarch64-linux-gnu/bits/floatn-common.h" 2 3 4
# 96 "/usr/include/aarch64-linux-gnu/bits/floatn.h" 2 3 4
# 431 "/usr/include/stdio.h" 2 3 4



extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 459 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));





extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 513 "/usr/include/stdio.h" 3 4
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);






extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 538 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);
# 549 "/usr/include/stdio.h" 3 4
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);
# 565 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);







extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     __attribute__ ((__access__ (__write_only__, 1, 2)));
# 632 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
                             size_t *__restrict __n, int __delimiter,
                             FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
                           size_t *__restrict __n, int __delimiter,
                           FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
                          size_t *__restrict __n,
                          FILE *__restrict __stream) ;







extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
# 702 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);







extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);
# 736 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 760 "/usr/include/stdio.h" 3 4
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 786 "/usr/include/stdio.h" 3 4
extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;



extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;







extern void perror (const char *__s);




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
# 823 "/usr/include/stdio.h" 3 4
extern int pclose (FILE *__stream);





extern FILE *popen (const char *__command, const char *__modes)
  __attribute__ ((__malloc__)) __attribute__ ((__malloc__ (pclose, 1))) ;






extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__access__ (__write_only__, 1)));
# 867 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 885 "/usr/include/stdio.h" 3 4
extern int __uflow (FILE *);
extern int __overflow (FILE *, int);
# 909 "/usr/include/stdio.h" 3 4

# 27 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2
# 1 "/usr/include/signal.h" 1 3 4
# 27 "/usr/include/signal.h" 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/signum-generic.h" 1 3 4
# 76 "/usr/include/aarch64-linux-gnu/bits/signum-generic.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/signum-arch.h" 1 3 4
# 77 "/usr/include/aarch64-linux-gnu/bits/signum-generic.h" 2 3 4
# 31 "/usr/include/signal.h" 2 3 4

# 1 "/usr/include/aarch64-linux-gnu/bits/types/sig_atomic_t.h" 1 3 4







typedef __sig_atomic_t sig_atomic_t;
# 33 "/usr/include/signal.h" 2 3 4







typedef __pid_t pid_t;





typedef __uid_t uid_t;
# 57 "/usr/include/signal.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/siginfo_t.h" 1 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 5 "/usr/include/aarch64-linux-gnu/bits/types/siginfo_t.h" 2 3 4

# 1 "/usr/include/aarch64-linux-gnu/bits/types/__sigval_t.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/types/__sigval_t.h" 3 4
union sigval
{
  int sival_int;
  void *sival_ptr;
};

typedef union sigval __sigval_t;
# 7 "/usr/include/aarch64-linux-gnu/bits/types/siginfo_t.h" 2 3 4
# 16 "/usr/include/aarch64-linux-gnu/bits/types/siginfo_t.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/siginfo-arch.h" 1 3 4
# 17 "/usr/include/aarch64-linux-gnu/bits/types/siginfo_t.h" 2 3 4
# 36 "/usr/include/aarch64-linux-gnu/bits/types/siginfo_t.h" 3 4
typedef struct
  {
    int si_signo;

    int si_errno;

    int si_code;





    int __pad0;


    union
      {
 int _pad[((128 / sizeof (int)) - 4)];


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
   } _kill;


 struct
   {
     int si_tid;
     int si_overrun;
     __sigval_t si_sigval;
   } _timer;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     __sigval_t si_sigval;
   } _rt;


 struct
   {
     __pid_t si_pid;
     __uid_t si_uid;
     int si_status;
     __clock_t si_utime;
     __clock_t si_stime;
   } _sigchld;


 struct
   {
     void *si_addr;
    
     short int si_addr_lsb;
     union
       {

  struct
    {
      void *_lower;
      void *_upper;
    } _addr_bnd;

  __uint32_t _pkey;
       } _bounds;
   } _sigfault;


 struct
   {
     long int si_band;
     int si_fd;
   } _sigpoll;



 struct
   {
     void *_call_addr;
     int _syscall;
     unsigned int _arch;
   } _sigsys;

      } _sifields;
  } siginfo_t ;
# 58 "/usr/include/signal.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/siginfo-consts.h" 1 3 4
# 35 "/usr/include/aarch64-linux-gnu/bits/siginfo-consts.h" 3 4
enum
{
  SI_ASYNCNL = -60,
  SI_DETHREAD = -7,

  SI_TKILL,
  SI_SIGIO,

  SI_ASYNCIO,
  SI_MESGQ,
  SI_TIMER,





  SI_QUEUE,
  SI_USER,
  SI_KERNEL = 0x80
# 66 "/usr/include/aarch64-linux-gnu/bits/siginfo-consts.h" 3 4
};




enum
{
  ILL_ILLOPC = 1,

  ILL_ILLOPN,

  ILL_ILLADR,

  ILL_ILLTRP,

  ILL_PRVOPC,

  ILL_PRVREG,

  ILL_COPROC,

  ILL_BADSTK,

  ILL_BADIADDR

};


enum
{
  FPE_INTDIV = 1,

  FPE_INTOVF,

  FPE_FLTDIV,

  FPE_FLTOVF,

  FPE_FLTUND,

  FPE_FLTRES,

  FPE_FLTINV,

  FPE_FLTSUB,

  FPE_FLTUNK = 14,

  FPE_CONDTRAP

};


enum
{
  SEGV_MAPERR = 1,

  SEGV_ACCERR,

  SEGV_BNDERR,

  SEGV_PKUERR,

  SEGV_ACCADI,

  SEGV_ADIDERR,

  SEGV_ADIPERR,

  SEGV_MTEAERR,

  SEGV_MTESERR

};


enum
{
  BUS_ADRALN = 1,

  BUS_ADRERR,

  BUS_OBJERR,

  BUS_MCEERR_AR,

  BUS_MCEERR_AO

};
# 176 "/usr/include/aarch64-linux-gnu/bits/siginfo-consts.h" 3 4
enum
{
  CLD_EXITED = 1,

  CLD_KILLED,

  CLD_DUMPED,

  CLD_TRAPPED,

  CLD_STOPPED,

  CLD_CONTINUED

};


enum
{
  POLL_IN = 1,

  POLL_OUT,

  POLL_MSG,

  POLL_ERR,

  POLL_PRI,

  POLL_HUP

};
# 59 "/usr/include/signal.h" 2 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/types/sigval_t.h" 1 3 4
# 16 "/usr/include/aarch64-linux-gnu/bits/types/sigval_t.h" 3 4
typedef __sigval_t sigval_t;
# 63 "/usr/include/signal.h" 2 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/types/sigevent_t.h" 1 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 5 "/usr/include/aarch64-linux-gnu/bits/types/sigevent_t.h" 2 3 4
# 17 "/usr/include/aarch64-linux-gnu/bits/types/sigevent_t.h" 3 4
typedef union pthread_attr_t pthread_attr_t;




typedef struct sigevent
  {
    __sigval_t sigev_value;
    int sigev_signo;
    int sigev_notify;

    union
      {
 int _pad[((64 / sizeof (int)) - 4)];



 __pid_t _tid;

 struct
   {
     void (*_function) (__sigval_t);
     pthread_attr_t *_attribute;
   } _sigev_thread;
      } _sigev_un;
  } sigevent_t;
# 67 "/usr/include/signal.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/sigevent-consts.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/sigevent-consts.h" 3 4
enum
{
  SIGEV_SIGNAL = 0,

  SIGEV_NONE,

  SIGEV_THREAD,


  SIGEV_THREAD_ID = 4


};
# 68 "/usr/include/signal.h" 2 3 4




typedef void (*__sighandler_t) (int);




extern __sighandler_t __sysv_signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__ , __leaf__));
# 88 "/usr/include/signal.h" 3 4
extern __sighandler_t signal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__ , __leaf__));
# 112 "/usr/include/signal.h" 3 4
extern int kill (__pid_t __pid, int __sig) __attribute__ ((__nothrow__ , __leaf__));






extern int killpg (__pid_t __pgrp, int __sig) __attribute__ ((__nothrow__ , __leaf__));



extern int raise (int __sig) __attribute__ ((__nothrow__ , __leaf__));



extern __sighandler_t ssignal (int __sig, __sighandler_t __handler)
     __attribute__ ((__nothrow__ , __leaf__));
extern int gsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));




extern void psignal (int __sig, const char *__s);


extern void psiginfo (const siginfo_t *__pinfo, const char *__s);
# 173 "/usr/include/signal.h" 3 4
extern int sigblock (int __mask) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));


extern int sigsetmask (int __mask) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));


extern int siggetmask (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
# 193 "/usr/include/signal.h" 3 4
typedef __sighandler_t sig_t;





extern int sigemptyset (sigset_t *__set) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int sigfillset (sigset_t *__set) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int sigaddset (sigset_t *__set, int __signo) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int sigdelset (sigset_t *__set, int __signo) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int sigismember (const sigset_t *__set, int __signo)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 229 "/usr/include/signal.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/sigaction.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/sigaction.h" 3 4
struct sigaction
  {


    union
      {

 __sighandler_t sa_handler;

 void (*sa_sigaction) (int, siginfo_t *, void *);
      }
    __sigaction_handler;







    __sigset_t sa_mask;


    int sa_flags;


    void (*sa_restorer) (void);
  };
# 230 "/usr/include/signal.h" 2 3 4


extern int sigprocmask (int __how, const sigset_t *__restrict __set,
   sigset_t *__restrict __oset) __attribute__ ((__nothrow__ , __leaf__));






extern int sigsuspend (const sigset_t *__set) __attribute__ ((__nonnull__ (1)));


extern int sigaction (int __sig, const struct sigaction *__restrict __act,
        struct sigaction *__restrict __oact) __attribute__ ((__nothrow__ , __leaf__));


extern int sigpending (sigset_t *__set) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int sigwait (const sigset_t *__restrict __set, int *__restrict __sig)
     __attribute__ ((__nonnull__ (1, 2)));







extern int sigwaitinfo (const sigset_t *__restrict __set,
   siginfo_t *__restrict __info) __attribute__ ((__nonnull__ (1)));







extern int sigtimedwait (const sigset_t *__restrict __set,
    siginfo_t *__restrict __info,
    const struct timespec *__restrict __timeout)
     __attribute__ ((__nonnull__ (1)));
# 292 "/usr/include/signal.h" 3 4
extern int sigqueue (__pid_t __pid, int __sig, const union sigval __val)
     __attribute__ ((__nothrow__ , __leaf__));







# 1 "/usr/include/aarch64-linux-gnu/bits/sigcontext.h" 1 3 4
# 30 "/usr/include/aarch64-linux-gnu/bits/sigcontext.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/asm/sigcontext.h" 1 3 4
# 22 "/usr/include/aarch64-linux-gnu/asm/sigcontext.h" 3 4
# 1 "/usr/include/linux/types.h" 1 3 4




# 1 "/usr/include/aarch64-linux-gnu/asm/types.h" 1 3 4
# 1 "/usr/include/asm-generic/types.h" 1 3 4






# 1 "/usr/include/asm-generic/int-ll64.h" 1 3 4
# 12 "/usr/include/asm-generic/int-ll64.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/asm/bitsperlong.h" 1 3 4
# 22 "/usr/include/aarch64-linux-gnu/asm/bitsperlong.h" 3 4
# 1 "/usr/include/asm-generic/bitsperlong.h" 1 3 4
# 23 "/usr/include/aarch64-linux-gnu/asm/bitsperlong.h" 2 3 4
# 13 "/usr/include/asm-generic/int-ll64.h" 2 3 4







typedef __signed__ char __s8;
typedef unsigned char __u8;

typedef __signed__ short __s16;
typedef unsigned short __u16;

typedef __signed__ int __s32;
typedef unsigned int __u32;


__extension__ typedef __signed__ long long __s64;
__extension__ typedef unsigned long long __u64;
# 8 "/usr/include/asm-generic/types.h" 2 3 4
# 2 "/usr/include/aarch64-linux-gnu/asm/types.h" 2 3 4
# 6 "/usr/include/linux/types.h" 2 3 4



# 1 "/usr/include/linux/posix_types.h" 1 3 4




# 1 "/usr/include/linux/stddef.h" 1 3 4
# 6 "/usr/include/linux/posix_types.h" 2 3 4
# 25 "/usr/include/linux/posix_types.h" 3 4
typedef struct {
 unsigned long fds_bits[1024 / (8 * sizeof(long))];
} __kernel_fd_set;


typedef void (*__kernel_sighandler_t)(int);


typedef int __kernel_key_t;
typedef int __kernel_mqd_t;

# 1 "/usr/include/aarch64-linux-gnu/asm/posix_types.h" 1 3 4




typedef unsigned short __kernel_old_uid_t;
typedef unsigned short __kernel_old_gid_t;


# 1 "/usr/include/asm-generic/posix_types.h" 1 3 4
# 15 "/usr/include/asm-generic/posix_types.h" 3 4
typedef long __kernel_long_t;
typedef unsigned long __kernel_ulong_t;



typedef __kernel_ulong_t __kernel_ino_t;



typedef unsigned int __kernel_mode_t;



typedef int __kernel_pid_t;



typedef int __kernel_ipc_pid_t;



typedef unsigned int __kernel_uid_t;
typedef unsigned int __kernel_gid_t;



typedef __kernel_long_t __kernel_suseconds_t;



typedef int __kernel_daddr_t;



typedef unsigned int __kernel_uid32_t;
typedef unsigned int __kernel_gid32_t;
# 59 "/usr/include/asm-generic/posix_types.h" 3 4
typedef unsigned int __kernel_old_dev_t;
# 72 "/usr/include/asm-generic/posix_types.h" 3 4
typedef __kernel_ulong_t __kernel_size_t;
typedef __kernel_long_t __kernel_ssize_t;
typedef __kernel_long_t __kernel_ptrdiff_t;




typedef struct {
 int val[2];
} __kernel_fsid_t;





typedef __kernel_long_t __kernel_off_t;
typedef long long __kernel_loff_t;
typedef __kernel_long_t __kernel_old_time_t;
typedef __kernel_long_t __kernel_time_t;
typedef long long __kernel_time64_t;
typedef __kernel_long_t __kernel_clock_t;
typedef int __kernel_timer_t;
typedef int __kernel_clockid_t;
typedef char * __kernel_caddr_t;
typedef unsigned short __kernel_uid16_t;
typedef unsigned short __kernel_gid16_t;
# 10 "/usr/include/aarch64-linux-gnu/asm/posix_types.h" 2 3 4
# 37 "/usr/include/linux/posix_types.h" 2 3 4
# 10 "/usr/include/linux/types.h" 2 3 4
# 27 "/usr/include/linux/types.h" 3 4
typedef __u16 __le16;
typedef __u16 __be16;
typedef __u32 __le32;
typedef __u32 __be32;
typedef __u64 __le64;
typedef __u64 __be64;

typedef __u16 __sum16;
typedef __u32 __wsum;
# 50 "/usr/include/linux/types.h" 3 4
typedef unsigned __poll_t;
# 23 "/usr/include/aarch64-linux-gnu/asm/sigcontext.h" 2 3 4





struct sigcontext {
 __u64 fault_address;

 __u64 regs[31];
 __u64 sp;
 __u64 pc;
 __u64 pstate;

 __u8 __reserved[4096] __attribute__((__aligned__(16)));
};
# 66 "/usr/include/aarch64-linux-gnu/asm/sigcontext.h" 3 4
struct _aarch64_ctx {
 __u32 magic;
 __u32 size;
};



struct fpsimd_context {
 struct _aarch64_ctx head;
 __u32 fpsr;
 __u32 fpcr;
 __uint128_t vregs[32];
};
# 92 "/usr/include/aarch64-linux-gnu/asm/sigcontext.h" 3 4
struct esr_context {
 struct _aarch64_ctx head;
 __u64 esr;
};
# 125 "/usr/include/aarch64-linux-gnu/asm/sigcontext.h" 3 4
struct extra_context {
 struct _aarch64_ctx head;
 __u64 datap;
 __u32 size;
 __u32 __reserved[3];
};



struct sve_context {
 struct _aarch64_ctx head;
 __u16 vl;
 __u16 flags;
 __u16 __reserved[2];
};





struct za_context {
 struct _aarch64_ctx head;
 __u16 vl;
 __u16 __reserved[3];
};



# 1 "/usr/include/aarch64-linux-gnu/asm/sve_context.h" 1 3 4
# 154 "/usr/include/aarch64-linux-gnu/asm/sigcontext.h" 2 3 4
# 31 "/usr/include/aarch64-linux-gnu/bits/sigcontext.h" 2 3 4



# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 35 "/usr/include/aarch64-linux-gnu/bits/sigcontext.h" 2 3 4
# 302 "/usr/include/signal.h" 2 3 4


extern int sigreturn (struct sigcontext *__scp) __attribute__ ((__nothrow__ , __leaf__));






# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 312 "/usr/include/signal.h" 2 3 4

# 1 "/usr/include/aarch64-linux-gnu/bits/types/stack_t.h" 1 3 4
# 23 "/usr/include/aarch64-linux-gnu/bits/types/stack_t.h" 3 4
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/types/stack_t.h" 2 3 4


typedef struct
  {
    void *ss_sp;
    int ss_flags;
    size_t ss_size;
  } stack_t;
# 314 "/usr/include/signal.h" 2 3 4


# 1 "/usr/include/aarch64-linux-gnu/sys/ucontext.h" 1 3 4
# 36 "/usr/include/aarch64-linux-gnu/sys/ucontext.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/sys/procfs.h" 1 3 4
# 34 "/usr/include/aarch64-linux-gnu/sys/procfs.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/sys/types.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/sys/types.h" 3 4






typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;


typedef __loff_t loff_t;




typedef __ino_t ino_t;
# 59 "/usr/include/aarch64-linux-gnu/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;
# 114 "/usr/include/aarch64-linux-gnu/sys/types.h" 3 4
typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/usr/include/aarch64-linux-gnu/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 127 "/usr/include/aarch64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/aarch64-linux-gnu/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 129 "/usr/include/aarch64-linux-gnu/sys/types.h" 2 3 4

# 1 "/usr/include/aarch64-linux-gnu/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 131 "/usr/include/aarch64-linux-gnu/sys/types.h" 2 3 4
# 144 "/usr/include/aarch64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 145 "/usr/include/aarch64-linux-gnu/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;







typedef __uint8_t u_int8_t;
typedef __uint16_t u_int16_t;
typedef __uint32_t u_int32_t;
typedef __uint64_t u_int64_t;


typedef int register_t __attribute__ ((__mode__ (__word__)));
# 176 "/usr/include/aarch64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 35 "/usr/include/endian.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/byteswap.h" 1 3 4
# 33 "/usr/include/aarch64-linux-gnu/bits/byteswap.h" 3 4
static __inline __uint16_t
__bswap_16 (__uint16_t __bsx)
{

  return __builtin_bswap16 (__bsx);



}






static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{

  return __builtin_bswap32 (__bsx);



}
# 69 "/usr/include/aarch64-linux-gnu/bits/byteswap.h" 3 4
__extension__ static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{

  return __builtin_bswap64 (__bsx);



}
# 36 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/aarch64-linux-gnu/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 37 "/usr/include/endian.h" 2 3 4
# 177 "/usr/include/aarch64-linux-gnu/sys/types.h" 2 3 4
# 185 "/usr/include/aarch64-linux-gnu/sys/types.h" 3 4
typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 227 "/usr/include/aarch64-linux-gnu/sys/types.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/aarch64-linux-gnu/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/thread-shared-types.h" 1 3 4
# 44 "/usr/include/aarch64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/pthreadtypes-arch.h" 1 3 4
# 45 "/usr/include/aarch64-linux-gnu/bits/thread-shared-types.h" 2 3 4

# 1 "/usr/include/aarch64-linux-gnu/bits/atomic_wide_counter.h" 1 3 4
# 25 "/usr/include/aarch64-linux-gnu/bits/atomic_wide_counter.h" 3 4
typedef union
{
  __extension__ unsigned long long int __value64;
  struct
  {
    unsigned int __low;
    unsigned int __high;
  } __value32;
} __atomic_wide_counter;
# 47 "/usr/include/aarch64-linux-gnu/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;

typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;
# 76 "/usr/include/aarch64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/struct_mutex.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/struct_mutex.h" 3 4
struct __pthread_mutex_s
{
  int __lock ;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;
# 58 "/usr/include/aarch64-linux-gnu/bits/struct_mutex.h" 3 4
  int __kind;




  int __spins;
  __pthread_list_t __list;
# 74 "/usr/include/aarch64-linux-gnu/bits/struct_mutex.h" 3 4
};
# 77 "/usr/include/aarch64-linux-gnu/bits/thread-shared-types.h" 2 3 4
# 89 "/usr/include/aarch64-linux-gnu/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/struct_rwlock.h" 1 3 4
# 23 "/usr/include/aarch64-linux-gnu/bits/struct_rwlock.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;
  int __cur_writer;
  int __shared;
  unsigned long int __pad1;
  unsigned long int __pad2;
  unsigned int __flags;
};
# 90 "/usr/include/aarch64-linux-gnu/bits/thread-shared-types.h" 2 3 4




struct __pthread_cond_s
{
  __atomic_wide_counter __wseq;
  __atomic_wide_counter __g1_start;
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};

typedef unsigned int __tss_t;
typedef unsigned long int __thrd_t;

typedef struct
{
  int __data ;
} __once_flag;
# 24 "/usr/include/aarch64-linux-gnu/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[8];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[8];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[64];
  long int __align;
};






typedef union
{
  struct __pthread_mutex_s __data;
  char __size[48];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[8];
  int __align;
} pthread_barrierattr_t;
# 228 "/usr/include/aarch64-linux-gnu/sys/types.h" 2 3 4



# 35 "/usr/include/aarch64-linux-gnu/sys/procfs.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/sys/user.h" 1 3 4
# 22 "/usr/include/aarch64-linux-gnu/sys/user.h" 3 4
struct user_regs_struct
{
  unsigned long long regs[31];
  unsigned long long sp;
  unsigned long long pc;
  unsigned long long pstate;
};

struct user_fpsimd_struct
{
  __uint128_t vregs[32];
  unsigned int fpsr;
  unsigned int fpcr;
};
# 36 "/usr/include/aarch64-linux-gnu/sys/procfs.h" 2 3 4




# 1 "/usr/include/aarch64-linux-gnu/bits/procfs.h" 1 3 4
# 25 "/usr/include/aarch64-linux-gnu/bits/procfs.h" 3 4
typedef __uint64_t elf_greg_t;






typedef elf_greg_t elf_gregset_t[(sizeof (struct user_regs_struct) / sizeof (elf_greg_t))];


typedef struct user_fpsimd_struct elf_fpregset_t;
# 41 "/usr/include/aarch64-linux-gnu/sys/procfs.h" 2 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/procfs-id.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/procfs-id.h" 3 4
typedef unsigned int __pr_uid_t;
typedef unsigned int __pr_gid_t;
# 45 "/usr/include/aarch64-linux-gnu/sys/procfs.h" 2 3 4




struct elf_siginfo
  {
    int si_signo;
    int si_code;
    int si_errno;
  };
# 63 "/usr/include/aarch64-linux-gnu/sys/procfs.h" 3 4
struct elf_prstatus
  {
    struct elf_siginfo pr_info;
    short int pr_cursig;
    unsigned long int pr_sigpend;
    unsigned long int pr_sighold;
    __pid_t pr_pid;
    __pid_t pr_ppid;
    __pid_t pr_pgrp;
    __pid_t pr_sid;
    struct timeval pr_utime;
    struct timeval pr_stime;
    struct timeval pr_cutime;
    struct timeval pr_cstime;
    elf_gregset_t pr_reg;
    int pr_fpvalid;
  };




struct elf_prpsinfo
  {
    char pr_state;
    char pr_sname;
    char pr_zomb;
    char pr_nice;
    unsigned long int pr_flag;
    __pr_uid_t pr_uid;
    __pr_gid_t pr_gid;
    int pr_pid, pr_ppid, pr_pgrp, pr_sid;

    char pr_fname[16];
    char pr_psargs[(80)];
  };






typedef void *psaddr_t;

# 1 "/usr/include/aarch64-linux-gnu/bits/procfs-prregset.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/procfs-prregset.h" 3 4
typedef elf_gregset_t __prgregset_t;
typedef elf_fpregset_t __prfpregset_t;
# 107 "/usr/include/aarch64-linux-gnu/sys/procfs.h" 2 3 4


typedef __prgregset_t prgregset_t;
typedef __prfpregset_t prfpregset_t;



typedef __pid_t lwpid_t;


typedef struct elf_prstatus prstatus_t;
typedef struct elf_prpsinfo prpsinfo_t;





# 1 "/usr/include/aarch64-linux-gnu/bits/procfs-extra.h" 1 3 4
# 125 "/usr/include/aarch64-linux-gnu/sys/procfs.h" 2 3 4
# 37 "/usr/include/aarch64-linux-gnu/sys/ucontext.h" 2 3 4


typedef elf_greg_t greg_t;


typedef elf_gregset_t gregset_t;


typedef elf_fpregset_t fpregset_t;






typedef struct
  {
    unsigned long long int fault_address;
    unsigned long long int regs[31];
    unsigned long long int sp;
    unsigned long long int pc;
    unsigned long long int pstate;




    unsigned char __reserved[4096] __attribute__ ((__aligned__ (16)));
  } mcontext_t;


typedef struct ucontext_t
  {
    unsigned long uc_flags;
    struct ucontext_t *uc_link;
    stack_t uc_stack;
    sigset_t uc_sigmask;
    mcontext_t uc_mcontext;
  } ucontext_t;
# 317 "/usr/include/signal.h" 2 3 4







extern int siginterrupt (int __sig, int __interrupt) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__deprecated__ ("Use sigaction with SA_RESTART instead")));

# 1 "/usr/include/aarch64-linux-gnu/bits/sigstack.h" 1 3 4
# 328 "/usr/include/signal.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/sigstksz.h" 1 3 4
# 329 "/usr/include/signal.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/ss_flags.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/ss_flags.h" 3 4
enum
{
  SS_ONSTACK = 1,

  SS_DISABLE

};
# 330 "/usr/include/signal.h" 2 3 4



extern int sigaltstack (const stack_t *__restrict __ss,
   stack_t *__restrict __oss) __attribute__ ((__nothrow__ , __leaf__));




# 1 "/usr/include/aarch64-linux-gnu/bits/types/struct_sigstack.h" 1 3 4
# 23 "/usr/include/aarch64-linux-gnu/bits/types/struct_sigstack.h" 3 4
struct sigstack
  {
    void *ss_sp;
    int ss_onstack;
  };
# 340 "/usr/include/signal.h" 2 3 4







extern int sigstack (struct sigstack *__ss, struct sigstack *__oss)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__deprecated__));
# 376 "/usr/include/signal.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/sigthread.h" 1 3 4
# 31 "/usr/include/aarch64-linux-gnu/bits/sigthread.h" 3 4
extern int pthread_sigmask (int __how,
       const __sigset_t *__restrict __newmask,
       __sigset_t *__restrict __oldmask)__attribute__ ((__nothrow__ , __leaf__));


extern int pthread_kill (pthread_t __threadid, int __signo) __attribute__ ((__nothrow__ , __leaf__));
# 377 "/usr/include/signal.h" 2 3 4






extern int __libc_current_sigrtmin (void) __attribute__ ((__nothrow__ , __leaf__));

extern int __libc_current_sigrtmax (void) __attribute__ ((__nothrow__ , __leaf__));





# 1 "/usr/include/aarch64-linux-gnu/bits/signal_ext.h" 1 3 4
# 392 "/usr/include/signal.h" 2 3 4


# 28 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2

# 1 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h" 1
# 28 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
# 1 "./libavcodec/avcodec.h" 1
# 30 "./libavcodec/avcodec.h"
# 1 "./libavutil/samplefmt.h" 1
# 55 "./libavutil/samplefmt.h"

# 55 "./libavutil/samplefmt.h"
enum AVSampleFormat {
    AV_SAMPLE_FMT_NONE = -1,
    AV_SAMPLE_FMT_U8,
    AV_SAMPLE_FMT_S16,
    AV_SAMPLE_FMT_S32,
    AV_SAMPLE_FMT_FLT,
    AV_SAMPLE_FMT_DBL,

    AV_SAMPLE_FMT_U8P,
    AV_SAMPLE_FMT_S16P,
    AV_SAMPLE_FMT_S32P,
    AV_SAMPLE_FMT_FLTP,
    AV_SAMPLE_FMT_DBLP,
    AV_SAMPLE_FMT_S64,
    AV_SAMPLE_FMT_S64P,

    AV_SAMPLE_FMT_NB
};





const char *av_get_sample_fmt_name(enum AVSampleFormat sample_fmt);





enum AVSampleFormat av_get_sample_fmt(const char *name);







enum AVSampleFormat av_get_alt_sample_fmt(enum AVSampleFormat sample_fmt, int planar);
# 103 "./libavutil/samplefmt.h"
enum AVSampleFormat av_get_packed_sample_fmt(enum AVSampleFormat sample_fmt);
# 114 "./libavutil/samplefmt.h"
enum AVSampleFormat av_get_planar_sample_fmt(enum AVSampleFormat sample_fmt);
# 128 "./libavutil/samplefmt.h"
char *av_get_sample_fmt_string(char *buf, int buf_size, enum AVSampleFormat sample_fmt);
# 137 "./libavutil/samplefmt.h"
int av_get_bytes_per_sample(enum AVSampleFormat sample_fmt);







int av_sample_fmt_is_planar(enum AVSampleFormat sample_fmt);
# 157 "./libavutil/samplefmt.h"
int av_samples_get_buffer_size(int *linesize, int nb_channels, int nb_samples,
                               enum AVSampleFormat sample_fmt, int align);
# 198 "./libavutil/samplefmt.h"
int av_samples_fill_arrays(uint8_t **audio_data, int *linesize,
                           const uint8_t *buf,
                           int nb_channels, int nb_samples,
                           enum AVSampleFormat sample_fmt, int align);
# 223 "./libavutil/samplefmt.h"
int av_samples_alloc(uint8_t **audio_data, int *linesize, int nb_channels,
                     int nb_samples, enum AVSampleFormat sample_fmt, int align);
# 235 "./libavutil/samplefmt.h"
int av_samples_alloc_array_and_samples(uint8_t ***audio_data, int *linesize, int nb_channels,
                                       int nb_samples, enum AVSampleFormat sample_fmt, int align);
# 249 "./libavutil/samplefmt.h"
int av_samples_copy(uint8_t * const *dst, uint8_t * const *src, int dst_offset,
                    int src_offset, int nb_samples, int nb_channels,
                    enum AVSampleFormat sample_fmt);
# 262 "./libavutil/samplefmt.h"
int av_samples_set_silence(uint8_t * const *audio_data, int offset, int nb_samples,
                           int nb_channels, enum AVSampleFormat sample_fmt);
# 31 "./libavcodec/avcodec.h" 2
# 1 "./libavutil/attributes.h" 1
# 32 "./libavcodec/avcodec.h" 2
# 1 "./libavutil/avutil.h" 1
# 171 "./libavutil/avutil.h"
unsigned avutil_version(void);






const char *av_version_info(void);




const char *avutil_configuration(void);




const char *avutil_license(void);
# 199 "./libavutil/avutil.h"
enum AVMediaType {
    AVMEDIA_TYPE_UNKNOWN = -1,
    AVMEDIA_TYPE_VIDEO,
    AVMEDIA_TYPE_AUDIO,
    AVMEDIA_TYPE_DATA,
    AVMEDIA_TYPE_SUBTITLE,
    AVMEDIA_TYPE_ATTACHMENT,
    AVMEDIA_TYPE_NB
};





const char *av_get_media_type_string(enum AVMediaType media_type);
# 277 "./libavutil/avutil.h"
enum AVPictureType {
    AV_PICTURE_TYPE_NONE = 0,
    AV_PICTURE_TYPE_I,
    AV_PICTURE_TYPE_P,
    AV_PICTURE_TYPE_B,
    AV_PICTURE_TYPE_S,
    AV_PICTURE_TYPE_SI,
    AV_PICTURE_TYPE_SP,
    AV_PICTURE_TYPE_BI,
};
# 295 "./libavutil/avutil.h"
char av_get_picture_type_char(enum AVPictureType pict_type);





# 1 "./libavutil/common.h" 1
# 33 "./libavutil/common.h"
# 1 "/usr/include/errno.h" 1 3 4
# 28 "/usr/include/errno.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/errno.h" 1 3 4
# 26 "/usr/include/aarch64-linux-gnu/bits/errno.h" 3 4
# 1 "/usr/include/linux/errno.h" 1 3 4
# 1 "/usr/include/aarch64-linux-gnu/asm/errno.h" 1 3 4
# 1 "/usr/include/asm-generic/errno.h" 1 3 4




# 1 "/usr/include/asm-generic/errno-base.h" 1 3 4
# 6 "/usr/include/asm-generic/errno.h" 2 3 4
# 2 "/usr/include/aarch64-linux-gnu/asm/errno.h" 2 3 4
# 2 "/usr/include/linux/errno.h" 2 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/errno.h" 2 3 4
# 29 "/usr/include/errno.h" 2 3 4









# 37 "/usr/include/errno.h" 3 4
extern int *__errno_location (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 52 "/usr/include/errno.h" 3 4

# 34 "./libavutil/common.h" 2
# 1 "/usr/include/inttypes.h" 1 3 4
# 34 "/usr/include/inttypes.h" 3 4
typedef unsigned int __gwchar_t;
# 266 "/usr/include/inttypes.h" 3 4





typedef struct
  {
    long int quot;
    long int rem;
  } imaxdiv_t;
# 290 "/usr/include/inttypes.h" 3 4
extern intmax_t imaxabs (intmax_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern intmax_t strtoimax (const char *__restrict __nptr,
      char **__restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t strtoumax (const char *__restrict __nptr,
       char ** __restrict __endptr, int __base) __attribute__ ((__nothrow__ , __leaf__));


extern intmax_t wcstoimax (const __gwchar_t *__restrict __nptr,
      __gwchar_t **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


extern uintmax_t wcstoumax (const __gwchar_t *__restrict __nptr,
       __gwchar_t ** __restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__));


# 35 "./libavutil/common.h" 2
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/limits.h" 1 3 4
# 34 "/usr/lib/gcc/aarch64-linux-gnu/12/include/limits.h" 3 4
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/syslimits.h" 1 3 4






# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/limits.h" 1 3 4
# 203 "/usr/lib/gcc/aarch64-linux-gnu/12/include/limits.h" 3 4
# 1 "/usr/include/limits.h" 1 3 4
# 26 "/usr/include/limits.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/limits.h" 2 3 4
# 195 "/usr/include/limits.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/posix1_lim.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/aarch64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 161 "/usr/include/aarch64-linux-gnu/bits/posix1_lim.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/local_lim.h" 1 3 4
# 38 "/usr/include/aarch64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/linux/limits.h" 1 3 4
# 39 "/usr/include/aarch64-linux-gnu/bits/local_lim.h" 2 3 4
# 81 "/usr/include/aarch64-linux-gnu/bits/local_lim.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/pthread_stack_min-dynamic.h" 1 3 4
# 29 "/usr/include/aarch64-linux-gnu/bits/pthread_stack_min-dynamic.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/pthread_stack_min.h" 1 3 4
# 30 "/usr/include/aarch64-linux-gnu/bits/pthread_stack_min-dynamic.h" 2 3 4
# 82 "/usr/include/aarch64-linux-gnu/bits/local_lim.h" 2 3 4
# 162 "/usr/include/aarch64-linux-gnu/bits/posix1_lim.h" 2 3 4
# 196 "/usr/include/limits.h" 2 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/posix2_lim.h" 1 3 4
# 200 "/usr/include/limits.h" 2 3 4
# 204 "/usr/lib/gcc/aarch64-linux-gnu/12/include/limits.h" 2 3 4
# 8 "/usr/lib/gcc/aarch64-linux-gnu/12/include/syslimits.h" 2 3 4
# 35 "/usr/lib/gcc/aarch64-linux-gnu/12/include/limits.h" 2 3 4
# 36 "./libavutil/common.h" 2
# 1 "/usr/include/math.h" 1 3 4
# 27 "/usr/include/math.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 28 "/usr/include/math.h" 2 3 4












# 1 "/usr/include/aarch64-linux-gnu/bits/math-vector.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/math-vector.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/libm-simd-decl-stubs.h" 1 3 4
# 28 "/usr/include/aarch64-linux-gnu/bits/math-vector.h" 2 3 4
# 41 "/usr/include/math.h" 2 3 4
# 152 "/usr/include/math.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/flt-eval-method.h" 1 3 4
# 153 "/usr/include/math.h" 2 3 4
# 163 "/usr/include/math.h" 3 4
typedef float float_t;
typedef double double_t;
# 204 "/usr/include/math.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/fp-logb.h" 1 3 4
# 205 "/usr/include/math.h" 2 3 4
# 247 "/usr/include/math.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/fp-fast.h" 1 3 4
# 248 "/usr/include/math.h" 2 3 4
# 312 "/usr/include/math.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/mathcalls-helper-functions.h" 1 3 4
# 20 "/usr/include/aarch64-linux-gnu/bits/mathcalls-helper-functions.h" 3 4
extern int __fpclassify (double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));


extern int __signbit (double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));



extern int __isinf (double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern int __finite (double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern int __isnan (double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern int __iseqsig (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));


extern int __issignaling (double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));
# 313 "/usr/include/math.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
 extern double acos (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __acos (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double asin (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __asin (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double atan (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __atan (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double atan2 (double __y, double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __atan2 (double __y, double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern double cos (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __cos (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double sin (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __sin (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double tan (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __tan (double __x) __attribute__ ((__nothrow__ , __leaf__));




 extern double cosh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __cosh (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double sinh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __sinh (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double tanh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __tanh (double __x) __attribute__ ((__nothrow__ , __leaf__));
# 85 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
 extern double acosh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __acosh (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double asinh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __asinh (double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern double atanh (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __atanh (double __x) __attribute__ ((__nothrow__ , __leaf__));





 extern double exp (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __exp (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double frexp (double __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__)); extern double __frexp (double __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__));


extern double ldexp (double __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__)); extern double __ldexp (double __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__));


 extern double log (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __log (double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern double log10 (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __log10 (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double modf (double __x, double *__iptr) __attribute__ ((__nothrow__ , __leaf__)); extern double __modf (double __x, double *__iptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 119 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
 extern double expm1 (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __expm1 (double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern double log1p (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __log1p (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double logb (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __logb (double __x) __attribute__ ((__nothrow__ , __leaf__));




 extern double exp2 (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __exp2 (double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern double log2 (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __log2 (double __x) __attribute__ ((__nothrow__ , __leaf__));






 extern double pow (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __pow (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));


extern double sqrt (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __sqrt (double __x) __attribute__ ((__nothrow__ , __leaf__));



 extern double hypot (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __hypot (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));




 extern double cbrt (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __cbrt (double __x) __attribute__ ((__nothrow__ , __leaf__));






extern double ceil (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __ceil (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern double fabs (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __fabs (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern double floor (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __floor (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern double fmod (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __fmod (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));
# 177 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern int isinf (double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));




extern int finite (double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern double drem (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __drem (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));



extern double significand (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __significand (double __x) __attribute__ ((__nothrow__ , __leaf__));






extern double copysign (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __copysign (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern double nan (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__)); extern double __nan (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__));
# 213 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern int isnan (double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));





extern double j0 (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __j0 (double) __attribute__ ((__nothrow__ , __leaf__));
extern double j1 (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __j1 (double) __attribute__ ((__nothrow__ , __leaf__));
extern double jn (int, double) __attribute__ ((__nothrow__ , __leaf__)); extern double __jn (int, double) __attribute__ ((__nothrow__ , __leaf__));
extern double y0 (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __y0 (double) __attribute__ ((__nothrow__ , __leaf__));
extern double y1 (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __y1 (double) __attribute__ ((__nothrow__ , __leaf__));
extern double yn (int, double) __attribute__ ((__nothrow__ , __leaf__)); extern double __yn (int, double) __attribute__ ((__nothrow__ , __leaf__));





 extern double erf (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __erf (double) __attribute__ ((__nothrow__ , __leaf__));
 extern double erfc (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __erfc (double) __attribute__ ((__nothrow__ , __leaf__));
extern double lgamma (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __lgamma (double) __attribute__ ((__nothrow__ , __leaf__));




extern double tgamma (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __tgamma (double) __attribute__ ((__nothrow__ , __leaf__));





extern double gamma (double) __attribute__ ((__nothrow__ , __leaf__)); extern double __gamma (double) __attribute__ ((__nothrow__ , __leaf__));







extern double lgamma_r (double, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__)); extern double __lgamma_r (double, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__));






extern double rint (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __rint (double __x) __attribute__ ((__nothrow__ , __leaf__));


extern double nextafter (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __nextafter (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));

extern double nexttoward (double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __nexttoward (double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));
# 275 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern double remainder (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __remainder (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));



extern double scalbn (double __x, int __n) __attribute__ ((__nothrow__ , __leaf__)); extern double __scalbn (double __x, int __n) __attribute__ ((__nothrow__ , __leaf__));



extern int ilogb (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern int __ilogb (double __x) __attribute__ ((__nothrow__ , __leaf__));
# 293 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern double scalbln (double __x, long int __n) __attribute__ ((__nothrow__ , __leaf__)); extern double __scalbln (double __x, long int __n) __attribute__ ((__nothrow__ , __leaf__));



extern double nearbyint (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern double __nearbyint (double __x) __attribute__ ((__nothrow__ , __leaf__));



extern double round (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __round (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern double trunc (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __trunc (double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern double remquo (double __x, double __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__)); extern double __remquo (double __x, double __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__));






extern long int lrint (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lrint (double __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llrint (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llrint (double __x) __attribute__ ((__nothrow__ , __leaf__));



extern long int lround (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lround (double __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llround (double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llround (double __x) __attribute__ ((__nothrow__ , __leaf__));



extern double fdim (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)); extern double __fdim (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__));



extern double fmax (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __fmax (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern double fmin (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern double __fmin (double __x, double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern double fma (double __x, double __y, double __z) __attribute__ ((__nothrow__ , __leaf__)); extern double __fma (double __x, double __y, double __z) __attribute__ ((__nothrow__ , __leaf__));
# 435 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern double scalb (double __x, double __n) __attribute__ ((__nothrow__ , __leaf__)); extern double __scalb (double __x, double __n) __attribute__ ((__nothrow__ , __leaf__));
# 314 "/usr/include/math.h" 2 3 4
# 329 "/usr/include/math.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/mathcalls-helper-functions.h" 1 3 4
# 20 "/usr/include/aarch64-linux-gnu/bits/mathcalls-helper-functions.h" 3 4
extern int __fpclassifyf (float __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));


extern int __signbitf (float __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));



extern int __isinff (float __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern int __finitef (float __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern int __isnanf (float __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern int __iseqsigf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));


extern int __issignalingf (float __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));
# 330 "/usr/include/math.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
 extern float acosf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __acosf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float asinf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __asinf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float atanf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __atanf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float atan2f (float __y, float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __atan2f (float __y, float __x) __attribute__ ((__nothrow__ , __leaf__));


 extern float cosf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __cosf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float sinf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __sinf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float tanf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __tanf (float __x) __attribute__ ((__nothrow__ , __leaf__));




 extern float coshf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __coshf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float sinhf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __sinhf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float tanhf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __tanhf (float __x) __attribute__ ((__nothrow__ , __leaf__));
# 85 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
 extern float acoshf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __acoshf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float asinhf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __asinhf (float __x) __attribute__ ((__nothrow__ , __leaf__));

 extern float atanhf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __atanhf (float __x) __attribute__ ((__nothrow__ , __leaf__));





 extern float expf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __expf (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float frexpf (float __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__)); extern float __frexpf (float __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__));


extern float ldexpf (float __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__)); extern float __ldexpf (float __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__));


 extern float logf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __logf (float __x) __attribute__ ((__nothrow__ , __leaf__));


 extern float log10f (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __log10f (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float modff (float __x, float *__iptr) __attribute__ ((__nothrow__ , __leaf__)); extern float __modff (float __x, float *__iptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 119 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
 extern float expm1f (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __expm1f (float __x) __attribute__ ((__nothrow__ , __leaf__));


 extern float log1pf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __log1pf (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float logbf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __logbf (float __x) __attribute__ ((__nothrow__ , __leaf__));




 extern float exp2f (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __exp2f (float __x) __attribute__ ((__nothrow__ , __leaf__));


 extern float log2f (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __log2f (float __x) __attribute__ ((__nothrow__ , __leaf__));






 extern float powf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __powf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));


extern float sqrtf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __sqrtf (float __x) __attribute__ ((__nothrow__ , __leaf__));



 extern float hypotf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __hypotf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));




 extern float cbrtf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __cbrtf (float __x) __attribute__ ((__nothrow__ , __leaf__));






extern float ceilf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __ceilf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern float fabsf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __fabsf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern float floorf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __floorf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern float fmodf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __fmodf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));
# 177 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern int isinff (float __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));




extern int finitef (float __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern float dremf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __dremf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));



extern float significandf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __significandf (float __x) __attribute__ ((__nothrow__ , __leaf__));






extern float copysignf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __copysignf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern float nanf (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__)); extern float __nanf (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__));
# 213 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern int isnanf (float __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));





extern float j0f (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __j0f (float) __attribute__ ((__nothrow__ , __leaf__));
extern float j1f (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __j1f (float) __attribute__ ((__nothrow__ , __leaf__));
extern float jnf (int, float) __attribute__ ((__nothrow__ , __leaf__)); extern float __jnf (int, float) __attribute__ ((__nothrow__ , __leaf__));
extern float y0f (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __y0f (float) __attribute__ ((__nothrow__ , __leaf__));
extern float y1f (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __y1f (float) __attribute__ ((__nothrow__ , __leaf__));
extern float ynf (int, float) __attribute__ ((__nothrow__ , __leaf__)); extern float __ynf (int, float) __attribute__ ((__nothrow__ , __leaf__));





 extern float erff (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __erff (float) __attribute__ ((__nothrow__ , __leaf__));
 extern float erfcf (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __erfcf (float) __attribute__ ((__nothrow__ , __leaf__));
extern float lgammaf (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __lgammaf (float) __attribute__ ((__nothrow__ , __leaf__));




extern float tgammaf (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __tgammaf (float) __attribute__ ((__nothrow__ , __leaf__));





extern float gammaf (float) __attribute__ ((__nothrow__ , __leaf__)); extern float __gammaf (float) __attribute__ ((__nothrow__ , __leaf__));







extern float lgammaf_r (float, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__)); extern float __lgammaf_r (float, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__));






extern float rintf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __rintf (float __x) __attribute__ ((__nothrow__ , __leaf__));


extern float nextafterf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __nextafterf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));

extern float nexttowardf (float __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __nexttowardf (float __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));
# 275 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern float remainderf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __remainderf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));



extern float scalbnf (float __x, int __n) __attribute__ ((__nothrow__ , __leaf__)); extern float __scalbnf (float __x, int __n) __attribute__ ((__nothrow__ , __leaf__));



extern int ilogbf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern int __ilogbf (float __x) __attribute__ ((__nothrow__ , __leaf__));
# 293 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern float scalblnf (float __x, long int __n) __attribute__ ((__nothrow__ , __leaf__)); extern float __scalblnf (float __x, long int __n) __attribute__ ((__nothrow__ , __leaf__));



extern float nearbyintf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern float __nearbyintf (float __x) __attribute__ ((__nothrow__ , __leaf__));



extern float roundf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __roundf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern float truncf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __truncf (float __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern float remquof (float __x, float __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__)); extern float __remquof (float __x, float __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__));






extern long int lrintf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lrintf (float __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llrintf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llrintf (float __x) __attribute__ ((__nothrow__ , __leaf__));



extern long int lroundf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lroundf (float __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llroundf (float __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llroundf (float __x) __attribute__ ((__nothrow__ , __leaf__));



extern float fdimf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)); extern float __fdimf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__));



extern float fmaxf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __fmaxf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern float fminf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern float __fminf (float __x, float __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern float fmaf (float __x, float __y, float __z) __attribute__ ((__nothrow__ , __leaf__)); extern float __fmaf (float __x, float __y, float __z) __attribute__ ((__nothrow__ , __leaf__));
# 435 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern float scalbf (float __x, float __n) __attribute__ ((__nothrow__ , __leaf__)); extern float __scalbf (float __x, float __n) __attribute__ ((__nothrow__ , __leaf__));
# 331 "/usr/include/math.h" 2 3 4
# 398 "/usr/include/math.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/mathcalls-helper-functions.h" 1 3 4
# 20 "/usr/include/aarch64-linux-gnu/bits/mathcalls-helper-functions.h" 3 4
extern int __fpclassifyl (long double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));


extern int __signbitl (long double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));



extern int __isinfl (long double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern int __finitel (long double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern int __isnanl (long double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern int __iseqsigl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));


extern int __issignalingl (long double __value) __attribute__ ((__nothrow__ , __leaf__))
     __attribute__ ((__const__));
# 399 "/usr/include/math.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 1 3 4
# 53 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
 extern long double acosl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __acosl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double asinl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __asinl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double atanl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __atanl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double atan2l (long double __y, long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __atan2l (long double __y, long double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern long double cosl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __cosl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double sinl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __sinl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double tanl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __tanl (long double __x) __attribute__ ((__nothrow__ , __leaf__));




 extern long double coshl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __coshl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double sinhl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __sinhl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double tanhl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __tanhl (long double __x) __attribute__ ((__nothrow__ , __leaf__));
# 85 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
 extern long double acoshl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __acoshl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double asinhl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __asinhl (long double __x) __attribute__ ((__nothrow__ , __leaf__));

 extern long double atanhl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __atanhl (long double __x) __attribute__ ((__nothrow__ , __leaf__));





 extern long double expl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __expl (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double frexpl (long double __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__)); extern long double __frexpl (long double __x, int *__exponent) __attribute__ ((__nothrow__ , __leaf__));


extern long double ldexpl (long double __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__)); extern long double __ldexpl (long double __x, int __exponent) __attribute__ ((__nothrow__ , __leaf__));


 extern long double logl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __logl (long double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern long double log10l (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __log10l (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double modfl (long double __x, long double *__iptr) __attribute__ ((__nothrow__ , __leaf__)); extern long double __modfl (long double __x, long double *__iptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 119 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
 extern long double expm1l (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __expm1l (long double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern long double log1pl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __log1pl (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double logbl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __logbl (long double __x) __attribute__ ((__nothrow__ , __leaf__));




 extern long double exp2l (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __exp2l (long double __x) __attribute__ ((__nothrow__ , __leaf__));


 extern long double log2l (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __log2l (long double __x) __attribute__ ((__nothrow__ , __leaf__));






 extern long double powl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __powl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));


extern long double sqrtl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __sqrtl (long double __x) __attribute__ ((__nothrow__ , __leaf__));



 extern long double hypotl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __hypotl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));




 extern long double cbrtl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __cbrtl (long double __x) __attribute__ ((__nothrow__ , __leaf__));






extern long double ceill (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __ceill (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern long double fabsl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __fabsl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern long double floorl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __floorl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern long double fmodl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __fmodl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));
# 177 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern int isinfl (long double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));




extern int finitel (long double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));


extern long double dreml (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __dreml (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));



extern long double significandl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __significandl (long double __x) __attribute__ ((__nothrow__ , __leaf__));






extern long double copysignl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __copysignl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern long double nanl (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__)); extern long double __nanl (const char *__tagb) __attribute__ ((__nothrow__ , __leaf__));
# 213 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern int isnanl (long double __value) __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__const__));





extern long double j0l (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __j0l (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double j1l (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __j1l (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double jnl (int, long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __jnl (int, long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double y0l (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __y0l (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double y1l (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __y1l (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double ynl (int, long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __ynl (int, long double) __attribute__ ((__nothrow__ , __leaf__));





 extern long double erfl (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __erfl (long double) __attribute__ ((__nothrow__ , __leaf__));
 extern long double erfcl (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __erfcl (long double) __attribute__ ((__nothrow__ , __leaf__));
extern long double lgammal (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __lgammal (long double) __attribute__ ((__nothrow__ , __leaf__));




extern long double tgammal (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __tgammal (long double) __attribute__ ((__nothrow__ , __leaf__));





extern long double gammal (long double) __attribute__ ((__nothrow__ , __leaf__)); extern long double __gammal (long double) __attribute__ ((__nothrow__ , __leaf__));







extern long double lgammal_r (long double, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__)); extern long double __lgammal_r (long double, int *__signgamp) __attribute__ ((__nothrow__ , __leaf__));






extern long double rintl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __rintl (long double __x) __attribute__ ((__nothrow__ , __leaf__));


extern long double nextafterl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __nextafterl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));

extern long double nexttowardl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __nexttowardl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));
# 275 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern long double remainderl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __remainderl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));



extern long double scalbnl (long double __x, int __n) __attribute__ ((__nothrow__ , __leaf__)); extern long double __scalbnl (long double __x, int __n) __attribute__ ((__nothrow__ , __leaf__));



extern int ilogbl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern int __ilogbl (long double __x) __attribute__ ((__nothrow__ , __leaf__));
# 293 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern long double scalblnl (long double __x, long int __n) __attribute__ ((__nothrow__ , __leaf__)); extern long double __scalblnl (long double __x, long int __n) __attribute__ ((__nothrow__ , __leaf__));



extern long double nearbyintl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long double __nearbyintl (long double __x) __attribute__ ((__nothrow__ , __leaf__));



extern long double roundl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __roundl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern long double truncl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __truncl (long double __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern long double remquol (long double __x, long double __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__)); extern long double __remquol (long double __x, long double __y, int *__quo) __attribute__ ((__nothrow__ , __leaf__));






extern long int lrintl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lrintl (long double __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llrintl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llrintl (long double __x) __attribute__ ((__nothrow__ , __leaf__));



extern long int lroundl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long int __lroundl (long double __x) __attribute__ ((__nothrow__ , __leaf__));
__extension__
extern long long int llroundl (long double __x) __attribute__ ((__nothrow__ , __leaf__)); extern long long int __llroundl (long double __x) __attribute__ ((__nothrow__ , __leaf__));



extern long double fdiml (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)); extern long double __fdiml (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__));



extern long double fmaxl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __fmaxl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern long double fminl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)); extern long double __fminl (long double __x, long double __y) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern long double fmal (long double __x, long double __y, long double __z) __attribute__ ((__nothrow__ , __leaf__)); extern long double __fmal (long double __x, long double __y, long double __z) __attribute__ ((__nothrow__ , __leaf__));
# 435 "/usr/include/aarch64-linux-gnu/bits/mathcalls.h" 3 4
extern long double scalbl (long double __x, long double __n) __attribute__ ((__nothrow__ , __leaf__)); extern long double __scalbl (long double __x, long double __n) __attribute__ ((__nothrow__ , __leaf__));
# 400 "/usr/include/math.h" 2 3 4
# 854 "/usr/include/math.h" 3 4
extern int signgam;
# 934 "/usr/include/math.h" 3 4
enum
  {
    FP_NAN =

      0,
    FP_INFINITE =

      1,
    FP_ZERO =

      2,
    FP_SUBNORMAL =

      3,
    FP_NORMAL =

      4
  };
# 1471 "/usr/include/math.h" 3 4

# 37 "./libavutil/common.h" 2


# 1 "/usr/include/stdlib.h" 1 3 4
# 26 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 329 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 3 4
typedef unsigned int wchar_t;
# 33 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/include/aarch64-linux-gnu/bits/waitflags.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/waitstatus.h" 1 3 4
# 42 "/usr/include/stdlib.h" 2 3 4
# 59 "/usr/include/stdlib.h" 3 4
typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 98 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;



extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 177 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 386 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
# 402 "/usr/include/stdlib.h" 3 4
extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));



extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern __uint32_t arc4random (void)
     __attribute__ ((__nothrow__ , __leaf__)) ;


extern void arc4random_buf (void *__buf, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern __uint32_t arc4random_uniform (__uint32_t __upper_bound)
     __attribute__ ((__nothrow__ , __leaf__)) ;




extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (1, 2))) ;






extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__)) __attribute__ ((__alloc_size__ (2)));


extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__))
     __attribute__ ((__alloc_size__ (2, 3)))
    __attribute__ ((__malloc__ (__builtin_free, 1)));


extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__ (reallocarray, 1)));



# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 588 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__))
     __attribute__ ((__alloc_size__ (1))) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;




extern void *aligned_alloc (size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_align__ (1)))
     __attribute__ ((__alloc_size__ (2))) ;



extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int at_quick_exit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void quick_exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 667 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 695 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 708 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 730 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 751 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 804 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) ;
# 821 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) ;






typedef int (*__compar_fn_t) (const void *, const void *);
# 841 "/usr/include/stdlib.h" 3 4
extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;







extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 861 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;


__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;






extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
# 893 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__))
    __attribute__ ((__access__ (__read_only__, 2)));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__))
  __attribute__ ((__access__ (__write_only__, 1, 3)))
  __attribute__ ((__access__ (__read_only__, 2)));






extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 980 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;
# 1026 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1036 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/stdlib-float.h" 1 3 4
# 1037 "/usr/include/stdlib.h" 2 3 4
# 1048 "/usr/include/stdlib.h" 3 4

# 40 "./libavutil/common.h" 2
# 1 "/usr/include/string.h" 1 3 4
# 26 "/usr/include/string.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/string.h" 2 3 4






# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 34 "/usr/include/string.h" 2 3 4
# 43 "/usr/include/string.h" 3 4
extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
    __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__access__ (__write_only__, 1, 4)));




extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 80 "/usr/include/string.h" 3 4
extern int __memcmpeq (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 107 "/usr/include/string.h" 3 4
extern void *memchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 141 "/usr/include/string.h" 3 4
extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
    __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) __attribute__ ((__access__ (__write_only__, 1, 3)));



# 1 "/usr/include/aarch64-linux-gnu/bits/types/locale_t.h" 1 3 4
# 22 "/usr/include/aarch64-linux-gnu/bits/types/locale_t.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/__locale_t.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/types/__locale_t.h" 3 4
struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
};

typedef struct __locale_struct *__locale_t;
# 23 "/usr/include/aarch64-linux-gnu/bits/types/locale_t.h" 2 3 4

typedef __locale_t locale_t;
# 173 "/usr/include/string.h" 2 3 4


extern int strcoll_l (const char *__s1, const char *__s2, locale_t __l)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));


extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)))
     __attribute__ ((__access__ (__write_only__, 1, 3)));





extern char *strdup (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 246 "/usr/include/string.h" 3 4
extern char *strchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 273 "/usr/include/string.h" 3 4
extern char *strrchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 293 "/usr/include/string.h" 3 4
extern size_t strcspn (const char *__s, const char *__reject)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 323 "/usr/include/string.h" 3 4
extern char *strpbrk (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 350 "/usr/include/string.h" 3 4
extern char *strstr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
# 407 "/usr/include/string.h" 3 4
extern size_t strlen (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern size_t strnlen (const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));
# 432 "/usr/include/string.h" 3 4
extern int strerror_r (int __errnum, char *__buf, size_t __buflen) __asm__ ("" "__xpg_strerror_r") __attribute__ ((__nothrow__ , __leaf__))

                        __attribute__ ((__nonnull__ (2)))
    __attribute__ ((__access__ (__write_only__, 2, 3)));
# 458 "/usr/include/string.h" 3 4
extern char *strerror_l (int __errnum, locale_t __l) __attribute__ ((__nothrow__ , __leaf__));



# 1 "/usr/include/strings.h" 1 3 4
# 23 "/usr/include/strings.h" 3 4
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 24 "/usr/include/strings.h" 2 3 4










extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bcopy (const void *__src, void *__dest, size_t __n)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 68 "/usr/include/strings.h" 3 4
extern char *index (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 96 "/usr/include/strings.h" 3 4
extern char *rindex (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern int ffsl (long int __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));






extern int strcasecmp_l (const char *__s1, const char *__s2, locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));



extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));



# 463 "/usr/include/string.h" 2 3 4



extern void explicit_bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)))
    __attribute__ ((__access__ (__write_only__, 1, 2)));



extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));
# 489 "/usr/include/string.h" 3 4
extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 539 "/usr/include/string.h" 3 4

# 41 "./libavutil/common.h" 2

# 1 "./libavutil/attributes.h" 1
# 43 "./libavutil/common.h" 2
# 1 "./libavutil/error.h" 1
# 28 "./libavutil/error.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 145 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 424 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 3 4
typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
# 435 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 3 4
} max_align_t;
# 29 "./libavutil/error.h" 2

# 1 "./libavutil/macros.h" 1
# 28 "./libavutil/macros.h"
# 1 "./libavutil/avconfig.h" 1
# 29 "./libavutil/macros.h" 2
# 31 "./libavutil/error.h" 2
# 99 "./libavutil/error.h"

# 99 "./libavutil/error.h"
int av_strerror(int errnum, char *errbuf, size_t errbuf_size);
# 111 "./libavutil/error.h"
static inline char *av_make_error_string(char *errbuf, size_t errbuf_size, int errnum)
{
    av_strerror(errnum, errbuf, errbuf_size);
    return errbuf;
}
# 44 "./libavutil/common.h" 2

# 1 "./libavutil/mem.h" 1
# 30 "./libavutil/mem.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 31 "./libavutil/mem.h" 2
# 119 "./libavutil/mem.h"
void *av_malloc(size_t size) __attribute__((__malloc__)) __attribute__((alloc_size(1)));
# 130 "./libavutil/mem.h"
void *av_mallocz(size_t size) __attribute__((__malloc__)) __attribute__((alloc_size(1)));
# 143 "./libavutil/mem.h"
__attribute__((alloc_size(1, 2))) void *av_malloc_array(size_t nmemb, size_t size);
# 158 "./libavutil/mem.h"
void *av_calloc(size_t nmemb, size_t size) __attribute__((__malloc__)) __attribute__((alloc_size(1, 2)));
# 180 "./libavutil/mem.h"
void *av_realloc(void *ptr, size_t size) __attribute__((alloc_size(2)));
# 201 "./libavutil/mem.h"
__attribute__((warn_unused_result))
int av_reallocp(void *ptr, size_t size);
# 219 "./libavutil/mem.h"
void *av_realloc_f(void *ptr, size_t nelem, size_t elsize);
# 239 "./libavutil/mem.h"
__attribute__((alloc_size(2, 3))) void *av_realloc_array(void *ptr, size_t nmemb, size_t size);
# 257 "./libavutil/mem.h"
int av_reallocp_array(void *ptr, size_t nmemb, size_t size);
# 291 "./libavutil/mem.h"
void *av_fast_realloc(void *ptr, unsigned int *size, size_t min_size);
# 322 "./libavutil/mem.h"
void av_fast_malloc(void *ptr, unsigned int *size, size_t min_size);
# 342 "./libavutil/mem.h"
void av_fast_mallocz(void *ptr, unsigned int *size, size_t min_size);
# 355 "./libavutil/mem.h"
void av_free(void *ptr);
# 378 "./libavutil/mem.h"
void av_freep(void *ptr);
# 388 "./libavutil/mem.h"
char *av_strdup(const char *s) __attribute__((__malloc__));
# 399 "./libavutil/mem.h"
char *av_strndup(const char *s, size_t len) __attribute__((__malloc__));
# 409 "./libavutil/mem.h"
void *av_memdup(const void *p, size_t size);
# 422 "./libavutil/mem.h"
void av_memcpy_backptr(uint8_t *dst, int back, int cnt);
# 524 "./libavutil/mem.h"
void av_dynarray_add(void *tab_ptr, int *nb_ptr, void *elem);
# 536 "./libavutil/mem.h"
__attribute__((warn_unused_result))
int av_dynarray_add_nofree(void *tab_ptr, int *nb_ptr, void *elem);
# 562 "./libavutil/mem.h"
void *av_dynarray2_add(void **tab_ptr, int *nb_ptr, size_t elem_size,
                       const uint8_t *elem_data);
# 585 "./libavutil/mem.h"
int av_size_mult(size_t a, size_t b, size_t *r);
# 600 "./libavutil/mem.h"
void av_max_alloc(size_t max);
# 46 "./libavutil/common.h" 2
# 162 "./libavutil/common.h"
__attribute__((const)) int av_log2(unsigned v);



__attribute__((const)) int av_log2_16bit(unsigned v);
# 176 "./libavutil/common.h"
static __attribute__((always_inline)) inline __attribute__((const)) int av_clip_c(int a, int amin, int amax)
{



    if (a < amin) return amin;
    else if (a > amax) return amax;
    else return a;
}
# 193 "./libavutil/common.h"
static __attribute__((always_inline)) inline __attribute__((const)) int64_t av_clip64_c(int64_t a, int64_t amin, int64_t amax)
{



    if (a < amin) return amin;
    else if (a > amax) return amax;
    else return a;
}






static __attribute__((always_inline)) inline __attribute__((const)) uint8_t av_clip_uint8_c(int a)
{
    if (a&(~0xFF)) return (~a)>>31;
    else return a;
}






static __attribute__((always_inline)) inline __attribute__((const)) int8_t av_clip_int8_c(int a)
{
    if ((a+0x80U) & ~0xFF) return (a>>31) ^ 0x7F;
    else return a;
}






static __attribute__((always_inline)) inline __attribute__((const)) uint16_t av_clip_uint16_c(int a)
{
    if (a&(~0xFFFF)) return (~a)>>31;
    else return a;
}






static __attribute__((always_inline)) inline __attribute__((const)) int16_t av_clip_int16_c(int a)
{
    if ((a+0x8000U) & ~0xFFFF) return (a>>31) ^ 0x7FFF;
    else return a;
}






static __attribute__((always_inline)) inline __attribute__((const)) int32_t av_clipl_int32_c(int64_t a)
{
    if ((a+0x80000000u) & ~0xFFFFFFFFUL) return (int32_t)((a>>63) ^ 0x7FFFFFFF);
    else return (int32_t)a;
}







static __attribute__((always_inline)) inline __attribute__((const)) int av_clip_intp2_c(int a, int p)
{
    if (((unsigned)a + (1 << p)) & ~((2 << p) - 1))
        return (a >> 31) ^ ((1 << p) - 1);
    else
        return a;
}







static __attribute__((always_inline)) inline __attribute__((const)) unsigned av_clip_uintp2_c(int a, int p)
{
    if (a & ~((1<<p) - 1)) return (~a) >> 31 & ((1<<p) - 1);
    else return a;
}







static __attribute__((always_inline)) inline __attribute__((const)) unsigned av_mod_uintp2_c(unsigned a, unsigned p)
{
    return a & ((1U << p) - 1);
}
# 302 "./libavutil/common.h"
static __attribute__((always_inline)) inline int av_sat_add32_c(int a, int b)
{
    return av_clipl_int32_c((int64_t)a + b);
}
# 314 "./libavutil/common.h"
static __attribute__((always_inline)) inline int av_sat_dadd32_c(int a, int b)
{
    return av_sat_add32_c(a, av_sat_add32_c(b, b));
}
# 326 "./libavutil/common.h"
static __attribute__((always_inline)) inline int av_sat_sub32_c(int a, int b)
{
    return av_clipl_int32_c((int64_t)a - b);
}
# 338 "./libavutil/common.h"
static __attribute__((always_inline)) inline int av_sat_dsub32_c(int a, int b)
{
    return av_sat_sub32_c(a, av_sat_add32_c(b, b));
}
# 350 "./libavutil/common.h"
static __attribute__((always_inline)) inline int64_t av_sat_add64_c(int64_t a, int64_t b) {

    int64_t tmp;
    return !__builtin_add_overflow(a, b, &tmp) ? tmp : (tmp < 0 ? 
# 353 "./libavutil/common.h" 3 4
                                                                 (9223372036854775807L) 
# 353 "./libavutil/common.h"
                                                                           : 
# 353 "./libavutil/common.h" 3 4
                                                                             (-9223372036854775807L -1)
# 353 "./libavutil/common.h"
                                                                                      );






}
# 369 "./libavutil/common.h"
static __attribute__((always_inline)) inline int64_t av_sat_sub64_c(int64_t a, int64_t b) {

    int64_t tmp;
    return !__builtin_sub_overflow(a, b, &tmp) ? tmp : (tmp < 0 ? 
# 372 "./libavutil/common.h" 3 4
                                                                 (9223372036854775807L) 
# 372 "./libavutil/common.h"
                                                                           : 
# 372 "./libavutil/common.h" 3 4
                                                                             (-9223372036854775807L -1)
# 372 "./libavutil/common.h"
                                                                                      );







}
# 391 "./libavutil/common.h"
static __attribute__((always_inline)) inline __attribute__((const)) float av_clipf_c(float a, float amin, float amax)
{



    return ((((a) > (amin) ? (a) : (amin))) > (amax) ? (amax) : (((a) > (amin) ? (a) : (amin))));
}
# 408 "./libavutil/common.h"
static __attribute__((always_inline)) inline __attribute__((const)) double av_clipd_c(double a, double amin, double amax)
{



    return ((((a) > (amin) ? (a) : (amin))) > (amax) ? (amax) : (((a) > (amin) ? (a) : (amin))));
}





static __attribute__((always_inline)) inline __attribute__((const)) int av_ceil_log2_c(int x)
{
    return av_log2((x - 1U) << 1);
}






static __attribute__((always_inline)) inline __attribute__((const)) int av_popcount_c(uint32_t x)
{
    x -= (x >> 1) & 0x55555555;
    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
    x = (x + (x >> 4)) & 0x0F0F0F0F;
    x += x >> 8;
    return (x + (x >> 16)) & 0x3F;
}






static __attribute__((always_inline)) inline __attribute__((const)) int av_popcount64_c(uint64_t x)
{
    return av_popcount_c((uint32_t)x) + av_popcount_c((uint32_t)(x >> 32));
}

static __attribute__((always_inline)) inline __attribute__((const)) int av_parity_c(uint32_t v)
{
    return av_popcount_c(v) & 1;
}
# 302 "./libavutil/avutil.h" 2
# 1 "./libavutil/rational.h" 1
# 33 "./libavutil/rational.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/limits.h" 1 3 4
# 34 "./libavutil/rational.h" 2
# 58 "./libavutil/rational.h"
typedef struct AVRational{
    int num;
    int den;
} AVRational;
# 71 "./libavutil/rational.h"
static inline AVRational av_make_q(int num, int den)
{
    AVRational r = { num, den };
    return r;
}
# 89 "./libavutil/rational.h"
static inline int av_cmp_q(AVRational a, AVRational b){
    const int64_t tmp= a.num * (int64_t)b.den - b.num * (int64_t)a.den;

    if(tmp) return (int)((tmp ^ a.den ^ b.den)>>63)|1;
    else if(b.den && a.den) return 0;
    else if(a.num && b.num) return (a.num>>31) - (b.num>>31);
    else return 
# 95 "./libavutil/rational.h" 3 4
                                  (-0x7fffffff - 1)
# 95 "./libavutil/rational.h"
                                         ;
}







static inline double av_q2d(AVRational a){
    return a.num / (double) a.den;
}
# 120 "./libavutil/rational.h"
int av_reduce(int *dst_num, int *dst_den, int64_t num, int64_t den, int64_t max);







AVRational av_mul_q(AVRational b, AVRational c) __attribute__((const));







AVRational av_div_q(AVRational b, AVRational c) __attribute__((const));







AVRational av_add_q(AVRational b, AVRational c) __attribute__((const));







AVRational av_sub_q(AVRational b, AVRational c) __attribute__((const));






static __attribute__((always_inline)) inline AVRational av_inv_q(AVRational q)
{
    AVRational r = { q.den, q.num };
    return r;
}
# 180 "./libavutil/rational.h"
AVRational av_d2q(double d, int max) __attribute__((const));
# 193 "./libavutil/rational.h"
int av_nearer_q(AVRational q, AVRational q1, AVRational q2);
# 202 "./libavutil/rational.h"
int av_find_nearest_q_idx(AVRational q, const AVRational* q_list);
# 213 "./libavutil/rational.h"
uint32_t av_q2intfloat(AVRational q);





AVRational av_gcd_q(AVRational a, AVRational b, int max_den, AVRational def);
# 303 "./libavutil/avutil.h" 2
# 1 "./libavutil/version.h" 1
# 304 "./libavutil/avutil.h" 2

# 1 "./libavutil/mathematics.h" 1
# 34 "./libavutil/mathematics.h"
# 1 "./libavutil/intfloat.h" 1
# 27 "./libavutil/intfloat.h"
union av_intfloat32 {
    uint32_t i;
    float f;
};

union av_intfloat64 {
    uint64_t i;
    double f;
};




static __attribute__((always_inline)) inline float av_int2float(uint32_t i)
{
    union av_intfloat32 v;
    v.i = i;
    return v.f;
}




static __attribute__((always_inline)) inline uint32_t av_float2int(float f)
{
    union av_intfloat32 v;
    v.f = f;
    return v.i;
}




static __attribute__((always_inline)) inline double av_int2double(uint64_t i)
{
    union av_intfloat64 v;
    v.i = i;
    return v.f;
}




static __attribute__((always_inline)) inline uint64_t av_double2int(double f)
{
    union av_intfloat64 v;
    v.f = f;
    return v.i;
}
# 35 "./libavutil/mathematics.h" 2
# 130 "./libavutil/mathematics.h"
enum AVRounding {
    AV_ROUND_ZERO = 0,
    AV_ROUND_INF = 1,
    AV_ROUND_DOWN = 2,
    AV_ROUND_UP = 3,
    AV_ROUND_NEAR_INF = 5,
# 159 "./libavutil/mathematics.h"
    AV_ROUND_PASS_MINMAX = 8192,
};
# 170 "./libavutil/mathematics.h"
int64_t __attribute__((const)) av_gcd(int64_t a, int64_t b);
# 182 "./libavutil/mathematics.h"
int64_t av_rescale(int64_t a, int64_t b, int64_t c) __attribute__((const));
# 193 "./libavutil/mathematics.h"
int64_t av_rescale_rnd(int64_t a, int64_t b, int64_t c, enum AVRounding rnd) __attribute__((const));
# 204 "./libavutil/mathematics.h"
int64_t av_rescale_q(int64_t a, AVRational bq, AVRational cq) __attribute__((const));
# 213 "./libavutil/mathematics.h"
int64_t av_rescale_q_rnd(int64_t a, AVRational bq, AVRational cq,
                         enum AVRounding rnd) __attribute__((const));
# 228 "./libavutil/mathematics.h"
int av_compare_ts(int64_t ts_a, AVRational tb_a, int64_t ts_b, AVRational tb_b);
# 249 "./libavutil/mathematics.h"
int64_t av_compare_mod(uint64_t a, uint64_t b, uint64_t mod);
# 276 "./libavutil/mathematics.h"
int64_t av_rescale_delta(AVRational in_tb, int64_t in_ts, AVRational fs_tb, int duration, int64_t *last, AVRational out_tb);
# 289 "./libavutil/mathematics.h"
int64_t av_add_stable(AVRational ts_tb, int64_t ts, AVRational inc_tb, int64_t inc);




double av_bessel_i0(double x);
# 306 "./libavutil/avutil.h" 2
# 1 "./libavutil/log.h" 1
# 24 "./libavutil/log.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stdarg.h" 1 3 4
# 25 "./libavutil/log.h" 2



typedef enum {
    AV_CLASS_CATEGORY_NA = 0,
    AV_CLASS_CATEGORY_INPUT,
    AV_CLASS_CATEGORY_OUTPUT,
    AV_CLASS_CATEGORY_MUXER,
    AV_CLASS_CATEGORY_DEMUXER,
    AV_CLASS_CATEGORY_ENCODER,
    AV_CLASS_CATEGORY_DECODER,
    AV_CLASS_CATEGORY_FILTER,
    AV_CLASS_CATEGORY_BITSTREAM_FILTER,
    AV_CLASS_CATEGORY_SWSCALER,
    AV_CLASS_CATEGORY_SWRESAMPLER,
    AV_CLASS_CATEGORY_DEVICE_VIDEO_OUTPUT = 40,
    AV_CLASS_CATEGORY_DEVICE_VIDEO_INPUT,
    AV_CLASS_CATEGORY_DEVICE_AUDIO_OUTPUT,
    AV_CLASS_CATEGORY_DEVICE_AUDIO_INPUT,
    AV_CLASS_CATEGORY_DEVICE_OUTPUT,
    AV_CLASS_CATEGORY_DEVICE_INPUT,
    AV_CLASS_CATEGORY_NB
}AVClassCategory;
# 59 "./libavutil/log.h"
struct AVOptionRanges;






typedef struct AVClass {




    const char* class_name;





    const char* (*item_name)(void* ctx);






    const struct AVOption *option;







    int version;





    int log_level_offset_offset;
# 107 "./libavutil/log.h"
    int parent_log_context_offset;






    AVClassCategory category;





    AVClassCategory (*get_category)(void* ctx);





    int (*query_ranges)(struct AVOptionRanges **, void *obj, const char *key, int flags);




    void* (*child_next)(void *obj, void *prev);
# 146 "./libavutil/log.h"
    const struct AVClass* (*child_class_iterate)(void **iter);
} AVClass;
# 238 "./libavutil/log.h"
void av_log(void *avcl, int level, const char *fmt, ...) __attribute__((__format__(__printf__, 3, 4)));
# 259 "./libavutil/log.h"
void av_log_once(void* avcl, int initial_level, int subsequent_level, int *state, const char *fmt, ...) __attribute__((__format__(__printf__, 5, 6)));
# 277 "./libavutil/log.h"
void av_vlog(void *avcl, int level, const char *fmt, va_list vl);
# 286 "./libavutil/log.h"
int av_log_get_level(void);
# 295 "./libavutil/log.h"
void av_log_set_level(int level);
# 307 "./libavutil/log.h"
void av_log_set_callback(void (*callback)(void*, int, const char*, va_list));
# 322 "./libavutil/log.h"
void av_log_default_callback(void *avcl, int level, const char *fmt,
                             va_list vl);
# 332 "./libavutil/log.h"
const char* av_default_item_name(void* ctx);
AVClassCategory av_default_get_category(void *ptr);
# 342 "./libavutil/log.h"
void av_log_format_line(void *ptr, int level, const char *fmt, va_list vl,
                        char *line, int line_size, int *print_prefix);
# 359 "./libavutil/log.h"
int av_log_format_line2(void *ptr, int level, const char *fmt, va_list vl,
                        char *line, int line_size, int *print_prefix);
# 380 "./libavutil/log.h"
void av_log_set_flags(int arg);
int av_log_get_flags(void);
# 307 "./libavutil/avutil.h" 2
# 1 "./libavutil/pixfmt.h" 1
# 71 "./libavutil/pixfmt.h"
enum AVPixelFormat {
    AV_PIX_FMT_NONE = -1,
    AV_PIX_FMT_YUV420P,
    AV_PIX_FMT_YUYV422,
    AV_PIX_FMT_RGB24,
    AV_PIX_FMT_BGR24,
    AV_PIX_FMT_YUV422P,
    AV_PIX_FMT_YUV444P,
    AV_PIX_FMT_YUV410P,
    AV_PIX_FMT_YUV411P,
    AV_PIX_FMT_GRAY8,
    AV_PIX_FMT_MONOWHITE,
    AV_PIX_FMT_MONOBLACK,
    AV_PIX_FMT_PAL8,
    AV_PIX_FMT_YUVJ420P,
    AV_PIX_FMT_YUVJ422P,
    AV_PIX_FMT_YUVJ444P,
    AV_PIX_FMT_UYVY422,
    AV_PIX_FMT_UYYVYY411,
    AV_PIX_FMT_BGR8,
    AV_PIX_FMT_BGR4,
    AV_PIX_FMT_BGR4_BYTE,
    AV_PIX_FMT_RGB8,
    AV_PIX_FMT_RGB4,
    AV_PIX_FMT_RGB4_BYTE,
    AV_PIX_FMT_NV12,
    AV_PIX_FMT_NV21,

    AV_PIX_FMT_ARGB,
    AV_PIX_FMT_RGBA,
    AV_PIX_FMT_ABGR,
    AV_PIX_FMT_BGRA,

    AV_PIX_FMT_GRAY16BE,
    AV_PIX_FMT_GRAY16LE,
    AV_PIX_FMT_YUV440P,
    AV_PIX_FMT_YUVJ440P,
    AV_PIX_FMT_YUVA420P,
    AV_PIX_FMT_RGB48BE,
    AV_PIX_FMT_RGB48LE,

    AV_PIX_FMT_RGB565BE,
    AV_PIX_FMT_RGB565LE,
    AV_PIX_FMT_RGB555BE,
    AV_PIX_FMT_RGB555LE,

    AV_PIX_FMT_BGR565BE,
    AV_PIX_FMT_BGR565LE,
    AV_PIX_FMT_BGR555BE,
    AV_PIX_FMT_BGR555LE,





    AV_PIX_FMT_VAAPI,

    AV_PIX_FMT_YUV420P16LE,
    AV_PIX_FMT_YUV420P16BE,
    AV_PIX_FMT_YUV422P16LE,
    AV_PIX_FMT_YUV422P16BE,
    AV_PIX_FMT_YUV444P16LE,
    AV_PIX_FMT_YUV444P16BE,
    AV_PIX_FMT_DXVA2_VLD,

    AV_PIX_FMT_RGB444LE,
    AV_PIX_FMT_RGB444BE,
    AV_PIX_FMT_BGR444LE,
    AV_PIX_FMT_BGR444BE,
    AV_PIX_FMT_YA8,

    AV_PIX_FMT_Y400A = AV_PIX_FMT_YA8,
    AV_PIX_FMT_GRAY8A= AV_PIX_FMT_YA8,

    AV_PIX_FMT_BGR48BE,
    AV_PIX_FMT_BGR48LE,






    AV_PIX_FMT_YUV420P9BE,
    AV_PIX_FMT_YUV420P9LE,
    AV_PIX_FMT_YUV420P10BE,
    AV_PIX_FMT_YUV420P10LE,
    AV_PIX_FMT_YUV422P10BE,
    AV_PIX_FMT_YUV422P10LE,
    AV_PIX_FMT_YUV444P9BE,
    AV_PIX_FMT_YUV444P9LE,
    AV_PIX_FMT_YUV444P10BE,
    AV_PIX_FMT_YUV444P10LE,
    AV_PIX_FMT_YUV422P9BE,
    AV_PIX_FMT_YUV422P9LE,
    AV_PIX_FMT_GBRP,
    AV_PIX_FMT_GBR24P = AV_PIX_FMT_GBRP,
    AV_PIX_FMT_GBRP9BE,
    AV_PIX_FMT_GBRP9LE,
    AV_PIX_FMT_GBRP10BE,
    AV_PIX_FMT_GBRP10LE,
    AV_PIX_FMT_GBRP16BE,
    AV_PIX_FMT_GBRP16LE,
    AV_PIX_FMT_YUVA422P,
    AV_PIX_FMT_YUVA444P,
    AV_PIX_FMT_YUVA420P9BE,
    AV_PIX_FMT_YUVA420P9LE,
    AV_PIX_FMT_YUVA422P9BE,
    AV_PIX_FMT_YUVA422P9LE,
    AV_PIX_FMT_YUVA444P9BE,
    AV_PIX_FMT_YUVA444P9LE,
    AV_PIX_FMT_YUVA420P10BE,
    AV_PIX_FMT_YUVA420P10LE,
    AV_PIX_FMT_YUVA422P10BE,
    AV_PIX_FMT_YUVA422P10LE,
    AV_PIX_FMT_YUVA444P10BE,
    AV_PIX_FMT_YUVA444P10LE,
    AV_PIX_FMT_YUVA420P16BE,
    AV_PIX_FMT_YUVA420P16LE,
    AV_PIX_FMT_YUVA422P16BE,
    AV_PIX_FMT_YUVA422P16LE,
    AV_PIX_FMT_YUVA444P16BE,
    AV_PIX_FMT_YUVA444P16LE,

    AV_PIX_FMT_VDPAU,

    AV_PIX_FMT_XYZ12LE,
    AV_PIX_FMT_XYZ12BE,
    AV_PIX_FMT_NV16,
    AV_PIX_FMT_NV20LE,
    AV_PIX_FMT_NV20BE,

    AV_PIX_FMT_RGBA64BE,
    AV_PIX_FMT_RGBA64LE,
    AV_PIX_FMT_BGRA64BE,
    AV_PIX_FMT_BGRA64LE,

    AV_PIX_FMT_YVYU422,

    AV_PIX_FMT_YA16BE,
    AV_PIX_FMT_YA16LE,

    AV_PIX_FMT_GBRAP,
    AV_PIX_FMT_GBRAP16BE,
    AV_PIX_FMT_GBRAP16LE,
# 247 "./libavutil/pixfmt.h"
    AV_PIX_FMT_QSV,




    AV_PIX_FMT_MMAL,

    AV_PIX_FMT_D3D11VA_VLD,





    AV_PIX_FMT_CUDA,

    AV_PIX_FMT_0RGB,
    AV_PIX_FMT_RGB0,
    AV_PIX_FMT_0BGR,
    AV_PIX_FMT_BGR0,

    AV_PIX_FMT_YUV420P12BE,
    AV_PIX_FMT_YUV420P12LE,
    AV_PIX_FMT_YUV420P14BE,
    AV_PIX_FMT_YUV420P14LE,
    AV_PIX_FMT_YUV422P12BE,
    AV_PIX_FMT_YUV422P12LE,
    AV_PIX_FMT_YUV422P14BE,
    AV_PIX_FMT_YUV422P14LE,
    AV_PIX_FMT_YUV444P12BE,
    AV_PIX_FMT_YUV444P12LE,
    AV_PIX_FMT_YUV444P14BE,
    AV_PIX_FMT_YUV444P14LE,
    AV_PIX_FMT_GBRP12BE,
    AV_PIX_FMT_GBRP12LE,
    AV_PIX_FMT_GBRP14BE,
    AV_PIX_FMT_GBRP14LE,
    AV_PIX_FMT_YUVJ411P,

    AV_PIX_FMT_BAYER_BGGR8,
    AV_PIX_FMT_BAYER_RGGB8,
    AV_PIX_FMT_BAYER_GBRG8,
    AV_PIX_FMT_BAYER_GRBG8,
    AV_PIX_FMT_BAYER_BGGR16LE,
    AV_PIX_FMT_BAYER_BGGR16BE,
    AV_PIX_FMT_BAYER_RGGB16LE,
    AV_PIX_FMT_BAYER_RGGB16BE,
    AV_PIX_FMT_BAYER_GBRG16LE,
    AV_PIX_FMT_BAYER_GBRG16BE,
    AV_PIX_FMT_BAYER_GRBG16LE,
    AV_PIX_FMT_BAYER_GRBG16BE,


    AV_PIX_FMT_XVMC,


    AV_PIX_FMT_YUV440P10LE,
    AV_PIX_FMT_YUV440P10BE,
    AV_PIX_FMT_YUV440P12LE,
    AV_PIX_FMT_YUV440P12BE,
    AV_PIX_FMT_AYUV64LE,
    AV_PIX_FMT_AYUV64BE,

    AV_PIX_FMT_VIDEOTOOLBOX,

    AV_PIX_FMT_P010LE,
    AV_PIX_FMT_P010BE,

    AV_PIX_FMT_GBRAP12BE,
    AV_PIX_FMT_GBRAP12LE,

    AV_PIX_FMT_GBRAP10BE,
    AV_PIX_FMT_GBRAP10LE,

    AV_PIX_FMT_MEDIACODEC,

    AV_PIX_FMT_GRAY12BE,
    AV_PIX_FMT_GRAY12LE,
    AV_PIX_FMT_GRAY10BE,
    AV_PIX_FMT_GRAY10LE,

    AV_PIX_FMT_P016LE,
    AV_PIX_FMT_P016BE,
# 340 "./libavutil/pixfmt.h"
    AV_PIX_FMT_D3D11,

    AV_PIX_FMT_GRAY9BE,
    AV_PIX_FMT_GRAY9LE,

    AV_PIX_FMT_GBRPF32BE,
    AV_PIX_FMT_GBRPF32LE,
    AV_PIX_FMT_GBRAPF32BE,
    AV_PIX_FMT_GBRAPF32LE,






    AV_PIX_FMT_DRM_PRIME,






    AV_PIX_FMT_OPENCL,

    AV_PIX_FMT_GRAY14BE,
    AV_PIX_FMT_GRAY14LE,

    AV_PIX_FMT_GRAYF32BE,
    AV_PIX_FMT_GRAYF32LE,

    AV_PIX_FMT_YUVA422P12BE,
    AV_PIX_FMT_YUVA422P12LE,
    AV_PIX_FMT_YUVA444P12BE,
    AV_PIX_FMT_YUVA444P12LE,

    AV_PIX_FMT_NV24,
    AV_PIX_FMT_NV42,






    AV_PIX_FMT_VULKAN,

    AV_PIX_FMT_Y210BE,
    AV_PIX_FMT_Y210LE,

    AV_PIX_FMT_X2RGB10LE,
    AV_PIX_FMT_X2RGB10BE,
    AV_PIX_FMT_X2BGR10LE,
    AV_PIX_FMT_X2BGR10BE,

    AV_PIX_FMT_P210BE,
    AV_PIX_FMT_P210LE,

    AV_PIX_FMT_P410BE,
    AV_PIX_FMT_P410LE,

    AV_PIX_FMT_P216BE,
    AV_PIX_FMT_P216LE,

    AV_PIX_FMT_P416BE,
    AV_PIX_FMT_P416LE,

    AV_PIX_FMT_VUYA,

    AV_PIX_FMT_RGBAF16BE,
    AV_PIX_FMT_RGBAF16LE,

    AV_PIX_FMT_VUYX,

    AV_PIX_FMT_P012LE,
    AV_PIX_FMT_P012BE,

    AV_PIX_FMT_Y212BE,
    AV_PIX_FMT_Y212LE,

    AV_PIX_FMT_XV30BE,
    AV_PIX_FMT_XV30LE,

    AV_PIX_FMT_XV36BE,
    AV_PIX_FMT_XV36LE,

    AV_PIX_FMT_RGBF32BE,
    AV_PIX_FMT_RGBF32LE,

    AV_PIX_FMT_RGBAF32BE,
    AV_PIX_FMT_RGBAF32LE,

    AV_PIX_FMT_P212BE,
    AV_PIX_FMT_P212LE,

    AV_PIX_FMT_P412BE,
    AV_PIX_FMT_P412LE,

    AV_PIX_FMT_GBRAP14BE,
    AV_PIX_FMT_GBRAP14LE,






    AV_PIX_FMT_D3D12,

    AV_PIX_FMT_NB
};
# 559 "./libavutil/pixfmt.h"
enum AVColorPrimaries {
    AVCOL_PRI_RESERVED0 = 0,
    AVCOL_PRI_BT709 = 1,
    AVCOL_PRI_UNSPECIFIED = 2,
    AVCOL_PRI_RESERVED = 3,
    AVCOL_PRI_BT470M = 4,

    AVCOL_PRI_BT470BG = 5,
    AVCOL_PRI_SMPTE170M = 6,
    AVCOL_PRI_SMPTE240M = 7,
    AVCOL_PRI_FILM = 8,
    AVCOL_PRI_BT2020 = 9,
    AVCOL_PRI_SMPTE428 = 10,
    AVCOL_PRI_SMPTEST428_1 = AVCOL_PRI_SMPTE428,
    AVCOL_PRI_SMPTE431 = 11,
    AVCOL_PRI_SMPTE432 = 12,
    AVCOL_PRI_EBU3213 = 22,
    AVCOL_PRI_JEDEC_P22 = AVCOL_PRI_EBU3213,
    AVCOL_PRI_NB
};





enum AVColorTransferCharacteristic {
    AVCOL_TRC_RESERVED0 = 0,
    AVCOL_TRC_BT709 = 1,
    AVCOL_TRC_UNSPECIFIED = 2,
    AVCOL_TRC_RESERVED = 3,
    AVCOL_TRC_GAMMA22 = 4,
    AVCOL_TRC_GAMMA28 = 5,
    AVCOL_TRC_SMPTE170M = 6,
    AVCOL_TRC_SMPTE240M = 7,
    AVCOL_TRC_LINEAR = 8,
    AVCOL_TRC_LOG = 9,
    AVCOL_TRC_LOG_SQRT = 10,
    AVCOL_TRC_IEC61966_2_4 = 11,
    AVCOL_TRC_BT1361_ECG = 12,
    AVCOL_TRC_IEC61966_2_1 = 13,
    AVCOL_TRC_BT2020_10 = 14,
    AVCOL_TRC_BT2020_12 = 15,
    AVCOL_TRC_SMPTE2084 = 16,
    AVCOL_TRC_SMPTEST2084 = AVCOL_TRC_SMPTE2084,
    AVCOL_TRC_SMPTE428 = 17,
    AVCOL_TRC_SMPTEST428_1 = AVCOL_TRC_SMPTE428,
    AVCOL_TRC_ARIB_STD_B67 = 18,
    AVCOL_TRC_NB
};





enum AVColorSpace {
    AVCOL_SPC_RGB = 0,
    AVCOL_SPC_BT709 = 1,
    AVCOL_SPC_UNSPECIFIED = 2,
    AVCOL_SPC_RESERVED = 3,
    AVCOL_SPC_FCC = 4,
    AVCOL_SPC_BT470BG = 5,
    AVCOL_SPC_SMPTE170M = 6,
    AVCOL_SPC_SMPTE240M = 7,
    AVCOL_SPC_YCGCO = 8,
    AVCOL_SPC_YCOCG = AVCOL_SPC_YCGCO,
    AVCOL_SPC_BT2020_NCL = 9,
    AVCOL_SPC_BT2020_CL = 10,
    AVCOL_SPC_SMPTE2085 = 11,
    AVCOL_SPC_CHROMA_DERIVED_NCL = 12,
    AVCOL_SPC_CHROMA_DERIVED_CL = 13,
    AVCOL_SPC_ICTCP = 14,
    AVCOL_SPC_NB
};
# 652 "./libavutil/pixfmt.h"
enum AVColorRange {
    AVCOL_RANGE_UNSPECIFIED = 0,
# 670 "./libavutil/pixfmt.h"
    AVCOL_RANGE_MPEG = 1,
# 687 "./libavutil/pixfmt.h"
    AVCOL_RANGE_JPEG = 2,
    AVCOL_RANGE_NB
};
# 706 "./libavutil/pixfmt.h"
enum AVChromaLocation {
    AVCHROMA_LOC_UNSPECIFIED = 0,
    AVCHROMA_LOC_LEFT = 1,
    AVCHROMA_LOC_CENTER = 2,
    AVCHROMA_LOC_TOPLEFT = 3,
    AVCHROMA_LOC_TOP = 4,
    AVCHROMA_LOC_BOTTOMLEFT = 5,
    AVCHROMA_LOC_BOTTOM = 6,
    AVCHROMA_LOC_NB
};
# 308 "./libavutil/avutil.h" 2




static inline void *av_x_if_null(const void *p, const void *x)
{
    return (void *)(intptr_t)(p ? p : x);
}
# 325 "./libavutil/avutil.h"
unsigned av_int_list_length_for_size(unsigned elsize,
                                     const void *list, uint64_t term) __attribute__((pure));
# 347 "./libavutil/avutil.h"
__attribute__((deprecated))
FILE *av_fopen_utf8(const char *path, const char *mode);





AVRational av_get_time_base_q(void);
# 368 "./libavutil/avutil.h"
char *av_fourcc_make_string(char *buf, uint32_t fourcc);
# 33 "./libavcodec/avcodec.h" 2
# 1 "./libavutil/buffer.h" 1
# 28 "./libavutil/buffer.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 29 "./libavutil/buffer.h" 2
# 74 "./libavutil/buffer.h"
typedef struct AVBuffer AVBuffer;







typedef struct AVBufferRef {
    AVBuffer *buffer;






    uint8_t *data;



    size_t size;
} AVBufferRef;






AVBufferRef *av_buffer_alloc(size_t size);





AVBufferRef *av_buffer_allocz(size_t size);
# 131 "./libavutil/buffer.h"
AVBufferRef *av_buffer_create(uint8_t *data, size_t size,
                              void (*free)(void *opaque, uint8_t *data),
                              void *opaque, int flags);






void av_buffer_default_free(void *opaque, uint8_t *data);







AVBufferRef *av_buffer_ref(const AVBufferRef *buf);







void av_buffer_unref(AVBufferRef **buf);







int av_buffer_is_writable(const AVBufferRef *buf);




void *av_buffer_get_opaque(const AVBufferRef *buf);

int av_buffer_get_ref_count(const AVBufferRef *buf);
# 182 "./libavutil/buffer.h"
int av_buffer_make_writable(AVBufferRef **buf);
# 199 "./libavutil/buffer.h"
int av_buffer_realloc(AVBufferRef **buf, size_t size);
# 215 "./libavutil/buffer.h"
int av_buffer_replace(AVBufferRef **dst, const AVBufferRef *src);
# 255 "./libavutil/buffer.h"
typedef struct AVBufferPool AVBufferPool;
# 266 "./libavutil/buffer.h"
AVBufferPool *av_buffer_pool_init(size_t size, AVBufferRef* (*alloc)(size_t size));
# 283 "./libavutil/buffer.h"
AVBufferPool *av_buffer_pool_init2(size_t size, void *opaque,
                                   AVBufferRef* (*alloc)(void *opaque, size_t size),
                                   void (*pool_free)(void *opaque));
# 295 "./libavutil/buffer.h"
void av_buffer_pool_uninit(AVBufferPool **pool);







AVBufferRef *av_buffer_pool_get(AVBufferPool *pool);
# 316 "./libavutil/buffer.h"
void *av_buffer_pool_buffer_get_opaque(const AVBufferRef *ref);
# 34 "./libavcodec/avcodec.h" 2
# 1 "./libavutil/channel_layout.h" 1
# 47 "./libavutil/channel_layout.h"
enum AVChannel {

    AV_CHAN_NONE = -1,
    AV_CHAN_FRONT_LEFT,
    AV_CHAN_FRONT_RIGHT,
    AV_CHAN_FRONT_CENTER,
    AV_CHAN_LOW_FREQUENCY,
    AV_CHAN_BACK_LEFT,
    AV_CHAN_BACK_RIGHT,
    AV_CHAN_FRONT_LEFT_OF_CENTER,
    AV_CHAN_FRONT_RIGHT_OF_CENTER,
    AV_CHAN_BACK_CENTER,
    AV_CHAN_SIDE_LEFT,
    AV_CHAN_SIDE_RIGHT,
    AV_CHAN_TOP_CENTER,
    AV_CHAN_TOP_FRONT_LEFT,
    AV_CHAN_TOP_FRONT_CENTER,
    AV_CHAN_TOP_FRONT_RIGHT,
    AV_CHAN_TOP_BACK_LEFT,
    AV_CHAN_TOP_BACK_CENTER,
    AV_CHAN_TOP_BACK_RIGHT,

    AV_CHAN_STEREO_LEFT = 29,

    AV_CHAN_STEREO_RIGHT,
    AV_CHAN_WIDE_LEFT,
    AV_CHAN_WIDE_RIGHT,
    AV_CHAN_SURROUND_DIRECT_LEFT,
    AV_CHAN_SURROUND_DIRECT_RIGHT,
    AV_CHAN_LOW_FREQUENCY_2,
    AV_CHAN_TOP_SIDE_LEFT,
    AV_CHAN_TOP_SIDE_RIGHT,
    AV_CHAN_BOTTOM_FRONT_CENTER,
    AV_CHAN_BOTTOM_FRONT_LEFT,
    AV_CHAN_BOTTOM_FRONT_RIGHT,


    AV_CHAN_UNUSED = 0x200,


    AV_CHAN_UNKNOWN = 0x300,
# 101 "./libavutil/channel_layout.h"
    AV_CHAN_AMBISONIC_BASE = 0x400,


    AV_CHAN_AMBISONIC_END = 0x7ff,
};

enum AVChannelOrder {




    AV_CHANNEL_ORDER_UNSPEC,





    AV_CHANNEL_ORDER_NATIVE,






    AV_CHANNEL_ORDER_CUSTOM,
# 148 "./libavutil/channel_layout.h"
    AV_CHANNEL_ORDER_AMBISONIC,



    FF_CHANNEL_ORDER_NB
};
# 254 "./libavutil/channel_layout.h"
enum AVMatrixEncoding {
    AV_MATRIX_ENCODING_NONE,
    AV_MATRIX_ENCODING_DOLBY,
    AV_MATRIX_ENCODING_DPLII,
    AV_MATRIX_ENCODING_DPLIIX,
    AV_MATRIX_ENCODING_DPLIIZ,
    AV_MATRIX_ENCODING_DOLBYEX,
    AV_MATRIX_ENCODING_DOLBYHEADPHONE,
    AV_MATRIX_ENCODING_NB
};
# 277 "./libavutil/channel_layout.h"
typedef struct AVChannelCustom {
    enum AVChannel id;
    char name[16];
    void *opaque;
} AVChannelCustom;
# 313 "./libavutil/channel_layout.h"
typedef struct AVChannelLayout {




    enum AVChannelOrder order;




    int nb_channels;






    union {
# 345 "./libavutil/channel_layout.h"
        uint64_t mask;
# 364 "./libavutil/channel_layout.h"
        AVChannelCustom *map;
    } u;




    void *opaque;
} AVChannelLayout;
# 435 "./libavutil/channel_layout.h"
struct AVBPrint;
# 462 "./libavutil/channel_layout.h"
__attribute__((deprecated))
uint64_t av_get_channel_layout(const char *name);
# 478 "./libavutil/channel_layout.h"
__attribute__((deprecated))
int av_get_extended_channel_layout(const char *name, uint64_t* channel_layout, int* nb_channels);
# 491 "./libavutil/channel_layout.h"
__attribute__((deprecated))
void av_get_channel_layout_string(char *buf, int buf_size, int nb_channels, uint64_t channel_layout);





__attribute__((deprecated))
void av_bprint_channel_layout(struct AVBPrint *bp, int nb_channels, uint64_t channel_layout);





__attribute__((deprecated))
int av_get_channel_layout_nb_channels(uint64_t channel_layout);






__attribute__((deprecated))
int64_t av_get_default_channel_layout(int nb_channels);
# 528 "./libavutil/channel_layout.h"
__attribute__((deprecated))
int av_get_channel_layout_channel_index(uint64_t channel_layout,
                                        uint64_t channel);





__attribute__((deprecated))
uint64_t av_channel_layout_extract_channel(uint64_t channel_layout, int index);
# 546 "./libavutil/channel_layout.h"
__attribute__((deprecated))
const char *av_get_channel_name(uint64_t channel);
# 556 "./libavutil/channel_layout.h"
__attribute__((deprecated))
const char *av_get_channel_description(uint64_t channel);
# 569 "./libavutil/channel_layout.h"
__attribute__((deprecated))
int av_get_standard_channel_layout(unsigned index, uint64_t *layout,
                                   const char **name);
# 588 "./libavutil/channel_layout.h"
int av_channel_name(char *buf, size_t buf_size, enum AVChannel channel);






void av_channel_name_bprint(struct AVBPrint *bp, enum AVChannel channel_id);
# 607 "./libavutil/channel_layout.h"
int av_channel_description(char *buf, size_t buf_size, enum AVChannel channel);






void av_channel_description_bprint(struct AVBPrint *bp, enum AVChannel channel_id);







enum AVChannel av_channel_from_string(const char *name);
# 639 "./libavutil/channel_layout.h"
int av_channel_layout_custom_init(AVChannelLayout *channel_layout, int nb_channels);
# 651 "./libavutil/channel_layout.h"
int av_channel_layout_from_mask(AVChannelLayout *channel_layout, uint64_t mask);
# 670 "./libavutil/channel_layout.h"
int av_channel_layout_from_string(AVChannelLayout *channel_layout,
                                  const char *str);







void av_channel_layout_default(AVChannelLayout *ch_layout, int nb_channels);
# 690 "./libavutil/channel_layout.h"
const AVChannelLayout *av_channel_layout_standard(void **opaque);







void av_channel_layout_uninit(AVChannelLayout *channel_layout);
# 710 "./libavutil/channel_layout.h"
int av_channel_layout_copy(AVChannelLayout *dst, const AVChannelLayout *src);
# 725 "./libavutil/channel_layout.h"
int av_channel_layout_describe(const AVChannelLayout *channel_layout,
                               char *buf, size_t buf_size);







int av_channel_layout_describe_bprint(const AVChannelLayout *channel_layout,
                                      struct AVBPrint *bp);
# 746 "./libavutil/channel_layout.h"
enum AVChannel
av_channel_layout_channel_from_index(const AVChannelLayout *channel_layout, unsigned int idx);
# 758 "./libavutil/channel_layout.h"
int av_channel_layout_index_from_channel(const AVChannelLayout *channel_layout,
                                         enum AVChannel channel);
# 773 "./libavutil/channel_layout.h"
int av_channel_layout_index_from_string(const AVChannelLayout *channel_layout,
                                        const char *name);
# 788 "./libavutil/channel_layout.h"
enum AVChannel
av_channel_layout_channel_from_string(const AVChannelLayout *channel_layout,
                                      const char *name);
# 801 "./libavutil/channel_layout.h"
uint64_t av_channel_layout_subset(const AVChannelLayout *channel_layout,
                                  uint64_t mask);
# 811 "./libavutil/channel_layout.h"
int av_channel_layout_check(const AVChannelLayout *channel_layout);
# 826 "./libavutil/channel_layout.h"
int av_channel_layout_compare(const AVChannelLayout *chl, const AVChannelLayout *chl1);
# 866 "./libavutil/channel_layout.h"
int av_channel_layout_retype(AVChannelLayout *channel_layout, enum AVChannelOrder order, int flags);
# 35 "./libavcodec/avcodec.h" 2
# 1 "./libavutil/dict.h" 1
# 89 "./libavutil/dict.h"
typedef struct AVDictionaryEntry {
    char *key;
    char *value;
} AVDictionaryEntry;

typedef struct AVDictionary AVDictionary;
# 110 "./libavutil/dict.h"
AVDictionaryEntry *av_dict_get(const AVDictionary *m, const char *key,
                               const AVDictionaryEntry *prev, int flags);
# 137 "./libavutil/dict.h"
const AVDictionaryEntry *av_dict_iterate(const AVDictionary *m,
                                         const AVDictionaryEntry *prev);







int av_dict_count(const AVDictionary *m);
# 165 "./libavutil/dict.h"
int av_dict_set(AVDictionary **pm, const char *key, const char *value, int flags);







int av_dict_set_int(AVDictionary **pm, const char *key, int64_t value, int flags);
# 192 "./libavutil/dict.h"
int av_dict_parse_string(AVDictionary **pm, const char *str,
                         const char *key_val_sep, const char *pairs_sep,
                         int flags);
# 209 "./libavutil/dict.h"
int av_dict_copy(AVDictionary **dst, const AVDictionary *src, int flags);





void av_dict_free(AVDictionary **m);
# 234 "./libavutil/dict.h"
int av_dict_get_string(const AVDictionary *m, char **buffer,
                       const char key_val_sep, const char pairs_sep);
# 36 "./libavcodec/avcodec.h" 2
# 1 "./libavutil/frame.h" 1
# 28 "./libavutil/frame.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 29 "./libavutil/frame.h" 2


# 1 "./libavutil/avutil.h" 1
# 32 "./libavutil/frame.h" 2
# 1 "./libavutil/buffer.h" 1
# 33 "./libavutil/frame.h" 2
# 1 "./libavutil/channel_layout.h" 1
# 34 "./libavutil/frame.h" 2
# 1 "./libavutil/dict.h" 1
# 35 "./libavutil/frame.h" 2

# 1 "./libavutil/samplefmt.h" 1
# 37 "./libavutil/frame.h" 2
# 49 "./libavutil/frame.h"
enum AVFrameSideDataType {



    AV_FRAME_DATA_PANSCAN,





    AV_FRAME_DATA_A53_CC,




    AV_FRAME_DATA_STEREO3D,



    AV_FRAME_DATA_MATRIXENCODING,




    AV_FRAME_DATA_DOWNMIX_INFO,



    AV_FRAME_DATA_REPLAYGAIN,







    AV_FRAME_DATA_DISPLAYMATRIX,




    AV_FRAME_DATA_AFD,






    AV_FRAME_DATA_MOTION_VECTORS,
# 109 "./libavutil/frame.h"
    AV_FRAME_DATA_SKIP_SAMPLES,




    AV_FRAME_DATA_AUDIO_SERVICE_TYPE,





    AV_FRAME_DATA_MASTERING_DISPLAY_METADATA,




    AV_FRAME_DATA_GOP_TIMECODE,





    AV_FRAME_DATA_SPHERICAL,





    AV_FRAME_DATA_CONTENT_LIGHT_LEVEL,






    AV_FRAME_DATA_ICC_PROFILE,







    AV_FRAME_DATA_S12M_TIMECODE,






    AV_FRAME_DATA_DYNAMIC_HDR_PLUS,





    AV_FRAME_DATA_REGIONS_OF_INTEREST,




    AV_FRAME_DATA_VIDEO_ENC_PARAMS,







    AV_FRAME_DATA_SEI_UNREGISTERED,





    AV_FRAME_DATA_FILM_GRAIN_PARAMS,





    AV_FRAME_DATA_DETECTION_BBOXES,






    AV_FRAME_DATA_DOVI_RPU_BUFFER,






    AV_FRAME_DATA_DOVI_METADATA,






    AV_FRAME_DATA_DYNAMIC_HDR_VIVID,




    AV_FRAME_DATA_AMBIENT_VIEWING_ENVIRONMENT,
# 226 "./libavutil/frame.h"
    AV_FRAME_DATA_VIDEO_HINT,
};

enum AVActiveFormatDescription {
    AV_AFD_SAME = 8,
    AV_AFD_4_3 = 9,
    AV_AFD_16_9 = 10,
    AV_AFD_14_9 = 11,
    AV_AFD_4_3_SP_14_9 = 13,
    AV_AFD_16_9_SP_14_9 = 14,
    AV_AFD_SP_4_3 = 15,
};
# 246 "./libavutil/frame.h"
typedef struct AVFrameSideData {
    enum AVFrameSideDataType type;
    uint8_t *data;
    size_t size;
    AVDictionary *metadata;
    AVBufferRef *buf;
} AVFrameSideData;
# 265 "./libavutil/frame.h"
typedef struct AVRegionOfInterest {




    uint32_t self_size;
# 280 "./libavutil/frame.h"
    int top;
    int bottom;
    int left;
    int right;
# 307 "./libavutil/frame.h"
    AVRational qoffset;
} AVRegionOfInterest;
# 340 "./libavutil/frame.h"
typedef struct AVFrame {
# 361 "./libavutil/frame.h"
    uint8_t *data[8];
# 385 "./libavutil/frame.h"
    int linesize[8];
# 401 "./libavutil/frame.h"
    uint8_t **extended_data;
# 412 "./libavutil/frame.h"
    int width, height;







    int nb_samples;






    int format;







    __attribute__((deprecated))
    int key_frame;





    enum AVPictureType pict_type;




    AVRational sample_aspect_ratio;




    int64_t pts;






    int64_t pkt_dts;







    AVRational time_base;





    __attribute__((deprecated))
    int coded_picture_number;



    __attribute__((deprecated))
    int display_picture_number;





    int quality;
# 501 "./libavutil/frame.h"
    void *opaque;
# 521 "./libavutil/frame.h"
    int repeat_pict;







    __attribute__((deprecated))
    int interlaced_frame;






    __attribute__((deprecated))
    int top_field_first;






    __attribute__((deprecated))
    int palette_has_changed;
# 560 "./libavutil/frame.h"
    __attribute__((deprecated))
    int64_t reordered_opaque;





    int sample_rate;






    __attribute__((deprecated))
    uint64_t channel_layout;
# 590 "./libavutil/frame.h"
    AVBufferRef *buf[8];
# 604 "./libavutil/frame.h"
    AVBufferRef **extended_buf;



    int nb_extended_buf;

    AVFrameSideData **side_data;
    int nb_side_data;
# 649 "./libavutil/frame.h"
    int flags;






    enum AVColorRange color_range;

    enum AVColorPrimaries color_primaries;

    enum AVColorTransferCharacteristic color_trc;






    enum AVColorSpace colorspace;

    enum AVChromaLocation chroma_location;






    int64_t best_effort_timestamp;
# 686 "./libavutil/frame.h"
    __attribute__((deprecated))
    int64_t pkt_pos;
# 699 "./libavutil/frame.h"
    __attribute__((deprecated))
    int64_t pkt_duration;







    AVDictionary *metadata;
# 717 "./libavutil/frame.h"
    int decode_error_flags;
# 730 "./libavutil/frame.h"
    __attribute__((deprecated))
    int channels;
# 744 "./libavutil/frame.h"
    __attribute__((deprecated))
    int pkt_size;






    AVBufferRef *hw_frames_ctx;
# 768 "./libavutil/frame.h"
    AVBufferRef *opaque_ref;
# 778 "./libavutil/frame.h"
    size_t crop_top;
    size_t crop_bottom;
    size_t crop_left;
    size_t crop_right;
# 797 "./libavutil/frame.h"
    AVBufferRef *private_ref;




    AVChannelLayout ch_layout;




    int64_t duration;
} AVFrame;
# 821 "./libavutil/frame.h"
AVFrame *av_frame_alloc(void);
# 830 "./libavutil/frame.h"
void av_frame_free(AVFrame **frame);
# 847 "./libavutil/frame.h"
int av_frame_ref(AVFrame *dst, const AVFrame *src);
# 860 "./libavutil/frame.h"
int av_frame_replace(AVFrame *dst, const AVFrame *src);
# 869 "./libavutil/frame.h"
AVFrame *av_frame_clone(const AVFrame *src);




void av_frame_unref(AVFrame *frame);
# 883 "./libavutil/frame.h"
void av_frame_move_ref(AVFrame *dst, AVFrame *src);
# 908 "./libavutil/frame.h"
int av_frame_get_buffer(AVFrame *frame, int align);
# 922 "./libavutil/frame.h"
int av_frame_is_writable(AVFrame *frame);
# 936 "./libavutil/frame.h"
int av_frame_make_writable(AVFrame *frame);
# 949 "./libavutil/frame.h"
int av_frame_copy(AVFrame *dst, const AVFrame *src);
# 959 "./libavutil/frame.h"
int av_frame_copy_props(AVFrame *dst, const AVFrame *src);
# 970 "./libavutil/frame.h"
AVBufferRef *av_frame_get_plane_buffer(const AVFrame *frame, int plane);
# 981 "./libavutil/frame.h"
AVFrameSideData *av_frame_new_side_data(AVFrame *frame,
                                        enum AVFrameSideDataType type,
                                        size_t size);
# 997 "./libavutil/frame.h"
AVFrameSideData *av_frame_new_side_data_from_buf(AVFrame *frame,
                                                 enum AVFrameSideDataType type,
                                                 AVBufferRef *buf);





AVFrameSideData *av_frame_get_side_data(const AVFrame *frame,
                                        enum AVFrameSideDataType type);




void av_frame_remove_side_data(AVFrame *frame, enum AVFrameSideDataType type);





enum {
# 1026 "./libavutil/frame.h"
    AV_FRAME_CROP_UNALIGNED = 1 << 0,
};
# 1045 "./libavutil/frame.h"
int av_frame_apply_cropping(AVFrame *frame, int flags);




const char *av_frame_side_data_name(enum AVFrameSideDataType type);
# 37 "./libavcodec/avcodec.h" 2
# 1 "./libavutil/log.h" 1
# 38 "./libavcodec/avcodec.h" 2
# 1 "./libavutil/pixfmt.h" 1
# 39 "./libavcodec/avcodec.h" 2
# 1 "./libavutil/rational.h" 1
# 40 "./libavcodec/avcodec.h" 2

# 1 "./libavcodec/codec.h" 1
# 27 "./libavcodec/codec.h"
# 1 "./libavutil/hwcontext.h" 1
# 23 "./libavutil/hwcontext.h"
# 1 "./libavutil/frame.h" 1
# 24 "./libavutil/hwcontext.h" 2



enum AVHWDeviceType {
    AV_HWDEVICE_TYPE_NONE,
    AV_HWDEVICE_TYPE_VDPAU,
    AV_HWDEVICE_TYPE_CUDA,
    AV_HWDEVICE_TYPE_VAAPI,
    AV_HWDEVICE_TYPE_DXVA2,
    AV_HWDEVICE_TYPE_QSV,
    AV_HWDEVICE_TYPE_VIDEOTOOLBOX,
    AV_HWDEVICE_TYPE_D3D11VA,
    AV_HWDEVICE_TYPE_DRM,
    AV_HWDEVICE_TYPE_OPENCL,
    AV_HWDEVICE_TYPE_MEDIACODEC,
    AV_HWDEVICE_TYPE_VULKAN,
    AV_HWDEVICE_TYPE_D3D12VA,
};

typedef struct AVHWDeviceInternal AVHWDeviceInternal;
# 62 "./libavutil/hwcontext.h"
typedef struct AVHWDeviceContext {



    const AVClass *av_class;





    AVHWDeviceInternal *internal;







    enum AVHWDeviceType type;
# 93 "./libavutil/hwcontext.h"
    void *hwctx;
# 105 "./libavutil/hwcontext.h"
    void (*free)(struct AVHWDeviceContext *ctx);




    void *user_opaque;
} AVHWDeviceContext;

typedef struct AVHWFramesInternal AVHWFramesInternal;
# 125 "./libavutil/hwcontext.h"
typedef struct AVHWFramesContext {



    const AVClass *av_class;





    AVHWFramesInternal *internal;






    AVBufferRef *device_ref;







    AVHWDeviceContext *device_ctx;
# 166 "./libavutil/hwcontext.h"
    void *hwctx;







    void (*free)(struct AVHWFramesContext *ctx);




    void *user_opaque;
# 194 "./libavutil/hwcontext.h"
    AVBufferPool *pool;
# 203 "./libavutil/hwcontext.h"
    int initial_pool_size;
# 213 "./libavutil/hwcontext.h"
    enum AVPixelFormat format;
# 226 "./libavutil/hwcontext.h"
    enum AVPixelFormat sw_format;






    int width, height;
} AVHWFramesContext;
# 243 "./libavutil/hwcontext.h"
enum AVHWDeviceType av_hwdevice_find_type_by_name(const char *name);







const char *av_hwdevice_get_type_name(enum AVHWDeviceType type);
# 261 "./libavutil/hwcontext.h"
enum AVHWDeviceType av_hwdevice_iterate_types(enum AVHWDeviceType prev);
# 270 "./libavutil/hwcontext.h"
AVBufferRef *av_hwdevice_ctx_alloc(enum AVHWDeviceType type);
# 280 "./libavutil/hwcontext.h"
int av_hwdevice_ctx_init(AVBufferRef *ref);
# 307 "./libavutil/hwcontext.h"
int av_hwdevice_ctx_create(AVBufferRef **device_ctx, enum AVHWDeviceType type,
                           const char *device, AVDictionary *opts, int flags);
# 331 "./libavutil/hwcontext.h"
int av_hwdevice_ctx_create_derived(AVBufferRef **dst_ctx,
                                   enum AVHWDeviceType type,
                                   AVBufferRef *src_ctx, int flags);
# 351 "./libavutil/hwcontext.h"
int av_hwdevice_ctx_create_derived_opts(AVBufferRef **dst_ctx,
                                        enum AVHWDeviceType type,
                                        AVBufferRef *src_ctx,
                                        AVDictionary *options, int flags);
# 365 "./libavutil/hwcontext.h"
AVBufferRef *av_hwframe_ctx_alloc(AVBufferRef *device_ctx);
# 375 "./libavutil/hwcontext.h"
int av_hwframe_ctx_init(AVBufferRef *ref);
# 386 "./libavutil/hwcontext.h"
int av_hwframe_get_buffer(AVBufferRef *hwframe_ctx, AVFrame *frame, int flags);
# 417 "./libavutil/hwcontext.h"
int av_hwframe_transfer_data(AVFrame *dst, const AVFrame *src, int flags);

enum AVHWFrameTransferDirection {



    AV_HWFRAME_TRANSFER_DIRECTION_FROM,




    AV_HWFRAME_TRANSFER_DIRECTION_TO,
};
# 446 "./libavutil/hwcontext.h"
int av_hwframe_transfer_get_formats(AVBufferRef *hwframe_ctx,
                                    enum AVHWFrameTransferDirection dir,
                                    enum AVPixelFormat **formats, int flags);
# 457 "./libavutil/hwcontext.h"
typedef struct AVHWFramesConstraints {




    enum AVPixelFormat *valid_hw_formats;






    enum AVPixelFormat *valid_sw_formats;





    int min_width;
    int min_height;





    int max_width;
    int max_height;
} AVHWFramesConstraints;
# 496 "./libavutil/hwcontext.h"
void *av_hwdevice_hwconfig_alloc(AVBufferRef *device_ctx);
# 510 "./libavutil/hwcontext.h"
AVHWFramesConstraints *av_hwdevice_get_hwframe_constraints(AVBufferRef *ref,
                                                           const void *hwconfig);






void av_hwframe_constraints_free(AVHWFramesConstraints **constraints);





enum {



    AV_HWFRAME_MAP_READ = 1 << 0,



    AV_HWFRAME_MAP_WRITE = 1 << 1,





    AV_HWFRAME_MAP_OVERWRITE = 1 << 2,





    AV_HWFRAME_MAP_DIRECT = 1 << 3,
};
# 587 "./libavutil/hwcontext.h"
int av_hwframe_map(AVFrame *dst, const AVFrame *src, int flags);
# 608 "./libavutil/hwcontext.h"
int av_hwframe_ctx_create_derived(AVBufferRef **derived_frame_ctx,
                                  enum AVPixelFormat format,
                                  AVBufferRef *derived_device_ctx,
                                  AVBufferRef *source_frame_ctx,
                                  int flags);
# 28 "./libavcodec/codec.h" 2





# 1 "./libavcodec/codec_id.h" 1
# 27 "./libavcodec/codec_id.h"
# 1 "./libavcodec/version_major.h" 1
# 28 "./libavcodec/codec_id.h" 2
# 49 "./libavcodec/codec_id.h"
enum AVCodecID {
    AV_CODEC_ID_NONE,


    AV_CODEC_ID_MPEG1VIDEO,
    AV_CODEC_ID_MPEG2VIDEO,
    AV_CODEC_ID_H261,
    AV_CODEC_ID_H263,
    AV_CODEC_ID_RV10,
    AV_CODEC_ID_RV20,
    AV_CODEC_ID_MJPEG,
    AV_CODEC_ID_MJPEGB,
    AV_CODEC_ID_LJPEG,
    AV_CODEC_ID_SP5X,
    AV_CODEC_ID_JPEGLS,
    AV_CODEC_ID_MPEG4,
    AV_CODEC_ID_RAWVIDEO,
    AV_CODEC_ID_MSMPEG4V1,
    AV_CODEC_ID_MSMPEG4V2,
    AV_CODEC_ID_MSMPEG4V3,
    AV_CODEC_ID_WMV1,
    AV_CODEC_ID_WMV2,
    AV_CODEC_ID_H263P,
    AV_CODEC_ID_H263I,
    AV_CODEC_ID_FLV1,
    AV_CODEC_ID_SVQ1,
    AV_CODEC_ID_SVQ3,
    AV_CODEC_ID_DVVIDEO,
    AV_CODEC_ID_HUFFYUV,
    AV_CODEC_ID_CYUV,
    AV_CODEC_ID_H264,
    AV_CODEC_ID_INDEO3,
    AV_CODEC_ID_VP3,
    AV_CODEC_ID_THEORA,
    AV_CODEC_ID_ASV1,
    AV_CODEC_ID_ASV2,
    AV_CODEC_ID_FFV1,
    AV_CODEC_ID_4XM,
    AV_CODEC_ID_VCR1,
    AV_CODEC_ID_CLJR,
    AV_CODEC_ID_MDEC,
    AV_CODEC_ID_ROQ,
    AV_CODEC_ID_INTERPLAY_VIDEO,
    AV_CODEC_ID_XAN_WC3,
    AV_CODEC_ID_XAN_WC4,
    AV_CODEC_ID_RPZA,
    AV_CODEC_ID_CINEPAK,
    AV_CODEC_ID_WS_VQA,
    AV_CODEC_ID_MSRLE,
    AV_CODEC_ID_MSVIDEO1,
    AV_CODEC_ID_IDCIN,
    AV_CODEC_ID_8BPS,
    AV_CODEC_ID_SMC,
    AV_CODEC_ID_FLIC,
    AV_CODEC_ID_TRUEMOTION1,
    AV_CODEC_ID_VMDVIDEO,
    AV_CODEC_ID_MSZH,
    AV_CODEC_ID_ZLIB,
    AV_CODEC_ID_QTRLE,
    AV_CODEC_ID_TSCC,
    AV_CODEC_ID_ULTI,
    AV_CODEC_ID_QDRAW,
    AV_CODEC_ID_VIXL,
    AV_CODEC_ID_QPEG,
    AV_CODEC_ID_PNG,
    AV_CODEC_ID_PPM,
    AV_CODEC_ID_PBM,
    AV_CODEC_ID_PGM,
    AV_CODEC_ID_PGMYUV,
    AV_CODEC_ID_PAM,
    AV_CODEC_ID_FFVHUFF,
    AV_CODEC_ID_RV30,
    AV_CODEC_ID_RV40,
    AV_CODEC_ID_VC1,
    AV_CODEC_ID_WMV3,
    AV_CODEC_ID_LOCO,
    AV_CODEC_ID_WNV1,
    AV_CODEC_ID_AASC,
    AV_CODEC_ID_INDEO2,
    AV_CODEC_ID_FRAPS,
    AV_CODEC_ID_TRUEMOTION2,
    AV_CODEC_ID_BMP,
    AV_CODEC_ID_CSCD,
    AV_CODEC_ID_MMVIDEO,
    AV_CODEC_ID_ZMBV,
    AV_CODEC_ID_AVS,
    AV_CODEC_ID_SMACKVIDEO,
    AV_CODEC_ID_NUV,
    AV_CODEC_ID_KMVC,
    AV_CODEC_ID_FLASHSV,
    AV_CODEC_ID_CAVS,
    AV_CODEC_ID_JPEG2000,
    AV_CODEC_ID_VMNC,
    AV_CODEC_ID_VP5,
    AV_CODEC_ID_VP6,
    AV_CODEC_ID_VP6F,
    AV_CODEC_ID_TARGA,
    AV_CODEC_ID_DSICINVIDEO,
    AV_CODEC_ID_TIERTEXSEQVIDEO,
    AV_CODEC_ID_TIFF,
    AV_CODEC_ID_GIF,
    AV_CODEC_ID_DXA,
    AV_CODEC_ID_DNXHD,
    AV_CODEC_ID_THP,
    AV_CODEC_ID_SGI,
    AV_CODEC_ID_C93,
    AV_CODEC_ID_BETHSOFTVID,
    AV_CODEC_ID_PTX,
    AV_CODEC_ID_TXD,
    AV_CODEC_ID_VP6A,
    AV_CODEC_ID_AMV,
    AV_CODEC_ID_VB,
    AV_CODEC_ID_PCX,
    AV_CODEC_ID_SUNRAST,
    AV_CODEC_ID_INDEO4,
    AV_CODEC_ID_INDEO5,
    AV_CODEC_ID_MIMIC,
    AV_CODEC_ID_RL2,
    AV_CODEC_ID_ESCAPE124,
    AV_CODEC_ID_DIRAC,
    AV_CODEC_ID_BFI,
    AV_CODEC_ID_CMV,
    AV_CODEC_ID_MOTIONPIXELS,
    AV_CODEC_ID_TGV,
    AV_CODEC_ID_TGQ,
    AV_CODEC_ID_TQI,
    AV_CODEC_ID_AURA,
    AV_CODEC_ID_AURA2,
    AV_CODEC_ID_V210X,
    AV_CODEC_ID_TMV,
    AV_CODEC_ID_V210,
    AV_CODEC_ID_DPX,
    AV_CODEC_ID_MAD,
    AV_CODEC_ID_FRWU,
    AV_CODEC_ID_FLASHSV2,
    AV_CODEC_ID_CDGRAPHICS,
    AV_CODEC_ID_R210,
    AV_CODEC_ID_ANM,
    AV_CODEC_ID_BINKVIDEO,
    AV_CODEC_ID_IFF_ILBM,

    AV_CODEC_ID_KGV1,
    AV_CODEC_ID_YOP,
    AV_CODEC_ID_VP8,
    AV_CODEC_ID_PICTOR,
    AV_CODEC_ID_ANSI,
    AV_CODEC_ID_A64_MULTI,
    AV_CODEC_ID_A64_MULTI5,
    AV_CODEC_ID_R10K,
    AV_CODEC_ID_MXPEG,
    AV_CODEC_ID_LAGARITH,
    AV_CODEC_ID_PRORES,
    AV_CODEC_ID_JV,
    AV_CODEC_ID_DFA,
    AV_CODEC_ID_WMV3IMAGE,
    AV_CODEC_ID_VC1IMAGE,
    AV_CODEC_ID_UTVIDEO,
    AV_CODEC_ID_BMV_VIDEO,
    AV_CODEC_ID_VBLE,
    AV_CODEC_ID_DXTORY,
    AV_CODEC_ID_V410,
    AV_CODEC_ID_XWD,
    AV_CODEC_ID_CDXL,
    AV_CODEC_ID_XBM,
    AV_CODEC_ID_ZEROCODEC,
    AV_CODEC_ID_MSS1,
    AV_CODEC_ID_MSA1,
    AV_CODEC_ID_TSCC2,
    AV_CODEC_ID_MTS2,
    AV_CODEC_ID_CLLC,
    AV_CODEC_ID_MSS2,
    AV_CODEC_ID_VP9,
    AV_CODEC_ID_AIC,
    AV_CODEC_ID_ESCAPE130,
    AV_CODEC_ID_G2M,
    AV_CODEC_ID_WEBP,
    AV_CODEC_ID_HNM4_VIDEO,
    AV_CODEC_ID_HEVC,

    AV_CODEC_ID_FIC,
    AV_CODEC_ID_ALIAS_PIX,
    AV_CODEC_ID_BRENDER_PIX,
    AV_CODEC_ID_PAF_VIDEO,
    AV_CODEC_ID_EXR,
    AV_CODEC_ID_VP7,
    AV_CODEC_ID_SANM,
    AV_CODEC_ID_SGIRLE,
    AV_CODEC_ID_MVC1,
    AV_CODEC_ID_MVC2,
    AV_CODEC_ID_HQX,
    AV_CODEC_ID_TDSC,
    AV_CODEC_ID_HQ_HQA,
    AV_CODEC_ID_HAP,
    AV_CODEC_ID_DDS,
    AV_CODEC_ID_DXV,
    AV_CODEC_ID_SCREENPRESSO,
    AV_CODEC_ID_RSCC,
    AV_CODEC_ID_AVS2,
    AV_CODEC_ID_PGX,
    AV_CODEC_ID_AVS3,
    AV_CODEC_ID_MSP2,
    AV_CODEC_ID_VVC,

    AV_CODEC_ID_Y41P,
    AV_CODEC_ID_AVRP,
    AV_CODEC_ID_012V,
    AV_CODEC_ID_AVUI,

    AV_CODEC_ID_AYUV,

    AV_CODEC_ID_TARGA_Y216,
    AV_CODEC_ID_V308,
    AV_CODEC_ID_V408,
    AV_CODEC_ID_YUV4,
    AV_CODEC_ID_AVRN,
    AV_CODEC_ID_CPIA,
    AV_CODEC_ID_XFACE,
    AV_CODEC_ID_SNOW,
    AV_CODEC_ID_SMVJPEG,
    AV_CODEC_ID_APNG,
    AV_CODEC_ID_DAALA,
    AV_CODEC_ID_CFHD,
    AV_CODEC_ID_TRUEMOTION2RT,
    AV_CODEC_ID_M101,
    AV_CODEC_ID_MAGICYUV,
    AV_CODEC_ID_SHEERVIDEO,
    AV_CODEC_ID_YLC,
    AV_CODEC_ID_PSD,
    AV_CODEC_ID_PIXLET,
    AV_CODEC_ID_SPEEDHQ,
    AV_CODEC_ID_FMVC,
    AV_CODEC_ID_SCPR,
    AV_CODEC_ID_CLEARVIDEO,
    AV_CODEC_ID_XPM,
    AV_CODEC_ID_AV1,
    AV_CODEC_ID_BITPACKED,
    AV_CODEC_ID_MSCC,
    AV_CODEC_ID_SRGC,
    AV_CODEC_ID_SVG,
    AV_CODEC_ID_GDV,
    AV_CODEC_ID_FITS,
    AV_CODEC_ID_IMM4,
    AV_CODEC_ID_PROSUMER,
    AV_CODEC_ID_MWSC,
    AV_CODEC_ID_WCMV,
    AV_CODEC_ID_RASC,
    AV_CODEC_ID_HYMT,
    AV_CODEC_ID_ARBC,
    AV_CODEC_ID_AGM,
    AV_CODEC_ID_LSCR,
    AV_CODEC_ID_VP4,
    AV_CODEC_ID_IMM5,
    AV_CODEC_ID_MVDV,
    AV_CODEC_ID_MVHA,
    AV_CODEC_ID_CDTOONS,
    AV_CODEC_ID_MV30,
    AV_CODEC_ID_NOTCHLC,
    AV_CODEC_ID_PFM,
    AV_CODEC_ID_MOBICLIP,
    AV_CODEC_ID_PHOTOCD,
    AV_CODEC_ID_IPU,
    AV_CODEC_ID_ARGO,
    AV_CODEC_ID_CRI,
    AV_CODEC_ID_SIMBIOSIS_IMX,
    AV_CODEC_ID_SGA_VIDEO,
    AV_CODEC_ID_GEM,
    AV_CODEC_ID_VBN,
    AV_CODEC_ID_JPEGXL,
    AV_CODEC_ID_QOI,
    AV_CODEC_ID_PHM,
    AV_CODEC_ID_RADIANCE_HDR,
    AV_CODEC_ID_WBMP,
    AV_CODEC_ID_MEDIA100,
    AV_CODEC_ID_VQC,
    AV_CODEC_ID_PDV,
    AV_CODEC_ID_EVC,
    AV_CODEC_ID_RTV1,
    AV_CODEC_ID_VMIX,
    AV_CODEC_ID_LEAD,


    AV_CODEC_ID_FIRST_AUDIO = 0x10000,
    AV_CODEC_ID_PCM_S16LE = 0x10000,
    AV_CODEC_ID_PCM_S16BE,
    AV_CODEC_ID_PCM_U16LE,
    AV_CODEC_ID_PCM_U16BE,
    AV_CODEC_ID_PCM_S8,
    AV_CODEC_ID_PCM_U8,
    AV_CODEC_ID_PCM_MULAW,
    AV_CODEC_ID_PCM_ALAW,
    AV_CODEC_ID_PCM_S32LE,
    AV_CODEC_ID_PCM_S32BE,
    AV_CODEC_ID_PCM_U32LE,
    AV_CODEC_ID_PCM_U32BE,
    AV_CODEC_ID_PCM_S24LE,
    AV_CODEC_ID_PCM_S24BE,
    AV_CODEC_ID_PCM_U24LE,
    AV_CODEC_ID_PCM_U24BE,
    AV_CODEC_ID_PCM_S24DAUD,
    AV_CODEC_ID_PCM_ZORK,
    AV_CODEC_ID_PCM_S16LE_PLANAR,
    AV_CODEC_ID_PCM_DVD,
    AV_CODEC_ID_PCM_F32BE,
    AV_CODEC_ID_PCM_F32LE,
    AV_CODEC_ID_PCM_F64BE,
    AV_CODEC_ID_PCM_F64LE,
    AV_CODEC_ID_PCM_BLURAY,
    AV_CODEC_ID_PCM_LXF,
    AV_CODEC_ID_S302M,
    AV_CODEC_ID_PCM_S8_PLANAR,
    AV_CODEC_ID_PCM_S24LE_PLANAR,
    AV_CODEC_ID_PCM_S32LE_PLANAR,
    AV_CODEC_ID_PCM_S16BE_PLANAR,
    AV_CODEC_ID_PCM_S64LE,
    AV_CODEC_ID_PCM_S64BE,
    AV_CODEC_ID_PCM_F16LE,
    AV_CODEC_ID_PCM_F24LE,
    AV_CODEC_ID_PCM_VIDC,
    AV_CODEC_ID_PCM_SGA,


    AV_CODEC_ID_ADPCM_IMA_QT = 0x11000,
    AV_CODEC_ID_ADPCM_IMA_WAV,
    AV_CODEC_ID_ADPCM_IMA_DK3,
    AV_CODEC_ID_ADPCM_IMA_DK4,
    AV_CODEC_ID_ADPCM_IMA_WS,
    AV_CODEC_ID_ADPCM_IMA_SMJPEG,
    AV_CODEC_ID_ADPCM_MS,
    AV_CODEC_ID_ADPCM_4XM,
    AV_CODEC_ID_ADPCM_XA,
    AV_CODEC_ID_ADPCM_ADX,
    AV_CODEC_ID_ADPCM_EA,
    AV_CODEC_ID_ADPCM_G726,
    AV_CODEC_ID_ADPCM_CT,
    AV_CODEC_ID_ADPCM_SWF,
    AV_CODEC_ID_ADPCM_YAMAHA,
    AV_CODEC_ID_ADPCM_SBPRO_4,
    AV_CODEC_ID_ADPCM_SBPRO_3,
    AV_CODEC_ID_ADPCM_SBPRO_2,
    AV_CODEC_ID_ADPCM_THP,
    AV_CODEC_ID_ADPCM_IMA_AMV,
    AV_CODEC_ID_ADPCM_EA_R1,
    AV_CODEC_ID_ADPCM_EA_R3,
    AV_CODEC_ID_ADPCM_EA_R2,
    AV_CODEC_ID_ADPCM_IMA_EA_SEAD,
    AV_CODEC_ID_ADPCM_IMA_EA_EACS,
    AV_CODEC_ID_ADPCM_EA_XAS,
    AV_CODEC_ID_ADPCM_EA_MAXIS_XA,
    AV_CODEC_ID_ADPCM_IMA_ISS,
    AV_CODEC_ID_ADPCM_G722,
    AV_CODEC_ID_ADPCM_IMA_APC,
    AV_CODEC_ID_ADPCM_VIMA,
    AV_CODEC_ID_ADPCM_AFC,
    AV_CODEC_ID_ADPCM_IMA_OKI,
    AV_CODEC_ID_ADPCM_DTK,
    AV_CODEC_ID_ADPCM_IMA_RAD,
    AV_CODEC_ID_ADPCM_G726LE,
    AV_CODEC_ID_ADPCM_THP_LE,
    AV_CODEC_ID_ADPCM_PSX,
    AV_CODEC_ID_ADPCM_AICA,
    AV_CODEC_ID_ADPCM_IMA_DAT4,
    AV_CODEC_ID_ADPCM_MTAF,
    AV_CODEC_ID_ADPCM_AGM,
    AV_CODEC_ID_ADPCM_ARGO,
    AV_CODEC_ID_ADPCM_IMA_SSI,
    AV_CODEC_ID_ADPCM_ZORK,
    AV_CODEC_ID_ADPCM_IMA_APM,
    AV_CODEC_ID_ADPCM_IMA_ALP,
    AV_CODEC_ID_ADPCM_IMA_MTF,
    AV_CODEC_ID_ADPCM_IMA_CUNNING,
    AV_CODEC_ID_ADPCM_IMA_MOFLEX,
    AV_CODEC_ID_ADPCM_IMA_ACORN,
    AV_CODEC_ID_ADPCM_XMD,


    AV_CODEC_ID_AMR_NB = 0x12000,
    AV_CODEC_ID_AMR_WB,


    AV_CODEC_ID_RA_144 = 0x13000,
    AV_CODEC_ID_RA_288,


    AV_CODEC_ID_ROQ_DPCM = 0x14000,
    AV_CODEC_ID_INTERPLAY_DPCM,
    AV_CODEC_ID_XAN_DPCM,
    AV_CODEC_ID_SOL_DPCM,
    AV_CODEC_ID_SDX2_DPCM,
    AV_CODEC_ID_GREMLIN_DPCM,
    AV_CODEC_ID_DERF_DPCM,
    AV_CODEC_ID_WADY_DPCM,
    AV_CODEC_ID_CBD2_DPCM,


    AV_CODEC_ID_MP2 = 0x15000,
    AV_CODEC_ID_MP3,
    AV_CODEC_ID_AAC,
    AV_CODEC_ID_AC3,
    AV_CODEC_ID_DTS,
    AV_CODEC_ID_VORBIS,
    AV_CODEC_ID_DVAUDIO,
    AV_CODEC_ID_WMAV1,
    AV_CODEC_ID_WMAV2,
    AV_CODEC_ID_MACE3,
    AV_CODEC_ID_MACE6,
    AV_CODEC_ID_VMDAUDIO,
    AV_CODEC_ID_FLAC,
    AV_CODEC_ID_MP3ADU,
    AV_CODEC_ID_MP3ON4,
    AV_CODEC_ID_SHORTEN,
    AV_CODEC_ID_ALAC,
    AV_CODEC_ID_WESTWOOD_SND1,
    AV_CODEC_ID_GSM,
    AV_CODEC_ID_QDM2,
    AV_CODEC_ID_COOK,
    AV_CODEC_ID_TRUESPEECH,
    AV_CODEC_ID_TTA,
    AV_CODEC_ID_SMACKAUDIO,
    AV_CODEC_ID_QCELP,
    AV_CODEC_ID_WAVPACK,
    AV_CODEC_ID_DSICINAUDIO,
    AV_CODEC_ID_IMC,
    AV_CODEC_ID_MUSEPACK7,
    AV_CODEC_ID_MLP,
    AV_CODEC_ID_GSM_MS,
    AV_CODEC_ID_ATRAC3,
    AV_CODEC_ID_APE,
    AV_CODEC_ID_NELLYMOSER,
    AV_CODEC_ID_MUSEPACK8,
    AV_CODEC_ID_SPEEX,
    AV_CODEC_ID_WMAVOICE,
    AV_CODEC_ID_WMAPRO,
    AV_CODEC_ID_WMALOSSLESS,
    AV_CODEC_ID_ATRAC3P,
    AV_CODEC_ID_EAC3,
    AV_CODEC_ID_SIPR,
    AV_CODEC_ID_MP1,
    AV_CODEC_ID_TWINVQ,
    AV_CODEC_ID_TRUEHD,
    AV_CODEC_ID_MP4ALS,
    AV_CODEC_ID_ATRAC1,
    AV_CODEC_ID_BINKAUDIO_RDFT,
    AV_CODEC_ID_BINKAUDIO_DCT,
    AV_CODEC_ID_AAC_LATM,
    AV_CODEC_ID_QDMC,
    AV_CODEC_ID_CELT,
    AV_CODEC_ID_G723_1,
    AV_CODEC_ID_G729,
    AV_CODEC_ID_8SVX_EXP,
    AV_CODEC_ID_8SVX_FIB,
    AV_CODEC_ID_BMV_AUDIO,
    AV_CODEC_ID_RALF,
    AV_CODEC_ID_IAC,
    AV_CODEC_ID_ILBC,
    AV_CODEC_ID_OPUS,
    AV_CODEC_ID_COMFORT_NOISE,
    AV_CODEC_ID_TAK,
    AV_CODEC_ID_METASOUND,
    AV_CODEC_ID_PAF_AUDIO,
    AV_CODEC_ID_ON2AVC,
    AV_CODEC_ID_DSS_SP,
    AV_CODEC_ID_CODEC2,
    AV_CODEC_ID_FFWAVESYNTH,
    AV_CODEC_ID_SONIC,
    AV_CODEC_ID_SONIC_LS,
    AV_CODEC_ID_EVRC,
    AV_CODEC_ID_SMV,
    AV_CODEC_ID_DSD_LSBF,
    AV_CODEC_ID_DSD_MSBF,
    AV_CODEC_ID_DSD_LSBF_PLANAR,
    AV_CODEC_ID_DSD_MSBF_PLANAR,
    AV_CODEC_ID_4GV,
    AV_CODEC_ID_INTERPLAY_ACM,
    AV_CODEC_ID_XMA1,
    AV_CODEC_ID_XMA2,
    AV_CODEC_ID_DST,
    AV_CODEC_ID_ATRAC3AL,
    AV_CODEC_ID_ATRAC3PAL,
    AV_CODEC_ID_DOLBY_E,
    AV_CODEC_ID_APTX,
    AV_CODEC_ID_APTX_HD,
    AV_CODEC_ID_SBC,
    AV_CODEC_ID_ATRAC9,
    AV_CODEC_ID_HCOM,
    AV_CODEC_ID_ACELP_KELVIN,
    AV_CODEC_ID_MPEGH_3D_AUDIO,
    AV_CODEC_ID_SIREN,
    AV_CODEC_ID_HCA,
    AV_CODEC_ID_FASTAUDIO,
    AV_CODEC_ID_MSNSIREN,
    AV_CODEC_ID_DFPWM,
    AV_CODEC_ID_BONK,
    AV_CODEC_ID_MISC4,
    AV_CODEC_ID_APAC,
    AV_CODEC_ID_FTR,
    AV_CODEC_ID_WAVARC,
    AV_CODEC_ID_RKA,
    AV_CODEC_ID_AC4,
    AV_CODEC_ID_OSQ,
    AV_CODEC_ID_QOA,


    AV_CODEC_ID_FIRST_SUBTITLE = 0x17000,
    AV_CODEC_ID_DVD_SUBTITLE = 0x17000,
    AV_CODEC_ID_DVB_SUBTITLE,
    AV_CODEC_ID_TEXT,
    AV_CODEC_ID_XSUB,
    AV_CODEC_ID_SSA,
    AV_CODEC_ID_MOV_TEXT,
    AV_CODEC_ID_HDMV_PGS_SUBTITLE,
    AV_CODEC_ID_DVB_TELETEXT,
    AV_CODEC_ID_SRT,
    AV_CODEC_ID_MICRODVD,
    AV_CODEC_ID_EIA_608,
    AV_CODEC_ID_JACOSUB,
    AV_CODEC_ID_SAMI,
    AV_CODEC_ID_REALTEXT,
    AV_CODEC_ID_STL,
    AV_CODEC_ID_SUBVIEWER1,
    AV_CODEC_ID_SUBVIEWER,
    AV_CODEC_ID_SUBRIP,
    AV_CODEC_ID_WEBVTT,
    AV_CODEC_ID_MPL2,
    AV_CODEC_ID_VPLAYER,
    AV_CODEC_ID_PJS,
    AV_CODEC_ID_ASS,
    AV_CODEC_ID_HDMV_TEXT_SUBTITLE,
    AV_CODEC_ID_TTML,
    AV_CODEC_ID_ARIB_CAPTION,


    AV_CODEC_ID_FIRST_UNKNOWN = 0x18000,
    AV_CODEC_ID_TTF = 0x18000,

    AV_CODEC_ID_SCTE_35,
    AV_CODEC_ID_EPG,
    AV_CODEC_ID_BINTEXT,
    AV_CODEC_ID_XBIN,
    AV_CODEC_ID_IDF,
    AV_CODEC_ID_OTF,
    AV_CODEC_ID_SMPTE_KLV,
    AV_CODEC_ID_DVD_NAV,
    AV_CODEC_ID_TIMED_ID3,
    AV_CODEC_ID_BIN_DATA,
    AV_CODEC_ID_SMPTE_2038,


    AV_CODEC_ID_PROBE = 0x19000,

    AV_CODEC_ID_MPEG2TS = 0x20000,

    AV_CODEC_ID_MPEG4SYSTEMS = 0x20001,

    AV_CODEC_ID_FFMETADATA = 0x21000,
    AV_CODEC_ID_WRAPPED_AVFRAME = 0x21001,




    AV_CODEC_ID_VNULL,




    AV_CODEC_ID_ANULL,
};




enum AVMediaType avcodec_get_type(enum AVCodecID codec_id);





const char *avcodec_get_name(enum AVCodecID id);







int av_get_bits_per_sample(enum AVCodecID codec_id);
# 643 "./libavcodec/codec_id.h"
int av_get_exact_bits_per_sample(enum AVCodecID codec_id);
# 656 "./libavcodec/codec_id.h"
const char *avcodec_profile_name(enum AVCodecID codec_id, int profile);







enum AVCodecID av_get_pcm_codec(enum AVSampleFormat fmt, int be);
# 34 "./libavcodec/codec.h" 2
# 1 "./libavcodec/version_major.h" 1
# 35 "./libavcodec/codec.h" 2
# 179 "./libavcodec/codec.h"
typedef struct AVProfile {
    int profile;
    const char *name;
} AVProfile;




typedef struct AVCodec {






    const char *name;




    const char *long_name;
    enum AVMediaType type;
    enum AVCodecID id;




    int capabilities;
    uint8_t max_lowres;
    const AVRational *supported_framerates;
    const enum AVPixelFormat *pix_fmts;
    const int *supported_samplerates;
    const enum AVSampleFormat *sample_fmts;




    __attribute__((deprecated))
    const uint64_t *channel_layouts;

    const AVClass *priv_class;
    const AVProfile *profiles;
# 232 "./libavcodec/codec.h"
    const char *wrapper_name;




    const AVChannelLayout *ch_layouts;
} AVCodec;
# 249 "./libavcodec/codec.h"
const AVCodec *av_codec_iterate(void **opaque);







const AVCodec *avcodec_find_decoder(enum AVCodecID id);







const AVCodec *avcodec_find_decoder_by_name(const char *name);







const AVCodec *avcodec_find_encoder(enum AVCodecID id);







const AVCodec *avcodec_find_encoder_by_name(const char *name);



int av_codec_is_encoder(const AVCodec *codec);




int av_codec_is_decoder(const AVCodec *codec);
# 299 "./libavcodec/codec.h"
const char *av_get_profile_name(const AVCodec *codec, int profile);

enum {







    AV_CODEC_HW_CONFIG_METHOD_HW_DEVICE_CTX = 0x01,
# 322 "./libavcodec/codec.h"
    AV_CODEC_HW_CONFIG_METHOD_HW_FRAMES_CTX = 0x02,






    AV_CODEC_HW_CONFIG_METHOD_INTERNAL = 0x04,
# 338 "./libavcodec/codec.h"
    AV_CODEC_HW_CONFIG_METHOD_AD_HOC = 0x08,
};

typedef struct AVCodecHWConfig {
# 350 "./libavcodec/codec.h"
    enum AVPixelFormat pix_fmt;




    int methods;






    enum AVHWDeviceType device_type;
} AVCodecHWConfig;
# 372 "./libavcodec/codec.h"
const AVCodecHWConfig *avcodec_get_hw_config(const AVCodec *codec, int index);
# 42 "./libavcodec/avcodec.h" 2
# 1 "./libavcodec/codec_id.h" 1
# 43 "./libavcodec/avcodec.h" 2
# 1 "./libavcodec/defs.h" 1
# 198 "./libavcodec/defs.h"
enum AVFieldOrder {
    AV_FIELD_UNKNOWN,
    AV_FIELD_PROGRESSIVE,
    AV_FIELD_TT,
    AV_FIELD_BB,
    AV_FIELD_TB,
    AV_FIELD_BT,
};




enum AVDiscard{


    AVDISCARD_NONE =-16,
    AVDISCARD_DEFAULT = 0,
    AVDISCARD_NONREF = 8,
    AVDISCARD_BIDIR = 16,
    AVDISCARD_NONINTRA= 24,
    AVDISCARD_NONKEY = 32,
    AVDISCARD_ALL = 48,
};

enum AVAudioServiceType {
    AV_AUDIO_SERVICE_TYPE_MAIN = 0,
    AV_AUDIO_SERVICE_TYPE_EFFECTS = 1,
    AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED = 2,
    AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED = 3,
    AV_AUDIO_SERVICE_TYPE_DIALOGUE = 4,
    AV_AUDIO_SERVICE_TYPE_COMMENTARY = 5,
    AV_AUDIO_SERVICE_TYPE_EMERGENCY = 6,
    AV_AUDIO_SERVICE_TYPE_VOICE_OVER = 7,
    AV_AUDIO_SERVICE_TYPE_KARAOKE = 8,
    AV_AUDIO_SERVICE_TYPE_NB ,
};






typedef struct AVPanScan {





    int id;






    int width;
    int height;






    int16_t position[3][2];
} AVPanScan;






typedef struct AVCPBProperties {




    int64_t max_bitrate;




    int64_t min_bitrate;




    int64_t avg_bitrate;





    int64_t buffer_size;
# 299 "./libavcodec/defs.h"
    uint64_t vbv_delay;
} AVCPBProperties;
# 311 "./libavcodec/defs.h"
AVCPBProperties *av_cpb_properties_alloc(size_t *size);






typedef struct AVProducerReferenceTime {



    int64_t wallclock;
    int flags;
} AVProducerReferenceTime;
# 333 "./libavcodec/defs.h"
unsigned int av_xiphlacing(unsigned char *s, unsigned int v);
# 44 "./libavcodec/avcodec.h" 2
# 1 "./libavcodec/packet.h" 1
# 24 "./libavcodec/packet.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 25 "./libavcodec/packet.h" 2






# 1 "./libavutil/version.h" 1
# 32 "./libavcodec/packet.h" 2
# 41 "./libavcodec/packet.h"
enum AVPacketSideDataType {





    AV_PKT_DATA_PALETTE,
# 56 "./libavcodec/packet.h"
    AV_PKT_DATA_NEW_EXTRADATA,
# 73 "./libavcodec/packet.h"
    AV_PKT_DATA_PARAM_CHANGE,
# 94 "./libavcodec/packet.h"
    AV_PKT_DATA_H263_MB_INFO,





    AV_PKT_DATA_REPLAYGAIN,
# 109 "./libavcodec/packet.h"
    AV_PKT_DATA_DISPLAYMATRIX,





    AV_PKT_DATA_STEREO3D,





    AV_PKT_DATA_AUDIO_SERVICE_TYPE,
# 133 "./libavcodec/packet.h"
    AV_PKT_DATA_QUALITY_STATS,







    AV_PKT_DATA_FALLBACK_TRACK,




    AV_PKT_DATA_CPB_PROPERTIES,
# 157 "./libavcodec/packet.h"
    AV_PKT_DATA_SKIP_SAMPLES,
# 167 "./libavcodec/packet.h"
    AV_PKT_DATA_JP_DUALMONO,





    AV_PKT_DATA_STRINGS_METADATA,
# 184 "./libavcodec/packet.h"
    AV_PKT_DATA_SUBTITLE_POSITION,







    AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL,




    AV_PKT_DATA_WEBVTT_IDENTIFIER,





    AV_PKT_DATA_WEBVTT_SETTINGS,






    AV_PKT_DATA_METADATA_UPDATE,





    AV_PKT_DATA_MPEGTS_STREAM_ID,






    AV_PKT_DATA_MASTERING_DISPLAY_METADATA,





    AV_PKT_DATA_SPHERICAL,






    AV_PKT_DATA_CONTENT_LIGHT_LEVEL,






    AV_PKT_DATA_A53_CC,






    AV_PKT_DATA_ENCRYPTION_INIT_INFO,





    AV_PKT_DATA_ENCRYPTION_INFO,





    AV_PKT_DATA_AFD,






    AV_PKT_DATA_PRFT,





    AV_PKT_DATA_ICC_PROFILE,
# 284 "./libavcodec/packet.h"
    AV_PKT_DATA_DOVI_CONF,







    AV_PKT_DATA_S12M_TIMECODE,







    AV_PKT_DATA_DYNAMIC_HDR10_PLUS,







    AV_PKT_DATA_IAMF_MIX_GAIN_PARAM,







    AV_PKT_DATA_IAMF_DEMIXING_INFO_PARAM,







    AV_PKT_DATA_IAMF_RECON_GAIN_INFO_PARAM,






    AV_PKT_DATA_AMBIENT_VIEWING_ENVIRONMENT,
# 341 "./libavcodec/packet.h"
    AV_PKT_DATA_NB
};
# 373 "./libavcodec/packet.h"
typedef struct AVPacketSideData {
    uint8_t *data;
    size_t size;
    enum AVPacketSideDataType type;
} AVPacketSideData;
# 393 "./libavcodec/packet.h"
AVPacketSideData *av_packet_side_data_new(AVPacketSideData **psd, int *pnb_sd,
                                          enum AVPacketSideDataType type,
                                          size_t size, int flags);
# 416 "./libavcodec/packet.h"
AVPacketSideData *av_packet_side_data_add(AVPacketSideData **sd, int *nb_sd,
                                          enum AVPacketSideDataType type,
                                          void *data, size_t size, int flags);
# 429 "./libavcodec/packet.h"
const AVPacketSideData *av_packet_side_data_get(const AVPacketSideData *sd,
                                                int nb_sd,
                                                enum AVPacketSideDataType type);
# 442 "./libavcodec/packet.h"
void av_packet_side_data_remove(AVPacketSideData *sd, int *nb_sd,
                                enum AVPacketSideDataType type);
# 454 "./libavcodec/packet.h"
void av_packet_side_data_free(AVPacketSideData **sd, int *nb_sd);

const char *av_packet_side_data_name(enum AVPacketSideDataType type);
# 499 "./libavcodec/packet.h"
typedef struct AVPacket {





    AVBufferRef *buf;
# 515 "./libavcodec/packet.h"
    int64_t pts;





    int64_t dts;
    uint8_t *data;
    int size;
    int stream_index;



    int flags;




    AVPacketSideData *side_data;
    int side_data_elems;





    int64_t duration;

    int64_t pos;




    void *opaque;
# 558 "./libavcodec/packet.h"
    AVBufferRef *opaque_ref;







    AVRational time_base;
} AVPacket;


__attribute__((deprecated))
typedef struct AVPacketList {
    AVPacket pkt;
    struct AVPacketList *next;
} AVPacketList;
# 598 "./libavcodec/packet.h"
enum AVSideDataParamChangeFlags {




    AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT = 0x0001,
    AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT = 0x0002,

    AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE = 0x0004,
    AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS = 0x0008,
};
# 621 "./libavcodec/packet.h"
AVPacket *av_packet_alloc(void);
# 633 "./libavcodec/packet.h"
AVPacket *av_packet_clone(const AVPacket *src);
# 642 "./libavcodec/packet.h"
void av_packet_free(AVPacket **pkt);
# 659 "./libavcodec/packet.h"
__attribute__((deprecated))
void av_init_packet(AVPacket *pkt);
# 671 "./libavcodec/packet.h"
int av_new_packet(AVPacket *pkt, int size);







void av_shrink_packet(AVPacket *pkt, int size);







int av_grow_packet(AVPacket *pkt, int grow_by);
# 702 "./libavcodec/packet.h"
int av_packet_from_data(AVPacket *pkt, uint8_t *data, int size);
# 712 "./libavcodec/packet.h"
uint8_t* av_packet_new_side_data(AVPacket *pkt, enum AVPacketSideDataType type,
                                 size_t size);
# 728 "./libavcodec/packet.h"
int av_packet_add_side_data(AVPacket *pkt, enum AVPacketSideDataType type,
                            uint8_t *data, size_t size);
# 739 "./libavcodec/packet.h"
int av_packet_shrink_side_data(AVPacket *pkt, enum AVPacketSideDataType type,
                               size_t size);
# 751 "./libavcodec/packet.h"
uint8_t* av_packet_get_side_data(const AVPacket *pkt, enum AVPacketSideDataType type,
                                 size_t *size);
# 761 "./libavcodec/packet.h"
uint8_t *av_packet_pack_dictionary(AVDictionary *dict, size_t *size);
# 770 "./libavcodec/packet.h"
int av_packet_unpack_dictionary(const uint8_t *data, size_t size,
                                AVDictionary **dict);







void av_packet_free_side_data(AVPacket *pkt);
# 798 "./libavcodec/packet.h"
int av_packet_ref(AVPacket *dst, const AVPacket *src);
# 808 "./libavcodec/packet.h"
void av_packet_unref(AVPacket *pkt);
# 818 "./libavcodec/packet.h"
void av_packet_move_ref(AVPacket *dst, AVPacket *src);
# 831 "./libavcodec/packet.h"
int av_packet_copy_props(AVPacket *dst, const AVPacket *src);
# 847 "./libavcodec/packet.h"
int av_packet_make_refcounted(AVPacket *pkt);
# 858 "./libavcodec/packet.h"
int av_packet_make_writable(AVPacket *pkt);
# 871 "./libavcodec/packet.h"
void av_packet_rescale_ts(AVPacket *pkt, AVRational tb_src, AVRational tb_dst);
# 45 "./libavcodec/avcodec.h" 2





# 1 "./libavcodec/version.h" 1
# 51 "./libavcodec/avcodec.h" 2

# 1 "./libavcodec/codec_desc.h" 1
# 38 "./libavcodec/codec_desc.h"
typedef struct AVCodecDescriptor {
    enum AVCodecID id;
    enum AVMediaType type;





    const char *name;



    const char *long_name;



    int props;





    const char *const *mime_types;




    const struct AVProfile *profiles;
} AVCodecDescriptor;
# 113 "./libavcodec/codec_desc.h"
const AVCodecDescriptor *avcodec_descriptor_get(enum AVCodecID id);
# 122 "./libavcodec/codec_desc.h"
const AVCodecDescriptor *avcodec_descriptor_next(const AVCodecDescriptor *prev);





const AVCodecDescriptor *avcodec_descriptor_get_by_name(const char *name);
# 53 "./libavcodec/avcodec.h" 2
# 1 "./libavcodec/codec_par.h" 1
# 47 "./libavcodec/codec_par.h"
typedef struct AVCodecParameters {



    enum AVMediaType codec_type;



    enum AVCodecID codec_id;



    uint32_t codec_tag;
# 69 "./libavcodec/codec_par.h"
    uint8_t *extradata;



    int extradata_size;





    int format;




    int64_t bit_rate;
# 97 "./libavcodec/codec_par.h"
    int bits_per_coded_sample;
# 110 "./libavcodec/codec_par.h"
    int bits_per_raw_sample;




    int profile;
    int level;




    int width;
    int height;
# 131 "./libavcodec/codec_par.h"
    AVRational sample_aspect_ratio;




    enum AVFieldOrder field_order;




    enum AVColorRange color_range;
    enum AVColorPrimaries color_primaries;
    enum AVColorTransferCharacteristic color_trc;
    enum AVColorSpace color_space;
    enum AVChromaLocation chroma_location;




    int video_delay;
# 159 "./libavcodec/codec_par.h"
    __attribute__((deprecated))
    uint64_t channel_layout;




    __attribute__((deprecated))
    int channels;




    int sample_rate;






    int block_align;



    int frame_size;







    int initial_padding;






    int trailing_padding;



    int seek_preroll;




    AVChannelLayout ch_layout;
# 218 "./libavcodec/codec_par.h"
    AVRational framerate;







    AVPacketSideData *coded_side_data;




    int nb_coded_side_data;
} AVCodecParameters;






AVCodecParameters *avcodec_parameters_alloc(void);





void avcodec_parameters_free(AVCodecParameters **par);







int avcodec_parameters_copy(AVCodecParameters *dst, const AVCodecParameters *src);





int av_get_audio_frame_duration2(AVCodecParameters *par, int frame_bytes);
# 54 "./libavcodec/avcodec.h" 2


struct AVCodecParameters;
# 204 "./libavcodec/avcodec.h"
typedef struct RcOverride{
    int start_frame;
    int end_frame;
    int qscale;
    float quality_factor;
} RcOverride;
# 445 "./libavcodec/avcodec.h"
typedef struct AVCodecContext {




    const AVClass *av_class;
    int log_level_offset;

    enum AVMediaType codec_type;
    const struct AVCodec *codec;
    enum AVCodecID codec_id;
# 470 "./libavcodec/avcodec.h"
    unsigned int codec_tag;

    void *priv_data;







    struct AVCodecInternal *internal;






    void *opaque;







    int64_t bit_rate;







    int bit_rate_tolerance;







    int global_quality;





    int compression_level;







    int flags;






    int flags2;
# 546 "./libavcodec/avcodec.h"
    uint8_t *extradata;
    int extradata_size;
# 567 "./libavcodec/avcodec.h"
    AVRational time_base;
# 582 "./libavcodec/avcodec.h"
    __attribute__((deprecated))
    int ticks_per_frame;
# 608 "./libavcodec/avcodec.h"
    int delay;
# 625 "./libavcodec/avcodec.h"
    int width, height;
# 640 "./libavcodec/avcodec.h"
    int coded_width, coded_height;






    int gop_size;
# 662 "./libavcodec/avcodec.h"
    enum AVPixelFormat pix_fmt;
# 687 "./libavcodec/avcodec.h"
    void (*draw_horiz_band)(struct AVCodecContext *s,
                            const AVFrame *src, int offset[8],
                            int y, int type, int height);
# 716 "./libavcodec/avcodec.h"
    enum AVPixelFormat (*get_format)(struct AVCodecContext *s, const enum AVPixelFormat * fmt);







    int max_b_frames;
# 733 "./libavcodec/avcodec.h"
    float b_quant_factor;






    float b_quant_offset;







    int has_b_frames;
# 757 "./libavcodec/avcodec.h"
    float i_quant_factor;






    float i_quant_offset;






    float lumi_masking;






    float temporal_cplx_masking;






    float spatial_cplx_masking;






    float p_masking;






    float dark_masking;







    __attribute__((deprecated))
    int slice_count;






    __attribute__((deprecated))
    int *slice_offset;
# 826 "./libavcodec/avcodec.h"
    AVRational sample_aspect_ratio;






    int me_cmp;





    int me_sub_cmp;





    int mb_cmp;





    int ildct_cmp;
# 875 "./libavcodec/avcodec.h"
    int dia_size;






    int last_predictor_count;






    int me_pre_cmp;






    int pre_dia_size;






    int me_subpel_quality;
# 912 "./libavcodec/avcodec.h"
    int me_range;






    int slice_flags;
# 929 "./libavcodec/avcodec.h"
    int mb_decision;
# 941 "./libavcodec/avcodec.h"
    uint16_t *intra_matrix;
# 950 "./libavcodec/avcodec.h"
    uint16_t *inter_matrix;






    int intra_dc_precision;






    int skip_top;






    int skip_bottom;






    int mb_lmin;






    int mb_lmax;





    int bidir_refine;






    int keyint_min;






    int refs;






    int mv0_threshold;






    enum AVColorPrimaries color_primaries;






    enum AVColorTransferCharacteristic color_trc;






    enum AVColorSpace colorspace;
# 1043 "./libavcodec/avcodec.h"
    enum AVColorRange color_range;






    enum AVChromaLocation chroma_sample_location;
# 1059 "./libavcodec/avcodec.h"
    int slices;





    enum AVFieldOrder field_order;


    int sample_rate;






    __attribute__((deprecated))
    int channels;







    enum AVSampleFormat sample_fmt;
# 1096 "./libavcodec/avcodec.h"
    int frame_size;
# 1109 "./libavcodec/avcodec.h"
    __attribute__((deprecated))
    int frame_number;






    int block_align;






    int cutoff;
# 1133 "./libavcodec/avcodec.h"
    __attribute__((deprecated))
    uint64_t channel_layout;







    __attribute__((deprecated))
    uint64_t request_channel_layout;







    enum AVAudioServiceType audio_service_type;







    enum AVSampleFormat request_sample_fmt;
# 1241 "./libavcodec/avcodec.h"
    int (*get_buffer2)(struct AVCodecContext *s, AVFrame *frame, int flags);


    float qcompress;
    float qblur;






    int qmin;






    int qmax;






    int max_qdiff;






    int rc_buffer_size;






    int rc_override_count;
    RcOverride *rc_override;






    int64_t rc_max_rate;






    int64_t rc_min_rate;






    float rc_max_available_vbv_use;






    float rc_min_vbv_overflow_use;






    int rc_initial_buffer_occupancy;






    int trellis;






    char *stats_out;







    char *stats_in;






    int workaround_bugs;
# 1375 "./libavcodec/avcodec.h"
    int strict_std_compliance;






    int error_concealment;
# 1392 "./libavcodec/avcodec.h"
    int debug;
# 1416 "./libavcodec/avcodec.h"
    int err_recognition;
# 1430 "./libavcodec/avcodec.h"
    __attribute__((deprecated))
    int64_t reordered_opaque;







    const struct AVHWAccel *hwaccel;
# 1463 "./libavcodec/avcodec.h"
    void *hwaccel_context;






    uint64_t error[8];






    int dct_algo;
# 1490 "./libavcodec/avcodec.h"
    int idct_algo;
# 1514 "./libavcodec/avcodec.h"
     int bits_per_coded_sample;






    int bits_per_raw_sample;






     int lowres;







    int thread_count;
# 1546 "./libavcodec/avcodec.h"
    int thread_type;
# 1555 "./libavcodec/avcodec.h"
    int active_thread_type;
# 1566 "./libavcodec/avcodec.h"
    int (*execute)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg), void *arg2, int *ret, int count, int size);
# 1585 "./libavcodec/avcodec.h"
    int (*execute2)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg, int jobnr, int threadnr), void *arg2, int *ret, int count);






     int nsse_weight;







     int profile;
# 1744 "./libavcodec/avcodec.h"
     int level;
# 1756 "./libavcodec/avcodec.h"
    enum AVDiscard skip_loop_filter;






    enum AVDiscard skip_idct;






    enum AVDiscard skip_frame;
# 1780 "./libavcodec/avcodec.h"
    uint8_t *subtitle_header;
    int subtitle_header_size;
# 1798 "./libavcodec/avcodec.h"
    int initial_padding;
# 1807 "./libavcodec/avcodec.h"
    AVRational framerate;






    enum AVPixelFormat sw_pix_fmt;






    AVRational pkt_timebase;






    const struct AVCodecDescriptor *codec_descriptor;






    int64_t pts_correction_num_faulty_pts;
    int64_t pts_correction_num_faulty_dts;
    int64_t pts_correction_last_pts;
    int64_t pts_correction_last_dts;






    char *sub_charenc;







    int sub_charenc_mode;
# 1871 "./libavcodec/avcodec.h"
    int skip_alpha;






    int seek_preroll;






    uint16_t *chroma_intra_matrix;







    uint8_t *dump_separator;







    char *codec_whitelist;






    unsigned properties;
# 1919 "./libavcodec/avcodec.h"
    AVPacketSideData *coded_side_data;
    int nb_coded_side_data;
# 1944 "./libavcodec/avcodec.h"
    AVBufferRef *hw_frames_ctx;
# 1955 "./libavcodec/avcodec.h"
    int trailing_padding;







    int64_t max_pixels;
# 1985 "./libavcodec/avcodec.h"
    AVBufferRef *hw_device_ctx;
# 1994 "./libavcodec/avcodec.h"
    int hwaccel_flags;
# 2021 "./libavcodec/avcodec.h"
    int apply_cropping;
# 2035 "./libavcodec/avcodec.h"
    int extra_hw_frames;







    int discard_damaged_percentage;







    int64_t max_samples;
# 2061 "./libavcodec/avcodec.h"
    int export_side_data;
# 2103 "./libavcodec/avcodec.h"
    int (*get_encode_buffer)(struct AVCodecContext *s, AVPacket *pkt, int flags);







    AVChannelLayout ch_layout;
# 2122 "./libavcodec/avcodec.h"
    int64_t frame_num;
} AVCodecContext;
# 2133 "./libavcodec/avcodec.h"
typedef struct AVHWAccel {





    const char *name;






    enum AVMediaType type;






    enum AVCodecID id;






    enum AVPixelFormat pix_fmt;





    int capabilities;
} AVHWAccel;
# 2225 "./libavcodec/avcodec.h"
enum AVSubtitleType {
    SUBTITLE_NONE,

    SUBTITLE_BITMAP,





    SUBTITLE_TEXT,





    SUBTITLE_ASS,
};



typedef struct AVSubtitleRect {
    int x;
    int y;
    int w;
    int h;
    int nb_colors;





    uint8_t *data[4];
    int linesize[4];

    enum AVSubtitleType type;

    char *text;






    char *ass;

    int flags;
} AVSubtitleRect;

typedef struct AVSubtitle {
    uint16_t format;
    uint32_t start_display_time;
    uint32_t end_display_time;
    unsigned num_rects;
    AVSubtitleRect **rects;
    int64_t pts;
} AVSubtitle;




unsigned avcodec_version(void);




const char *avcodec_configuration(void);




const char *avcodec_license(void);
# 2310 "./libavcodec/avcodec.h"
AVCodecContext *avcodec_alloc_context3(const AVCodec *codec);





void avcodec_free_context(AVCodecContext **avctx);







const AVClass *avcodec_get_class(void);







const AVClass *avcodec_get_subtitle_rect_class(void);
# 2341 "./libavcodec/avcodec.h"
int avcodec_parameters_from_context(struct AVCodecParameters *par,
                                    const AVCodecContext *codec);
# 2352 "./libavcodec/avcodec.h"
int avcodec_parameters_to_context(AVCodecContext *codec,
                                  const struct AVCodecParameters *par);
# 2416 "./libavcodec/avcodec.h"
int avcodec_open2(AVCodecContext *avctx, const AVCodec *codec, AVDictionary **options);
# 2432 "./libavcodec/avcodec.h"
__attribute__((deprecated))
int avcodec_close(AVCodecContext *avctx);







void avsubtitle_free(AVSubtitle *sub);
# 2457 "./libavcodec/avcodec.h"
int avcodec_default_get_buffer2(AVCodecContext *s, AVFrame *frame, int flags);






int avcodec_default_get_encode_buffer(AVCodecContext *s, AVPacket *pkt, int flags);
# 2473 "./libavcodec/avcodec.h"
void avcodec_align_dimensions(AVCodecContext *s, int *width, int *height);
# 2482 "./libavcodec/avcodec.h"
void avcodec_align_dimensions2(AVCodecContext *s, int *width, int *height,
                               int linesize_align[8]);
# 2496 "./libavcodec/avcodec.h"
 __attribute__((deprecated))
int avcodec_enum_to_chroma_pos(int *xpos, int *ypos, enum AVChromaLocation pos);
# 2509 "./libavcodec/avcodec.h"
 __attribute__((deprecated))
enum AVChromaLocation avcodec_chroma_pos_to_enum(int xpos, int ypos);
# 2540 "./libavcodec/avcodec.h"
int avcodec_decode_subtitle2(AVCodecContext *avctx, AVSubtitle *sub,
                             int *got_sub_ptr, const AVPacket *avpkt);
# 2589 "./libavcodec/avcodec.h"
int avcodec_send_packet(AVCodecContext *avctx, const AVPacket *avpkt);
# 2610 "./libavcodec/avcodec.h"
int avcodec_receive_frame(AVCodecContext *avctx, AVFrame *frame);
# 2646 "./libavcodec/avcodec.h"
int avcodec_send_frame(AVCodecContext *avctx, const AVFrame *frame);
# 2663 "./libavcodec/avcodec.h"
int avcodec_receive_packet(AVCodecContext *avctx, AVPacket *avpkt);
# 2762 "./libavcodec/avcodec.h"
int avcodec_get_hw_frames_parameters(AVCodecContext *avctx,
                                     AVBufferRef *device_ref,
                                     enum AVPixelFormat hw_pix_fmt,
                                     AVBufferRef **out_frames_ref);
# 2774 "./libavcodec/avcodec.h"
enum AVPictureStructure {
    AV_PICTURE_STRUCTURE_UNKNOWN,
    AV_PICTURE_STRUCTURE_TOP_FIELD,
    AV_PICTURE_STRUCTURE_BOTTOM_FIELD,
    AV_PICTURE_STRUCTURE_FRAME,
};

typedef struct AVCodecParserContext {
    void *priv_data;
    const struct AVCodecParser *parser;
    int64_t frame_offset;
    int64_t cur_offset;

    int64_t next_frame_offset;

    int pict_type;
# 2799 "./libavcodec/avcodec.h"
    int repeat_pict;
    int64_t pts;
    int64_t dts;


    int64_t last_pts;
    int64_t last_dts;
    int fetch_timestamp;


    int cur_frame_start_index;
    int64_t cur_frame_offset[4];
    int64_t cur_frame_pts[4];
    int64_t cur_frame_dts[4];

    int flags;






    int64_t offset;
    int64_t cur_frame_end[4];







    int key_frame;
# 2842 "./libavcodec/avcodec.h"
    int dts_sync_point;
# 2857 "./libavcodec/avcodec.h"
    int dts_ref_dts_delta;
# 2871 "./libavcodec/avcodec.h"
    int pts_dts_delta;






    int64_t cur_frame_pos[4];




    int64_t pos;




    int64_t last_pos;






    int duration;

    enum AVFieldOrder field_order;
# 2907 "./libavcodec/avcodec.h"
    enum AVPictureStructure picture_structure;







    int output_picture_number;




    int width;
    int height;




    int coded_width;
    int coded_height;
# 2937 "./libavcodec/avcodec.h"
    int format;
} AVCodecParserContext;

typedef struct AVCodecParser {
    int codec_ids[7];
    int priv_data_size;
    int (*parser_init)(AVCodecParserContext *s);


    int (*parser_parse)(AVCodecParserContext *s,
                        AVCodecContext *avctx,
                        const uint8_t **poutbuf, int *poutbuf_size,
                        const uint8_t *buf, int buf_size);
    void (*parser_close)(AVCodecParserContext *s);
    int (*split)(AVCodecContext *avctx, const uint8_t *buf, int buf_size);
} AVCodecParser;
# 2963 "./libavcodec/avcodec.h"
const AVCodecParser *av_parser_iterate(void **opaque);

AVCodecParserContext *av_parser_init(int codec_id);
# 2998 "./libavcodec/avcodec.h"
int av_parser_parse2(AVCodecParserContext *s,
                     AVCodecContext *avctx,
                     uint8_t **poutbuf, int *poutbuf_size,
                     const uint8_t *buf, int buf_size,
                     int64_t pts, int64_t dts,
                     int64_t pos);

void av_parser_close(AVCodecParserContext *s);
# 3017 "./libavcodec/avcodec.h"
int avcodec_encode_subtitle(AVCodecContext *avctx, uint8_t *buf, int buf_size,
                            const AVSubtitle *sub);
# 3046 "./libavcodec/avcodec.h"
unsigned int avcodec_pix_fmt_to_codec_tag(enum AVPixelFormat pix_fmt);
# 3065 "./libavcodec/avcodec.h"
enum AVPixelFormat avcodec_find_best_pix_fmt_of_list(const enum AVPixelFormat *pix_fmt_list,
                                            enum AVPixelFormat src_pix_fmt,
                                            int has_alpha, int *loss_ptr);

enum AVPixelFormat avcodec_default_get_format(struct AVCodecContext *s, const enum AVPixelFormat * fmt);





void avcodec_string(char *buf, int buf_size, AVCodecContext *enc, int encode);

int avcodec_default_execute(AVCodecContext *c, int (*func)(AVCodecContext *c2, void *arg2),void *arg, int *ret, int count, int size);
int avcodec_default_execute2(AVCodecContext *c, int (*func)(AVCodecContext *c2, void *arg2, int, int),void *arg, int *ret, int count);
# 3104 "./libavcodec/avcodec.h"
int avcodec_fill_audio_frame(AVFrame *frame, int nb_channels,
                             enum AVSampleFormat sample_fmt, const uint8_t *buf,
                             int buf_size, int align);
# 3122 "./libavcodec/avcodec.h"
void avcodec_flush_buffers(AVCodecContext *avctx);
# 3132 "./libavcodec/avcodec.h"
int av_get_audio_frame_duration(AVCodecContext *avctx, int frame_bytes);
# 3143 "./libavcodec/avcodec.h"
void av_fast_padded_malloc(void *ptr, unsigned int *size, size_t min_size);





void av_fast_padded_mallocz(void *ptr, unsigned int *size, size_t min_size);





int avcodec_is_open(AVCodecContext *s);
# 29 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h" 2
# 1 "./libavfilter/avfilter.h" 1
# 38 "./libavfilter/avfilter.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 39 "./libavfilter/avfilter.h" 2
# 50 "./libavfilter/avfilter.h"
# 1 "./libavfilter/version_major.h" 1
# 51 "./libavfilter/avfilter.h" 2




# 1 "./libavfilter/version.h" 1
# 32 "./libavfilter/version.h"
# 1 "./libavfilter/version_major.h" 1
# 33 "./libavfilter/version.h" 2
# 56 "./libavfilter/avfilter.h" 2





unsigned avfilter_version(void);




const char *avfilter_configuration(void);




const char *avfilter_license(void);

typedef struct AVFilterContext AVFilterContext;
typedef struct AVFilterLink AVFilterLink;
typedef struct AVFilterPad AVFilterPad;
typedef struct AVFilterFormats AVFilterFormats;
typedef struct AVFilterChannelLayouts AVFilterChannelLayouts;
# 88 "./libavfilter/avfilter.h"
const char *avfilter_pad_get_name(const AVFilterPad *pads, int pad_idx);
# 99 "./libavfilter/avfilter.h"
enum AVMediaType avfilter_pad_get_type(const AVFilterPad *pads, int pad_idx);
# 166 "./libavfilter/avfilter.h"
typedef struct AVFilter {



    const char *name;






    const char *description;
# 186 "./libavfilter/avfilter.h"
    const AVFilterPad *inputs;
# 195 "./libavfilter/avfilter.h"
    const AVFilterPad *outputs;
# 205 "./libavfilter/avfilter.h"
    const AVClass *priv_class;




    int flags;
# 223 "./libavfilter/avfilter.h"
    uint8_t nb_inputs;




    uint8_t nb_outputs;





    uint8_t formats_state;
# 249 "./libavfilter/avfilter.h"
    int (*preinit)(AVFilterContext *ctx);
# 272 "./libavfilter/avfilter.h"
    int (*init)(AVFilterContext *ctx);
# 284 "./libavfilter/avfilter.h"
    void (*uninit)(AVFilterContext *ctx);





    union {
# 326 "./libavfilter/avfilter.h"
        int (*query_func)(AVFilterContext *);
# 341 "./libavfilter/avfilter.h"
        const enum AVPixelFormat *pixels_list;
# 352 "./libavfilter/avfilter.h"
        const enum AVSampleFormat *samples_list;



        enum AVPixelFormat pix_fmt;



        enum AVSampleFormat sample_fmt;
    } formats;

    int priv_size;

    int flags_internal;
# 379 "./libavfilter/avfilter.h"
    int (*process_command)(AVFilterContext *, const char *cmd, const char *arg, char *res, int res_len, int flags);
# 393 "./libavfilter/avfilter.h"
    int (*activate)(AVFilterContext *ctx);
} AVFilter;




unsigned avfilter_filter_pad_count(const AVFilter *filter, int is_output);






typedef struct AVFilterInternal AVFilterInternal;


struct AVFilterContext {
    const AVClass *av_class;

    const AVFilter *filter;

    char *name;

    AVFilterPad *input_pads;
    AVFilterLink **inputs;
    unsigned nb_inputs;

    AVFilterPad *output_pads;
    AVFilterLink **outputs;
    unsigned nb_outputs;

    void *priv;

    struct AVFilterGraph *graph;
# 444 "./libavfilter/avfilter.h"
    int thread_type;




    AVFilterInternal *internal;

    struct AVFilterCommand *command_queue;

    char *enable_str;
    void *enable;
    double *var_values;
    int is_disabled;
# 469 "./libavfilter/avfilter.h"
    AVBufferRef *hw_device_ctx;






    int nb_threads;






    unsigned ready;
# 499 "./libavfilter/avfilter.h"
    int extra_hw_frames;
};
# 512 "./libavfilter/avfilter.h"
typedef struct AVFilterFormatsConfig {




    AVFilterFormats *formats;




    AVFilterFormats *samplerates;




    AVFilterChannelLayouts *channel_layouts;




    AVFilterFormats *color_spaces;
    AVFilterFormats *color_ranges;

} AVFilterFormatsConfig;
# 549 "./libavfilter/avfilter.h"
struct AVFilterLink {
    AVFilterContext *src;
    AVFilterPad *srcpad;

    AVFilterContext *dst;
    AVFilterPad *dstpad;

    enum AVMediaType type;


    int w;
    int h;
    AVRational sample_aspect_ratio;






    __attribute__((deprecated))
    uint64_t channel_layout;

    int sample_rate;

    int format;
# 582 "./libavfilter/avfilter.h"
    AVRational time_base;

    AVChannelLayout ch_layout;
# 593 "./libavfilter/avfilter.h"
    enum AVColorSpace colorspace;
    enum AVColorRange color_range;
# 607 "./libavfilter/avfilter.h"
    AVFilterFormatsConfig incfg;




    AVFilterFormatsConfig outcfg;




    struct AVFilterGraph *graph;





    int64_t current_pts;





    int64_t current_pts_us;
# 642 "./libavfilter/avfilter.h"
    AVRational frame_rate;
# 651 "./libavfilter/avfilter.h"
    int min_samples;





    int max_samples;




    int64_t frame_count_in, frame_count_out;




    int64_t sample_count_in, sample_count_out;






    int frame_wanted_out;





    AVBufferRef *hw_frames_ctx;
};
# 692 "./libavfilter/avfilter.h"
int avfilter_link(AVFilterContext *src, unsigned srcpad,
                  AVFilterContext *dst, unsigned dstpad);




void avfilter_link_free(AVFilterLink **link);







int avfilter_config_links(AVFilterContext *filter);
# 715 "./libavfilter/avfilter.h"
int avfilter_process_command(AVFilterContext *filter, const char *cmd, const char *arg, char *res, int res_len, int flags);
# 726 "./libavfilter/avfilter.h"
const AVFilter *av_filter_iterate(void **opaque);
# 735 "./libavfilter/avfilter.h"
const AVFilter *avfilter_get_by_name(const char *name);
# 748 "./libavfilter/avfilter.h"
int avfilter_init_str(AVFilterContext *ctx, const char *args);
# 770 "./libavfilter/avfilter.h"
int avfilter_init_dict(AVFilterContext *ctx, AVDictionary **options);







void avfilter_free(AVFilterContext *filter);
# 789 "./libavfilter/avfilter.h"
int avfilter_insert_filter(AVFilterLink *link, AVFilterContext *filt,
                           unsigned filt_srcpad_idx, unsigned filt_dstpad_idx);






const AVClass *avfilter_get_class(void);

typedef struct AVFilterGraphInternal AVFilterGraphInternal;
# 813 "./libavfilter/avfilter.h"
typedef int (avfilter_action_func)(AVFilterContext *ctx, void *arg, int jobnr, int nb_jobs);
# 827 "./libavfilter/avfilter.h"
typedef int (avfilter_execute_func)(AVFilterContext *ctx, avfilter_action_func *func,
                                    void *arg, int *ret, int nb_jobs);

typedef struct AVFilterGraph {
    const AVClass *av_class;
    AVFilterContext **filters;
    unsigned nb_filters;

    char *scale_sws_opts;
# 849 "./libavfilter/avfilter.h"
    int thread_type;






    int nb_threads;




    AVFilterGraphInternal *internal;






    void *opaque;
# 882 "./libavfilter/avfilter.h"
    avfilter_execute_func *execute;

    char *aresample_swr_opts;
} AVFilterGraph;






AVFilterGraph *avfilter_graph_alloc(void);
# 908 "./libavfilter/avfilter.h"
AVFilterContext *avfilter_graph_alloc_filter(AVFilterGraph *graph,
                                             const AVFilter *filter,
                                             const char *name);
# 920 "./libavfilter/avfilter.h"
AVFilterContext *avfilter_graph_get_filter(AVFilterGraph *graph, const char *name);
# 935 "./libavfilter/avfilter.h"
int avfilter_graph_create_filter(AVFilterContext **filt_ctx, const AVFilter *filt,
                                 const char *name, const char *args, void *opaque,
                                 AVFilterGraph *graph_ctx);
# 947 "./libavfilter/avfilter.h"
void avfilter_graph_set_auto_convert(AVFilterGraph *graph, unsigned flags);

enum {
    AVFILTER_AUTO_CONVERT_ALL = 0,
    AVFILTER_AUTO_CONVERT_NONE = -1,
};
# 961 "./libavfilter/avfilter.h"
int avfilter_graph_config(AVFilterGraph *graphctx, void *log_ctx);





void avfilter_graph_free(AVFilterGraph **graph);
# 978 "./libavfilter/avfilter.h"
typedef struct AVFilterInOut {

    char *name;


    AVFilterContext *filter_ctx;


    int pad_idx;


    struct AVFilterInOut *next;
} AVFilterInOut;






AVFilterInOut *avfilter_inout_alloc(void);





void avfilter_inout_free(AVFilterInOut **inout);
# 1023 "./libavfilter/avfilter.h"
int avfilter_graph_parse(AVFilterGraph *graph, const char *filters,
                         AVFilterInOut *inputs, AVFilterInOut *outputs,
                         void *log_ctx);
# 1044 "./libavfilter/avfilter.h"
int avfilter_graph_parse_ptr(AVFilterGraph *graph, const char *filters,
                             AVFilterInOut **inputs, AVFilterInOut **outputs,
                             void *log_ctx);
# 1070 "./libavfilter/avfilter.h"
int avfilter_graph_parse2(AVFilterGraph *graph, const char *filters,
                          AVFilterInOut **inputs,
                          AVFilterInOut **outputs);







typedef struct AVFilterPadParams {







    char *label;
} AVFilterPadParams;







typedef struct AVFilterParams {
# 1108 "./libavfilter/avfilter.h"
    AVFilterContext *filter;
# 1125 "./libavfilter/avfilter.h"
    char *filter_name;
# 1137 "./libavfilter/avfilter.h"
    char *instance_name;
# 1149 "./libavfilter/avfilter.h"
    AVDictionary *opts;

    AVFilterPadParams **inputs;
    unsigned nb_inputs;

    AVFilterPadParams **outputs;
    unsigned nb_outputs;
} AVFilterParams;







typedef struct AVFilterChain {
    AVFilterParams **filters;
    size_t nb_filters;
} AVFilterChain;
# 1178 "./libavfilter/avfilter.h"
typedef struct AVFilterGraphSegment {




    AVFilterGraph *graph;





    AVFilterChain **chains;
    size_t nb_chains;
# 1200 "./libavfilter/avfilter.h"
    char *scale_sws_opts;
} AVFilterGraphSegment;
# 1227 "./libavfilter/avfilter.h"
int avfilter_graph_segment_parse(AVFilterGraph *graph, const char *graph_str,
                                 int flags, AVFilterGraphSegment **seg);
# 1255 "./libavfilter/avfilter.h"
int avfilter_graph_segment_create_filters(AVFilterGraphSegment *seg, int flags);
# 1284 "./libavfilter/avfilter.h"
int avfilter_graph_segment_apply_opts(AVFilterGraphSegment *seg, int flags);
# 1306 "./libavfilter/avfilter.h"
int avfilter_graph_segment_init(AVFilterGraphSegment *seg, int flags);
# 1341 "./libavfilter/avfilter.h"
int avfilter_graph_segment_link(AVFilterGraphSegment *seg, int flags,
                                AVFilterInOut **inputs,
                                AVFilterInOut **outputs);
# 1369 "./libavfilter/avfilter.h"
int avfilter_graph_segment_apply(AVFilterGraphSegment *seg, int flags,
                                 AVFilterInOut **inputs,
                                 AVFilterInOut **outputs);
# 1383 "./libavfilter/avfilter.h"
void avfilter_graph_segment_free(AVFilterGraphSegment **seg);
# 1400 "./libavfilter/avfilter.h"
int avfilter_graph_send_command(AVFilterGraph *graph, const char *target, const char *cmd, const char *arg, char *res, int res_len, int flags);
# 1417 "./libavfilter/avfilter.h"
int avfilter_graph_queue_command(AVFilterGraph *graph, const char *target, const char *cmd, const char *arg, int flags, double ts);
# 1428 "./libavfilter/avfilter.h"
char *avfilter_graph_dump(AVFilterGraph *graph, const char *options);
# 1448 "./libavfilter/avfilter.h"
int avfilter_graph_request_oldest(AVFilterGraph *graph);
# 30 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h" 2
# 1 "./libavformat/avformat.h" 1
# 312 "./libavformat/avformat.h"
# 1 "./libavcodec/codec_par.h" 1
# 313 "./libavformat/avformat.h" 2
# 1 "./libavcodec/defs.h" 1
# 314 "./libavformat/avformat.h" 2
# 1 "./libavcodec/packet.h" 1
# 315 "./libavformat/avformat.h" 2




# 1 "./libavformat/avio.h" 1
# 36 "./libavformat/avio.h"
# 1 "./libavformat/version_major.h" 1
# 37 "./libavformat/avio.h" 2
# 59 "./libavformat/avio.h"
typedef struct AVIOInterruptCB {
    int (*callback)(void*);
    void *opaque;
} AVIOInterruptCB;




enum AVIODirEntryType {
    AVIO_ENTRY_UNKNOWN,
    AVIO_ENTRY_BLOCK_DEVICE,
    AVIO_ENTRY_CHARACTER_DEVICE,
    AVIO_ENTRY_DIRECTORY,
    AVIO_ENTRY_NAMED_PIPE,
    AVIO_ENTRY_SYMBOLIC_LINK,
    AVIO_ENTRY_SOCKET,
    AVIO_ENTRY_FILE,
    AVIO_ENTRY_SERVER,
    AVIO_ENTRY_SHARE,
    AVIO_ENTRY_WORKGROUP,
};







typedef struct AVIODirEntry {
    char *name;
    int type;
    int utf8;

    int64_t size;
    int64_t modification_timestamp;

    int64_t access_timestamp;

    int64_t status_change_timestamp;

    int64_t user_id;
    int64_t group_id;
    int64_t filemode;
} AVIODirEntry;


typedef struct AVIODirContext {
    struct URLContext *url_context;
} AVIODirContext;
# 116 "./libavformat/avio.h"
enum AVIODataMarkerType {



    AVIO_DATA_MARKER_HEADER,






    AVIO_DATA_MARKER_SYNC_POINT,





    AVIO_DATA_MARKER_BOUNDARY_POINT,






    AVIO_DATA_MARKER_UNKNOWN,




    AVIO_DATA_MARKER_TRAILER,





    AVIO_DATA_MARKER_FLUSH_POINT,
};
# 166 "./libavformat/avio.h"
typedef struct AVIOContext {
# 179 "./libavformat/avio.h"
    const AVClass *av_class;
# 231 "./libavformat/avio.h"
    unsigned char *buffer;
    int buffer_size;
    unsigned char *buf_ptr;
    unsigned char *buf_end;



    void *opaque;

    int (*read_packet)(void *opaque, uint8_t *buf, int buf_size);

    int (*write_packet)(void *opaque, uint8_t *buf, int buf_size);



    int64_t (*seek)(void *opaque, int64_t offset, int whence);
    int64_t pos;
    int eof_reached;
    int error;
    int write_flag;
    int max_packet_size;
    int min_packet_size;

    unsigned long checksum;
    unsigned char *checksum_ptr;
    unsigned long (*update_checksum)(unsigned long checksum, const uint8_t *buf, unsigned int size);



    int (*read_pause)(void *opaque, int pause);





    int64_t (*read_seek)(void *opaque, int stream_index,
                         int64_t timestamp, int flags);



    int seekable;






    int direct;




    const char *protocol_whitelist;




    const char *protocol_blacklist;





    int (*write_data_type)(void *opaque, uint8_t *buf, int buf_size,
                           enum AVIODataMarkerType type, int64_t time);
# 305 "./libavformat/avio.h"
    int ignore_boundary_point;





    unsigned char *buf_ptr_max;




    int64_t bytes_read;




    int64_t bytes_written;
} AVIOContext;
# 331 "./libavformat/avio.h"
const char *avio_find_protocol_name(const char *url);
# 345 "./libavformat/avio.h"
int avio_check(const char *url, int flags);
# 357 "./libavformat/avio.h"
int avio_open_dir(AVIODirContext **s, const char *url, AVDictionary **options);
# 370 "./libavformat/avio.h"
int avio_read_dir(AVIODirContext *s, AVIODirEntry **next);
# 381 "./libavformat/avio.h"
int avio_close_dir(AVIODirContext **s);






void avio_free_directory_entry(AVIODirEntry **entry);
# 413 "./libavformat/avio.h"
AVIOContext *avio_alloc_context(
                  unsigned char *buffer,
                  int buffer_size,
                  int write_flag,
                  void *opaque,
                  int (*read_packet)(void *opaque, uint8_t *buf, int buf_size),

                  int (*write_packet)(void *opaque, uint8_t *buf, int buf_size),



                  int64_t (*seek)(void *opaque, int64_t offset, int whence));







void avio_context_free(AVIOContext **s);

void avio_w8(AVIOContext *s, int b);
void avio_write(AVIOContext *s, const unsigned char *buf, int size);
void avio_wl64(AVIOContext *s, uint64_t val);
void avio_wb64(AVIOContext *s, uint64_t val);
void avio_wl32(AVIOContext *s, unsigned int val);
void avio_wb32(AVIOContext *s, unsigned int val);
void avio_wl24(AVIOContext *s, unsigned int val);
void avio_wb24(AVIOContext *s, unsigned int val);
void avio_wl16(AVIOContext *s, unsigned int val);
void avio_wb16(AVIOContext *s, unsigned int val);





int avio_put_str(AVIOContext *s, const char *str);
# 458 "./libavformat/avio.h"
int avio_put_str16le(AVIOContext *s, const char *str);
# 467 "./libavformat/avio.h"
int avio_put_str16be(AVIOContext *s, const char *str);
# 480 "./libavformat/avio.h"
void avio_write_marker(AVIOContext *s, int64_t time, enum AVIODataMarkerType type);
# 501 "./libavformat/avio.h"
int64_t avio_seek(AVIOContext *s, int64_t offset, int whence);





int64_t avio_skip(AVIOContext *s, int64_t offset);





static __attribute__((always_inline)) inline int64_t avio_tell(AVIOContext *s)
{
    return avio_seek(s, 0, 
# 515 "./libavformat/avio.h" 3 4
                          1
# 515 "./libavformat/avio.h"
                                  );
}





int64_t avio_size(AVIOContext *s);





int avio_feof(AVIOContext *s);





int avio_vprintf(AVIOContext *s, const char *fmt, va_list ap);





int avio_printf(AVIOContext *s, const char *fmt, ...) __attribute__((__format__(__printf__, 2, 3)));






void avio_print_string_array(AVIOContext *s, const char * const strings[]);
# 569 "./libavformat/avio.h"
void avio_flush(AVIOContext *s);





int avio_read(AVIOContext *s, unsigned char *buf, int size);
# 584 "./libavformat/avio.h"
int avio_read_partial(AVIOContext *s, unsigned char *buf, int size);
# 593 "./libavformat/avio.h"
int avio_r8 (AVIOContext *s);
unsigned int avio_rl16(AVIOContext *s);
unsigned int avio_rl24(AVIOContext *s);
unsigned int avio_rl32(AVIOContext *s);
uint64_t avio_rl64(AVIOContext *s);
unsigned int avio_rb16(AVIOContext *s);
unsigned int avio_rb24(AVIOContext *s);
unsigned int avio_rb32(AVIOContext *s);
uint64_t avio_rb64(AVIOContext *s);
# 618 "./libavformat/avio.h"
int avio_get_str(AVIOContext *pb, int maxlen, char *buf, int buflen);







int avio_get_str16le(AVIOContext *pb, int maxlen, char *buf, int buflen);
int avio_get_str16be(AVIOContext *pb, int maxlen, char *buf, int buflen);
# 679 "./libavformat/avio.h"
int avio_open(AVIOContext **s, const char *url, int flags);
# 699 "./libavformat/avio.h"
int avio_open2(AVIOContext **s, const char *url, int flags,
               const AVIOInterruptCB *int_cb, AVDictionary **options);
# 712 "./libavformat/avio.h"
int avio_close(AVIOContext *s);
# 725 "./libavformat/avio.h"
int avio_closep(AVIOContext **s);
# 734 "./libavformat/avio.h"
int avio_open_dyn_buf(AVIOContext **s);
# 746 "./libavformat/avio.h"
int avio_get_dyn_buf(AVIOContext *s, uint8_t **pbuffer);
# 757 "./libavformat/avio.h"
int avio_close_dyn_buf(AVIOContext *s, uint8_t **pbuffer);
# 770 "./libavformat/avio.h"
const char *avio_enum_protocols(void **opaque, int output);






const AVClass *avio_protocol_get_class(const char *name);
# 786 "./libavformat/avio.h"
int avio_pause(AVIOContext *h, int pause);
# 807 "./libavformat/avio.h"
int64_t avio_seek_time(AVIOContext *h, int stream_index,
                       int64_t timestamp, int flags);


struct AVBPrint;







int avio_read_to_bprint(AVIOContext *h, struct AVBPrint *pb, size_t max_size);
# 828 "./libavformat/avio.h"
int avio_accept(AVIOContext *s, AVIOContext **c);
# 849 "./libavformat/avio.h"
int avio_handshake(AVIOContext *c);
# 320 "./libavformat/avformat.h" 2





# 1 "./libavformat/version.h" 1
# 32 "./libavformat/version.h"
# 1 "./libavformat/version_major.h" 1
# 33 "./libavformat/version.h" 2
# 326 "./libavformat/avformat.h" 2


# 1 "./libavcodec/codec.h" 1
# 329 "./libavformat/avformat.h" 2


struct AVFormatContext;
struct AVFrame;
struct AVDeviceInfoList;
# 425 "./libavformat/avformat.h"
int av_get_packet(AVIOContext *s, AVPacket *pkt, int size);
# 442 "./libavformat/avformat.h"
int av_append_packet(AVIOContext *s, AVPacket *pkt, int size);




struct AVCodecTag;




typedef struct AVProbeData {
    const char *filename;
    unsigned char *buf;
    int buf_size;
    const char *mime_type;
} AVProbeData;
# 510 "./libavformat/avformat.h"
typedef struct AVOutputFormat {
    const char *name;





    const char *long_name;
    const char *mime_type;
    const char *extensions;

    enum AVCodecID audio_codec;
    enum AVCodecID video_codec;
    enum AVCodecID subtitle_codec;






    int flags;





    const struct AVCodecTag * const *codec_tag;


    const AVClass *priv_class;
} AVOutputFormat;
# 549 "./libavformat/avformat.h"
typedef struct AVInputFormat {




    const char *name;






    const char *long_name;






    int flags;






    const char *extensions;

    const struct AVCodecTag * const *codec_tag;

    const AVClass *priv_class;






    const char *mime_type;
# 598 "./libavformat/avformat.h"
    int raw_codec_id;




    int priv_data_size;




    int flags_internal;






    int (*read_probe)(const AVProbeData *);






    int (*read_header)(struct AVFormatContext *);
# 632 "./libavformat/avformat.h"
    int (*read_packet)(struct AVFormatContext *, AVPacket *pkt);





    int (*read_close)(struct AVFormatContext *);
# 648 "./libavformat/avformat.h"
    int (*read_seek)(struct AVFormatContext *,
                     int stream_index, int64_t timestamp, int flags);





    int64_t (*read_timestamp)(struct AVFormatContext *s, int stream_index,
                              int64_t *pos, int64_t pos_limit);





    int (*read_play)(struct AVFormatContext *);





    int (*read_pause)(struct AVFormatContext *);







    int (*read_seek2)(struct AVFormatContext *s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags);





    int (*get_device_list)(struct AVFormatContext *s, struct AVDeviceInfoList *device_list);

} AVInputFormat;




enum AVStreamParseType {
    AVSTREAM_PARSE_NONE,
    AVSTREAM_PARSE_FULL,
    AVSTREAM_PARSE_HEADERS,
    AVSTREAM_PARSE_TIMESTAMPS,
    AVSTREAM_PARSE_FULL_ONCE,
    AVSTREAM_PARSE_FULL_RAW,


};

typedef struct AVIndexEntry {
    int64_t pos;
    int64_t timestamp;
# 712 "./libavformat/avformat.h"
    int flags:2;
    int size:30;
    int min_distance;
} AVIndexEntry;
# 819 "./libavformat/avformat.h"
int av_disposition_from_string(const char *disp);







const char *av_disposition_to_string(int disposition);
# 843 "./libavformat/avformat.h"
typedef struct AVStream {



    const AVClass *av_class;

    int index;





    int id;
# 866 "./libavformat/avformat.h"
    AVCodecParameters *codecpar;

    void *priv_data;
# 882 "./libavformat/avformat.h"
    AVRational time_base;
# 892 "./libavformat/avformat.h"
    int64_t start_time;
# 902 "./libavformat/avformat.h"
    int64_t duration;

    int64_t nb_frames;







    int disposition;

    enum AVDiscard discard;






    AVRational sample_aspect_ratio;

    AVDictionary *metadata;
# 932 "./libavformat/avformat.h"
    AVRational avg_frame_rate;
# 941 "./libavformat/avformat.h"
    AVPacket attached_pic;
# 963 "./libavformat/avformat.h"
    __attribute__((deprecated))
    AVPacketSideData *side_data;






    __attribute__((deprecated))
    int nb_side_data;
# 986 "./libavformat/avformat.h"
    int event_flags;
# 1009 "./libavformat/avformat.h"
    AVRational r_frame_rate;
# 1018 "./libavformat/avformat.h"
    int pts_wrap_bits;
} AVStream;
# 1082 "./libavformat/avformat.h"
typedef struct AVStreamGroupTileGrid {
    const AVClass *av_class;






    unsigned int nb_tiles;






    int coded_width;





    int coded_height;
# 1115 "./libavformat/avformat.h"
    struct {





        unsigned int idx;




        int horizontal;




        int vertical;
    } *offsets;
# 1141 "./libavformat/avformat.h"
    uint8_t background[4];







    int horizontal_offset;






    int vertical_offset;
# 1167 "./libavformat/avformat.h"
    int width;
# 1177 "./libavformat/avformat.h"
    int height;
} AVStreamGroupTileGrid;

enum AVStreamGroupParamsType {
    AV_STREAM_GROUP_PARAMS_NONE,
    AV_STREAM_GROUP_PARAMS_IAMF_AUDIO_ELEMENT,
    AV_STREAM_GROUP_PARAMS_IAMF_MIX_PRESENTATION,
    AV_STREAM_GROUP_PARAMS_TILE_GRID,
};

struct AVIAMFAudioElement;
struct AVIAMFMixPresentation;

typedef struct AVStreamGroup {



    const AVClass *av_class;

    void *priv_data;




    unsigned int index;







    int64_t id;







    enum AVStreamGroupParamsType type;




    union {
        struct AVIAMFAudioElement *iamf_audio_element;
        struct AVIAMFMixPresentation *iamf_mix_presentation;
        struct AVStreamGroupTileGrid *tile_grid;
    } params;
# 1236 "./libavformat/avformat.h"
    AVDictionary *metadata;






    unsigned int nb_streams;
# 1256 "./libavformat/avformat.h"
    AVStream **streams;
# 1266 "./libavformat/avformat.h"
    int disposition;
} AVStreamGroup;

struct AVCodecParserContext *av_stream_get_parser(const AVStream *s);







__attribute__((deprecated))
int64_t av_stream_get_end_pts(const AVStream *st);
# 1289 "./libavformat/avformat.h"
typedef struct AVProgram {
    int id;
    int flags;
    enum AVDiscard discard;
    unsigned int *stream_index;
    unsigned int nb_stream_indexes;
    AVDictionary *metadata;

    int program_num;
    int pmt_pid;
    int pcr_pid;
    int pmt_version;
# 1309 "./libavformat/avformat.h"
    int64_t start_time;
    int64_t end_time;

    int64_t pts_wrap_reference;
    int pts_wrap_behavior;
} AVProgram;
# 1324 "./libavformat/avformat.h"
typedef struct AVChapter {
    int64_t id;
    AVRational time_base;
    int64_t start, end;
    AVDictionary *metadata;
} AVChapter;





typedef int (*av_format_control_message)(struct AVFormatContext *s, int type,
                                         void *data, size_t data_size);

typedef int (*AVOpenCallback)(struct AVFormatContext *s, AVIOContext **pb, const char *url, int flags,
                              const AVIOInterruptCB *int_cb, AVDictionary **options);





enum AVDurationEstimationMethod {
    AVFMT_DURATION_FROM_PTS,
    AVFMT_DURATION_FROM_STREAM,
    AVFMT_DURATION_FROM_BITRATE
};
# 1365 "./libavformat/avformat.h"
typedef struct AVFormatContext {




    const AVClass *av_class;






    const struct AVInputFormat *iformat;






    const struct AVOutputFormat *oformat;
# 1393 "./libavformat/avformat.h"
    void *priv_data;
# 1407 "./libavformat/avformat.h"
    AVIOContext *pb;






    int ctx_flags;






    unsigned int nb_streams;
# 1433 "./libavformat/avformat.h"
    AVStream **streams;
# 1448 "./libavformat/avformat.h"
    char *url;
# 1457 "./libavformat/avformat.h"
    int64_t start_time;
# 1467 "./libavformat/avformat.h"
    int64_t duration;






    int64_t bit_rate;

    unsigned int packet_size;
    int max_delay;





    int flags;
# 1519 "./libavformat/avformat.h"
    int64_t probesize;







    int64_t max_analyze_duration;

    const uint8_t *key;
    int keylen;

    unsigned int nb_programs;
    AVProgram **programs;





    enum AVCodecID video_codec_id;





    enum AVCodecID audio_codec_id;





    enum AVCodecID subtitle_codec_id;
# 1563 "./libavformat/avformat.h"
    unsigned int max_index_size;





    unsigned int max_picture_buffer;
# 1582 "./libavformat/avformat.h"
    unsigned int nb_chapters;
    AVChapter **chapters;
# 1593 "./libavformat/avformat.h"
    AVDictionary *metadata;
# 1606 "./libavformat/avformat.h"
    int64_t start_time_realtime;






    int fps_probe_size;






    int error_recognition;
# 1631 "./libavformat/avformat.h"
    AVIOInterruptCB interrupt_callback;




    int debug;
# 1655 "./libavformat/avformat.h"
    int64_t max_interleave_delta;





    int strict_std_compliance;
# 1674 "./libavformat/avformat.h"
    int event_flags;
# 1687 "./libavformat/avformat.h"
    int max_ts_probe;
# 1696 "./libavformat/avformat.h"
    int avoid_negative_ts;
# 1706 "./libavformat/avformat.h"
    int ts_id;







    int audio_preload;







    int max_chunk_duration;







    int max_chunk_size;







    int use_wallclock_as_timestamps;






    int avio_flags;







    enum AVDurationEstimationMethod duration_estimation_method;






    int64_t skip_initial_bytes;






    unsigned int correct_ts_overflow;






    int seek2any;






    int flush_packets;
# 1790 "./libavformat/avformat.h"
    int probe_score;
# 1801 "./libavformat/avformat.h"
    int format_probesize;







    char *codec_whitelist;







    char *format_whitelist;







    int io_repositioned;







    const struct AVCodec *video_codec;







    const struct AVCodec *audio_codec;







    const struct AVCodec *subtitle_codec;







    const struct AVCodec *data_codec;






    int metadata_header_padding;





    void *opaque;




    av_format_control_message control_message_cb;





    int64_t output_ts_offset;







    uint8_t *dump_separator;





    enum AVCodecID data_codec_id;






    char *protocol_whitelist;
# 1924 "./libavformat/avformat.h"
    int (*io_open)(struct AVFormatContext *s, AVIOContext **pb, const char *url,
                   int flags, AVDictionary **options);







    __attribute__((deprecated))
    void (*io_close)(struct AVFormatContext *s, AVIOContext *pb);







    char *protocol_blacklist;






    int max_streams;






    int skip_estimate_duration_from_pts;






    int max_probe_packets;
# 1976 "./libavformat/avformat.h"
    int (*io_close2)(struct AVFormatContext *s, AVIOContext *pb);






    unsigned int nb_stream_groups;
# 1996 "./libavformat/avformat.h"
    AVStreamGroup **stream_groups;
} AVFormatContext;
# 2009 "./libavformat/avformat.h"
void av_format_inject_global_side_data(AVFormatContext *s);
# 2018 "./libavformat/avformat.h"
__attribute__((deprecated))
enum AVDurationEstimationMethod av_fmt_ctx_get_duration_estimation_method(const AVFormatContext* ctx);
# 2034 "./libavformat/avformat.h"
unsigned avformat_version(void);




const char *avformat_configuration(void);




const char *avformat_license(void);
# 2060 "./libavformat/avformat.h"
int avformat_network_init(void);





int avformat_network_deinit(void);
# 2077 "./libavformat/avformat.h"
const AVOutputFormat *av_muxer_iterate(void **opaque);
# 2088 "./libavformat/avformat.h"
const AVInputFormat *av_demuxer_iterate(void **opaque);






AVFormatContext *avformat_alloc_context(void);





void avformat_free_context(AVFormatContext *s);







const AVClass *avformat_get_class(void);







const AVClass *av_stream_get_class(void);







const AVClass *av_stream_group_get_class(void);




const char *avformat_stream_group_name(enum AVStreamGroupParamsType type);
# 2151 "./libavformat/avformat.h"
AVStreamGroup *avformat_stream_group_create(AVFormatContext *s,
                                            enum AVStreamGroupParamsType type,
                                            AVDictionary **options);
# 2172 "./libavformat/avformat.h"
AVStream *avformat_new_stream(AVFormatContext *s, const struct AVCodec *c);
# 2197 "./libavformat/avformat.h"
int avformat_stream_group_add_stream(AVStreamGroup *stg, AVStream *st);
# 2215 "./libavformat/avformat.h"
__attribute__((deprecated))
int av_stream_add_side_data(AVStream *st, enum AVPacketSideDataType type,
                            uint8_t *data, size_t size);
# 2230 "./libavformat/avformat.h"
__attribute__((deprecated))
uint8_t *av_stream_new_side_data(AVStream *stream,
                                 enum AVPacketSideDataType type, size_t size);
# 2245 "./libavformat/avformat.h"
__attribute__((deprecated))
uint8_t *av_stream_get_side_data(const AVStream *stream,
                                 enum AVPacketSideDataType type, size_t *size);


AVProgram *av_new_program(AVFormatContext *s, int id);
# 2274 "./libavformat/avformat.h"
int avformat_alloc_output_context2(AVFormatContext **ctx, const AVOutputFormat *oformat,
                                   const char *format_name, const char *filename);
# 2285 "./libavformat/avformat.h"
const AVInputFormat *av_find_input_format(const char *short_name);
# 2294 "./libavformat/avformat.h"
const AVInputFormat *av_probe_input_format(const AVProbeData *pd, int is_opened);
# 2308 "./libavformat/avformat.h"
const AVInputFormat *av_probe_input_format2(const AVProbeData *pd,
                                            int is_opened, int *score_max);
# 2318 "./libavformat/avformat.h"
const AVInputFormat *av_probe_input_format3(const AVProbeData *pd,
                                            int is_opened, int *score_ret);
# 2338 "./libavformat/avformat.h"
int av_probe_input_buffer2(AVIOContext *pb, const AVInputFormat **fmt,
                           const char *url, void *logctx,
                           unsigned int offset, unsigned int max_probe_size);




int av_probe_input_buffer(AVIOContext *pb, const AVInputFormat **fmt,
                          const char *url, void *logctx,
                          unsigned int offset, unsigned int max_probe_size);
# 2371 "./libavformat/avformat.h"
int avformat_open_input(AVFormatContext **ps, const char *url,
                        const AVInputFormat *fmt, AVDictionary **options);
# 2395 "./libavformat/avformat.h"
int avformat_find_stream_info(AVFormatContext *ic, AVDictionary **options);
# 2408 "./libavformat/avformat.h"
AVProgram *av_find_program_from_stream(AVFormatContext *ic, AVProgram *last, int s);

void av_program_add_stream_index(AVFormatContext *ac, int progid, unsigned int idx);
# 2438 "./libavformat/avformat.h"
int av_find_best_stream(AVFormatContext *ic,
                        enum AVMediaType type,
                        int wanted_stream_nb,
                        int related_stream,
                        const struct AVCodec **decoder_ret,
                        int flags);
# 2472 "./libavformat/avformat.h"
int av_read_frame(AVFormatContext *s, AVPacket *pkt);
# 2488 "./libavformat/avformat.h"
int av_seek_frame(AVFormatContext *s, int stream_index, int64_t timestamp,
                  int flags);
# 2517 "./libavformat/avformat.h"
int avformat_seek_file(AVFormatContext *s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags);
# 2535 "./libavformat/avformat.h"
int avformat_flush(AVFormatContext *s);





int av_read_play(AVFormatContext *s);






int av_read_pause(AVFormatContext *s);





void avformat_close_input(AVFormatContext **s);
# 2595 "./libavformat/avformat.h"
__attribute__((warn_unused_result))
int avformat_write_header(AVFormatContext *s, AVDictionary **options);
# 2623 "./libavformat/avformat.h"
__attribute__((warn_unused_result))
int avformat_init_output(AVFormatContext *s, AVDictionary **options);
# 2663 "./libavformat/avformat.h"
int av_write_frame(AVFormatContext *s, AVPacket *pkt);
# 2707 "./libavformat/avformat.h"
int av_interleaved_write_frame(AVFormatContext *s, AVPacket *pkt);
# 2717 "./libavformat/avformat.h"
int av_write_uncoded_frame(AVFormatContext *s, int stream_index,
                           struct AVFrame *frame);
# 2736 "./libavformat/avformat.h"
int av_interleaved_write_uncoded_frame(AVFormatContext *s, int stream_index,
                                       struct AVFrame *frame);







int av_write_uncoded_frame_query(AVFormatContext *s, int stream_index);
# 2756 "./libavformat/avformat.h"
int av_write_trailer(AVFormatContext *s);
# 2770 "./libavformat/avformat.h"
const AVOutputFormat *av_guess_format(const char *short_name,
                                      const char *filename,
                                      const char *mime_type);




enum AVCodecID av_guess_codec(const AVOutputFormat *fmt, const char *short_name,
                              const char *filename, const char *mime_type,
                              enum AVMediaType type);
# 2798 "./libavformat/avformat.h"
int av_get_output_timestamp(struct AVFormatContext *s, int stream,
                            int64_t *dts, int64_t *wall);
# 2825 "./libavformat/avformat.h"
void av_hex_dump(FILE *f, const uint8_t *buf, int size);
# 2839 "./libavformat/avformat.h"
void av_hex_dump_log(void *avcl, int level, const uint8_t *buf, int size);
# 2849 "./libavformat/avformat.h"
void av_pkt_dump2(FILE *f, const AVPacket *pkt, int dump_payload, const AVStream *st);
# 2863 "./libavformat/avformat.h"
void av_pkt_dump_log2(void *avcl, int level, const AVPacket *pkt, int dump_payload,
                      const AVStream *st);
# 2874 "./libavformat/avformat.h"
enum AVCodecID av_codec_get_id(const struct AVCodecTag * const *tags, unsigned int tag);
# 2884 "./libavformat/avformat.h"
unsigned int av_codec_get_tag(const struct AVCodecTag * const *tags, enum AVCodecID id);
# 2895 "./libavformat/avformat.h"
int av_codec_get_tag2(const struct AVCodecTag * const *tags, enum AVCodecID id,
                      unsigned int *tag);

int av_find_default_stream_index(AVFormatContext *s);
# 2911 "./libavformat/avformat.h"
int av_index_search_timestamp(AVStream *st, int64_t timestamp, int flags);







int avformat_index_get_entries_count(const AVStream *st);
# 2932 "./libavformat/avformat.h"
const AVIndexEntry *avformat_index_get_entry(AVStream *st, int idx);
# 2949 "./libavformat/avformat.h"
const AVIndexEntry *avformat_index_get_entry_from_timestamp(AVStream *st,
                                                            int64_t wanted_timestamp,
                                                            int flags);






int av_add_index_entry(AVStream *st, int64_t pos, int64_t timestamp,
                       int size, int distance, int flags);
# 2981 "./libavformat/avformat.h"
void av_url_split(char *proto, int proto_size,
                  char *authorization, int authorization_size,
                  char *hostname, int hostname_size,
                  int *port_ptr,
                  char *path, int path_size,
                  const char *url);
# 2999 "./libavformat/avformat.h"
void av_dump_format(AVFormatContext *ic,
                    int index,
                    const char *url,
                    int is_output);
# 3020 "./libavformat/avformat.h"
int av_get_frame_filename2(char *buf, int buf_size,
                          const char *path, int number, int flags);

int av_get_frame_filename(char *buf, int buf_size,
                          const char *path, int number);







int av_filename_number_test(const char *filename);
# 3051 "./libavformat/avformat.h"
int av_sdp_create(AVFormatContext *ac[], int n_files, char *buf, int size);
# 3060 "./libavformat/avformat.h"
int av_match_ext(const char *filename, const char *extensions);
# 3072 "./libavformat/avformat.h"
int avformat_query_codec(const AVOutputFormat *ofmt, enum AVCodecID codec_id,
                         int std_compliance);
# 3090 "./libavformat/avformat.h"
const struct AVCodecTag *avformat_get_riff_video_tags(void);



const struct AVCodecTag *avformat_get_riff_audio_tags(void);



const struct AVCodecTag *avformat_get_mov_video_tags(void);



const struct AVCodecTag *avformat_get_mov_audio_tags(void);
# 3125 "./libavformat/avformat.h"
AVRational av_guess_sample_aspect_ratio(AVFormatContext *format, AVStream *stream,
                                        struct AVFrame *frame);
# 3136 "./libavformat/avformat.h"
AVRational av_guess_frame_rate(AVFormatContext *ctx, AVStream *stream,
                               struct AVFrame *frame);
# 3152 "./libavformat/avformat.h"
int avformat_match_stream_specifier(AVFormatContext *s, AVStream *st,
                                    const char *spec);

int avformat_queue_attached_pictures(AVFormatContext *s);

enum AVTimebaseSource {
    AVFMT_TBCF_AUTO = -1,
    AVFMT_TBCF_DECODER,
    AVFMT_TBCF_DEMUXER,

    AVFMT_TBCF_R_FRAMERATE,

};
# 3176 "./libavformat/avformat.h"
int avformat_transfer_internal_stream_timing_info(const AVOutputFormat *ofmt,
                                                  AVStream *ost, const AVStream *ist,
                                                  enum AVTimebaseSource copy_tb);






AVRational av_stream_get_codec_timebase(const AVStream *st);
# 31 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h" 2
# 1 "./libswscale/swscale.h" 1
# 36 "./libswscale/swscale.h"
# 1 "./libswscale/version_major.h" 1
# 37 "./libswscale/swscale.h" 2




# 1 "./libswscale/version.h" 1
# 42 "./libswscale/swscale.h" 2
# 52 "./libswscale/swscale.h"
unsigned swscale_version(void);




const char *swscale_configuration(void);




const char *swscale_license(void);
# 112 "./libswscale/swscale.h"
const int *sws_getCoefficients(int colorspace);



typedef struct SwsVector {
    double *coeff;
    int length;
} SwsVector;


typedef struct SwsFilter {
    SwsVector *lumH;
    SwsVector *lumV;
    SwsVector *chrH;
    SwsVector *chrV;
} SwsFilter;

struct SwsContext;





int sws_isSupportedInput(enum AVPixelFormat pix_fmt);





int sws_isSupportedOutput(enum AVPixelFormat pix_fmt);






int sws_isSupportedEndiannessConversion(enum AVPixelFormat pix_fmt);






struct SwsContext *sws_alloc_context(void);







__attribute__((warn_unused_result))
int sws_init_context(struct SwsContext *sws_context, SwsFilter *srcFilter, SwsFilter *dstFilter);





void sws_freeContext(struct SwsContext *swsContext);
# 193 "./libswscale/swscale.h"
struct SwsContext *sws_getContext(int srcW, int srcH, enum AVPixelFormat srcFormat,
                                  int dstW, int dstH, enum AVPixelFormat dstFormat,
                                  int flags, SwsFilter *srcFilter,
                                  SwsFilter *dstFilter, const double *param);
# 224 "./libswscale/swscale.h"
int sws_scale(struct SwsContext *c, const uint8_t *const srcSlice[],
              const int srcStride[], int srcSliceY, int srcSliceH,
              uint8_t *const dst[], const int dstStride[]);
# 244 "./libswscale/swscale.h"
int sws_scale_frame(struct SwsContext *c, AVFrame *dst, const AVFrame *src);
# 271 "./libswscale/swscale.h"
int sws_frame_start(struct SwsContext *c, AVFrame *dst, const AVFrame *src);
# 281 "./libswscale/swscale.h"
void sws_frame_end(struct SwsContext *c);
# 295 "./libswscale/swscale.h"
int sws_send_slice(struct SwsContext *c, unsigned int slice_start,
                   unsigned int slice_height);
# 315 "./libswscale/swscale.h"
int sws_receive_slice(struct SwsContext *c, unsigned int slice_start,
                      unsigned int slice_height);
# 326 "./libswscale/swscale.h"
unsigned int sws_receive_slice_alignment(const struct SwsContext *c);
# 341 "./libswscale/swscale.h"
int sws_setColorspaceDetails(struct SwsContext *c, const int inv_table[4],
                             int srcRange, const int table[4], int dstRange,
                             int brightness, int contrast, int saturation);





int sws_getColorspaceDetails(struct SwsContext *c, int **inv_table,
                             int *srcRange, int **table, int *dstRange,
                             int *brightness, int *contrast, int *saturation);




SwsVector *sws_allocVec(int length);





SwsVector *sws_getGaussianVec(double variance, double quality);




void sws_scaleVec(SwsVector *a, double scalar);




void sws_normalizeVec(SwsVector *a, double height);

void sws_freeVec(SwsVector *a);

SwsFilter *sws_getDefaultFilter(float lumaGBlur, float chromaGBlur,
                                float lumaSharpen, float chromaSharpen,
                                float chromaHShift, float chromaVShift,
                                int verbose);
void sws_freeFilter(SwsFilter *filter);
# 394 "./libswscale/swscale.h"
struct SwsContext *sws_getCachedContext(struct SwsContext *context,
                                        int srcW, int srcH, enum AVPixelFormat srcFormat,
                                        int dstW, int dstH, enum AVPixelFormat dstFormat,
                                        int flags, SwsFilter *srcFilter,
                                        SwsFilter *dstFilter, const double *param);
# 410 "./libswscale/swscale.h"
void sws_convertPalette8ToPacked32(const uint8_t *src, uint8_t *dst, int num_pixels, const uint8_t *palette);
# 422 "./libswscale/swscale.h"
void sws_convertPalette8ToPacked24(const uint8_t *src, uint8_t *dst, int num_pixels, const uint8_t *palette);







const AVClass *sws_get_class(void);
# 32 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h" 2
# 40 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
extern const char program_name[];




extern const int program_birth_year;

extern AVDictionary *sws_dict;
extern AVDictionary *swr_opts;
extern AVDictionary *format_opts, *codec_opts;
extern int hide_banner;




void init_dynload(void);





void uninit_opts(void);





void log_callback_help(void* ptr, int level, const char* fmt, va_list vl);





int opt_default(void *optctx, const char *opt, const char *arg);




int opt_timelimit(void *optctx, const char *opt, const char *arg);

enum OptionType {
    OPT_TYPE_FUNC,
    OPT_TYPE_BOOL,
    OPT_TYPE_STRING,
    OPT_TYPE_INT,
    OPT_TYPE_INT64,
    OPT_TYPE_FLOAT,
    OPT_TYPE_DOUBLE,
    OPT_TYPE_TIME,
};
# 102 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
int parse_number(const char *context, const char *numstr, enum OptionType type,
                 double min, double max, double *dst);

typedef struct SpecifierOpt {
    char *specifier;
    union {
        uint8_t *str;
        int i;
        int64_t i64;
        uint64_t ui64;
        float f;
        double dbl;
    } u;
} SpecifierOpt;

typedef struct SpecifierOptList {
    SpecifierOpt *opt;
    int nb_opt;


    const struct OptionDef *opt_canon;
    enum OptionType type;
} SpecifierOptList;

typedef struct OptionDef {
    const char *name;
    enum OptionType type;
    int flags;
# 178 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
     union {
        void *dst_ptr;
        int (*func_arg)(void *, const char *, const char *);
        size_t off;
    } u;
    const char *help;
    const char *argname;

    union {


        const char *name_canon;


        const char * const *names_alt;
    } u1;
} OptionDef;
# 204 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
void show_help_options(const OptionDef *options, const char *msg, int req_flags,
                       int rej_flags);





void show_help_children(const AVClass *class, int flags);





void show_help_default(const char *opt, const char *arg);
# 231 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
int parse_options(void *optctx, int argc, char **argv, const OptionDef *options,
                  int (* parse_arg_function)(void *optctx, const char*));






int parse_option(void *optctx, const char *opt, const char *arg,
                 const OptionDef *options);






typedef struct Option {
    const OptionDef *opt;
    const char *key;
    const char *val;
} Option;

typedef struct OptionGroupDef {

    const char *name;




    const char *sep;




    int flags;
} OptionGroupDef;

typedef struct OptionGroup {
    const OptionGroupDef *group_def;
    const char *arg;

    Option *opts;
    int nb_opts;

    AVDictionary *codec_opts;
    AVDictionary *format_opts;
    AVDictionary *sws_dict;
    AVDictionary *swr_opts;
} OptionGroup;





typedef struct OptionGroupList {
    const OptionGroupDef *group_def;

    OptionGroup *groups;
    int nb_groups;
} OptionGroupList;

typedef struct OptionParseContext {
    OptionGroup global_opts;

    OptionGroupList *groups;
    int nb_groups;


    OptionGroup cur_group;
} OptionParseContext;






int parse_optgroup(void *optctx, OptionGroup *g, const OptionDef *defs);
# 327 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
int split_commandline(OptionParseContext *octx, int argc, char *argv[],
                      const OptionDef *options,
                      const OptionGroupDef *groups, int nb_groups);




void uninit_parse_context(OptionParseContext *octx);




void parse_loglevel(int argc, char **argv, const OptionDef *options);




int locate_option(int argc, char **argv, const OptionDef *options,
                  const char *optname);
# 356 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
int check_stream_specifier(AVFormatContext *s, AVStream *st, const char *spec);
# 373 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
int filter_codec_opts(const AVDictionary *opts, enum AVCodecID codec_id,
                      AVFormatContext *s, AVStream *st, const AVCodec *codec,
                      AVDictionary **dst);
# 385 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
int setup_find_stream_info_opts(AVFormatContext *s,
                                AVDictionary *codec_opts,
                                AVDictionary ***dst);
# 398 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
static inline void print_error(const char *filename, int err)
{
    av_log(
# 400 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h" 3 4
          ((void *)0)
# 400 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
              , 16, "%s: %s\n", filename, av_make_error_string((char[64]){0}, 64, err));
}






void show_banner(int argc, char **argv, const OptionDef *options);





int read_yesno(void);
# 434 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
FILE *get_preset_file(char *filename, size_t filename_size,
                      const char *preset_name, int is_path, const char *codec_name);
# 447 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
int grow_array(void **array, int elem_size, int *size, int new_size);
# 460 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
void *allocate_array_elem(void *array, size_t elem_size, int *nb_elems);
# 478 "/workspaces/typed-ffmpeg/ffmpeg/fftools/cmdutils.h"
double get_rotation(const int32_t *displaymatrix);


char *file_read(const char *filename);
# 30 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2
# 1 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h" 1
# 25 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 26 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h" 2


# 1 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_utils.h" 1
# 24 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_utils.h"
# 1 "./libavutil/common.h" 1
# 25 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_utils.h" 2





typedef struct Timestamp {
    int64_t ts;
    AVRational tb;
} Timestamp;







static inline int err_merge(int err0, int err1)
{
    return (err0 < 0) ? err0 : ((err1) > (0) ? (0) : (err1));
}

static inline void pkt_move(void *dst, void *src)
{
    av_packet_move_ref(dst, src);
}

static inline void frame_move(void *dst, void *src)
{
    av_frame_move_ref(dst, src);
}
# 29 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h" 2
# 84 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
struct AVFrame;
struct AVPacket;

typedef struct Scheduler Scheduler;

enum SchedulerNodeType {
    SCH_NODE_TYPE_NONE = 0,
    SCH_NODE_TYPE_DEMUX,
    SCH_NODE_TYPE_MUX,
    SCH_NODE_TYPE_DEC,
    SCH_NODE_TYPE_ENC,
    SCH_NODE_TYPE_FILTER_IN,
    SCH_NODE_TYPE_FILTER_OUT,
};

typedef struct SchedulerNode {
    enum SchedulerNodeType type;
    unsigned idx;
    unsigned idx_stream;
} SchedulerNode;

typedef void* (*SchThreadFunc)(void *arg);
# 126 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
Scheduler *sch_alloc(void);
void sch_free(Scheduler **sch);

int sch_start(Scheduler *sch);
int sch_stop(Scheduler *sch, int64_t *finish_ts);
# 143 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_wait(Scheduler *sch, uint64_t timeout_us, int64_t *transcode_ts);
# 154 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_add_demux(Scheduler *sch, SchThreadFunc func, void *ctx);
# 163 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_add_demux_stream(Scheduler *sch, unsigned demux_idx);
# 177 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_add_dec(Scheduler *sch, SchThreadFunc func, void *ctx,
                int send_end_ts);
# 191 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_add_filtergraph(Scheduler *sch, unsigned nb_inputs, unsigned nb_outputs,
                        SchThreadFunc func, void *ctx);
# 234 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_add_mux(Scheduler *sch, SchThreadFunc func, int (*init)(void *),
                void *ctx, int sdp_auto, unsigned thread_queue_size);
# 244 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_add_mux_stream(Scheduler *sch, unsigned mux_idx);
# 257 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
void sch_mux_stream_buffering(Scheduler *sch, unsigned mux_idx, unsigned stream_idx,
                              size_t data_threshold, int max_packets);





int sch_mux_stream_ready(Scheduler *sch, unsigned mux_idx, unsigned stream_idx);
# 273 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_sdp_filename(Scheduler *sch, const char *sdp_filename);
# 289 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_add_enc(Scheduler *sch, SchThreadFunc func, void *ctx,
                int (*open_cb)(void *func_arg, const struct AVFrame *frame));
# 301 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_add_sq_enc(Scheduler *sch, uint64_t buf_size_us, void *logctx);
int sch_sq_add_enc(Scheduler *sch, unsigned sq_idx, unsigned enc_idx,
                   int limiting, uint64_t max_frames);

int sch_connect(Scheduler *sch, SchedulerNode src, SchedulerNode dst);

enum DemuxSendFlags {




    DEMUX_SEND_STREAMCOPY_EOF = (1 << 0),
};
# 334 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_demux_send(Scheduler *sch, unsigned demux_idx, struct AVPacket *pkt,
                   unsigned flags);
# 353 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_dec_receive(Scheduler *sch, unsigned dec_idx, struct AVPacket *pkt);
# 366 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_dec_send(Scheduler *sch, unsigned dec_idx, struct AVFrame *frame);
# 391 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_filter_receive(Scheduler *sch, unsigned fg_idx,
                       unsigned *in_idx, struct AVFrame *frame);






void sch_filter_receive_finish(Scheduler *sch, unsigned fg_idx, unsigned in_idx);
# 414 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_filter_send(Scheduler *sch, unsigned fg_idx, unsigned out_idx,
                    struct AVFrame *frame);

int sch_filter_command(Scheduler *sch, unsigned fg_idx, struct AVFrame *frame);
# 432 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_enc_receive(Scheduler *sch, unsigned enc_idx, struct AVFrame *frame);
# 444 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_enc_send (Scheduler *sch, unsigned enc_idx, struct AVPacket *pkt);
# 463 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_sched.h"
int sch_mux_receive(Scheduler *sch, unsigned mux_idx, struct AVPacket *pkt);






void sch_mux_receive_finish(Scheduler *sch, unsigned mux_idx, unsigned stream_idx);

int sch_mux_sub_heartbeat_add(Scheduler *sch, unsigned mux_idx, unsigned stream_idx,
                              unsigned dec_idx);
int sch_mux_sub_heartbeat(Scheduler *sch, unsigned mux_idx, unsigned stream_idx,
                          const AVPacket *pkt);
# 31 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2
# 1 "/workspaces/typed-ffmpeg/ffmpeg/fftools/sync_queue.h" 1
# 28 "/workspaces/typed-ffmpeg/ffmpeg/fftools/sync_queue.h"
enum SyncQueueType {
    SYNC_QUEUE_PACKETS,
    SYNC_QUEUE_FRAMES,
};

typedef union SyncQueueFrame {
    AVFrame *f;
    AVPacket *p;
} SyncQueueFrame;
# 46 "/workspaces/typed-ffmpeg/ffmpeg/fftools/sync_queue.h"
typedef struct SyncQueue SyncQueue;






SyncQueue *sq_alloc(enum SyncQueueType type, int64_t buf_size_us, void *logctx);
void sq_free(SyncQueue **sq);
# 65 "/workspaces/typed-ffmpeg/ffmpeg/fftools/sync_queue.h"
int sq_add_stream(SyncQueue *sq, int limiting);





void sq_limit_frames(SyncQueue *sq, unsigned int stream_idx,
                     uint64_t max_frames);
# 81 "/workspaces/typed-ffmpeg/ffmpeg/fftools/sync_queue.h"
void sq_frame_samples(SyncQueue *sq, unsigned int stream_idx,
                      int frame_samples);
# 98 "/workspaces/typed-ffmpeg/ffmpeg/fftools/sync_queue.h"
int sq_send(SyncQueue *sq, unsigned int stream_idx, SyncQueueFrame frame);
# 116 "/workspaces/typed-ffmpeg/ffmpeg/fftools/sync_queue.h"
int sq_receive(SyncQueue *sq, int stream_idx, SyncQueueFrame frame);
# 32 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2


# 1 "./libavformat/avio.h" 1
# 35 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2


# 1 "./libavcodec/bsf.h" 1
# 68 "./libavcodec/bsf.h"
typedef struct AVBSFContext {



    const AVClass *av_class;




    const struct AVBitStreamFilter *filter;





    void *priv_data;






    AVCodecParameters *par_in;





    AVCodecParameters *par_out;





    AVRational time_base_in;





    AVRational time_base_out;
} AVBSFContext;

typedef struct AVBitStreamFilter {
    const char *name;






    const enum AVCodecID *codec_ids;
# 130 "./libavcodec/bsf.h"
    const AVClass *priv_class;
} AVBitStreamFilter;





const AVBitStreamFilter *av_bsf_get_by_name(const char *name);
# 148 "./libavcodec/bsf.h"
const AVBitStreamFilter *av_bsf_iterate(void **opaque);
# 162 "./libavcodec/bsf.h"
int av_bsf_alloc(const AVBitStreamFilter *filter, AVBSFContext **ctx);







int av_bsf_init(AVBSFContext *ctx);
# 193 "./libavcodec/bsf.h"
int av_bsf_send_packet(AVBSFContext *ctx, AVPacket *pkt);
# 222 "./libavcodec/bsf.h"
int av_bsf_receive_packet(AVBSFContext *ctx, AVPacket *pkt);




void av_bsf_flush(AVBSFContext *ctx);





void av_bsf_free(AVBSFContext **ctx);







const AVClass *av_bsf_get_class(void);





typedef struct AVBSFList AVBSFList;
# 256 "./libavcodec/bsf.h"
AVBSFList *av_bsf_list_alloc(void);






void av_bsf_list_free(AVBSFList **lst);
# 273 "./libavcodec/bsf.h"
int av_bsf_list_append(AVBSFList *lst, AVBSFContext *bsf);
# 285 "./libavcodec/bsf.h"
int av_bsf_list_append2(AVBSFList *lst, const char * bsf_name, AVDictionary **options);
# 302 "./libavcodec/bsf.h"
int av_bsf_list_finalize(AVBSFList **lst, AVBSFContext **bsf);
# 317 "./libavcodec/bsf.h"
int av_bsf_list_parse_str(const char *str, AVBSFContext **bsf);
# 326 "./libavcodec/bsf.h"
int av_bsf_get_null_filter(AVBSFContext **bsf);
# 38 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2





# 1 "./libavutil/eval.h" 1
# 29 "./libavutil/eval.h"
typedef struct AVExpr AVExpr;
# 50 "./libavutil/eval.h"
int av_expr_parse_and_eval(double *res, const char *s,
                           const char * const *const_names, const double *const_values,
                           const char * const *func1_names, double (* const *funcs1)(void *, double),
                           const char * const *func2_names, double (* const *funcs2)(void *, double, double),
                           void *opaque, int log_offset, void *log_ctx);
# 74 "./libavutil/eval.h"
int av_expr_parse(AVExpr **expr, const char *s,
                  const char * const *const_names,
                  const char * const *func1_names, double (* const *funcs1)(void *, double),
                  const char * const *func2_names, double (* const *funcs2)(void *, double, double),
                  int log_offset, void *log_ctx);
# 88 "./libavutil/eval.h"
double av_expr_eval(AVExpr *e, const double *const_values, void *opaque);
# 99 "./libavutil/eval.h"
int av_expr_count_vars(AVExpr *e, unsigned *counter, int size);
# 114 "./libavutil/eval.h"
int av_expr_count_func(AVExpr *e, unsigned *counter, int size, int arg);




void av_expr_free(AVExpr *e);
# 138 "./libavutil/eval.h"
double av_strtod(const char *numstr, char **tail);
# 44 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2
# 1 "./libavutil/fifo.h" 1
# 28 "./libavutil/fifo.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 29 "./libavutil/fifo.h" 2
# 42 "./libavutil/fifo.h"
typedef struct AVFifo AVFifo;
# 60 "./libavutil/fifo.h"
typedef int AVFifoCB(void *opaque, void *buf, size_t *nb_elems);
# 79 "./libavutil/fifo.h"
AVFifo *av_fifo_alloc2(size_t elems, size_t elem_size,
                       unsigned int flags);





size_t av_fifo_elem_size(const AVFifo *f);





void av_fifo_auto_grow_limit(AVFifo *f, size_t max_elems);




size_t av_fifo_can_read(const AVFifo *f);
# 108 "./libavutil/fifo.h"
size_t av_fifo_can_write(const AVFifo *f);
# 122 "./libavutil/fifo.h"
int av_fifo_grow2(AVFifo *f, size_t inc);
# 140 "./libavutil/fifo.h"
int av_fifo_write(AVFifo *f, const void *buf, size_t nb_elems);
# 155 "./libavutil/fifo.h"
int av_fifo_write_from_cb(AVFifo *f, AVFifoCB read_cb,
                          void *opaque, size_t *nb_elems);
# 171 "./libavutil/fifo.h"
int av_fifo_read(AVFifo *f, void *buf, size_t nb_elems);
# 186 "./libavutil/fifo.h"
int av_fifo_read_to_cb(AVFifo *f, AVFifoCB write_cb,
                       void *opaque, size_t *nb_elems);
# 203 "./libavutil/fifo.h"
int av_fifo_peek(const AVFifo *f, void *buf, size_t nb_elems, size_t offset);
# 220 "./libavutil/fifo.h"
int av_fifo_peek_to_cb(const AVFifo *f, AVFifoCB write_cb, void *opaque,
                       size_t *nb_elems, size_t offset);






void av_fifo_drain2(AVFifo *f, size_t size);





void av_fifo_reset2(AVFifo *f);





void av_fifo_freep2(AVFifo **f);



typedef struct AVFifoBuffer {
    uint8_t *buffer;
    uint8_t *rptr, *wptr, *end;
    uint32_t rndx, wndx;
} AVFifoBuffer;







__attribute__((deprecated))
AVFifoBuffer *av_fifo_alloc(unsigned int size);
# 266 "./libavutil/fifo.h"
__attribute__((deprecated))
AVFifoBuffer *av_fifo_alloc_array(size_t nmemb, size_t size);






__attribute__((deprecated))
void av_fifo_free(AVFifoBuffer *f);






__attribute__((deprecated))
void av_fifo_freep(AVFifoBuffer **f);






__attribute__((deprecated))
void av_fifo_reset(AVFifoBuffer *f);
# 300 "./libavutil/fifo.h"
__attribute__((deprecated))
int av_fifo_size(const AVFifoBuffer *f);
# 310 "./libavutil/fifo.h"
__attribute__((deprecated))
int av_fifo_space(const AVFifoBuffer *f);
# 327 "./libavutil/fifo.h"
__attribute__((deprecated))
int av_fifo_generic_peek_at(AVFifoBuffer *f, void *dest, int offset, int buf_size, void (*func)(void*, void*, int));
# 343 "./libavutil/fifo.h"
__attribute__((deprecated))
int av_fifo_generic_peek(AVFifoBuffer *f, void *dest, int buf_size, void (*func)(void*, void*, int));
# 358 "./libavutil/fifo.h"
__attribute__((deprecated))
int av_fifo_generic_read(AVFifoBuffer *f, void *dest, int buf_size, void (*func)(void*, void*, int));
# 377 "./libavutil/fifo.h"
__attribute__((deprecated))
int av_fifo_generic_write(AVFifoBuffer *f, void *src, int size, int (*func)(void*, void*, int));
# 391 "./libavutil/fifo.h"
__attribute__((deprecated))
int av_fifo_realloc2(AVFifoBuffer *f, unsigned int size);
# 406 "./libavutil/fifo.h"
__attribute__((deprecated))
int av_fifo_grow(AVFifoBuffer *f, unsigned int additional_space);
# 416 "./libavutil/fifo.h"
__attribute__((deprecated))
void av_fifo_drain(AVFifoBuffer *f, int size);
# 431 "./libavutil/fifo.h"
__attribute__((deprecated))
static inline uint8_t *av_fifo_peek2(const AVFifoBuffer *f, int offs)
{
    uint8_t *ptr = f->rptr + offs;
    if (ptr >= f->end)
        ptr = f->buffer + (ptr - f->end);
    else if (ptr < f->buffer)
        ptr = f->end - (f->buffer - ptr);
    return ptr;
}
# 45 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2



# 1 "./libavutil/thread.h" 1
# 38 "./libavutil/thread.h"
# 1 "/usr/include/pthread.h" 1 3 4
# 22 "/usr/include/pthread.h" 3 4
# 1 "/usr/include/sched.h" 1 3 4
# 29 "/usr/include/sched.h" 3 4
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 30 "/usr/include/sched.h" 2 3 4
# 43 "/usr/include/sched.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/sched.h" 1 3 4
# 80 "/usr/include/aarch64-linux-gnu/bits/sched.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/struct_sched_param.h" 1 3 4
# 23 "/usr/include/aarch64-linux-gnu/bits/types/struct_sched_param.h" 3 4

# 23 "/usr/include/aarch64-linux-gnu/bits/types/struct_sched_param.h" 3 4
struct sched_param
{
  int sched_priority;
};
# 81 "/usr/include/aarch64-linux-gnu/bits/sched.h" 2 3 4


# 102 "/usr/include/aarch64-linux-gnu/bits/sched.h" 3 4

# 44 "/usr/include/sched.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/cpu-set.h" 1 3 4
# 32 "/usr/include/aarch64-linux-gnu/bits/cpu-set.h" 3 4
typedef unsigned long int __cpu_mask;






typedef struct
{
  __cpu_mask __bits[1024 / (8 * sizeof (__cpu_mask))];
} cpu_set_t;
# 115 "/usr/include/aarch64-linux-gnu/bits/cpu-set.h" 3 4


extern int __sched_cpucount (size_t __setsize, const cpu_set_t *__setp)
     __attribute__ ((__nothrow__ , __leaf__));
extern cpu_set_t *__sched_cpualloc (size_t __count) __attribute__ ((__nothrow__ , __leaf__)) ;
extern void __sched_cpufree (cpu_set_t *__set) __attribute__ ((__nothrow__ , __leaf__));


# 45 "/usr/include/sched.h" 2 3 4









extern int sched_setparam (__pid_t __pid, const struct sched_param *__param)
     __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getparam (__pid_t __pid, struct sched_param *__param) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_setscheduler (__pid_t __pid, int __policy,
          const struct sched_param *__param) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_getscheduler (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_yield (void) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_get_priority_max (int __algorithm) __attribute__ ((__nothrow__ , __leaf__));


extern int sched_get_priority_min (int __algorithm) __attribute__ ((__nothrow__ , __leaf__));



extern int sched_rr_get_interval (__pid_t __pid, struct timespec *__t) __attribute__ ((__nothrow__ , __leaf__));
# 138 "/usr/include/sched.h" 3 4

# 23 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/time.h" 1 3 4
# 29 "/usr/include/time.h" 3 4
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 30 "/usr/include/time.h" 2 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/time.h" 1 3 4
# 34 "/usr/include/time.h" 2 3 4





# 1 "/usr/include/aarch64-linux-gnu/bits/types/struct_tm.h" 1 3 4






struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;


  long int tm_gmtoff;
  const char *tm_zone;




};
# 40 "/usr/include/time.h" 2 3 4
# 48 "/usr/include/time.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/struct_itimerspec.h" 1 3 4







struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };
# 49 "/usr/include/time.h" 2 3 4
struct sigevent;
# 68 "/usr/include/time.h" 3 4




extern clock_t clock (void) __attribute__ ((__nothrow__ , __leaf__));



extern time_t time (time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));


extern double difftime (time_t __time1, time_t __time0)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern time_t mktime (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));
# 100 "/usr/include/time.h" 3 4
extern size_t strftime (char *__restrict __s, size_t __maxsize,
   const char *__restrict __format,
   const struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));
# 116 "/usr/include/time.h" 3 4
extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
     const char *__restrict __format,
     const struct tm *__restrict __tp,
     locale_t __loc) __attribute__ ((__nothrow__ , __leaf__));
# 132 "/usr/include/time.h" 3 4
extern struct tm *gmtime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));
# 154 "/usr/include/time.h" 3 4
extern struct tm *gmtime_r (const time_t *__restrict __timer,
       struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));



extern struct tm *localtime_r (const time_t *__restrict __timer,
          struct tm *__restrict __tp) __attribute__ ((__nothrow__ , __leaf__));
# 179 "/usr/include/time.h" 3 4
extern char *asctime (const struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));



extern char *ctime (const time_t *__timer) __attribute__ ((__nothrow__ , __leaf__));
# 197 "/usr/include/time.h" 3 4
extern char *asctime_r (const struct tm *__restrict __tp,
   char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern char *ctime_r (const time_t *__restrict __timer,
        char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));
# 217 "/usr/include/time.h" 3 4
extern char *__tzname[2];
extern int __daylight;
extern long int __timezone;




extern char *tzname[2];



extern void tzset (void) __attribute__ ((__nothrow__ , __leaf__));



extern int daylight;
extern long int timezone;
# 246 "/usr/include/time.h" 3 4
extern time_t timegm (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));
# 263 "/usr/include/time.h" 3 4
extern time_t timelocal (struct tm *__tp) __attribute__ ((__nothrow__ , __leaf__));







extern int dysize (int __year) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 281 "/usr/include/time.h" 3 4
extern int nanosleep (const struct timespec *__requested_time,
        struct timespec *__remaining);


extern int clock_getres (clockid_t __clock_id, struct timespec *__res) __attribute__ ((__nothrow__ , __leaf__));


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int clock_settime (clockid_t __clock_id, const struct timespec *__tp)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 323 "/usr/include/time.h" 3 4
extern int clock_nanosleep (clockid_t __clock_id, int __flags,
       const struct timespec *__req,
       struct timespec *__rem);
# 338 "/usr/include/time.h" 3 4
extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) __attribute__ ((__nothrow__ , __leaf__));




extern int timer_create (clockid_t __clock_id,
    struct sigevent *__restrict __evp,
    timer_t *__restrict __timerid) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_delete (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));



extern int timer_settime (timer_t __timerid, int __flags,
     const struct itimerspec *__restrict __value,
     struct itimerspec *__restrict __ovalue) __attribute__ ((__nothrow__ , __leaf__));


extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     __attribute__ ((__nothrow__ , __leaf__));
# 376 "/usr/include/time.h" 3 4
extern int timer_getoverrun (timer_t __timerid) __attribute__ ((__nothrow__ , __leaf__));






extern int timespec_get (struct timespec *__ts, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 452 "/usr/include/time.h" 3 4

# 24 "/usr/include/pthread.h" 2 3 4



# 1 "/usr/include/aarch64-linux-gnu/bits/setjmp.h" 1 3 4
# 30 "/usr/include/aarch64-linux-gnu/bits/setjmp.h" 3 4
__extension__ typedef unsigned long long __jmp_buf [22];
# 28 "/usr/include/pthread.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 29 "/usr/include/pthread.h" 2 3 4


# 1 "/usr/include/aarch64-linux-gnu/bits/types/struct___jmp_buf_tag.h" 1 3 4
# 26 "/usr/include/aarch64-linux-gnu/bits/types/struct___jmp_buf_tag.h" 3 4
struct __jmp_buf_tag
  {




    __jmp_buf __jmpbuf;
    int __mask_was_saved;
    __sigset_t __saved_mask;
  };
# 32 "/usr/include/pthread.h" 2 3 4





enum
{
  PTHREAD_CREATE_JOINABLE,

  PTHREAD_CREATE_DETACHED

};



enum
{
  PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_ADAPTIVE_NP

  ,
  PTHREAD_MUTEX_NORMAL = PTHREAD_MUTEX_TIMED_NP,
  PTHREAD_MUTEX_RECURSIVE = PTHREAD_MUTEX_RECURSIVE_NP,
  PTHREAD_MUTEX_ERRORCHECK = PTHREAD_MUTEX_ERRORCHECK_NP,
  PTHREAD_MUTEX_DEFAULT = PTHREAD_MUTEX_NORMAL





};




enum
{
  PTHREAD_MUTEX_STALLED,
  PTHREAD_MUTEX_STALLED_NP = PTHREAD_MUTEX_STALLED,
  PTHREAD_MUTEX_ROBUST,
  PTHREAD_MUTEX_ROBUST_NP = PTHREAD_MUTEX_ROBUST
};





enum
{
  PTHREAD_PRIO_NONE,
  PTHREAD_PRIO_INHERIT,
  PTHREAD_PRIO_PROTECT
};
# 104 "/usr/include/pthread.h" 3 4
enum
{
  PTHREAD_RWLOCK_PREFER_READER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NP,
  PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
  PTHREAD_RWLOCK_DEFAULT_NP = PTHREAD_RWLOCK_PREFER_READER_NP
};
# 124 "/usr/include/pthread.h" 3 4
enum
{
  PTHREAD_INHERIT_SCHED,

  PTHREAD_EXPLICIT_SCHED

};



enum
{
  PTHREAD_SCOPE_SYSTEM,

  PTHREAD_SCOPE_PROCESS

};



enum
{
  PTHREAD_PROCESS_PRIVATE,

  PTHREAD_PROCESS_SHARED

};
# 159 "/usr/include/pthread.h" 3 4
struct _pthread_cleanup_buffer
{
  void (*__routine) (void *);
  void *__arg;
  int __canceltype;
  struct _pthread_cleanup_buffer *__prev;
};


enum
{
  PTHREAD_CANCEL_ENABLE,

  PTHREAD_CANCEL_DISABLE

};
enum
{
  PTHREAD_CANCEL_DEFERRED,

  PTHREAD_CANCEL_ASYNCHRONOUS

};
# 197 "/usr/include/pthread.h" 3 4





extern int pthread_create (pthread_t *__restrict __newthread,
      const pthread_attr_t *__restrict __attr,
      void *(*__start_routine) (void *),
      void *__restrict __arg) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 3)));





extern void pthread_exit (void *__retval) __attribute__ ((__noreturn__));







extern int pthread_join (pthread_t __th, void **__thread_return);
# 269 "/usr/include/pthread.h" 3 4
extern int pthread_detach (pthread_t __th) __attribute__ ((__nothrow__ , __leaf__));



extern pthread_t pthread_self (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));


extern int pthread_equal (pthread_t __thread1, pthread_t __thread2)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));







extern int pthread_attr_init (pthread_attr_t *__attr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_destroy (pthread_attr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getdetachstate (const pthread_attr_t *__attr,
     int *__detachstate)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setdetachstate (pthread_attr_t *__attr,
     int __detachstate)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getguardsize (const pthread_attr_t *__attr,
          size_t *__guardsize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setguardsize (pthread_attr_t *__attr,
          size_t __guardsize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getschedparam (const pthread_attr_t *__restrict __attr,
           struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedparam (pthread_attr_t *__restrict __attr,
           const struct sched_param *__restrict
           __param) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_getschedpolicy (const pthread_attr_t *__restrict
     __attr, int *__restrict __policy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setschedpolicy (pthread_attr_t *__attr, int __policy)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getinheritsched (const pthread_attr_t *__restrict
      __attr, int *__restrict __inherit)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setinheritsched (pthread_attr_t *__attr,
      int __inherit)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getscope (const pthread_attr_t *__restrict __attr,
      int *__restrict __scope)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_attr_setscope (pthread_attr_t *__attr, int __scope)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_attr_getstackaddr (const pthread_attr_t *__restrict
          __attr, void **__restrict __stackaddr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) __attribute__ ((__deprecated__));





extern int pthread_attr_setstackaddr (pthread_attr_t *__attr,
          void *__stackaddr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__));


extern int pthread_attr_getstacksize (const pthread_attr_t *__restrict
          __attr, size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_attr_setstacksize (pthread_attr_t *__attr,
          size_t __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_attr_getstack (const pthread_attr_t *__restrict __attr,
      void **__restrict __stackaddr,
      size_t *__restrict __stacksize)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3)));




extern int pthread_attr_setstack (pthread_attr_t *__attr, void *__stackaddr,
      size_t __stacksize) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 441 "/usr/include/pthread.h" 3 4
extern int pthread_setschedparam (pthread_t __target_thread, int __policy,
      const struct sched_param *__param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3)));


extern int pthread_getschedparam (pthread_t __target_thread,
      int *__restrict __policy,
      struct sched_param *__restrict __param)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));


extern int pthread_setschedprio (pthread_t __target_thread, int __prio)
     __attribute__ ((__nothrow__ , __leaf__));
# 509 "/usr/include/pthread.h" 3 4
extern int pthread_once (pthread_once_t *__once_control,
    void (*__init_routine) (void)) __attribute__ ((__nonnull__ (1, 2)));
# 521 "/usr/include/pthread.h" 3 4
extern int pthread_setcancelstate (int __state, int *__oldstate);



extern int pthread_setcanceltype (int __type, int *__oldtype);


extern int pthread_cancel (pthread_t __th);




extern void pthread_testcancel (void);




struct __cancel_jmp_buf_tag
{
  __jmp_buf __cancel_jmp_buf;
  int __mask_was_saved;
};

typedef struct
{
  struct __cancel_jmp_buf_tag __cancel_jmp_buf[1];
  void *__pad[4];
} __pthread_unwind_buf_t __attribute__ ((__aligned__));
# 557 "/usr/include/pthread.h" 3 4
struct __pthread_cleanup_frame
{
  void (*__cancel_routine) (void *);
  void *__cancel_arg;
  int __do_it;
  int __cancel_type;
};
# 697 "/usr/include/pthread.h" 3 4
extern void __pthread_register_cancel (__pthread_unwind_buf_t *__buf)
     ;
# 709 "/usr/include/pthread.h" 3 4
extern void __pthread_unregister_cancel (__pthread_unwind_buf_t *__buf)
  ;
# 750 "/usr/include/pthread.h" 3 4
extern void __pthread_unwind_next (__pthread_unwind_buf_t *__buf)
     __attribute__ ((__noreturn__))

     __attribute__ ((__weak__))

     ;
# 766 "/usr/include/pthread.h" 3 4
extern int __sigsetjmp_cancel (struct __cancel_jmp_buf_tag __env[1], int __savemask) __asm__ ("" "__sigsetjmp") __attribute__ ((__nothrow__))


                     __attribute__ ((__returns_twice__));
# 781 "/usr/include/pthread.h" 3 4
extern int pthread_mutex_init (pthread_mutex_t *__mutex,
          const pthread_mutexattr_t *__mutexattr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_destroy (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_trylock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutex_lock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));




extern int pthread_mutex_timedlock (pthread_mutex_t *__restrict __mutex,
        const struct timespec *__restrict
        __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
# 835 "/usr/include/pthread.h" 3 4
extern int pthread_mutex_unlock (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutex_getprioceiling (const pthread_mutex_t *
      __restrict __mutex,
      int *__restrict __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutex_setprioceiling (pthread_mutex_t *__restrict __mutex,
      int __prioceiling,
      int *__restrict __old_ceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3)));




extern int pthread_mutex_consistent (pthread_mutex_t *__mutex)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 874 "/usr/include/pthread.h" 3 4
extern int pthread_mutexattr_init (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_destroy (pthread_mutexattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getpshared (const pthread_mutexattr_t *
      __restrict __attr,
      int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setpshared (pthread_mutexattr_t *__attr,
      int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_gettype (const pthread_mutexattr_t *__restrict
          __attr, int *__restrict __kind)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int pthread_mutexattr_settype (pthread_mutexattr_t *__attr, int __kind)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_getprotocol (const pthread_mutexattr_t *
       __restrict __attr,
       int *__restrict __protocol)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int pthread_mutexattr_setprotocol (pthread_mutexattr_t *__attr,
       int __protocol)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_mutexattr_getprioceiling (const pthread_mutexattr_t *
          __restrict __attr,
          int *__restrict __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_mutexattr_setprioceiling (pthread_mutexattr_t *__attr,
          int __prioceiling)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_mutexattr_getrobust (const pthread_mutexattr_t *__attr,
     int *__robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 946 "/usr/include/pthread.h" 3 4
extern int pthread_mutexattr_setrobust (pthread_mutexattr_t *__attr,
     int __robustness)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 967 "/usr/include/pthread.h" 3 4
extern int pthread_rwlock_init (pthread_rwlock_t *__restrict __rwlock,
    const pthread_rwlockattr_t *__restrict
    __attr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_destroy (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_rdlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_tryrdlock (pthread_rwlock_t *__rwlock)
  __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));




extern int pthread_rwlock_timedrdlock (pthread_rwlock_t *__restrict __rwlock,
           const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
# 1023 "/usr/include/pthread.h" 3 4
extern int pthread_rwlock_wrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlock_trywrlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));




extern int pthread_rwlock_timedwrlock (pthread_rwlock_t *__restrict __rwlock,
           const struct timespec *__restrict
           __abstime) __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1, 2)));
# 1071 "/usr/include/pthread.h" 3 4
extern int pthread_rwlock_unlock (pthread_rwlock_t *__rwlock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));





extern int pthread_rwlockattr_init (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_destroy (pthread_rwlockattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getpshared (const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setpshared (pthread_rwlockattr_t *__attr,
       int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_rwlockattr_getkind_np (const pthread_rwlockattr_t *
       __restrict __attr,
       int *__restrict __pref)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_rwlockattr_setkind_np (pthread_rwlockattr_t *__attr,
       int __pref) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int pthread_cond_init (pthread_cond_t *__restrict __cond,
         const pthread_condattr_t *__restrict __cond_attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_destroy (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_signal (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_cond_broadcast (pthread_cond_t *__cond)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_cond_wait (pthread_cond_t *__restrict __cond,
         pthread_mutex_t *__restrict __mutex)
     __attribute__ ((__nonnull__ (1, 2)));
# 1145 "/usr/include/pthread.h" 3 4
extern int pthread_cond_timedwait (pthread_cond_t *__restrict __cond,
       pthread_mutex_t *__restrict __mutex,
       const struct timespec *__restrict __abstime)
     __attribute__ ((__nonnull__ (1, 2, 3)));
# 1194 "/usr/include/pthread.h" 3 4
extern int pthread_condattr_init (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_destroy (pthread_condattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_condattr_getpshared (const pthread_condattr_t *
     __restrict __attr,
     int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setpshared (pthread_condattr_t *__attr,
     int __pshared) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_condattr_getclock (const pthread_condattr_t *
          __restrict __attr,
          __clockid_t *__restrict __clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_condattr_setclock (pthread_condattr_t *__attr,
          __clockid_t __clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1230 "/usr/include/pthread.h" 3 4
extern int pthread_spin_init (pthread_spinlock_t *__lock, int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_destroy (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_lock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_trylock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_spin_unlock (pthread_spinlock_t *__lock)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));






extern int pthread_barrier_init (pthread_barrier_t *__restrict __barrier,
     const pthread_barrierattr_t *__restrict
     __attr, unsigned int __count)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_destroy (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrier_wait (pthread_barrier_t *__barrier)
     __attribute__ ((__nothrow__)) __attribute__ ((__nonnull__ (1)));



extern int pthread_barrierattr_init (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_destroy (pthread_barrierattr_t *__attr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_barrierattr_getpshared (const pthread_barrierattr_t *
        __restrict __attr,
        int *__restrict __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int pthread_barrierattr_setpshared (pthread_barrierattr_t *__attr,
        int __pshared)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1297 "/usr/include/pthread.h" 3 4
extern int pthread_key_create (pthread_key_t *__key,
          void (*__destr_function) (void *))
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int pthread_key_delete (pthread_key_t __key) __attribute__ ((__nothrow__ , __leaf__));


extern void *pthread_getspecific (pthread_key_t __key) __attribute__ ((__nothrow__ , __leaf__));


extern int pthread_setspecific (pthread_key_t __key,
    const void *__pointer)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__access__ (__none__, 2)));




extern int pthread_getcpuclockid (pthread_t __thread_id,
      __clockid_t *__clock_id)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));
# 1332 "/usr/include/pthread.h" 3 4
extern int pthread_atfork (void (*__prepare) (void),
      void (*__parent) (void),
      void (*__child) (void)) __attribute__ ((__nothrow__ , __leaf__));
# 1346 "/usr/include/pthread.h" 3 4

# 39 "./libavutil/thread.h" 2
# 216 "./libavutil/thread.h"

# 216 "./libavutil/thread.h"
static inline int ff_thread_setname(const char *name)
{
    int ret = 0;
# 233 "./libavutil/thread.h"
    ret = (-(
# 233 "./libavutil/thread.h" 3 4
         38
# 233 "./libavutil/thread.h"
         ));


    return ret;
}
# 49 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2
# 1 "./libavutil/threadmessage.h" 1
# 22 "./libavutil/threadmessage.h"
typedef struct AVThreadMessageQueue AVThreadMessageQueue;

typedef enum AVThreadMessageFlags {






    AV_THREAD_MESSAGE_NONBLOCK = 1,

} AVThreadMessageFlags;
# 44 "./libavutil/threadmessage.h"
int av_thread_message_queue_alloc(AVThreadMessageQueue **mq,
                                  unsigned nelem,
                                  unsigned elsize);






void av_thread_message_queue_free(AVThreadMessageQueue **mq);




int av_thread_message_queue_send(AVThreadMessageQueue *mq,
                                 void *msg,
                                 unsigned flags);




int av_thread_message_queue_recv(AVThreadMessageQueue *mq,
                                 void *msg,
                                 unsigned flags);
# 77 "./libavutil/threadmessage.h"
void av_thread_message_queue_set_err_send(AVThreadMessageQueue *mq,
                                          int err);
# 88 "./libavutil/threadmessage.h"
void av_thread_message_queue_set_err_recv(AVThreadMessageQueue *mq,
                                          int err);





void av_thread_message_queue_set_free_func(AVThreadMessageQueue *mq,
                                           void (*free_func)(void *msg));







int av_thread_message_queue_nb_elems(AVThreadMessageQueue *mq);
# 113 "./libavutil/threadmessage.h"
void av_thread_message_flush(AVThreadMessageQueue *mq);
# 50 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2

# 1 "./libswresample/swresample.h" 1
# 128 "./libswresample/swresample.h"
# 1 "./libswresample/version_major.h" 1
# 129 "./libswresample/swresample.h" 2




# 1 "./libswresample/version.h" 1
# 31 "./libswresample/version.h"
# 1 "./libswresample/version_major.h" 1
# 32 "./libswresample/version.h" 2
# 134 "./libswresample/swresample.h" 2
# 148 "./libswresample/swresample.h"
enum SwrDitherType {
    SWR_DITHER_NONE = 0,
    SWR_DITHER_RECTANGULAR,
    SWR_DITHER_TRIANGULAR,
    SWR_DITHER_TRIANGULAR_HIGHPASS,

    SWR_DITHER_NS = 64,
    SWR_DITHER_NS_LIPSHITZ,
    SWR_DITHER_NS_F_WEIGHTED,
    SWR_DITHER_NS_MODIFIED_E_WEIGHTED,
    SWR_DITHER_NS_IMPROVED_E_WEIGHTED,
    SWR_DITHER_NS_SHIBATA,
    SWR_DITHER_NS_LOW_SHIBATA,
    SWR_DITHER_NS_HIGH_SHIBATA,
    SWR_DITHER_NB,
};


enum SwrEngine {
    SWR_ENGINE_SWR,
    SWR_ENGINE_SOXR,
    SWR_ENGINE_NB,
};


enum SwrFilterType {
    SWR_FILTER_TYPE_CUBIC,
    SWR_FILTER_TYPE_BLACKMAN_NUTTALL,
    SWR_FILTER_TYPE_KAISER,
};
# 189 "./libswresample/swresample.h"
typedef struct SwrContext SwrContext;
# 198 "./libswresample/swresample.h"
const AVClass *swr_get_class(void);
# 214 "./libswresample/swresample.h"
struct SwrContext *swr_alloc(void);
# 226 "./libswresample/swresample.h"
int swr_init(struct SwrContext *s);
# 235 "./libswresample/swresample.h"
int swr_is_initialized(struct SwrContext *s);
# 259 "./libswresample/swresample.h"
__attribute__((deprecated))
struct SwrContext *swr_alloc_set_opts(struct SwrContext *s,
                                      int64_t out_ch_layout, enum AVSampleFormat out_sample_fmt, int out_sample_rate,
                                      int64_t in_ch_layout, enum AVSampleFormat in_sample_fmt, int in_sample_rate,
                                      int log_offset, void *log_ctx);
# 288 "./libswresample/swresample.h"
int swr_alloc_set_opts2(struct SwrContext **ps,
                        const AVChannelLayout *out_ch_layout, enum AVSampleFormat out_sample_fmt, int out_sample_rate,
                        const AVChannelLayout *in_ch_layout, enum AVSampleFormat in_sample_fmt, int in_sample_rate,
                        int log_offset, void *log_ctx);
# 304 "./libswresample/swresample.h"
void swr_free(struct SwrContext **s);
# 316 "./libswresample/swresample.h"
void swr_close(struct SwrContext *s);
# 343 "./libswresample/swresample.h"
int swr_convert(struct SwrContext *s, uint8_t * const *out, int out_count,
                                const uint8_t * const *in , int in_count);
# 363 "./libswresample/swresample.h"
int64_t swr_next_pts(struct SwrContext *s, int64_t pts);
# 390 "./libswresample/swresample.h"
int swr_set_compensation(struct SwrContext *s, int sample_delta, int compensation_distance);
# 400 "./libswresample/swresample.h"
int swr_set_channel_mapping(struct SwrContext *s, const int *channel_map);
# 427 "./libswresample/swresample.h"
__attribute__((deprecated))
int swr_build_matrix(uint64_t in_layout, uint64_t out_layout,
                     double center_mix_level, double surround_mix_level,
                     double lfe_mix_level, double rematrix_maxval,
                     double rematrix_volume, double *matrix,
                     int stride, enum AVMatrixEncoding matrix_encoding,
                     void *log_ctx);
# 459 "./libswresample/swresample.h"
int swr_build_matrix2(const AVChannelLayout *in_layout, const AVChannelLayout *out_layout,
                      double center_mix_level, double surround_mix_level,
                      double lfe_mix_level, double maxval,
                      double rematrix_volume, double *matrix,
                      ptrdiff_t stride, enum AVMatrixEncoding matrix_encoding,
                      void *log_context);
# 475 "./libswresample/swresample.h"
int swr_set_matrix(struct SwrContext *s, const double *matrix, int stride);
# 495 "./libswresample/swresample.h"
int swr_drop_output(struct SwrContext *s, int count);
# 508 "./libswresample/swresample.h"
int swr_inject_silence(struct SwrContext *s, int count);
# 534 "./libswresample/swresample.h"
int64_t swr_get_delay(struct SwrContext *s, int64_t base);
# 552 "./libswresample/swresample.h"
int swr_get_out_samples(struct SwrContext *s, int in_samples);
# 569 "./libswresample/swresample.h"
unsigned swresample_version(void);






const char *swresample_configuration(void);






const char *swresample_license(void);
# 626 "./libswresample/swresample.h"
int swr_convert_frame(SwrContext *swr,
                      AVFrame *output, const AVFrame *input);
# 643 "./libswresample/swresample.h"
int swr_config_frame(SwrContext *swr, const AVFrame *out, const AVFrame *in);
# 52 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h" 2
# 65 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h"
enum VideoSyncMethod {
    VSYNC_AUTO = -1,
    VSYNC_PASSTHROUGH,
    VSYNC_CFR,
    VSYNC_VFR,
    VSYNC_VSCFR,

    VSYNC_DROP,

};

enum EncTimeBase {
    ENC_TIME_BASE_DEMUX = -1,
    ENC_TIME_BASE_FILTER = -2,
};

enum HWAccelID {
    HWACCEL_NONE = 0,
    HWACCEL_AUTO,
    HWACCEL_GENERIC,
};

enum FrameOpaque {
    FRAME_OPAQUE_SUB_HEARTBEAT = 1,
    FRAME_OPAQUE_EOF,
    FRAME_OPAQUE_SEND_COMMAND,
};

enum PacketOpaque {
    PKT_OPAQUE_SUB_HEARTBEAT = 1,
    PKT_OPAQUE_FIX_SUB_DURATION,
};

enum LatencyProbe {
    LATENCY_PROBE_DEMUX,
    LATENCY_PROBE_DEC_PRE,
    LATENCY_PROBE_DEC_POST,
    LATENCY_PROBE_FILTER_PRE,
    LATENCY_PROBE_FILTER_POST,
    LATENCY_PROBE_ENC_PRE,
    LATENCY_PROBE_ENC_POST,
    LATENCY_PROBE_NB,
};

typedef struct HWDevice {
    const char *name;
    enum AVHWDeviceType type;
    AVBufferRef *device_ref;
} HWDevice;


typedef struct StreamMap {
    int disabled;
    int file_index;
    int stream_index;
    char *linklabel;
} StreamMap;

typedef struct OptionsContext {
    OptionGroup *g;


    int64_t start_time;
    int64_t start_time_eof;
    int seek_timestamp;
    const char *format;

    SpecifierOptList codec_names;
    SpecifierOptList audio_ch_layouts;
    SpecifierOptList audio_channels;
    SpecifierOptList audio_sample_rate;
    SpecifierOptList frame_rates;
    SpecifierOptList max_frame_rates;
    SpecifierOptList frame_sizes;
    SpecifierOptList frame_pix_fmts;


    int64_t input_ts_offset;
    int loop;
    int rate_emu;
    float readrate;
    double readrate_initial_burst;
    int accurate_seek;
    int thread_queue_size;
    int input_sync_ref;
    int find_stream_info;

    SpecifierOptList ts_scale;
    SpecifierOptList dump_attachment;
    SpecifierOptList hwaccels;
    SpecifierOptList hwaccel_devices;
    SpecifierOptList hwaccel_output_formats;
    SpecifierOptList autorotate;


    StreamMap *stream_maps;
    int nb_stream_maps;
    const char **attachments;
    int nb_attachments;

    int chapters_input_file;

    int64_t recording_time;
    int64_t stop_time;
    int64_t limit_filesize;
    float mux_preload;
    float mux_max_delay;
    float shortest_buf_duration;
    int shortest;
    int bitexact;

    int video_disable;
    int audio_disable;
    int subtitle_disable;
    int data_disable;


    AVDictionary *streamid;

    SpecifierOptList metadata;
    SpecifierOptList max_frames;
    SpecifierOptList bitstream_filters;
    SpecifierOptList codec_tags;
    SpecifierOptList sample_fmts;
    SpecifierOptList qscale;
    SpecifierOptList forced_key_frames;
    SpecifierOptList fps_mode;
    SpecifierOptList force_fps;
    SpecifierOptList frame_aspect_ratios;
    SpecifierOptList display_rotations;
    SpecifierOptList display_hflips;
    SpecifierOptList display_vflips;
    SpecifierOptList rc_overrides;
    SpecifierOptList intra_matrices;
    SpecifierOptList inter_matrices;
    SpecifierOptList chroma_intra_matrices;

    SpecifierOptList top_field_first;

    SpecifierOptList metadata_map;
    SpecifierOptList presets;
    SpecifierOptList copy_initial_nonkeyframes;
    SpecifierOptList copy_prior_start;
    SpecifierOptList filters;

    SpecifierOptList filter_scripts;

    SpecifierOptList reinit_filters;
    SpecifierOptList fix_sub_duration;
    SpecifierOptList fix_sub_duration_heartbeat;
    SpecifierOptList canvas_sizes;
    SpecifierOptList pass;
    SpecifierOptList passlogfiles;
    SpecifierOptList max_muxing_queue_size;
    SpecifierOptList muxing_queue_data_threshold;
    SpecifierOptList guess_layout_max;
    SpecifierOptList apad;
    SpecifierOptList discard;
    SpecifierOptList disposition;
    SpecifierOptList program;
    SpecifierOptList stream_groups;
    SpecifierOptList time_bases;
    SpecifierOptList enc_time_bases;
    SpecifierOptList autoscale;
    SpecifierOptList bits_per_raw_sample;
    SpecifierOptList enc_stats_pre;
    SpecifierOptList enc_stats_post;
    SpecifierOptList mux_stats;
    SpecifierOptList enc_stats_pre_fmt;
    SpecifierOptList enc_stats_post_fmt;
    SpecifierOptList mux_stats_fmt;
} OptionsContext;

enum IFilterFlags {
    IFILTER_FLAG_AUTOROTATE = (1 << 0),
    IFILTER_FLAG_REINIT = (1 << 1),
    IFILTER_FLAG_CFR = (1 << 2),
};

typedef struct InputFilterOptions {
    int64_t trim_start_us;
    int64_t trim_end_us;

    uint8_t *name;






    AVRational framerate;

    int sub2video_width;
    int sub2video_height;


    unsigned flags;
} InputFilterOptions;

typedef struct InputFilter {
    struct FilterGraph *graph;
    uint8_t *name;
} InputFilter;

typedef struct OutputFilter {
    struct OutputStream *ost;
    struct FilterGraph *graph;
    uint8_t *name;



    uint8_t *linklabel;

    enum AVMediaType type;

    atomic_uint_least64_t nb_frames_dup;
    atomic_uint_least64_t nb_frames_drop;
} OutputFilter;

typedef struct FilterGraph {
    const AVClass *class;
    int index;

    InputFilter **inputs;
    int nb_inputs;
    OutputFilter **outputs;
    int nb_outputs;
} FilterGraph;

enum DecoderFlags {
    DECODER_FLAG_FIX_SUB_DURATION = (1 << 0),

    DECODER_FLAG_TS_UNRELIABLE = (1 << 1),


    DECODER_FLAG_FRAMERATE_FORCED = (1 << 2),

    DECODER_FLAG_TOP_FIELD_FIRST = (1 << 3),

    DECODER_FLAG_SEND_END_TS = (1 << 4),
};

typedef struct DecoderOpts {
    int flags;

    char *name;
    void *log_parent;

    const AVCodec *codec;
    const AVCodecParameters *par;


    enum HWAccelID hwaccel_id;
    enum AVHWDeviceType hwaccel_device_type;
    char *hwaccel_device;
    enum AVPixelFormat hwaccel_output_format;

    AVRational time_base;



    AVRational framerate;
} DecoderOpts;

typedef struct Decoder {
    const AVClass *class;

    const uint8_t *subtitle_header;
    int subtitle_header_size;


    uint64_t frames_decoded;
    uint64_t samples_decoded;
    uint64_t decode_errors;
} Decoder;

typedef struct InputStream {
    const AVClass *class;


    struct InputFile *file;

    int index;

    AVStream *st;
    int user_set_discard;






    AVCodecParameters *par;
    Decoder *decoder;
    const AVCodec *dec;


    AVRational framerate;

    int top_field_first;


    int autorotate;

    int fix_sub_duration;



    InputFilter **filters;
    int nb_filters;






    struct OutputStream **outputs;
    int nb_outputs;
} InputStream;

typedef struct InputFile {
    const AVClass *class;

    int index;

    AVFormatContext *ctx;
    int64_t input_ts_offset;
    int input_sync_ref;



    int64_t start_time_effective;
    int64_t ts_offset;

    int64_t start_time;




    InputStream **streams;
    int nb_streams;
} InputFile;

enum forced_keyframes_const {
    FKF_N,
    FKF_N_FORCED,
    FKF_PREV_FORCED_N,
    FKF_PREV_FORCED_T,
    FKF_T,
    FKF_NB
};




enum EncStatsType {
    ENC_STATS_LITERAL = 0,
    ENC_STATS_FILE_IDX,
    ENC_STATS_STREAM_IDX,
    ENC_STATS_FRAME_NUM,
    ENC_STATS_FRAME_NUM_IN,
    ENC_STATS_TIMEBASE,
    ENC_STATS_TIMEBASE_IN,
    ENC_STATS_PTS,
    ENC_STATS_PTS_TIME,
    ENC_STATS_PTS_IN,
    ENC_STATS_PTS_TIME_IN,
    ENC_STATS_DTS,
    ENC_STATS_DTS_TIME,
    ENC_STATS_SAMPLE_NUM,
    ENC_STATS_NB_SAMPLES,
    ENC_STATS_PKT_SIZE,
    ENC_STATS_BITRATE,
    ENC_STATS_AVG_BITRATE,
    ENC_STATS_KEYFRAME,
};

typedef struct EncStatsComponent {
    enum EncStatsType type;

    uint8_t *str;
    size_t str_len;
} EncStatsComponent;

typedef struct EncStats {
    EncStatsComponent *components;
    int nb_components;

    AVIOContext *io;

    pthread_mutex_t lock;
    int lock_initialized;
} EncStats;

extern const char *const forced_keyframes_const_names[];

typedef enum {
    ENCODER_FINISHED = 1,
    MUXER_FINISHED = 2,
} OSTFinished ;

enum {
    KF_FORCE_SOURCE = 1,

    KF_FORCE_SOURCE_NO_DROP = 2,

};

typedef struct KeyframeForceCtx {
    int type;

    int64_t ref_pts;


    int64_t *pts;
    int nb_pts;
    int index;

    AVExpr *pexpr;
    double expr_const_values[FKF_NB];

    int dropped_keyframe;
} KeyframeForceCtx;

typedef struct Encoder Encoder;

typedef struct OutputStream {
    const AVClass *class;

    enum AVMediaType type;


    struct OutputFile *file;

    int index;





    AVCodecParameters *par_in;




    InputStream *ist;

    AVStream *st;

    AVRational enc_timebase;

    Encoder *enc;
    AVCodecContext *enc_ctx;


    AVRational frame_rate;
    AVRational max_frame_rate;
    enum VideoSyncMethod vsync_method;
    int is_cfr;
    int force_fps;

    int top_field_first;

    int autoscale;
    int bitexact;
    int bits_per_raw_sample;

    AVRational frame_aspect_ratio;

    KeyframeForceCtx kf;

    char *logfile_prefix;
    FILE *logfile;

    OutputFilter *filter;

    AVDictionary *encoder_opts;
    AVDictionary *sws_dict;
    AVDictionary *swr_opts;
    char *apad;

    char *attachment_filename;

    int keep_pix_fmt;



    atomic_uint_least64_t packets_written;

    uint64_t frames_encoded;
    uint64_t samples_encoded;


    atomic_int quality;

    EncStats enc_stats_pre;
    EncStats enc_stats_post;





    unsigned int fix_sub_duration_heartbeat;
} OutputStream;

typedef struct OutputFile {
    const AVClass *class;

    int index;

    const AVOutputFormat *format;
    const char *url;

    OutputStream **streams;
    int nb_streams;

    int64_t recording_time;
    int64_t start_time;

    int shortest;
    int bitexact;
} OutputFile;


typedef struct FrameData {


    int64_t dts_est;


    struct {
        uint64_t frame_num;

        int64_t pts;
        AVRational tb;
    } dec;

    AVRational frame_rate_filter;

    int bits_per_raw_sample;

    int64_t wallclock[LATENCY_PROBE_NB];
} FrameData;

extern InputFile **input_files;
extern int nb_input_files;

extern OutputFile **output_files;
extern int nb_output_files;

extern FilterGraph **filtergraphs;
extern int nb_filtergraphs;

extern char *vstats_filename;

extern float dts_delta_threshold;
extern float dts_error_threshold;

extern enum VideoSyncMethod video_sync_method;
extern float frame_drop_threshold;
extern int do_benchmark;
extern int do_benchmark_all;
extern int do_hex_dump;
extern int do_pkt_dump;
extern int copy_ts;
extern int start_at_zero;
extern int copy_tb;
extern int debug_ts;
extern int exit_on_error;
extern int abort_on_flags;
extern int print_stats;
extern int64_t stats_period;
extern int stdin_interaction;
extern AVIOContext *progress_avio;
extern float max_error_rate;

extern char *filter_nbthreads;
extern int filter_complex_nbthreads;
extern int vstats_version;
extern int auto_conversion_filters;

extern const AVIOInterruptCB int_cb;

extern const OptionDef options[];
extern HWDevice *filter_hw_device;

extern atomic_uint nb_output_dumped;

extern int ignore_unknown_streams;
extern int copy_unknown_streams;

extern int recast_media;

extern FILE *vstats_file;

void term_init(void);
void term_exit(void);

void show_usage(void);

void remove_avoptions(AVDictionary **a, AVDictionary *b);
int check_avoptions(AVDictionary *m);

int assert_file_overwrite(const char *filename);
AVDictionary *strip_specifiers(const AVDictionary *dict);
int find_codec(void *logctx, const char *name,
               enum AVMediaType type, int encoder, const AVCodec **codec);
int parse_and_set_vsync(const char *arg, int *vsync_var, int file_idx, int st_idx, int is_global);

int check_filter_outputs(void);
int filtergraph_is_simple(const FilterGraph *fg);
int init_simple_filtergraph(InputStream *ist, OutputStream *ost,
                            char *graph_desc,
                            Scheduler *sch, unsigned sch_idx_enc);
int init_complex_filtergraph(FilterGraph *fg);





FrameData *frame_data(AVFrame *frame);

const FrameData *frame_data_c(AVFrame *frame);

FrameData *packet_data (AVPacket *pkt);
const FrameData *packet_data_c(AVPacket *pkt);






int ifilter_parameters_from_dec(InputFilter *ifilter, const AVCodecContext *dec);

int ofilter_bind_ost(OutputFilter *ofilter, OutputStream *ost,
                     unsigned sched_idx_enc);







int fg_create(FilterGraph **pfg, char *graph_desc, Scheduler *sch);

void fg_free(FilterGraph **pfg);

void fg_send_command(FilterGraph *fg, double time, const char *target,
                     const char *command, const char *arg, int all_filters);

int ffmpeg_parse_options(int argc, char **argv, Scheduler *sch);

void enc_stats_write(OutputStream *ost, EncStats *es,
                     const AVFrame *frame, const AVPacket *pkt,
                     uint64_t frame_num);

HWDevice *hw_device_get_by_name(const char *name);
HWDevice *hw_device_get_by_type(enum AVHWDeviceType type);
int hw_device_init_from_string(const char *arg, HWDevice **dev);
int hw_device_init_from_type(enum AVHWDeviceType type,
                             const char *device,
                             HWDevice **dev_out);
void hw_device_free_all(void);






AVBufferRef *hw_device_for_filter(void);
# 743 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h"
int dec_open(Decoder **pdec, Scheduler *sch,
             AVDictionary **dec_opts, const DecoderOpts *o);
void dec_free(Decoder **pdec);

int dec_add_filter(Decoder *dec, InputFilter *ifilter);

int enc_alloc(Encoder **penc, const AVCodec *codec,
              Scheduler *sch, unsigned sch_idx);
void enc_free(Encoder **penc);

int enc_open(void *opaque, const AVFrame *frame);







int of_stream_init(OutputFile *of, OutputStream *ost);
int of_write_trailer(OutputFile *of);
int of_open(const OptionsContext *o, const char *filename, Scheduler *sch);
void of_free(OutputFile **pof);

void of_enc_stats_close(void);

int64_t of_filesize(OutputFile *of);

int ifile_open(const OptionsContext *o, const char *filename, Scheduler *sch);
void ifile_close(InputFile **f);

int ist_output_add(InputStream *ist, OutputStream *ost);
int ist_filter_add(InputStream *ist, InputFilter *ifilter, int is_simple,
                   InputFilterOptions *opts);




InputStream *ist_find_unused(enum AVMediaType type);



InputStream *ist_iter(InputStream *prev);



OutputStream *ost_iter(OutputStream *prev);

void update_benchmark(const char *fmt, ...);
# 830 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg.h"
const char *opt_match_per_type_str(const SpecifierOptList *sol,
                                   char mediatype);

void *muxer_thread(void *arg);
void *encoder_thread(void *arg);
# 31 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2


# 1 "/workspaces/typed-ffmpeg/ffmpeg/fftools/opt_common.h" 1
# 33 "/workspaces/typed-ffmpeg/ffmpeg/fftools/opt_common.h"
int show_sinks(void *optctx, const char *opt, const char *arg);





int show_sources(void *optctx, const char *opt, const char *arg);
# 58 "/workspaces/typed-ffmpeg/ffmpeg/fftools/opt_common.h"
int show_license(void *optctx, const char *opt, const char *arg);




int show_help(void *optctx, const char *opt, const char *arg);







int show_version(void *optctx, const char *opt, const char *arg);






int show_buildconf(void *optctx, const char *opt, const char *arg);






int show_formats(void *optctx, const char *opt, const char *arg);






int show_muxers(void *optctx, const char *opt, const char *arg);






int show_demuxers(void *optctx, const char *opt, const char *arg);






int show_devices(void *optctx, const char *opt, const char *arg);






int show_codecs(void *optctx, const char *opt, const char *arg);





int show_decoders(void *optctx, const char *opt, const char *arg);





int show_encoders(void *optctx, const char *opt, const char *arg);






int show_bsfs(void *optctx, const char *opt, const char *arg);






int show_protocols(void *optctx, const char *opt, const char *arg);






int show_filters(void *optctx, const char *opt, const char *arg);






int show_pix_fmts(void *optctx, const char *opt, const char *arg);






int show_layouts(void *optctx, const char *opt, const char *arg);





int show_sample_fmts(void *optctx, const char *opt, const char *arg);




int show_dispositions(void *optctx, const char *opt, const char *arg);





int show_colors(void *optctx, const char *opt, const char *arg);




int opt_loglevel(void *optctx, const char *opt, const char *arg);

int opt_report(void *optctx, const char *opt, const char *arg);
int init_report(const char *env, FILE **file);

int opt_max_alloc(void *optctx, const char *opt, const char *arg);




int opt_cpuflags(void *optctx, const char *opt, const char *arg);




int opt_cpucount(void *optctx, const char *opt, const char *arg);
# 34 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2
# 43 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
# 1 "./libavutil/avassert.h" 1
# 76 "./libavutil/avassert.h"
void av_assert0_fpu(void);
# 44 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2
# 1 "./libavutil/avstring.h" 1
# 24 "./libavutil/avstring.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/12/include/stddef.h" 1 3 4
# 25 "./libavutil/avstring.h" 2
# 42 "./libavutil/avstring.h"
int av_strstart(const char *str, const char *pfx, const char **ptr);
# 54 "./libavutil/avstring.h"
int av_stristart(const char *str, const char *pfx, const char **ptr);
# 68 "./libavutil/avstring.h"
char *av_stristr(const char *haystack, const char *needle);
# 83 "./libavutil/avstring.h"
char *av_strnstr(const char *haystack, const char *needle, size_t hay_length);
# 100 "./libavutil/avstring.h"
size_t av_strlcpy(char *dst, const char *src, size_t size);
# 118 "./libavutil/avstring.h"
size_t av_strlcat(char *dst, const char *src, size_t size);
# 132 "./libavutil/avstring.h"
size_t av_strlcatf(char *dst, size_t size, const char *fmt, ...) __attribute__((__format__(__printf__, 3, 4)));
# 141 "./libavutil/avstring.h"
static inline size_t av_strnlen(const char *s, size_t len)
{
    size_t i;
    for (i = 0; i < len && s[i]; i++)
        ;
    return i;
}
# 157 "./libavutil/avstring.h"
char *av_asprintf(const char *fmt, ...) __attribute__((__format__(__printf__, 1, 2)));
# 173 "./libavutil/avstring.h"
char *av_get_token(const char **buf, const char *term);
# 197 "./libavutil/avstring.h"
char *av_strtok(char *s, const char *delim, char **saveptr);




static inline __attribute__((const)) int av_isdigit(int c)
{
    return c >= '0' && c <= '9';
}




static inline __attribute__((const)) int av_isgraph(int c)
{
    return c > 32 && c < 127;
}




static inline __attribute__((const)) int av_isspace(int c)
{
    return c == ' ' || c == '\f' || c == '\n' || c == '\r' || c == '\t' ||
           c == '\v';
}




static inline __attribute__((const)) int av_toupper(int c)
{
    if (c >= 'a' && c <= 'z')
        c ^= 0x20;
    return c;
}




static inline __attribute__((const)) int av_tolower(int c)
{
    if (c >= 'A' && c <= 'Z')
        c ^= 0x20;
    return c;
}




static inline __attribute__((const)) int av_isxdigit(int c)
{
    c = av_tolower(c);
    return av_isdigit(c) || (c >= 'a' && c <= 'f');
}





int av_strcasecmp(const char *a, const char *b);





int av_strncasecmp(const char *a, const char *b, size_t n);





char *av_strireplace(const char *str, const char *from, const char *to);
# 279 "./libavutil/avstring.h"
const char *av_basename(const char *path);
# 289 "./libavutil/avstring.h"
const char *av_dirname(char *path);
# 302 "./libavutil/avstring.h"
int av_match_name(const char *name, const char *names);
# 312 "./libavutil/avstring.h"
char *av_append_path_component(const char *path, const char *component);

enum AVEscapeMode {
    AV_ESCAPE_MODE_AUTO,
    AV_ESCAPE_MODE_BACKSLASH,
    AV_ESCAPE_MODE_QUOTE,
    AV_ESCAPE_MODE_XML,
};
# 367 "./libavutil/avstring.h"
__attribute__((warn_unused_result))
int av_escape(char **dst, const char *src, const char *special_chars,
              enum AVEscapeMode mode, int flags);
# 407 "./libavutil/avstring.h"
__attribute__((warn_unused_result))
int av_utf8_decode(int32_t *codep, const uint8_t **bufp, const uint8_t *buf_end,
                   unsigned int flags);






int av_match_list(const char *name, const char *list, char separator);





int av_sscanf(const char *string, const char *format, ...);
# 45 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2

# 1 "./libavutil/bprint.h" 1
# 33 "./libavutil/bprint.h"
# 1 "./libavutil/avstring.h" 1
# 34 "./libavutil/bprint.h" 2
# 93 "./libavutil/bprint.h"
struct ff_pad_helper_AVBPrint { char *str; unsigned len; unsigned size; unsigned size_max; char reserved_internal_buffer[1]; }; typedef struct AVBPrint { char *str; unsigned len; unsigned size; unsigned size_max; char reserved_internal_buffer[1]; char reserved_padding[1024 - sizeof(struct ff_pad_helper_AVBPrint)]; } AVBPrint;
# 141 "./libavutil/bprint.h"
void av_bprint_init(AVBPrint *buf, unsigned size_init, unsigned size_max);
# 155 "./libavutil/bprint.h"
void av_bprint_init_for_buffer(AVBPrint *buf, char *buffer, unsigned size);




void av_bprintf(AVBPrint *buf, const char *fmt, ...) __attribute__((__format__(__printf__, 2, 3)));




void av_vbprintf(AVBPrint *buf, const char *fmt, va_list vl_arg);




void av_bprint_chars(AVBPrint *buf, char c, unsigned n);
# 179 "./libavutil/bprint.h"
void av_bprint_append_data(AVBPrint *buf, const char *data, unsigned size);

struct tm;
# 193 "./libavutil/bprint.h"
void av_bprint_strftime(AVBPrint *buf, const char *fmt, const struct tm *tm);
# 204 "./libavutil/bprint.h"
void av_bprint_get_buffer(AVBPrint *buf, unsigned size,
                          unsigned char **mem, unsigned *actual_size);




void av_bprint_clear(AVBPrint *buf);







static inline int av_bprint_is_complete(const AVBPrint *buf)
{
    return buf->len < buf->size;
}
# 234 "./libavutil/bprint.h"
int av_bprint_finalize(AVBPrint *buf, char **ret_str);
# 249 "./libavutil/bprint.h"
void av_bprint_escape(AVBPrint *dstbuf, const char *src, const char *special_chars,
                      enum AVEscapeMode mode, int flags);
# 47 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2

# 1 "./libavutil/display.h" 1
# 84 "./libavutil/display.h"
double av_display_rotation_get(const int32_t matrix[9]);
# 94 "./libavutil/display.h"
void av_display_rotation_set(int32_t matrix[9], double angle);
# 103 "./libavutil/display.h"
void av_display_matrix_flip(int32_t matrix[9], int hflip, int vflip);
# 49 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2
# 1 "./libavutil/intreadwrite.h" 1
# 25 "./libavutil/intreadwrite.h"
# 1 "./libavutil/bswap.h" 1
# 60 "./libavutil/bswap.h"
static __attribute__((always_inline)) inline __attribute__((const)) uint16_t av_bswap16(uint16_t x)
{
    x= (x>>8) | (x<<8);
    return x;
}



static __attribute__((always_inline)) inline __attribute__((const)) uint32_t av_bswap32(uint32_t x)
{
    return ((((x) << 8 & 0xff00) | ((x) >> 8 & 0x00ff)) << 16 | ((((x) >> 16) << 8 & 0xff00) | (((x) >> 16) >> 8 & 0x00ff)));
}



static inline uint64_t __attribute__((const)) av_bswap64(uint64_t x)
{
    return (uint64_t)av_bswap32(x) << 32 | av_bswap32(x >> 32);
}
# 26 "./libavutil/intreadwrite.h" 2

typedef union {
    uint64_t u64;
    uint32_t u32[2];
    uint16_t u16[4];
    uint8_t u8 [8];
    double f64;
    float f32[2];
} __attribute__((may_alias)) av_alias64;

typedef union {
    uint32_t u32;
    uint16_t u16[2];
    uint8_t u8 [4];
    float f32;
} __attribute__((may_alias)) av_alias32;

typedef union {
    uint16_t u16;
    uint8_t u8 [2];
} __attribute__((may_alias)) av_alias16;
# 218 "./libavutil/intreadwrite.h"
union unaligned_64 { uint64_t l; } __attribute__((packed)) __attribute__((may_alias));
union unaligned_32 { uint32_t l; } __attribute__((packed)) __attribute__((may_alias));
union unaligned_16 { uint16_t l; } __attribute__((packed)) __attribute__((may_alias));
# 50 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2

# 1 "./libavutil/mathematics.h" 1
# 52 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2
# 1 "./libavutil/opt.h" 1
# 223 "./libavutil/opt.h"
enum AVOptionType{
    AV_OPT_TYPE_FLAGS,
    AV_OPT_TYPE_INT,
    AV_OPT_TYPE_INT64,
    AV_OPT_TYPE_DOUBLE,
    AV_OPT_TYPE_FLOAT,
    AV_OPT_TYPE_STRING,
    AV_OPT_TYPE_RATIONAL,
    AV_OPT_TYPE_BINARY,
    AV_OPT_TYPE_DICT,
    AV_OPT_TYPE_UINT64,
    AV_OPT_TYPE_CONST,
    AV_OPT_TYPE_IMAGE_SIZE,
    AV_OPT_TYPE_PIXEL_FMT,
    AV_OPT_TYPE_SAMPLE_FMT,
    AV_OPT_TYPE_VIDEO_RATE,
    AV_OPT_TYPE_DURATION,
    AV_OPT_TYPE_COLOR,

    AV_OPT_TYPE_CHANNEL_LAYOUT,

    AV_OPT_TYPE_BOOL,
    AV_OPT_TYPE_CHLAYOUT,
};
# 294 "./libavutil/opt.h"
typedef struct AVOption {
    const char *name;





    const char *help;





    int offset;
    enum AVOptionType type;




    union {
        int64_t i64;
        double dbl;
        const char *str;

        AVRational q;
    } default_val;
    double min;
    double max;




    int flags;






    const char *unit;
} AVOption;




typedef struct AVOptionRange {
    const char *str;





    double value_min, value_max;




    double component_min, component_max;




    int is_range;
} AVOptionRange;




typedef struct AVOptionRanges {
# 393 "./libavutil/opt.h"
    AVOptionRange **range;



    int nb_ranges;



    int nb_components;
} AVOptionRanges;
# 414 "./libavutil/opt.h"
void av_opt_set_defaults(void *s);
# 425 "./libavutil/opt.h"
void av_opt_set_defaults2(void *s, int mask, int flags);




void av_opt_free(void *obj);
# 441 "./libavutil/opt.h"
const AVOption *av_opt_next(const void *obj, const AVOption *prev);







void *av_opt_child_next(void *obj, void *prev);







const AVClass *av_opt_child_class_iterate(const AVClass *parent, void **iter);
# 504 "./libavutil/opt.h"
const AVOption *av_opt_find(void *obj, const char *name, const char *unit,
                            int opt_flags, int search_flags);
# 528 "./libavutil/opt.h"
const AVOption *av_opt_find2(void *obj, const char *name, const char *unit,
                             int opt_flags, int search_flags, void **target_obj);
# 540 "./libavutil/opt.h"
int av_opt_show2(void *obj, void *av_log_obj, int req_flags, int rej_flags);
# 561 "./libavutil/opt.h"
int av_opt_get_key_value(const char **ropts,
                         const char *key_val_sep, const char *pairs_sep,
                         unsigned flags,
                         char **rkey, char **rval);

enum {





    AV_OPT_FLAG_IMPLICIT_KEY = 1,
};
# 601 "./libavutil/opt.h"
int av_set_options_string(void *ctx, const char *opts,
                          const char *key_val_sep, const char *pairs_sep);
# 631 "./libavutil/opt.h"
int av_opt_set_from_string(void *ctx, const char *opts,
                           const char *const *shorthand,
                           const char *key_val_sep, const char *pairs_sep);
# 649 "./libavutil/opt.h"
int av_opt_set_dict(void *obj, struct AVDictionary **options);
# 667 "./libavutil/opt.h"
int av_opt_set_dict2(void *obj, struct AVDictionary **options, int search_flags);
# 686 "./libavutil/opt.h"
int av_opt_copy(void *dest, const void *src);
# 717 "./libavutil/opt.h"
int av_opt_set (void *obj, const char *name, const char *val, int search_flags);
int av_opt_set_int (void *obj, const char *name, int64_t val, int search_flags);
int av_opt_set_double (void *obj, const char *name, double val, int search_flags);
int av_opt_set_q (void *obj, const char *name, AVRational val, int search_flags);
int av_opt_set_bin (void *obj, const char *name, const uint8_t *val, int size, int search_flags);
int av_opt_set_image_size(void *obj, const char *name, int w, int h, int search_flags);
int av_opt_set_pixel_fmt (void *obj, const char *name, enum AVPixelFormat fmt, int search_flags);
int av_opt_set_sample_fmt(void *obj, const char *name, enum AVSampleFormat fmt, int search_flags);
int av_opt_set_video_rate(void *obj, const char *name, AVRational val, int search_flags);

__attribute__((deprecated))
int av_opt_set_channel_layout(void *obj, const char *name, int64_t ch_layout, int search_flags);

int av_opt_set_chlayout(void *obj, const char *name, const AVChannelLayout *layout, int search_flags);




int av_opt_set_dict_val(void *obj, const char *name, const AVDictionary *val, int search_flags);
# 783 "./libavutil/opt.h"
int av_opt_get (void *obj, const char *name, int search_flags, uint8_t **out_val);
int av_opt_get_int (void *obj, const char *name, int search_flags, int64_t *out_val);
int av_opt_get_double (void *obj, const char *name, int search_flags, double *out_val);
int av_opt_get_q (void *obj, const char *name, int search_flags, AVRational *out_val);
int av_opt_get_image_size(void *obj, const char *name, int search_flags, int *w_out, int *h_out);
int av_opt_get_pixel_fmt (void *obj, const char *name, int search_flags, enum AVPixelFormat *out_fmt);
int av_opt_get_sample_fmt(void *obj, const char *name, int search_flags, enum AVSampleFormat *out_fmt);
int av_opt_get_video_rate(void *obj, const char *name, int search_flags, AVRational *out_val);

__attribute__((deprecated))
int av_opt_get_channel_layout(void *obj, const char *name, int search_flags, int64_t *ch_layout);

int av_opt_get_chlayout(void *obj, const char *name, int search_flags, AVChannelLayout *layout);




int av_opt_get_dict_val(void *obj, const char *name, int search_flags, AVDictionary **out_val);
# 819 "./libavutil/opt.h"
int av_opt_eval_flags (void *obj, const AVOption *o, const char *val, int *flags_out);
int av_opt_eval_int (void *obj, const AVOption *o, const char *val, int *int_out);
int av_opt_eval_int64 (void *obj, const AVOption *o, const char *val, int64_t *int64_out);
int av_opt_eval_float (void *obj, const AVOption *o, const char *val, float *float_out);
int av_opt_eval_double(void *obj, const AVOption *o, const char *val, double *double_out);
int av_opt_eval_q (void *obj, const AVOption *o, const char *val, AVRational *q_out);
# 837 "./libavutil/opt.h"
void *av_opt_ptr(const AVClass *avclass, void *obj, const char *name);
# 851 "./libavutil/opt.h"
int av_opt_is_set_to_default(void *obj, const AVOption *o);
# 863 "./libavutil/opt.h"
int av_opt_is_set_to_default_by_name(void *obj, const char *name, int search_flags);
# 873 "./libavutil/opt.h"
int av_opt_flag_is_set(void *obj, const char *field_name, const char *flag_name);
# 896 "./libavutil/opt.h"
int av_opt_serialize(void *obj, int opt_flags, int flags, char **buffer,
                     const char key_val_sep, const char pairs_sep);
# 906 "./libavutil/opt.h"
void av_opt_freep_ranges(AVOptionRanges **ranges);
# 921 "./libavutil/opt.h"
int av_opt_query_ranges(AVOptionRanges **, void *obj, const char *key, int flags);
# 937 "./libavutil/opt.h"
int av_opt_query_ranges_default(AVOptionRanges **, void *obj, const char *key, int flags);
# 53 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2
# 1 "./libavutil/parseutils.h" 1
# 49 "./libavutil/parseutils.h"
int av_parse_ratio(AVRational *q, const char *str, int max,
                   int log_offset, void *log_ctx);
# 66 "./libavutil/parseutils.h"
int av_parse_video_size(int *width_ptr, int *height_ptr, const char *str);
# 77 "./libavutil/parseutils.h"
int av_parse_video_rate(AVRational *rate, const char *str);
# 102 "./libavutil/parseutils.h"
int av_parse_color(uint8_t *rgba_color, const char *color_string, int slen,
                   void *log_ctx);
# 116 "./libavutil/parseutils.h"
const char *av_get_known_color_name(int color_idx, const uint8_t **rgb);
# 150 "./libavutil/parseutils.h"
int av_parse_time(int64_t *timeval, const char *timestr, int duration);







int av_find_info_tag(char *arg, int arg_size, const char *tag1, const char *info);
# 190 "./libavutil/parseutils.h"
char *av_small_strptime(const char *p, const char *fmt, struct tm *dt);




time_t av_timegm(struct tm *tm);
# 54 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2
# 1 "./libavutil/pixdesc.h" 1
# 30 "./libavutil/pixdesc.h"
typedef struct AVComponentDescriptor {



    int plane;





    int step;





    int offset;





    int shift;




    int depth;
} AVComponentDescriptor;
# 69 "./libavutil/pixdesc.h"
typedef struct AVPixFmtDescriptor {
    const char *name;
    uint8_t nb_components;
# 80 "./libavutil/pixdesc.h"
    uint8_t log2_chroma_w;
# 89 "./libavutil/pixdesc.h"
    uint8_t log2_chroma_h;




    uint64_t flags;
# 105 "./libavutil/pixdesc.h"
    AVComponentDescriptor comp[4];




    const char *alias;
} AVPixFmtDescriptor;
# 174 "./libavutil/pixdesc.h"
int av_get_bits_per_pixel(const AVPixFmtDescriptor *pixdesc);





int av_get_padded_bits_per_pixel(const AVPixFmtDescriptor *pixdesc);





const AVPixFmtDescriptor *av_pix_fmt_desc_get(enum AVPixelFormat pix_fmt);
# 195 "./libavutil/pixdesc.h"
const AVPixFmtDescriptor *av_pix_fmt_desc_next(const AVPixFmtDescriptor *prev);





enum AVPixelFormat av_pix_fmt_desc_get_id(const AVPixFmtDescriptor *desc);
# 213 "./libavutil/pixdesc.h"
int av_pix_fmt_get_chroma_sub_sample(enum AVPixelFormat pix_fmt,
                                     int *h_shift, int *v_shift);





int av_pix_fmt_count_planes(enum AVPixelFormat pix_fmt);




const char *av_color_range_name(enum AVColorRange range);




int av_color_range_from_name(const char *name);




const char *av_color_primaries_name(enum AVColorPrimaries primaries);




int av_color_primaries_from_name(const char *name);




const char *av_color_transfer_name(enum AVColorTransferCharacteristic transfer);




int av_color_transfer_from_name(const char *name);




const char *av_color_space_name(enum AVColorSpace space);




int av_color_space_from_name(const char *name);




const char *av_chroma_location_name(enum AVChromaLocation location);




int av_chroma_location_from_name(const char *name);
# 281 "./libavutil/pixdesc.h"
int av_chroma_location_enum_to_pos(int *xpos, int *ypos, enum AVChromaLocation pos);
# 292 "./libavutil/pixdesc.h"
enum AVChromaLocation av_chroma_location_pos_to_enum(int xpos, int ypos);
# 305 "./libavutil/pixdesc.h"
enum AVPixelFormat av_get_pix_fmt(const char *name);







const char *av_get_pix_fmt_name(enum AVPixelFormat pix_fmt);
# 325 "./libavutil/pixdesc.h"
char *av_get_pix_fmt_string(char *buf, int buf_size,
                            enum AVPixelFormat pix_fmt);
# 345 "./libavutil/pixdesc.h"
void av_read_image_line2(void *dst, const uint8_t *data[4],
                        const int linesize[4], const AVPixFmtDescriptor *desc,
                        int x, int y, int c, int w, int read_pal_component,
                        int dst_element_size);

void av_read_image_line(uint16_t *dst, const uint8_t *data[4],
                        const int linesize[4], const AVPixFmtDescriptor *desc,
                        int x, int y, int c, int w, int read_pal_component);
# 369 "./libavutil/pixdesc.h"
void av_write_image_line2(const void *src, uint8_t *data[4],
                         const int linesize[4], const AVPixFmtDescriptor *desc,
                         int x, int y, int c, int w, int src_element_size);

void av_write_image_line(const uint16_t *src, uint8_t *data[4],
                         const int linesize[4], const AVPixFmtDescriptor *desc,
                         int x, int y, int c, int w);
# 385 "./libavutil/pixdesc.h"
enum AVPixelFormat av_pix_fmt_swap_endianness(enum AVPixelFormat pix_fmt);
# 415 "./libavutil/pixdesc.h"
int av_get_pix_fmt_loss(enum AVPixelFormat dst_pix_fmt,
                        enum AVPixelFormat src_pix_fmt,
                        int has_alpha);
# 437 "./libavutil/pixdesc.h"
enum AVPixelFormat av_find_best_pix_fmt_of_2(enum AVPixelFormat dst_pix_fmt1, enum AVPixelFormat dst_pix_fmt2,
                                             enum AVPixelFormat src_pix_fmt, int has_alpha, int *loss_ptr);
# 55 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 2


HWDevice *filter_hw_device;

char *vstats_filename;

float audio_drift_threshold = 0.1;
float dts_delta_threshold = 10;
float dts_error_threshold = 3600*30;


enum VideoSyncMethod video_sync_method = VSYNC_AUTO;

float frame_drop_threshold = 0;
int do_benchmark = 0;
int do_benchmark_all = 0;
int do_hex_dump = 0;
int do_pkt_dump = 0;
int copy_ts = 0;
int start_at_zero = 0;
int copy_tb = -1;
int debug_ts = 0;
int exit_on_error = 0;
int abort_on_flags = 0;
int print_stats = -1;
int stdin_interaction = 1;
float max_error_rate = 2.0/3;
char *filter_nbthreads;
int filter_complex_nbthreads = 0;
int vstats_version = 2;
int auto_conversion_filters = 1;
int64_t stats_period = 500000;


static int file_overwrite = 0;
static int no_file_overwrite = 0;
int ignore_unknown_streams = 0;
int copy_unknown_streams = 0;
int recast_media = 0;

static void uninit_options(OptionsContext *o)
{
    const OptionDef *po = options;
    int i;


    while (po->name) {
        void *dst = (uint8_t*)o + po->u.off;

        if (po->flags & (1 << 9)) {
            SpecifierOptList *so = dst;
            for (int i = 0; i < so->nb_opt; i++) {
                av_freep(&so->opt[i].specifier);
                if (po->type == OPT_TYPE_STRING)
                    av_freep(&so->opt[i].u.str);
            }
            av_freep(&so->opt);
            so->nb_opt = 0;
        } else if (po->flags & (1 << 8) && po->type == OPT_TYPE_STRING)
            av_freep(dst);
        po++;
    }

    for (i = 0; i < o->nb_stream_maps; i++)
        av_freep(&o->stream_maps[i].linklabel);
    av_freep(&o->stream_maps);

    for (i = 0; i < o->nb_attachments; i++)
        av_freep(&o->attachments[i]);
    av_freep(&o->attachments);

    av_dict_free(&o->streamid);
}

static void init_options(OptionsContext *o)
{
    memset(o, 0, sizeof(*o));

    o->stop_time = 
# 133 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  (9223372036854775807L)
# 133 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                           ;
    o->mux_max_delay = 0.7;
    o->start_time = ((int64_t)0x8000000000000000UL);
    o->start_time_eof = ((int64_t)0x8000000000000000UL);
    o->recording_time = 
# 137 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                       (9223372036854775807L)
# 137 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                ;
    o->limit_filesize = 
# 138 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                       (9223372036854775807L)
# 138 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                ;
    o->chapters_input_file = 0x7fffffff;
    o->accurate_seek = 1;
    o->thread_queue_size = 0;
    o->input_sync_ref = -1;
    o->find_stream_info = 1;
    o->shortest_buf_duration = 10.f;
}

static int show_hwaccels(void *optctx, const char *opt, const char *arg)
{
    enum AVHWDeviceType type = AV_HWDEVICE_TYPE_NONE;

    printf("Hardware acceleration methods:\n");
    while ((type = av_hwdevice_iterate_types(type)) !=
           AV_HWDEVICE_TYPE_NONE)
        printf("%s\n", av_hwdevice_get_type_name(type));
    printf("\n");
    return 0;
}


AVDictionary *strip_specifiers(const AVDictionary *dict)
{
    const AVDictionaryEntry *e = 
# 162 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                ((void *)0)
# 162 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                    ;
    AVDictionary *ret = 
# 163 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                          ((void *)0)
# 163 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                              ;

    while ((e = av_dict_iterate(dict, e))) {
        char *p = strchr(e->key, ':');

        if (p)
            *p = 0;
        av_dict_set(&ret, e->key, e->value, 0);
        if (p)
            *p = ':';
    }
    return ret;
}

const char *opt_match_per_type_str(const SpecifierOptList *sol,
                                   char mediatype)
{
    do { if (!(!sol->nb_opt || sol->type == OPT_TYPE_STRING)) { av_log(
# 180 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
   ((void *)0)
# 180 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
   , 0, "Assertion %s failed at %s:%d\n", "!sol->nb_opt || sol->type == OPT_TYPE_STRING", "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c", 180); abort(); } } while (0);

    for (int i = 0; i < sol->nb_opt; i++) {
        const char *spec = sol->opt[i].specifier;
        if (spec[0] == mediatype && !spec[1])
            return sol->opt[i].u.str;
    }
    return 
# 187 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 187 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ;
}

int parse_and_set_vsync(const char *arg, int *vsync_var, int file_idx, int st_idx, int is_global)
{
    if (!av_strcasecmp(arg, "cfr")) *vsync_var = VSYNC_CFR;
    else if (!av_strcasecmp(arg, "vfr")) *vsync_var = VSYNC_VFR;
    else if (!av_strcasecmp(arg, "passthrough")) *vsync_var = VSYNC_PASSTHROUGH;

    else if (!av_strcasecmp(arg, "drop")) {
        av_log(
# 197 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 197 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 24, "-vsync/fps_mode drop is deprecated\n");
        *vsync_var = VSYNC_DROP;
    }

    else if (!is_global && !av_strcasecmp(arg, "auto")) *vsync_var = VSYNC_AUTO;
    else if (!is_global) {
        av_log(
# 203 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 203 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 8, "Invalid value %s specified for fps_mode of #%d:%d.\n", arg, file_idx, st_idx);
        return (-(
# 204 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 204 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }


    if (is_global && *vsync_var == VSYNC_AUTO) {
        int ret;
        double num;

        ret = parse_number("vsync", arg, OPT_TYPE_INT, VSYNC_AUTO, VSYNC_VFR, &num);
        if (ret < 0)
            return ret;

        video_sync_method = num;
        av_log(
# 217 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 217 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 24, "Passing a number to -vsync is deprecated,"
               " use a string argument as described in the manual.\n");
    }


    return 0;
}


static void correct_input_start_times(void)
{
    for (int i = 0; i < nb_input_files; i++) {
        InputFile *ifile = input_files[i];
        AVFormatContext *is = ifile->ctx;
        int64_t new_start_time = 
# 231 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                (9223372036854775807L)
# 231 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                         , diff, abs_start_seek;

        ifile->start_time_effective = is->start_time;

        if (is->start_time == ((int64_t)0x8000000000000000UL) ||
            !(is->iformat->flags & 0x0200))
            continue;

        for (int j = 0; j < is->nb_streams; j++) {
            AVStream *st = is->streams[j];
            if(st->discard == AVDISCARD_ALL || st->start_time == ((int64_t)0x8000000000000000UL))
                continue;
            new_start_time = ((new_start_time) > (av_rescale_q(st->start_time, st->time_base, (AVRational){1, 1000000})) ? (av_rescale_q(st->start_time, st->time_base, (AVRational){1, 1000000})) : (new_start_time));
        }

        diff = new_start_time - is->start_time;
        if (diff) {
            av_log(
# 248 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 248 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 40, "Correcting start time of Input #%d by %"
# 248 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                                 "l" "d"
# 248 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                                       " us.\n", i, diff);
            ifile->start_time_effective = new_start_time;
            if (copy_ts && start_at_zero)
                ifile->ts_offset = -new_start_time;
            else if (!copy_ts) {
                abs_start_seek = is->start_time + (ifile->start_time != ((int64_t)0x8000000000000000UL)) ? ifile->start_time : 0;
                ifile->ts_offset = abs_start_seek > new_start_time ? -abs_start_seek : -new_start_time;
            } else if (copy_ts)
                ifile->ts_offset = 0;

            ifile->ts_offset += ifile->input_ts_offset;
        }
    }
}

static int apply_sync_offsets(void)
{
    for (int i = 0; i < nb_input_files; i++) {
        InputFile *ref, *self = input_files[i];
        int64_t adjustment;
        int64_t self_start_time, ref_start_time, self_seek_start, ref_seek_start;
        int start_times_set = 1;

        if (self->input_sync_ref == -1 || self->input_sync_ref == i) continue;
        if (self->input_sync_ref >= nb_input_files || self->input_sync_ref < -1) {
            av_log(
# 273 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 273 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 8, "-isync for input %d references non-existent input %d.\n", i, self->input_sync_ref);
            return (-(
# 274 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  22
# 274 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  ));
        }

        if (copy_ts && !start_at_zero) {
            av_log(
# 278 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 278 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 8, "Use of -isync requires that start_at_zero be set if copyts is set.\n");
            return (-(
# 279 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  22
# 279 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  ));
        }

        ref = input_files[self->input_sync_ref];
        if (ref->input_sync_ref != -1 && ref->input_sync_ref != self->input_sync_ref) {
            av_log(
# 284 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 284 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 16, "-isync for input %d references a resynced input %d. Sync not set.\n", i, self->input_sync_ref);
            continue;
        }

        if (self->ctx->start_time_realtime != ((int64_t)0x8000000000000000UL) && ref->ctx->start_time_realtime != ((int64_t)0x8000000000000000UL)) {
            self_start_time = self->ctx->start_time_realtime;
            ref_start_time = ref->ctx->start_time_realtime;
        } else if (self->start_time_effective != ((int64_t)0x8000000000000000UL) && ref->start_time_effective != ((int64_t)0x8000000000000000UL)) {
            self_start_time = self->start_time_effective;
            ref_start_time = ref->start_time_effective;
        } else {
            start_times_set = 0;
        }

        if (start_times_set) {
            self_seek_start = self->start_time == ((int64_t)0x8000000000000000UL) ? 0 : self->start_time;
            ref_seek_start = ref->start_time == ((int64_t)0x8000000000000000UL) ? 0 : ref->start_time;

            adjustment = (self_start_time - ref_start_time) + !copy_ts*(self_seek_start - ref_seek_start) + ref->input_ts_offset;

            self->ts_offset += adjustment;

            av_log(
# 306 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 306 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 32, "Adjusted ts offset for Input #%d by %"
# 306 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                            "l" "d"
# 306 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                                  " us to sync with Input #%d.\n", i, adjustment, self->input_sync_ref);
        } else {
            av_log(
# 308 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 308 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 32, "Unable to identify start times for Inputs #%d and %d both. No sync adjustment made.\n", i, self->input_sync_ref);
        }
    }

    return 0;
}

static int opt_filter_threads(void *optctx, const char *opt, const char *arg)
{
    av_free(filter_nbthreads);
    filter_nbthreads = av_strdup(arg);
    return 0;
}

static int opt_abort_on(void *optctx, const char *opt, const char *arg)
{
    static const AVOption opts[] = {
        { "abort_on" , 
# 325 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                ((void *)0)
# 325 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                    , 0, AV_OPT_TYPE_FLAGS, { .i64 = 0 }, 
# 325 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                          (-9223372036854775807L -1)
# 325 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                                   , 
# 325 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                                     (9223372036854775807L)
# 325 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                                              , .unit = "flags" },
        { "empty_output" , 
# 326 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                ((void *)0)
# 326 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                    , 0, AV_OPT_TYPE_CONST, { .i64 = (1 << 0) }, .unit = "flags" },
        { "empty_output_stream", 
# 327 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                ((void *)0)
# 327 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                    , 0, AV_OPT_TYPE_CONST, { .i64 = (1 << 1) }, .unit = "flags" },
        { 
# 328 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
         ((void *)0) 
# 328 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              },
    };
    static const AVClass class = {
        .class_name = "",
        .item_name = av_default_item_name,
        .option = opts,
        .version = ((58)<<16 | (40)<<8 | (100)),
    };
    const AVClass *pclass = &class;

    return av_opt_eval_flags(&pclass, &opts[0], arg, &abort_on_flags);
}

static int opt_stats_period(void *optctx, const char *opt, const char *arg)
{
    int64_t user_stats_period;
    int ret = av_parse_time(&user_stats_period, arg, 1);
    if (ret < 0)
        return ret;

    if (user_stats_period <= 0) {
        av_log(
# 349 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 349 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 16, "stats_period %s must be positive.\n", arg);
        return (-(
# 350 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 350 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }

    stats_period = user_stats_period;
    av_log(
# 354 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 354 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              , 32, "ffmpeg stats and -progress period set to %s.\n", arg);

    return 0;
}

static int opt_audio_codec(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "codec:a", arg, options);
}

static int opt_video_codec(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "codec:v", arg, options);
}

static int opt_subtitle_codec(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "codec:s", arg, options);
}

static int opt_data_codec(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "codec:d", arg, options);
}

static int opt_map(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    StreamMap *m = 
# 386 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 386 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      ;
    int i, negative = 0, file_idx, disabled = 0;
    int ret;
    char *map, *p;
    char *allow_unused;

    if (*arg == '-') {
        negative = 1;
        arg++;
    }
    map = av_strdup(arg);
    if (!map)
        return (-(
# 398 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              12
# 398 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));

    if (map[0] == '[') {

        const char *c = map + 1;

        ret = grow_array((void**)&o->stream_maps, sizeof(*o->stream_maps), &o->nb_stream_maps, o->nb_stream_maps + 1);
        if (ret < 0)
            goto fail;

        m = &o->stream_maps[o->nb_stream_maps - 1];
        m->linklabel = av_get_token(&c, "]");
        if (!m->linklabel) {
            av_log(
# 411 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 411 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 16, "Invalid output link label: %s.\n", map);
            ret = (-(
# 412 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                 22
# 412 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                 ));
            goto fail;
        }
    } else {
        if (allow_unused = strchr(map, '?'))
            *allow_unused = 0;
        file_idx = strtol(map, &p, 0);
        if (file_idx >= nb_input_files || file_idx < 0) {
            av_log(
# 420 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 420 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 8, "Invalid input file index: %d.\n", file_idx);
            ret = (-(
# 421 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                 22
# 421 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                 ));
            goto fail;
        }
        if (negative)

            for (i = 0; i < o->nb_stream_maps; i++) {
                m = &o->stream_maps[i];
                if (file_idx == m->file_index &&
                    check_stream_specifier(input_files[m->file_index]->ctx,
                                           input_files[m->file_index]->ctx->streams[m->stream_index],
                                           *p == ':' ? p + 1 : p) > 0)
                    m->disabled = 1;
            }
        else
            for (i = 0; i < input_files[file_idx]->nb_streams; i++) {
                if (check_stream_specifier(input_files[file_idx]->ctx, input_files[file_idx]->ctx->streams[i],
                            *p == ':' ? p + 1 : p) <= 0)
                    continue;
                if (input_files[file_idx]->streams[i]->user_set_discard == AVDISCARD_ALL) {
                    disabled = 1;
                    continue;
                }
                ret = grow_array((void**)&o->stream_maps, sizeof(*o->stream_maps), &o->nb_stream_maps, o->nb_stream_maps + 1);
                if (ret < 0)
                    goto fail;

                m = &o->stream_maps[o->nb_stream_maps - 1];

                m->file_index = file_idx;
                m->stream_index = i;
            }
    }

    if (!m) {
        if (allow_unused) {
            av_log(
# 456 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 456 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 40, "Stream map '%s' matches no streams; ignoring.\n", arg);
        } else if (disabled) {
            av_log(
# 458 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 458 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 8, "Stream map '%s' matches disabled streams.\n"
                                       "To ignore this, add a trailing '?' to the map.\n", arg);
            ret = (-(
# 460 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                 22
# 460 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                 ));
            goto fail;
        } else {
            av_log(
# 463 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 463 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 8, "Stream map '%s' matches no streams.\n"
                                       "To ignore this, add a trailing '?' to the map.\n", arg);
            ret = (-(
# 465 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                 22
# 465 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                 ));
            goto fail;
        }
    }
    ret = 0;
fail:
    av_freep(&map);
    return ret;
}

static int opt_attach(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    int ret = grow_array((void**)&o->attachments, sizeof(*o->attachments), &o->nb_attachments, o->nb_attachments + 1);
    if (ret < 0)
        return ret;

    o->attachments[o->nb_attachments - 1] = av_strdup(arg);
    if (!o->attachments[o->nb_attachments - 1])
        return (-(
# 484 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              12
# 484 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));

    return 0;
}

static int opt_sdp_file(void *optctx, const char *opt, const char *arg)
{
    Scheduler *sch = optctx;
    return sch_sdp_filename(sch, arg);
}
# 527 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
static int opt_init_hw_device(void *optctx, const char *opt, const char *arg)
{
    if (!strcmp(arg, "list")) {
        enum AVHWDeviceType type = AV_HWDEVICE_TYPE_NONE;
        printf("Supported hardware device types:\n");
        while ((type = av_hwdevice_iterate_types(type)) !=
               AV_HWDEVICE_TYPE_NONE)
            printf("%s\n", av_hwdevice_get_type_name(type));
        printf("\n");
        return (-(int)(('E') | (('X') << 8) | (('I') << 16) | ((unsigned)('T') << 24)));
    } else {
        return hw_device_init_from_string(arg, 
# 538 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                              ((void *)0)
# 538 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                  );
    }
}

static int opt_filter_hw_device(void *optctx, const char *opt, const char *arg)
{
    if (filter_hw_device) {
        av_log(
# 545 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 545 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 16, "Only one filter device can be used.\n");
        return (-(
# 546 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 546 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }
    filter_hw_device = hw_device_get_by_name(arg);
    if (!filter_hw_device) {
        av_log(
# 550 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 550 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 16, "Invalid filter device %s.\n", arg);
        return (-(
# 551 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 551 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }
    return 0;
}

static int opt_recording_timestamp(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    char buf[128];
    int64_t recording_timestamp;
    int ret;
    struct tm time;

    ret = av_parse_time(&recording_timestamp, arg, 0);
    if (ret < 0)
        return ret;

    recording_timestamp /= 1e6;
    time = *gmtime((time_t*)&recording_timestamp);
    if (!strftime(buf, sizeof(buf), "creation_time=%Y-%m-%dT%H:%M:%S%z", &time))
        return -1;
    parse_option(o, "metadata", buf, options);

    av_log(
# 574 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 574 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              , 24, "%s is deprecated, set the 'creation_time' metadata "
                                 "tag instead.\n", opt);
    return 0;
}

int find_codec(void *logctx, const char *name,
               enum AVMediaType type, int encoder, const AVCodec **pcodec)
{
    const AVCodecDescriptor *desc;
    const char *codec_string = encoder ? "encoder" : "decoder";
    const AVCodec *codec;

    codec = encoder ?
        avcodec_find_encoder_by_name(name) :
        avcodec_find_decoder_by_name(name);

    if (!codec && (desc = avcodec_descriptor_get_by_name(name))) {
        codec = encoder ? avcodec_find_encoder(desc->id) :
                          avcodec_find_decoder(desc->id);
        if (codec)
            av_log(logctx, 40, "Matched %s '%s' for codec '%s'.\n",
                   codec_string, codec->name, desc->name);
    }

    if (!codec) {
        av_log(logctx, 8, "Unknown %s '%s'\n", codec_string, name);
        return encoder ? (-(int)((0xF8) | (('E') << 8) | (('N') << 16) | ((unsigned)('C') << 24))) :
                         (-(int)((0xF8) | (('D') << 8) | (('E') << 16) | ((unsigned)('C') << 24)));
    }
    if (codec->type != type && !recast_media) {
        av_log(logctx, 8, "Invalid %s type '%s'\n", codec_string, name);
        return (-(
# 605 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 605 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }

    *pcodec = codec;
    return 0;;
}

int assert_file_overwrite(const char *filename)
{
    const char *proto_name = avio_find_protocol_name(filename);

    if (file_overwrite && no_file_overwrite) {
        fprintf(
# 617 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
               stderr
# 617 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                     , "Error, both -y and -n supplied. Exiting.\n");
        return (-(
# 618 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 618 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }

    if (!file_overwrite) {
        if (proto_name && !strcmp(proto_name, "file") && avio_check(filename, 0) == 0) {
            if (stdin_interaction && !no_file_overwrite) {
                fprintf(
# 624 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                       stderr
# 624 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                             ,"File '%s' already exists. Overwrite? [y/N] ", filename);
                fflush(
# 625 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      stderr
# 625 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                            );
                term_exit();
                signal(
# 627 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      2
# 627 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                            , 
# 627 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                              ((__sighandler_t) 0)
# 627 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                     );
                if (!read_yesno()) {
                    av_log(
# 629 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                          ((void *)0)
# 629 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                              , 8, "Not overwriting - exiting\n");
                    return (-(int)(('E') | (('X') << 8) | (('I') << 16) | ((unsigned)('T') << 24)));
                }
                term_init();
            }
            else {
                av_log(
# 635 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      ((void *)0)
# 635 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                          , 8, "File '%s' already exists. Exiting.\n", filename);
                return (-(int)(('E') | (('X') << 8) | (('I') << 16) | ((unsigned)('T') << 24)));
            }
        }
    }

    if (proto_name && !strcmp(proto_name, "file")) {
        for (int i = 0; i < nb_input_files; i++) {
             InputFile *file = input_files[i];
             if (file->ctx->iformat->flags & 0x0001)
                 continue;
             if (!strcmp(filename, file->ctx->url)) {
                 av_log(
# 647 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                       ((void *)0)
# 647 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                           , 8, "Output %s same as Input #%d - exiting\n", filename, i);
                 av_log(
# 648 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                       ((void *)0)
# 648 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                           , 24, "FFmpeg cannot edit existing files in-place.\n");
                 return (-(
# 649 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                       22
# 649 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       ));
             }
        }
    }

    return 0;
}


static int opt_streamid(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    char *p;
    char idx_str[16];

    av_strlcpy(idx_str, arg, sizeof(idx_str));
    p = strchr(idx_str, ':');
    if (!p) {
        av_log(
# 667 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 667 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 8,
               "Invalid value '%s' for option '%s', required syntax is 'index:value'\n",
               arg, opt);
        return (-(
# 670 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 670 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }
    *p++ = '\0';

    return av_dict_set(&o->streamid, idx_str, p, 0);
}

static int init_complex_filters(void)
{
    int i, ret = 0;

    for (i = 0; i < nb_filtergraphs; i++) {
        ret = init_complex_filtergraph(filtergraphs[i]);
        if (ret < 0)
            return ret;
    }
    return 0;
}

static int opt_target(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    enum { PAL, NTSC, FILM, UNKNOWN } norm = UNKNOWN;
    static const char *const frame_rates[] = { "25", "30000/1001", "24000/1001" };

    if (!strncmp(arg, "pal-", 4)) {
        norm = PAL;
        arg += 4;
    } else if (!strncmp(arg, "ntsc-", 5)) {
        norm = NTSC;
        arg += 5;
    } else if (!strncmp(arg, "film-", 5)) {
        norm = FILM;
        arg += 5;
    } else {

        if (nb_input_files) {
            int i, j;
            for (j = 0; j < nb_input_files; j++) {
                for (i = 0; i < input_files[j]->nb_streams; i++) {
                    AVStream *st = input_files[j]->ctx->streams[i];
                    int64_t fr;
                    if (st->codecpar->codec_type != AVMEDIA_TYPE_VIDEO)
                        continue;
                    fr = st->time_base.den * 1000LL / st->time_base.num;
                    if (fr == 25000) {
                        norm = PAL;
                        break;
                    } else if ((fr == 29970) || (fr == 23976)) {
                        norm = NTSC;
                        break;
                    }
                }
                if (norm != UNKNOWN)
                    break;
            }
        }
        if (norm != UNKNOWN)
            av_log(
# 728 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 728 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 32, "Assuming %s for target.\n", norm == PAL ? "PAL" : "NTSC");
    }

    if (norm == UNKNOWN) {
        av_log(
# 732 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 732 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 8, "Could not determine norm (PAL/NTSC/NTSC-Film) for target.\n");
        av_log(
# 733 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 733 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 8, "Please prefix target with \"pal-\", \"ntsc-\" or \"film-\",\n");
        av_log(
# 734 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 734 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 8, "or set a framerate with \"-r xxx\".\n");
        return (-(
# 735 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 735 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }

    if (!strcmp(arg, "vcd")) {
        opt_video_codec(o, "c:v", "mpeg1video");
        opt_audio_codec(o, "c:a", "mp2");
        parse_option(o, "f", "vcd", options);

        parse_option(o, "s", norm == PAL ? "352x288" : "352x240", options);
        parse_option(o, "r", frame_rates[norm], options);
        opt_default(
# 745 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 745 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "g", norm == PAL ? "15" : "18");

        opt_default(
# 747 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 747 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "b:v", "1150000");
        opt_default(
# 748 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 748 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "maxrate:v", "1150000");
        opt_default(
# 749 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 749 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "minrate:v", "1150000");
        opt_default(
# 750 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 750 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "bufsize:v", "327680");

        opt_default(
# 752 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 752 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "b:a", "224000");
        parse_option(o, "ar", "44100", options);
        parse_option(o, "ac", "2", options);

        opt_default(
# 756 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 756 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "packetsize", "2324");
        opt_default(
# 757 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 757 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "muxrate", "1411200");






        o->mux_preload = (36000 + 3 * 1200) / 90000.0;
    } else if (!strcmp(arg, "svcd")) {

        opt_video_codec(o, "c:v", "mpeg2video");
        opt_audio_codec(o, "c:a", "mp2");
        parse_option(o, "f", "svcd", options);

        parse_option(o, "s", norm == PAL ? "480x576" : "480x480", options);
        parse_option(o, "r", frame_rates[norm], options);
        parse_option(o, "pix_fmt", "yuv420p", options);
        opt_default(
# 774 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 774 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "g", norm == PAL ? "15" : "18");

        opt_default(
# 776 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 776 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "b:v", "2040000");
        opt_default(
# 777 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 777 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "maxrate:v", "2516000");
        opt_default(
# 778 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 778 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "minrate:v", "0");
        opt_default(
# 779 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 779 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "bufsize:v", "1835008");
        opt_default(
# 780 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 780 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "scan_offset", "1");

        opt_default(
# 782 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 782 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "b:a", "224000");
        parse_option(o, "ar", "44100", options);

        opt_default(
# 785 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 785 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "packetsize", "2324");

    } else if (!strcmp(arg, "dvd")) {

        opt_video_codec(o, "c:v", "mpeg2video");
        opt_audio_codec(o, "c:a", "ac3");
        parse_option(o, "f", "dvd", options);

        parse_option(o, "s", norm == PAL ? "720x576" : "720x480", options);
        parse_option(o, "r", frame_rates[norm], options);
        parse_option(o, "pix_fmt", "yuv420p", options);
        opt_default(
# 796 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 796 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "g", norm == PAL ? "15" : "18");

        opt_default(
# 798 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 798 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "b:v", "6000000");
        opt_default(
# 799 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 799 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "maxrate:v", "9000000");
        opt_default(
# 800 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 800 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "minrate:v", "0");
        opt_default(
# 801 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 801 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "bufsize:v", "1835008");

        opt_default(
# 803 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 803 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "packetsize", "2048");
        opt_default(
# 804 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 804 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "muxrate", "10080000");

        opt_default(
# 806 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                   ((void *)0)
# 806 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                       , "b:a", "448000");
        parse_option(o, "ar", "48000", options);

    } else if (!strncmp(arg, "dv", 2)) {

        parse_option(o, "f", "dv", options);

        parse_option(o, "s", norm == PAL ? "720x576" : "720x480", options);
        parse_option(o, "pix_fmt", !strncmp(arg, "dv50", 4) ? "yuv422p" :
                          norm == PAL ? "yuv420p" : "yuv411p", options);
        parse_option(o, "r", frame_rates[norm], options);

        parse_option(o, "ar", "48000", options);
        parse_option(o, "ac", "2", options);

    } else {
        av_log(
# 822 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 822 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 16, "Unknown target: %s\n", arg);
        return (-(
# 823 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 823 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }

    av_dict_copy(&o->g->codec_opts, codec_opts, 16);
    av_dict_copy(&o->g->format_opts, format_opts, 16);

    return 0;
}

static int opt_vstats_file(void *optctx, const char *opt, const char *arg)
{
    av_free (vstats_filename);
    vstats_filename = av_strdup (arg);
    return 0;
}

static int opt_vstats(void *optctx, const char *opt, const char *arg)
{
    char filename[40];
    time_t today2 = time(
# 842 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                        ((void *)0)
# 842 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                            );
    struct tm *today = localtime(&today2);

    if (!today) {
        av_log(
# 846 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 846 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 8, "Unable to get current time: %s\n", strerror(
# 846 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                               (*__errno_location ())
# 846 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                                    ));
        return (-(
# 847 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              (*__errno_location ())
# 847 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }

    snprintf(filename, sizeof(filename), "vstats_%02d%02d%02d.log", today->tm_hour, today->tm_min,
             today->tm_sec);
    return opt_vstats_file(
# 852 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                          ((void *)0)
# 852 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                              , opt, filename);
}

static int opt_video_frames(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "frames:v", arg, options);
}

static int opt_audio_frames(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "frames:a", arg, options);
}

static int opt_data_frames(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "frames:d", arg, options);
}

static int opt_default_new(OptionsContext *o, const char *opt, const char *arg)
{
    int ret;
    AVDictionary *cbak = codec_opts;
    AVDictionary *fbak = format_opts;
    codec_opts = 
# 878 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ((void *)0)
# 878 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                    ;
    format_opts = 
# 879 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                 ((void *)0)
# 879 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                     ;

    ret = opt_default(
# 881 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                     ((void *)0)
# 881 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                         , opt, arg);

    av_dict_copy(&o->g->codec_opts , codec_opts, 0);
    av_dict_copy(&o->g->format_opts, format_opts, 0);
    av_dict_free(&codec_opts);
    av_dict_free(&format_opts);
    codec_opts = cbak;
    format_opts = fbak;

    return ret;
}

static int opt_preset(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    FILE *f=
# 896 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
           ((void *)0)
# 896 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
               ;
    char filename[1000], line[1000], tmp_line[1000];
    const char *codec_name = 
# 898 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                            ((void *)0)
# 898 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                ;
    int ret = 0;

    codec_name = opt_match_per_type_str(&o->codec_names, *opt);

    if (!(f = get_preset_file(filename, sizeof(filename), arg, *opt == 'f', codec_name))) {
        if(!strncmp(arg, "libx264-lossless", strlen("libx264-lossless"))){
            av_log(
# 905 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 905 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 8, "Please use -preset <speed> -qp 0\n");
        }else
            av_log(
# 907 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 907 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 8, "File for preset '%s' not found\n", arg);
        return (-(
# 908 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              2
# 908 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    }

    while (fgets(line, sizeof(line), f)) {
        char *key = tmp_line, *value, *endptr;

        if (strcspn(line, "#\n\r") == 0)
            continue;
        av_strlcpy(tmp_line, line, sizeof(tmp_line));
        if (!av_strtok(key, "=", &value) ||
            !av_strtok(value, "\r\n", &endptr)) {
            av_log(
# 919 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 919 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 8, "%s: Invalid syntax: '%s'\n", filename, line);
            ret = (-(
# 920 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                 22
# 920 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                 ));
            goto fail;
        }
        av_log(
# 923 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 923 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 48, "ffpreset[%s]: set '%s' = '%s'\n", filename, key, value);

        if (!strcmp(key, "acodec")) opt_audio_codec (o, key, value);
        else if (!strcmp(key, "vcodec")) opt_video_codec (o, key, value);
        else if (!strcmp(key, "scodec")) opt_subtitle_codec(o, key, value);
        else if (!strcmp(key, "dcodec")) opt_data_codec (o, key, value);
        else if (opt_default_new(o, key, value) < 0) {
            av_log(
# 930 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 930 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 8, "%s: Invalid option or argument: '%s', parsed as '%s' = '%s'\n",
                   filename, line, key, value);
            ret = (-(
# 932 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                 22
# 932 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                 ));
            goto fail;
        }
    }

fail:
    fclose(f);

    return ret;
}

static int opt_old2new(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    int ret;
    char *s = av_asprintf("%s:%c", opt + 1, *opt);
    if (!s)
        return (-(
# 949 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              12
# 949 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    ret = parse_option(o, s, arg, options);
    av_free(s);
    return ret;
}

static int opt_bitrate(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;

    if(!strcmp(opt, "ab")){
        av_dict_set(&o->g->codec_opts, "b:a", arg, 0);
        return 0;
    } else if(!strcmp(opt, "b")){
        av_log(
# 963 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 963 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 24, "Please use -b:a or -b:v, -b is ambiguous\n");
        av_dict_set(&o->g->codec_opts, "b:v", arg, 0);
        return 0;
    }
    av_dict_set(&o->g->codec_opts, opt, arg, 0);
    return 0;
}

static int opt_qscale(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    char *s;
    int ret;
    if(!strcmp(opt, "qscale")){
        av_log(
# 977 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 977 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 24, "Please use -q:a or -q:v, -qscale is ambiguous\n");
        return parse_option(o, "q:v", arg, options);
    }
    s = av_asprintf("q%s", opt + 6);
    if (!s)
        return (-(
# 982 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              12
# 982 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    ret = parse_option(o, s, arg, options);
    av_free(s);
    return ret;
}

static int opt_profile(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    if(!strcmp(opt, "profile")){
        av_log(
# 992 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 992 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 24, "Please use -profile:a or -profile:v, -profile is ambiguous\n");
        av_dict_set(&o->g->codec_opts, "profile:v", arg, 0);
        return 0;
    }
    av_dict_set(&o->g->codec_opts, opt, arg, 0);
    return 0;
}

static int opt_video_filters(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "filter:v", arg, options);
}

static int opt_audio_filters(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "filter:a", arg, options);
}


static int opt_vsync(void *optctx, const char *opt, const char *arg)
{
    av_log(
# 1015 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 1015 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              , 24, "-vsync is deprecated. Use -fps_mode\n");
    return parse_and_set_vsync(arg, &video_sync_method, -1, -1, 1);
}


static int opt_timecode(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    int ret;
    char *tcr = av_asprintf("timecode=%s", arg);
    if (!tcr)
        return (-(
# 1026 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              12
# 1026 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));
    ret = parse_option(o, "metadata:g", tcr, options);
    if (ret >= 0)
        ret = av_dict_set(&o->g->codec_opts, "gop_timecode", arg, 0);
    av_free(tcr);
    return ret;
}

static int opt_audio_qscale(void *optctx, const char *opt, const char *arg)
{
    OptionsContext *o = optctx;
    return parse_option(o, "q:a", arg, options);
}

static int opt_filter_complex(void *optctx, const char *opt, const char *arg)
{
    Scheduler *sch = optctx;
    char *graph_desc = av_strdup(arg);
    if (!graph_desc)
        return (-(
# 1045 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              12
# 1045 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));

    return fg_create(
# 1047 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                    ((void *)0)
# 1047 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                        , graph_desc, sch);
}


static int opt_filter_complex_script(void *optctx, const char *opt, const char *arg)
{
    Scheduler *sch = optctx;
    char *graph_desc = file_read(arg);
    if (!graph_desc)
        return (-(
# 1056 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              22
# 1056 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              ));

    av_log(
# 1058 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 1058 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              , 24, "-%s is deprecated, use -/filter_complex %s instead\n",
           opt, arg);

    return fg_create(
# 1061 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                    ((void *)0)
# 1061 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                        , graph_desc, sch);
}


void show_help_default(const char *opt, const char *arg)
{
    int show_advanced = 0, show_avoptions = 0;

    if (opt && *opt) {
        if (!strcmp(opt, "long"))
            show_advanced = 1;
        else if (!strcmp(opt, "full"))
            show_advanced = show_avoptions = 1;
        else
            av_log(
# 1075 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 1075 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 16, "Unknown help option '%s'.\n", opt);
    }

    show_usage();

    printf("Getting help:\n"
           "    -h      -- print basic options\n"
           "    -h long -- print more options\n"
           "    -h full -- print all options (including all format and codec specific options, very long)\n"
           "    -h type=name -- print all options for the named decoder/encoder/demuxer/muxer/filter/bsf/protocol\n"
           "    See man %s for detailed description of the options.\n"
           "\n"
           "Per-stream options can be followed by :<stream_spec> to apply that option to specific streams only. "
           "<stream_spec> can be a stream index, or v/a/s for video/audio/subtitle (see manual for full syntax).\n"
           "\n", program_name);

    show_help_options(options, "Print help / information / capabilities:",
                      (1 << 1), (1 << 2));
    if (show_advanced)
        show_help_options(options, "Advanced information / capabilities:",
                          (1 << 1) | (1 << 2), 0);

    show_help_options(options, "Global options (affect whole program "
                      "instead of just one file):",
                      0, (1 << 7) | (1 << 1) | (1 << 2));
    if (show_advanced)
        show_help_options(options, "Advanced global options:", (1 << 2),
                          (1 << 7) | (1 << 1));

    show_help_options(options, "Per-file options (input and output):",
                      (1 << 7) | (1 << 11) | (1 << 12),
                      (1 << 1) | (1 << 10) | (1 << 2) |
                      (1 << 3) | (1 << 4) | (1 << 5) | (1 << 6));
    if (show_advanced)
        show_help_options(options, "Advanced per-file options (input and output):",
                          (1 << 7) | (1 << 11) | (1 << 12) | (1 << 2),
                          (1 << 1) | (1 << 10) |
                          (1 << 3) | (1 << 4) | (1 << 5) | (1 << 6));

    show_help_options(options, "Per-file options (input-only):",
                      (1 << 7) | (1 << 11),
                      (1 << 1) | (1 << 10) | (1 << 12) | (1 << 2) |
                      (1 << 3) | (1 << 4) | (1 << 5) | (1 << 6));
    if (show_advanced)
        show_help_options(options, "Advanced per-file options (input-only):",
                          (1 << 7) | (1 << 11) | (1 << 2),
                          (1 << 1) | (1 << 10) | (1 << 12) |
                          (1 << 3) | (1 << 4) | (1 << 5) | (1 << 6));

    show_help_options(options, "Per-file options (output-only):",
                      (1 << 7) | (1 << 12),
                      (1 << 1) | (1 << 10) | (1 << 11) | (1 << 2) |
                      (1 << 3) | (1 << 4) | (1 << 5) | (1 << 6));
    if (show_advanced)
        show_help_options(options, "Advanced per-file options (output-only):",
                          (1 << 7) | (1 << 12) | (1 << 2),
                          (1 << 1) | (1 << 10) | (1 << 11) |
                          (1 << 3) | (1 << 4) | (1 << 5) | (1 << 6));

    show_help_options(options, "Per-stream options:",
                      (1 << 10),
                      (1 << 1) | (1 << 2) |
                      (1 << 3) | (1 << 4) | (1 << 5) | (1 << 6));
    if (show_advanced)
        show_help_options(options, "Advanced per-stream options:",
                          (1 << 10) | (1 << 2),
                          (1 << 1) |
                          (1 << 3) | (1 << 4) | (1 << 5) | (1 << 6));

    show_help_options(options, "Video options:",
                      (1 << 3), (1 << 2) | (1 << 4) | (1 << 5) | (1 << 6));
    if (show_advanced)
        show_help_options(options, "Advanced Video options:",
                          (1 << 2) | (1 << 3), (1 << 4) | (1 << 5) | (1 << 6));

    show_help_options(options, "Audio options:",
                      (1 << 4), (1 << 2) | (1 << 3) | (1 << 5) | (1 << 6));
    if (show_advanced)
        show_help_options(options, "Advanced Audio options:",
                          (1 << 2) | (1 << 4), (1 << 3) | (1 << 5) | (1 << 6));

    show_help_options(options, "Subtitle options:",
                      (1 << 5), (1 << 2) | (1 << 3) | (1 << 4) | (1 << 6));
    if (show_advanced)
        show_help_options(options, "Advanced Subtitle options:",
                          (1 << 2) | (1 << 5), (1 << 3) | (1 << 4) | (1 << 6));

    if (show_advanced)
        show_help_options(options, "Data stream options:",
                          (1 << 6), (1 << 3) | (1 << 4) | (1 << 5));
    printf("\n");

    if (show_avoptions) {
        int flags = (1 << 1) | (1 << 0);
        show_help_children(avcodec_get_class(), flags);
        show_help_children(avformat_get_class(), flags);

        show_help_children(sws_get_class(), flags);


        show_help_children(swr_get_class(), (1 << 3));

        show_help_children(avfilter_get_class(), (1 << 4) | (1 << 3) | (1 << 16));
        show_help_children(av_bsf_get_class(), (1 << 4) | (1 << 3) | (1 << 8));
    }
}

void show_usage(void)
{
    av_log(
# 1184 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 1184 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              , 32, "Universal media converter\n");
    av_log(
# 1185 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 1185 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              , 32, "usage: %s [options] [[infile options] -i infile]... {[outfile options] outfile}...\n", program_name);
    av_log(
# 1186 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 1186 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              , 32, "\n");
}

enum OptGroup {
    GROUP_OUTFILE,
    GROUP_INFILE,
};

static const OptionGroupDef groups[] = {
    [GROUP_OUTFILE] = { "output url", 
# 1195 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                      ((void *)0)
# 1195 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                          , (1 << 12) },
    [GROUP_INFILE] = { "input url", "i", (1 << 11) },
};

static int open_files(OptionGroupList *l, const char *inout, Scheduler *sch,
                      int (*open_file)(const OptionsContext*, const char*,
                                       Scheduler*))
{
    int i, ret;

    for (i = 0; i < l->nb_groups; i++) {
        OptionGroup *g = &l->groups[i];
        OptionsContext o;

        init_options(&o);
        o.g = g;

        ret = parse_optgroup(&o, g, options);
        if (ret < 0) {
            av_log(
# 1214 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 1214 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 16, "Error parsing options for %s file "
                   "%s.\n", inout, g->arg);
            uninit_options(&o);
            return ret;
        }

        av_log(
# 1220 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 1220 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 48, "Opening an %s file: %s.\n", inout, g->arg);
        ret = open_file(&o, g->arg, sch);
        uninit_options(&o);
        if (ret < 0) {
            av_log(
# 1224 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                  ((void *)0)
# 1224 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      , 16, "Error opening %s file %s.\n",
                   inout, g->arg);
            return ret;
        }
        av_log(
# 1228 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 1228 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 48, "Successfully opened the file.\n");
    }

    return 0;
}

int ffmpeg_parse_options(int argc, char **argv, Scheduler *sch)
{
    OptionParseContext octx;
    const char *errmsg = 
# 1237 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                        ((void *)0)
# 1237 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                            ;
    int ret;

    memset(&octx, 0, sizeof(octx));


    ret = split_commandline(&octx, argc, argv, options, groups,
                            (sizeof(groups) / sizeof((groups)[0])));
    if (ret < 0) {
        errmsg = "splitting the argument list";
        goto fail;
    }


    ret = parse_optgroup(sch, &octx.global_opts, options);
    if (ret < 0) {
        errmsg = "parsing global options";
        goto fail;
    }


    term_init();


    ret = open_files(&octx.groups[GROUP_INFILE], "input", sch, ifile_open);
    if (ret < 0) {
        errmsg = "opening input files";
        goto fail;
    }


    ret = init_complex_filters();
    if (ret < 0) {
        errmsg = "initializing complex filters";
        goto fail;
    }


    ret = open_files(&octx.groups[GROUP_OUTFILE], "output", sch, of_open);
    if (ret < 0) {
        errmsg = "opening output files";
        goto fail;
    }

    correct_input_start_times();

    ret = apply_sync_offsets();
    if (ret < 0)
        goto fail;

    ret = check_filter_outputs();
    if (ret < 0)
        goto fail;

fail:
    uninit_parse_context(&octx);
    if (ret < 0 && ret != (-(int)(('E') | (('X') << 8) | (('I') << 16) | ((unsigned)('T') << 24)))) {
        av_log(
# 1294 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 1294 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 8, "Error %s: %s\n",
               errmsg ? errmsg : "", av_make_error_string((char[64]){0}, 64, ret));
    }
    return ret;
}

static int opt_progress(void *optctx, const char *opt, const char *arg)
{
    AVIOContext *avio = 
# 1302 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                       ((void *)0)
# 1302 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                           ;
    int ret;

    if (!strcmp(arg, "-"))
        arg = "pipe:";
    ret = avio_open2(&avio, arg, 2, &int_cb, 
# 1307 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                          ((void *)0)
# 1307 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                              );
    if (ret < 0) {
        av_log(
# 1309 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
              ((void *)0)
# 1309 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                  , 16, "Failed to open progress URL \"%s\": %s\n",
               arg, av_make_error_string((char[64]){0}, 64, ret));
        return ret;
    }
    progress_avio = avio;
    return 0;
}

int opt_timelimit(void *optctx, const char *opt, const char *arg)
{

    int ret;
    double lim;
    struct rlimit rl;

    ret = parse_number(opt, arg, OPT_TYPE_INT64, 0, 0x7fffffff, &lim);
    if (ret < 0)
        return ret;

    rl = (struct rlimit){ lim, lim + 1 };
    if (setrlimit(
# 1329 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                 RLIMIT_CPU
# 1329 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                           , &rl))
        perror("setrlimit");



    return 0;
}


static int opt_qphist(void *optctx, const char *opt, const char *arg)
{
    av_log(
# 1340 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 1340 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              , 24, "Option -%s is deprecated and has no effect\n", opt);
    return 0;
}



static int opt_adrift_threshold(void *optctx, const char *opt, const char *arg)
{
    av_log(
# 1348 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
          ((void *)0)
# 1348 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
              , 24, "Option -%s is deprecated and has no effect\n", opt);
    return 0;
}


static const char *const alt_bsf[] = { "absf", "vbsf", 
# 1353 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                 ((void *)0) 
# 1353 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                      };
static const char *const alt_channel_layout[] = { "ch_layout", 
# 1354 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                              ((void *)0)
# 1354 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                  };
static const char *const alt_codec[] = { "c", "acodec", "vcodec", "scodec", "dcodec", 
# 1355 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                                              ((void *)0) 
# 1355 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                                                   };
static const char *const alt_filter[] = { "af", "vf", 
# 1356 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                             ((void *)0) 
# 1356 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                  };
static const char *const alt_frames[] = { "aframes", "vframes", "dframes", 
# 1357 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                                  ((void *)0) 
# 1357 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                                       };
static const char *const alt_pre[] = { "apre", "vpre", "spre", 
# 1358 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                         ((void *)0)
# 1358 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                             };
static const char *const alt_qscale[] = { "q", 
# 1359 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                      ((void *)0)
# 1359 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                          };
static const char *const alt_tag[] = { "atag", "vtag", "stag", 
# 1360 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                                                                         ((void *)0) 
# 1360 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                                              };


const OptionDef options[] = {

    { "L", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_license }, "show license" }, { "h", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_help }, "show help", "topic" }, { "?", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_help }, "show help", "topic" }, { "help", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_help }, "show help", "topic" }, { "-help", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_help }, "show help", "topic" }, { "version", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_version }, "show version" }, { "buildconf", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_buildconf }, "show build configuration" }, { "formats", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_formats }, "show available formats" }, { "muxers", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_muxers }, "show available muxers" }, { "demuxers", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_demuxers }, "show available demuxers" }, { "devices", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_devices }, "show available devices" }, { "codecs", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_codecs }, "show available codecs" }, { "decoders", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_decoders }, "show available decoders" }, { "encoders", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_encoders }, "show available encoders" }, { "bsfs", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_bsfs }, "show available bit stream filters" }, { "protocols", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_protocols }, "show available protocols" }, { "filters", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_filters }, "show available filters" }, { "pix_fmts", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_pix_fmts }, "show available pixel formats" }, { "layouts", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_layouts }, "show standard channel layouts" }, { "sample_fmts", OPT_TYPE_FUNC, (1 << 1), { .func_arg = show_sample_fmts }, "show available audio sample formats" }, { "dispositions", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_dispositions}, "show available stream dispositions" }, { "colors", OPT_TYPE_FUNC, (1 << 1) | (1 << 2), { .func_arg = show_colors }, "show available color names" }, { "loglevel", OPT_TYPE_FUNC, (1 << 0) | (1 << 2), { .func_arg = opt_loglevel }, "set logging level", "loglevel" }, { "v", OPT_TYPE_FUNC, (1 << 0), { .func_arg = opt_loglevel }, "set logging level", "loglevel" }, { "report", OPT_TYPE_FUNC, (1 << 2), { .func_arg = opt_report }, "generate a report" }, { "max_alloc", OPT_TYPE_FUNC, (1 << 0) | (1 << 2), { .func_arg = opt_max_alloc }, "set maximum size of a single allocated block", "bytes" }, { "cpuflags", OPT_TYPE_FUNC, (1 << 0) | (1 << 2), { .func_arg = opt_cpuflags }, "force specific cpu flags", "flags" }, { "cpucount", OPT_TYPE_FUNC, (1 << 0) | (1 << 2), { .func_arg = opt_cpucount }, "force specific cpu count", "count" }, { "hide_banner", OPT_TYPE_BOOL, (1 << 2), {&hide_banner}, "do not show program banner", "hide_banner" }, { "sources" , OPT_TYPE_FUNC, (1 << 1) | (1 << 0) | (1 << 2), { .func_arg = show_sources }, "list sources of the input device", "device" }, { "sinks" , OPT_TYPE_FUNC, (1 << 1) | (1 << 0) | (1 << 2), { .func_arg = show_sinks }, "list sinks of the output device", "device" },
    { "f", OPT_TYPE_STRING, ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 12),
        { .off = 
# 1367 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      __builtin_offsetof (
# 1367 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      OptionsContext
# 1367 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      , 
# 1367 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      format
# 1367 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      ) 
# 1367 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                     },
        "force container format (auto-detected otherwise)", "fmt" },
    { "y", OPT_TYPE_BOOL, 0,
        { &file_overwrite },
        "overwrite output files" },
    { "n", OPT_TYPE_BOOL, 0,
        { &no_file_overwrite },
        "never overwrite output files" },
    { "ignore_unknown", OPT_TYPE_BOOL, (1 << 2),
        { &ignore_unknown_streams },
        "Ignore unknown stream types" },
    { "copy_unknown", OPT_TYPE_BOOL, (1 << 2),
        { &copy_unknown_streams },
        "Copy unknown stream types" },
    { "recast_media", OPT_TYPE_BOOL, (1 << 2),
        { &recast_media },
        "allow recasting stream type in order to force a decoder of different media type" },
    { "c", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12) | (1 << 14),
        { .off = 
# 1385 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      __builtin_offsetof (
# 1385 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      OptionsContext
# 1385 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      , 
# 1385 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      codec_names
# 1385 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      ) 
# 1385 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                          },
        "select encoder/decoder ('copy' to copy stream without reencoding)", "codec",
        .u1.name_canon = "codec", },
    { "codec", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12) | (1 << 2) | (1 << 13),
        { .off = 
# 1389 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      __builtin_offsetof (
# 1389 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      OptionsContext
# 1389 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      , 
# 1389 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      codec_names
# 1389 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      ) 
# 1389 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                          },
        "alias for -c (select encoder/decoder)", "codec",
        .u1.names_alt = alt_codec, },
    { "pre", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12) | (1 << 2) | (1 << 13),
        { .off = 
# 1393 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      __builtin_offsetof (
# 1393 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      OptionsContext
# 1393 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      , 
# 1393 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      presets
# 1393 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      ) 
# 1393 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                      },
        "preset name", "preset",
        .u1.names_alt = alt_pre, },
    { "map", OPT_TYPE_FUNC, (1 << 0) | (1 << 2) | (1 << 7) | (1 << 12),
        { .func_arg = opt_map },
        "set input stream mapping",
        "[-]input_file_id[:stream_specifier][,sync_file_id[:stream_specifier]]" },
    { "map_metadata", OPT_TYPE_STRING, ((1 << 9) | ((1 << 8) | (1 << 7))) | (1 << 12) | (1 << 2),
        { .off = 
# 1401 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      __builtin_offsetof (
# 1401 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      OptionsContext
# 1401 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      , 
# 1401 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                      metadata_map
# 1401 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                      ) 
# 1401 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                           },
        "set metadata information of outfile from infile",
        "outfile[,metadata]:infile[,metadata]" },
    { "map_chapters", OPT_TYPE_INT, (1 << 2) | ((1 << 8) | (1 << 7)) | (1 << 12),
        { .off = 
# 1405 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1405 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1405 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1405 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                chapters_input_file
# 1405 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1405 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                            },
        "set chapters mapping", "input_file_index" },
    { "t", OPT_TYPE_TIME, ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 12),
        { .off = 
# 1408 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1408 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1408 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1408 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                recording_time
# 1408 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1408 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "stop transcoding after specified duration",
        "duration" },
    { "to", OPT_TYPE_TIME, ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 12),
        { .off = 
# 1412 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1412 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1412 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1412 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                stop_time
# 1412 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1412 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                  },
        "stop transcoding after specified time is reached",
        "time_stop" },
    { "fs", OPT_TYPE_INT64, ((1 << 8) | (1 << 7)) | (1 << 12) | (1 << 2),
        { .off = 
# 1416 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1416 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1416 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1416 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                limit_filesize
# 1416 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1416 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "set the limit file size in bytes", "limit_size" },
    { "ss", OPT_TYPE_TIME, ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 12),
        { .off = 
# 1419 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1419 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1419 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1419 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                start_time
# 1419 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1419 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                   },
        "start transcoding at specified time", "time_off" },
    { "sseof", OPT_TYPE_TIME, ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 2),
        { .off = 
# 1422 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1422 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1422 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1422 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                start_time_eof
# 1422 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1422 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "set the start time offset relative to EOF", "time_off" },
    { "seek_timestamp", OPT_TYPE_INT, ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 2),
        { .off = 
# 1425 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1425 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1425 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1425 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                seek_timestamp
# 1425 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1425 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "enable/disable seeking by timestamp with -ss" },
    { "accurate_seek", OPT_TYPE_BOOL, ((1 << 8) | (1 << 7)) | (1 << 2) | (1 << 11),
        { .off = 
# 1428 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1428 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1428 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1428 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                accurate_seek
# 1428 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1428 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                      },
        "enable/disable accurate seeking with -ss" },
    { "isync", OPT_TYPE_INT, ((1 << 8) | (1 << 7)) | (1 << 2) | (1 << 11),
        { .off = 
# 1431 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1431 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1431 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1431 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                input_sync_ref
# 1431 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1431 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "Indicate the input index for sync reference", "sync ref" },
    { "itsoffset", OPT_TYPE_TIME, ((1 << 8) | (1 << 7)) | (1 << 2) | (1 << 11),
        { .off = 
# 1434 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1434 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1434 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1434 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                input_ts_offset
# 1434 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1434 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                        },
        "set the input ts offset", "time_off" },
    { "itsscale", OPT_TYPE_DOUBLE, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 11),
        { .off = 
# 1437 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1437 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1437 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1437 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                ts_scale
# 1437 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1437 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                 },
        "set the input ts scale", "scale" },
    { "timestamp", OPT_TYPE_FUNC, (1 << 0) | (1 << 7) | (1 << 2) | (1 << 12),
        { .func_arg = opt_recording_timestamp },
        "set the recording timestamp ('now' to set the current time)", "time" },
    { "metadata", OPT_TYPE_STRING, ((1 << 9) | ((1 << 8) | (1 << 7))) | (1 << 12),
        { .off = 
# 1443 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1443 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1443 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1443 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                metadata
# 1443 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1443 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                 },
        "add metadata", "key=value" },
    { "program", OPT_TYPE_STRING, ((1 << 9) | ((1 << 8) | (1 << 7))) | (1 << 2) | (1 << 12),
        { .off = 
# 1446 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1446 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1446 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1446 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                program
# 1446 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1446 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                },
        "add program with specified streams", "title=string:st=number..." },
    { "stream_group", OPT_TYPE_STRING, ((1 << 9) | ((1 << 8) | (1 << 7))) | (1 << 12) | (1 << 2),
        { .off = 
# 1449 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1449 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1449 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1449 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                stream_groups
# 1449 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1449 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                      },
        "add stream group with specified streams and group type-specific arguments", "id=number:st=number..." },
    { "dframes", OPT_TYPE_FUNC, (1 << 0) | (1 << 7) | (1 << 2) | (1 << 12) | (1 << 14),
        { .func_arg = opt_data_frames },
        "set the number of data frames to output", "number",
        .u1.name_canon = "frames" },
    { "benchmark", OPT_TYPE_BOOL, (1 << 2),
        { &do_benchmark },
        "add timings for benchmarking" },
    { "benchmark_all", OPT_TYPE_BOOL, (1 << 2),
        { &do_benchmark_all },
      "add timings for each task" },
    { "progress", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_progress },
      "write program-readable progress information", "url" },
    { "stdin", OPT_TYPE_BOOL, (1 << 2),
        { &stdin_interaction },
      "enable or disable interaction on standard input" },
    { "timelimit", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_timelimit },
        "set max runtime in seconds in CPU user time", "limit" },
    { "dump", OPT_TYPE_BOOL, (1 << 2),
        { &do_pkt_dump },
        "dump each input packet" },
    { "hex", OPT_TYPE_BOOL, (1 << 2),
        { &do_hex_dump },
        "when dumping packets, also dump the payload" },
    { "re", OPT_TYPE_BOOL, (1 << 2) | ((1 << 8) | (1 << 7)) | (1 << 11),
        { .off = 
# 1477 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1477 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1477 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1477 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                rate_emu
# 1477 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1477 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                 },
        "read input at native frame rate; equivalent to -readrate 1", "" },
    { "readrate", OPT_TYPE_FLOAT, ((1 << 8) | (1 << 7)) | (1 << 2) | (1 << 11),
        { .off = 
# 1480 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1480 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1480 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1480 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                readrate
# 1480 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1480 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                 },
        "read input at specified rate", "speed" },
    { "readrate_initial_burst", OPT_TYPE_DOUBLE, ((1 << 8) | (1 << 7)) | (1 << 2) | (1 << 11),
        { .off = 
# 1483 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1483 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1483 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1483 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                readrate_initial_burst
# 1483 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1483 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                               },
        "The initial amount of input to burst read before imposing any readrate", "seconds" },
    { "target", OPT_TYPE_FUNC, (1 << 0) | (1 << 7) | (1 << 2) | (1 << 12),
        { .func_arg = opt_target },
        "specify target file type (\"vcd\", \"svcd\", \"dvd\", \"dv\" or \"dv50\" "
        "with optional prefixes \"pal-\", \"ntsc-\" or \"film-\")", "type" },
    { "frame_drop_threshold", OPT_TYPE_FLOAT, (1 << 2),
        { &frame_drop_threshold },
        "frame drop threshold", "" },
    { "copyts", OPT_TYPE_BOOL, (1 << 2),
        { &copy_ts },
        "copy timestamps" },
    { "start_at_zero", OPT_TYPE_BOOL, (1 << 2),
        { &start_at_zero },
        "shift input timestamps to start at 0 when using copyts" },
    { "copytb", OPT_TYPE_INT, (1 << 2),
        { &copy_tb },
        "copy input stream time base when stream copying", "mode" },
    { "shortest", OPT_TYPE_BOOL, (1 << 2) | ((1 << 8) | (1 << 7)) | (1 << 12),
        { .off = 
# 1502 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1502 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1502 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1502 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                shortest
# 1502 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1502 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                 },
        "finish encoding within shortest input" },
    { "shortest_buf_duration", OPT_TYPE_FLOAT, (1 << 2) | ((1 << 8) | (1 << 7)) | (1 << 12),
        { .off = 
# 1505 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1505 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1505 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1505 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                shortest_buf_duration
# 1505 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1505 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                              },
        "maximum buffering duration (in seconds) for the -shortest option" },
    { "bitexact", OPT_TYPE_BOOL, (1 << 2) | ((1 << 8) | (1 << 7)) | (1 << 12) | (1 << 11),
        { .off = 
# 1508 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1508 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1508 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1508 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                bitexact
# 1508 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1508 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                 },
        "bitexact mode" },
    { "apad", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1511 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1511 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1511 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1511 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                apad
# 1511 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1511 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                             },
        "audio pad", "" },
    { "dts_delta_threshold", OPT_TYPE_FLOAT, (1 << 2),
        { &dts_delta_threshold },
        "timestamp discontinuity delta threshold", "threshold" },
    { "dts_error_threshold", OPT_TYPE_FLOAT, (1 << 2),
        { &dts_error_threshold },
        "timestamp error delta threshold", "threshold" },
    { "xerror", OPT_TYPE_BOOL, (1 << 2),
        { &exit_on_error },
        "exit on error", "error" },
    { "abort_on", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_abort_on },
        "abort on the specified condition flags", "flags" },
    { "copyinkf", OPT_TYPE_BOOL, (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1526 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1526 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1526 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1526 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                copy_initial_nonkeyframes
# 1526 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1526 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                  },
        "copy initial non-keyframes" },
    { "copypriorss", OPT_TYPE_INT, (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1529 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1529 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1529 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1529 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                copy_prior_start
# 1529 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1529 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                         },
        "copy or discard frames before start time" },
    { "frames", OPT_TYPE_INT64, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12) | (1 << 2) | (1 << 13),
        { .off = 
# 1532 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1532 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1532 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1532 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                max_frames
# 1532 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1532 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                   },
        "set the number of frames to output", "number",
        .u1.names_alt = alt_frames, },
    { "tag", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12) | (1 << 11) | (1 << 13),
        { .off = 
# 1536 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1536 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1536 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1536 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                codec_tags
# 1536 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1536 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                   },
        "force codec tag/fourcc", "fourcc/tag",
        .u1.names_alt = alt_tag, },
    { "q", OPT_TYPE_DOUBLE, (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12) | (1 << 14),
        { .off = 
# 1540 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1540 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1540 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1540 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                qscale
# 1540 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1540 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                               },
        "use fixed quality scale (VBR)", "q",
        .u1.name_canon = "qscale", },
    { "qscale", OPT_TYPE_FUNC, (1 << 0) | (1 << 2) | (1 << 7) | (1 << 12) | (1 << 13),
        { .func_arg = opt_qscale },
        "use fixed quality scale (VBR)", "q",
        .u1.names_alt = alt_qscale, },
    { "profile", OPT_TYPE_FUNC, (1 << 0) | (1 << 2) | (1 << 7) | (1 << 12),
        { .func_arg = opt_profile },
        "set profile", "profile" },
    { "filter", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12) | (1 << 13),
        { .off = 
# 1551 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1551 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1551 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1551 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                filters
# 1551 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1551 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                },
        "apply specified filters to audio/video", "filter_graph",
        .u1.names_alt = alt_filter, },
    { "filter_threads", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_filter_threads },
        "number of non-complex filter threads" },

    { "filter_script", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1559 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1559 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1559 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1559 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                filter_scripts
# 1559 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1559 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "deprecated, use -/filter", "filename" },

    { "reinit_filter", OPT_TYPE_INT, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 2),
        { .off = 
# 1563 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1563 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1563 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1563 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                reinit_filters
# 1563 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1563 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "reinit filtergraph on input parameter changes", "" },
    { "filter_complex", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_filter_complex },
        "create a complex filtergraph", "graph_description" },
    { "filter_complex_threads", OPT_TYPE_INT, (1 << 2),
        { &filter_complex_nbthreads },
        "number of threads for -filter_complex" },
    { "lavfi", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_filter_complex },
        "create a complex filtergraph", "graph_description" },

    { "filter_complex_script", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_filter_complex_script },
        "deprecated, use -/filter_complex instead", "filename" },

    { "auto_conversion_filters", OPT_TYPE_BOOL, (1 << 2),
        { &auto_conversion_filters },
        "enable automatic conversion filters globally" },
    { "stats", OPT_TYPE_BOOL, 0,
        { &print_stats },
        "print progress report during encoding", },
    { "stats_period", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_stats_period },
        "set the period at which ffmpeg updates stats and -progress output", "time" },
    { "attach", OPT_TYPE_FUNC, (1 << 0) | (1 << 7) | (1 << 2) | (1 << 12),
        { .func_arg = opt_attach },
        "add an attachment to the output file", "filename" },
    { "dump_attachment", OPT_TYPE_STRING, ((1 << 9) | ((1 << 8) | (1 << 7))) | (1 << 2) | (1 << 11),
        { .off = 
# 1592 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1592 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1592 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1592 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                dump_attachment
# 1592 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1592 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                        },
        "extract an attachment into a file", "filename" },
    { "stream_loop", OPT_TYPE_INT, (1 << 2) | (1 << 11) | ((1 << 8) | (1 << 7)),
        { .off = 
# 1595 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1595 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1595 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1595 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                loop
# 1595 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1595 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                             }, "set number of times input stream shall be looped", "loop count" },
    { "debug_ts", OPT_TYPE_BOOL, (1 << 2),
        { &debug_ts },
        "print timestamp debugging info" },
    { "max_error_rate", OPT_TYPE_FLOAT, (1 << 2),
        { &max_error_rate },
        "ratio of decoding errors (0.0: no errors, 1.0: 100% errors) above which ffmpeg returns an error instead of success.", "maximum error rate" },
    { "discard", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 2),
        { .off = 
# 1603 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1603 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1603 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1603 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                discard
# 1603 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1603 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                },
        "discard", "" },
    { "disposition", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12) | (1 << 2),
        { .off = 
# 1606 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1606 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1606 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1606 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                disposition
# 1606 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1606 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                    },
        "disposition", "" },
    { "thread_queue_size", OPT_TYPE_INT, ((1 << 8) | (1 << 7)) | (1 << 2) | (1 << 11) | (1 << 12),
        { .off = 
# 1609 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1609 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1609 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1609 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                thread_queue_size
# 1609 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1609 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                          },
        "set the maximum number of queued packets from the demuxer" },
    { "find_stream_info", OPT_TYPE_BOOL, (1 << 11) | (1 << 2) | ((1 << 8) | (1 << 7)),
        { .off = 
# 1612 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1612 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1612 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1612 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                find_stream_info
# 1612 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1612 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                         },
        "read and decode the streams to fill missing information with heuristics" },
    { "bits_per_raw_sample", OPT_TYPE_INT, (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1615 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1615 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1615 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1615 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                bits_per_raw_sample
# 1615 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1615 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                            },
        "set the number of bits per raw sample", "number" },

    { "stats_enc_pre", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1619 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1619 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1619 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1619 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                enc_stats_pre
# 1619 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1619 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                           },
        "write encoding stats before encoding" },
    { "stats_enc_post", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1622 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1622 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1622 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1622 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                enc_stats_post
# 1622 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1622 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                           },
        "write encoding stats after encoding" },
    { "stats_mux_pre", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1625 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1625 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1625 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1625 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                mux_stats
# 1625 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1625 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                           },
        "write packets stats before muxing" },
    { "stats_enc_pre_fmt", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1628 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1628 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1628 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1628 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                enc_stats_pre_fmt
# 1628 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1628 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                           },
        "format of the stats written with -stats_enc_pre" },
    { "stats_enc_post_fmt", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1631 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1631 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1631 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1631 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                enc_stats_post_fmt
# 1631 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1631 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                           },
        "format of the stats written with -stats_enc_post" },
    { "stats_mux_pre_fmt", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1634 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1634 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1634 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1634 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                mux_stats_fmt
# 1634 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1634 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                           },
        "format of the stats written with -stats_mux_pre" },


    { "vframes", OPT_TYPE_FUNC, (1 << 3) | (1 << 0) | (1 << 7) | (1 << 12) | (1 << 2) | (1 << 14),
        { .func_arg = opt_video_frames },
        "set the number of video frames to output", "number",
        .u1.name_canon = "frames", },
    { "r", OPT_TYPE_STRING, (1 << 3) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12),
        { .off = 
# 1643 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1643 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1643 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1643 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                frame_rates
# 1643 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1643 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                    },
        "override input framerate/convert to given output framerate (Hz value, fraction or abbreviation)", "rate" },
    { "fpsmax", OPT_TYPE_STRING, (1 << 3) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12) | (1 << 2),
        { .off = 
# 1646 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1646 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1646 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1646 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                max_frame_rates
# 1646 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1646 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                        },
        "set max frame rate (Hz value, fraction or abbreviation)", "rate" },
    { "s", OPT_TYPE_STRING, (1 << 3) | (1 << 5) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12),
        { .off = 
# 1649 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1649 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1649 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1649 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                frame_sizes
# 1649 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1649 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                    },
        "set frame size (WxH or abbreviation)", "size" },
    { "aspect", OPT_TYPE_STRING, (1 << 3) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1652 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1652 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1652 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1652 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                frame_aspect_ratios
# 1652 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1652 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                            },
        "set aspect ratio (4:3, 16:9 or 1.3333, 1.7777)", "aspect" },
    { "pix_fmt", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12),
        { .off = 
# 1655 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1655 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1655 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1655 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                frame_pix_fmts
# 1655 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1655 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "set pixel format", "format" },
    { "display_rotation", OPT_TYPE_DOUBLE, (1 << 3) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 2),
        { .off = 
# 1658 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1658 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1658 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1658 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                display_rotations
# 1658 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1658 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                          },
        "set pure counter-clockwise rotation in degrees for stream(s)",
        "angle" },
    { "display_hflip", OPT_TYPE_BOOL, (1 << 3) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 2),
        { .off = 
# 1662 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1662 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1662 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1662 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                display_hflips
# 1662 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1662 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "set display horizontal flip for stream(s) "
        "(overrides any display rotation if it is not set)"},
    { "display_vflip", OPT_TYPE_BOOL, (1 << 3) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 2),
        { .off = 
# 1666 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1666 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1666 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1666 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                display_vflips
# 1666 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1666 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "set display vertical flip for stream(s) "
        "(overrides any display rotation if it is not set)"},
    { "vn", OPT_TYPE_BOOL, (1 << 3) | ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 12),
        { .off = 
# 1670 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1670 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1670 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1670 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                video_disable
# 1670 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1670 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                      },
        "disable video" },
    { "rc_override", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1673 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1673 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1673 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1673 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                rc_overrides
# 1673 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1673 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                     },
        "rate control override for specific intervals", "override" },
    { "vcodec", OPT_TYPE_FUNC, (1 << 3) | (1 << 0) | (1 << 7) | (1 << 11) | (1 << 12) | (1 << 14),
        { .func_arg = opt_video_codec },
        "alias for -c:v (select encoder/decoder for video streams)", "codec",
        .u1.name_canon = "codec", },
    { "timecode", OPT_TYPE_FUNC, (1 << 3) | (1 << 0) | (1 << 7) | (1 << 12) | (1 << 2),
        { .func_arg = opt_timecode },
        "set initial TimeCode value.", "hh:mm:ss[:;.]ff" },
    { "pass", OPT_TYPE_INT, (1 << 3) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12) | (1 << 2),
        { .off = 
# 1683 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1683 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1683 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1683 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                pass
# 1683 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1683 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                             },
        "select the pass number (1 to 3)", "n" },
    { "passlogfile", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1686 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1686 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1686 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1686 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                passlogfiles
# 1686 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1686 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                     },
        "select two pass log file name prefix", "prefix" },
    { "vstats", OPT_TYPE_FUNC, (1 << 3) | (1 << 2),
        { .func_arg = opt_vstats },
        "dump video coding statistics to file" },
    { "vstats_file", OPT_TYPE_FUNC, (1 << 3) | (1 << 0) | (1 << 2),
        { .func_arg = opt_vstats_file },
        "dump video coding statistics to file", "file" },
    { "vstats_version", OPT_TYPE_INT, (1 << 3) | (1 << 2),
        { &vstats_version },
        "Version of the vstats format to use."},
    { "vf", OPT_TYPE_FUNC, (1 << 3) | (1 << 0) | (1 << 7) | (1 << 12) | (1 << 14),
        { .func_arg = opt_video_filters },
        "alias for -filter:v (apply filters to video streams)", "filter_graph",
        .u1.name_canon = "filter", },
    { "intra_matrix", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1702 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1702 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1702 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1702 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                intra_matrices
# 1702 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1702 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "specify intra matrix coeffs", "matrix" },
    { "inter_matrix", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1705 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1705 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1705 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1705 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                inter_matrices
# 1705 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1705 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "specify inter matrix coeffs", "matrix" },
    { "chroma_intra_matrix", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1708 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1708 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1708 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1708 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                chroma_intra_matrices
# 1708 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1708 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                              },
        "specify intra matrix coeffs", "matrix" },
    { "vtag", OPT_TYPE_FUNC, (1 << 3) | (1 << 0) | (1 << 2) | (1 << 7) | (1 << 11) | (1 << 12) | (1 << 14),
        { .func_arg = opt_old2new },
        "force video tag/fourcc", "fourcc/tag",
        .u1.name_canon = "tag", },
    { "fps_mode", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1715 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1715 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1715 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1715 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                fps_mode
# 1715 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1715 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                 },
        "set framerate mode for matching video streams; overrides vsync" },
    { "force_fps", OPT_TYPE_BOOL, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1718 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1718 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1718 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1718 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                force_fps
# 1718 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1718 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                  },
        "force the selected framerate, disable the best supported framerate selection" },
    { "streamid", OPT_TYPE_FUNC, (1 << 3) | (1 << 0) | (1 << 2) | (1 << 7) | (1 << 12),
        { .func_arg = opt_streamid },
        "set the value of an outfile streamid", "streamIndex:value" },
    { "force_key_frames", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1724 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1724 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1724 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1724 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                forced_key_frames
# 1724 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1724 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                          },
        "force key frames at specified timestamps", "timestamps" },
    { "b", OPT_TYPE_FUNC, (1 << 3) | (1 << 0) | (1 << 7) | (1 << 12),
        { .func_arg = opt_bitrate },
        "video bitrate (please use -b:v)", "bitrate" },
    { "hwaccel", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11),
        { .off = 
# 1730 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1730 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1730 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1730 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                hwaccels
# 1730 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1730 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                 },
        "use HW accelerated decoding", "hwaccel name" },
    { "hwaccel_device", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11),
        { .off = 
# 1733 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1733 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1733 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1733 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                hwaccel_devices
# 1733 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1733 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                        },
        "select a device for HW acceleration", "devicename" },
    { "hwaccel_output_format", OPT_TYPE_STRING, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11),
        { .off = 
# 1736 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1736 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1736 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1736 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                hwaccel_output_formats
# 1736 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1736 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                               },
        "select output format used with HW accelerated decoding", "format" },
    { "hwaccels", OPT_TYPE_FUNC, (1 << 1) | (1 << 2),
        { .func_arg = show_hwaccels },
        "show available HW acceleration methods" },
    { "autorotate", OPT_TYPE_BOOL, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 11),
        { .off = 
# 1742 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1742 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1742 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1742 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                autorotate
# 1742 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1742 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                   },
        "automatically insert correct rotate filters" },
    { "autoscale", OPT_TYPE_BOOL, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1745 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1745 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1745 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1745 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                autoscale
# 1745 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1745 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                  },
        "automatically insert a scale filter at the end of the filter graph" },
    { "fix_sub_duration_heartbeat", OPT_TYPE_BOOL, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1748 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1748 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1748 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1748 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                fix_sub_duration_heartbeat
# 1748 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1748 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                   },
        "set this video output stream to be a heartbeat stream for "
        "fix_sub_duration, according to which subtitles should be split at "
        "random access points" },


    { "aframes", OPT_TYPE_FUNC, (1 << 4) | (1 << 0) | (1 << 7) | (1 << 12) | (1 << 2) | (1 << 14),
        { .func_arg = opt_audio_frames },
        "set the number of audio frames to output", "number",
        .u1.name_canon = "frames", },
    { "aq", OPT_TYPE_FUNC, (1 << 4) | (1 << 0) | (1 << 7) | (1 << 12),
        { .func_arg = opt_audio_qscale },
        "set audio quality (codec-specific)", "quality", },
    { "ar", OPT_TYPE_INT, (1 << 4) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12),
        { .off = 
# 1762 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1762 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1762 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1762 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                audio_sample_rate
# 1762 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1762 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                          },
        "set audio sampling rate (in Hz)", "rate" },
    { "ac", OPT_TYPE_INT, (1 << 4) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12),
        { .off = 
# 1765 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1765 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1765 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1765 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                audio_channels
# 1765 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1765 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "set number of audio channels", "channels" },
    { "an", OPT_TYPE_BOOL, (1 << 4) | ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 12),
        { .off = 
# 1768 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1768 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1768 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1768 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                audio_disable
# 1768 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1768 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                      },
        "disable audio" },
    { "acodec", OPT_TYPE_FUNC, (1 << 4) | (1 << 0) | (1 << 7) | (1 << 11) | (1 << 12) | (1 << 14),
        { .func_arg = opt_audio_codec },
        "alias for -c:a (select encoder/decoder for audio streams)", "codec",
        .u1.name_canon = "codec", },
    { "ab", OPT_TYPE_FUNC, (1 << 4) | (1 << 0) | (1 << 7) | (1 << 12),
        { .func_arg = opt_bitrate },
        "alias for -b:a (select bitrate for audio streams)", "bitrate" },
    { "atag", OPT_TYPE_FUNC, (1 << 4) | (1 << 0) | (1 << 2) | (1 << 7) | (1 << 12) | (1 << 14),
        { .func_arg = opt_old2new },
        "force audio tag/fourcc", "fourcc/tag",
        .u1.name_canon = "tag", },
    { "sample_fmt", OPT_TYPE_STRING, (1 << 4) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12),
        { .off = 
# 1782 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1782 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1782 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1782 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                sample_fmts
# 1782 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1782 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                    },
        "set sample format", "format" },
    { "channel_layout", OPT_TYPE_STRING, (1 << 4) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12) | (1 << 13),
        { .off = 
# 1785 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1785 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1785 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1785 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                audio_ch_layouts
# 1785 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1785 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                         },
        "set channel layout", "layout",
        .u1.names_alt = alt_channel_layout, },
    { "ch_layout", OPT_TYPE_STRING, (1 << 4) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12) | (1 << 14),
        { .off = 
# 1789 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1789 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1789 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1789 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                audio_ch_layouts
# 1789 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1789 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                         },
        "set channel layout", "layout",
        .u1.name_canon = "channel_layout", },
    { "af", OPT_TYPE_FUNC, (1 << 4) | (1 << 0) | (1 << 7) | (1 << 12) | (1 << 14),
        { .func_arg = opt_audio_filters },
        "alias for -filter:a (apply filters to audio streams)", "filter_graph",
        .u1.name_canon = "filter", },
    { "guess_layout_max", OPT_TYPE_INT, (1 << 4) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 11),
        { .off = 
# 1797 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1797 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1797 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1797 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                guess_layout_max
# 1797 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1797 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                         },
      "set the maximum number of channels to try to guess the channel layout" },


    { "sn", OPT_TYPE_BOOL, (1 << 5) | ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 12),
        { .off = 
# 1802 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1802 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1802 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1802 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                subtitle_disable
# 1802 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1802 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                         },
        "disable subtitle" },
    { "scodec", OPT_TYPE_FUNC, (1 << 5) | (1 << 0) | (1 << 7) | (1 << 11) | (1 << 12) | (1 << 14),
        { .func_arg = opt_subtitle_codec },
        "alias for -c:s (select encoder/decoder for subtitle streams)", "codec",
        .u1.name_canon = "codec", },
    { "stag", OPT_TYPE_FUNC, (1 << 5) | (1 << 0) | (1 << 2) | (1 << 7) | (1 << 12) | (1 << 14),
        { .func_arg = opt_old2new }
        , "force subtitle tag/fourcc", "fourcc/tag",
        .u1.name_canon = "tag" },
    { "fix_sub_duration", OPT_TYPE_BOOL, (1 << 2) | (1 << 5) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11),
        { .off = 
# 1813 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1813 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1813 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1813 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                fix_sub_duration
# 1813 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1813 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                         },
        "fix subtitles duration" },
    { "canvas_size", OPT_TYPE_STRING, (1 << 5) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 2),
        { .off = 
# 1816 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1816 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1816 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1816 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                canvas_sizes
# 1816 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1816 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                     },
        "set canvas size (WxH or abbreviation)", "size" },


    { "muxdelay", OPT_TYPE_FLOAT, (1 << 2) | ((1 << 8) | (1 << 7)) | (1 << 12),
        { .off = 
# 1821 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1821 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1821 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1821 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                mux_max_delay
# 1821 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1821 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                      },
        "set the maximum demux-decode delay", "seconds" },
    { "muxpreload", OPT_TYPE_FLOAT, (1 << 2) | ((1 << 8) | (1 << 7)) | (1 << 12),
        { .off = 
# 1824 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1824 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1824 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1824 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                mux_preload
# 1824 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1824 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                    },
        "set the initial demux-decode delay", "seconds" },
    { "sdp_file", OPT_TYPE_FUNC, (1 << 0) | (1 << 2) | (1 << 12),
        { .func_arg = opt_sdp_file },
        "specify a file in which to print sdp information", "file" },

    { "time_base", OPT_TYPE_STRING, (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1831 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1831 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1831 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1831 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                time_bases
# 1831 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1831 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                   },
        "set the desired time base hint for output stream (1:24, 1:48000 or 0.04166, 2.0833e-5)", "ratio" },
    { "enc_time_base", OPT_TYPE_STRING, (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 12),
        { .off = 
# 1834 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1834 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1834 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1834 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                enc_time_bases
# 1834 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1834 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                       },
        "set the desired time base for the encoder (1:24, 1:48000 or 0.04166, 2.0833e-5). "
        "two special values are defined - "
        "0 = use frame rate (video) or sample rate (audio),"
        "-1 = match source time base", "ratio" },

    { "bsf", OPT_TYPE_STRING, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12) | (1 << 11),
        { .off = 
# 1841 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1841 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1841 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1841 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                bitstream_filters
# 1841 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1841 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                          },
        "A comma-separated list of bitstream filters", "bitstream_filters", },

    { "apre", OPT_TYPE_FUNC, (1 << 0) | (1 << 4) | (1 << 2)| (1 << 7) | (1 << 12) | (1 << 14),
        { .func_arg = opt_preset },
        "set the audio options to the indicated preset", "preset",
        .u1.name_canon = "pre", },
    { "vpre", OPT_TYPE_FUNC, (1 << 3) | (1 << 0) | (1 << 2)| (1 << 7) | (1 << 12) | (1 << 14),
        { .func_arg = opt_preset },
        "set the video options to the indicated preset", "preset",
        .u1.name_canon = "pre", },
    { "spre", OPT_TYPE_FUNC, (1 << 0) | (1 << 5) | (1 << 2)| (1 << 7) | (1 << 12) | (1 << 14),
        { .func_arg = opt_preset },
        "set the subtitle options to the indicated preset", "preset",
        .u1.name_canon = "pre", },
    { "fpre", OPT_TYPE_FUNC, (1 << 0) | (1 << 2)| (1 << 7) | (1 << 12) | (1 << 14),
        { .func_arg = opt_preset },
        "set options from indicated preset file", "filename",
        .u1.name_canon = "pre", },

    { "max_muxing_queue_size", OPT_TYPE_INT, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1862 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1862 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1862 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1862 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                max_muxing_queue_size
# 1862 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1862 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                              },
        "maximum number of packets that can be buffered while waiting for all streams to initialize", "packets" },
    { "muxing_queue_data_threshold", OPT_TYPE_INT, ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 2) | (1 << 12),
        { .off = 
# 1865 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1865 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1865 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1865 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                muxing_queue_data_threshold
# 1865 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1865 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                                    },
        "set the threshold after which max_muxing_queue_size is taken into account", "bytes" },


    { "dcodec", OPT_TYPE_FUNC, (1 << 0) | (1 << 6) | (1 << 7) | (1 << 2) | (1 << 11) | (1 << 12) | (1 << 14),
        { .func_arg = opt_data_codec },
        "alias for -c:d (select encoder/decoder for data streams)", "codec",
        .u1.name_canon = "codec", },
    { "dn", OPT_TYPE_BOOL, (1 << 6) | ((1 << 8) | (1 << 7)) | (1 << 11) | (1 << 12),
        { .off = 
# 1874 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1874 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1874 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1874 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                data_disable
# 1874 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1874 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                     }, "disable data" },
# 1888 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
    { "init_hw_device", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_init_hw_device },
        "initialise hardware device", "args" },
    { "filter_hw_device", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_filter_hw_device },
        "set hardware device used when filtering", "device" },



    { "adrift_threshold", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_adrift_threshold },
        "deprecated, does nothing", "threshold" },


    { "top", OPT_TYPE_INT, (1 << 3) | (1 << 2) | ((1 << 10) | ((1 << 9) | ((1 << 8) | (1 << 7)))) | (1 << 11) | (1 << 12),
        { .off = 
# 1903 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                __builtin_offsetof (
# 1903 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                OptionsContext
# 1903 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                , 
# 1903 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                top_field_first
# 1903 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
                ) 
# 1903 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
                                        },
        "deprecated, use the setfield video filter", "" },


    { "qphist", OPT_TYPE_FUNC, (1 << 3) | (1 << 2),
        { .func_arg = opt_qphist },
        "deprecated, does nothing" },


    { "vsync", OPT_TYPE_FUNC, (1 << 0) | (1 << 2),
        { .func_arg = opt_vsync },
        "set video sync method globally; deprecated, use -fps_mode", "" },


    { 
# 1917 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c" 3 4
     ((void *)0)
# 1917 "/workspaces/typed-ffmpeg/ffmpeg/fftools/ffmpeg_opt.c"
         , },
};
