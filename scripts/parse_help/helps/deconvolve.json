{
  "description": "Deconvolve first video stream with second video stream.",
  "input_types": [
    {
      "name": "main",
      "type": "video"
    },
    {
      "name": "impulse",
      "type": "video"
    }
  ],
  "is_dynamic_inputs": false,
  "is_dynamic_outputs": false,
  "is_slice_threading_supported": true,
  "is_support_framesync": true,
  "is_support_timeline": true,
  "name": "deconvolve",
  "options": [
    {
      "alias": [
        "planes"
      ],
      "choices": [],
      "default": 7,
      "description": "set planes to deconvolve (from 0 to 15) (default 7)",
      "flags": "..FV.......",
      "max": "15",
      "min": "0",
      "name": "planes",
      "typing": "int"
    },
    {
      "alias": [
        "impulse"
      ],
      "choices": [
        {
          "flags": "..FV.......",
          "help": "process only first impulse, ignore rest",
          "name": "first",
          "value": "0"
        },
        {
          "flags": "..FV.......",
          "help": "process all impulses",
          "name": "all",
          "value": "1"
        }
      ],
      "default": "all",
      "description": "when to process impulses (from 0 to 1) (default all)",
      "flags": "..FV.......",
      "max": "1",
      "min": "0",
      "name": "impulse",
      "typing": "int"
    },
    {
      "alias": [
        "noise"
      ],
      "choices": [],
      "default": 1e-07,
      "description": "set noise (from 0 to 1) (default 1e-07)",
      "flags": "..FV.......",
      "max": "1",
      "min": "0",
      "name": "noise",
      "typing": "float"
    },
    {
      "alias": [
        "eof_action"
      ],
      "choices": [
        {
          "flags": "..FV.......",
          "help": "Repeat the previous frame.",
          "name": "repeat",
          "value": "0"
        },
        {
          "flags": "..FV.......",
          "help": "End both streams.",
          "name": "endall",
          "value": "1"
        },
        {
          "flags": "..FV.......",
          "help": "Pass through the main input.",
          "name": "pass",
          "value": "2"
        }
      ],
      "default": "repeat",
      "description": "Action to take when encountering EOF from secondary input  (from 0 to 2) (default repeat)",
      "flags": "..FV.......",
      "max": "2",
      "min": "0",
      "name": "eof_action",
      "typing": "int"
    },
    {
      "alias": [
        "shortest"
      ],
      "choices": [],
      "default": false,
      "description": "force termination when the shortest input terminates (default false)",
      "flags": "..FV.......",
      "max": null,
      "min": null,
      "name": "shortest",
      "typing": "boolean"
    },
    {
      "alias": [
        "repeatlast"
      ],
      "choices": [],
      "default": true,
      "description": "extend last frame of secondary streams beyond EOF (default true)",
      "flags": "..FV.......",
      "max": null,
      "min": null,
      "name": "repeatlast",
      "typing": "boolean"
    },
    {
      "alias": [
        "ts_sync_mode"
      ],
      "choices": [
        {
          "flags": "..FV.......",
          "help": "Frame from secondary input with the nearest lower or equal timestamp to the primary input frame",
          "name": "default",
          "value": "0"
        },
        {
          "flags": "..FV.......",
          "help": "Frame from secondary input with the absolute nearest timestamp to the primary input frame",
          "name": "nearest",
          "value": "1"
        }
      ],
      "default": "default",
      "description": "How strictly to sync streams based on secondary input timestamps (from 0 to 1) (default default)",
      "flags": "..FV.......",
      "max": "1",
      "min": "0",
      "name": "ts_sync_mode",
      "typing": "int"
    }
  ],
  "output_types": [
    {
      "name": "default",
      "type": "video"
    }
  ]
}
