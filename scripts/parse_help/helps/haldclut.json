{
  "description": "Adjust colors using a Hald CLUT.",
  "input_types": [
    {
      "name": "main",
      "type": "video"
    },
    {
      "name": "clut",
      "type": "video"
    }
  ],
  "is_dynamic_inputs": false,
  "is_dynamic_outputs": false,
  "is_slice_threading_supported": true,
  "is_support_framesync": true,
  "is_support_timeline": true,
  "name": "haldclut",
  "options": [
    {
      "alias": [
        "clut"
      ],
      "choices": [
        {
          "flags": "..FV.....T.",
          "help": "process only first CLUT, ignore rest",
          "name": "first",
          "value": "0"
        },
        {
          "flags": "..FV.....T.",
          "help": "process all CLUTs",
          "name": "all",
          "value": "1"
        }
      ],
      "default": "all",
      "description": "when to process CLUT (from 0 to 1) (default all)",
      "flags": "..FV.....T.",
      "max": "1",
      "min": "0",
      "name": "clut",
      "typing": "int"
    },
    {
      "alias": [
        "interp"
      ],
      "choices": [
        {
          "flags": "..FV.....T.",
          "help": "use values from the nearest defined points",
          "name": "nearest",
          "value": "0"
        },
        {
          "flags": "..FV.....T.",
          "help": "interpolate values using the 8 points defining a cube",
          "name": "trilinear",
          "value": "1"
        },
        {
          "flags": "..FV.....T.",
          "help": "interpolate values using a tetrahedron",
          "name": "tetrahedral",
          "value": "2"
        },
        {
          "flags": "..FV.....T.",
          "help": "interpolate values using a pyramid",
          "name": "pyramid",
          "value": "3"
        },
        {
          "flags": "..FV.....T.",
          "help": "interpolate values using a prism",
          "name": "prism",
          "value": "4"
        }
      ],
      "default": "tetrahedral",
      "description": "select interpolation mode (from 0 to 4) (default tetrahedral)",
      "flags": "..FV.....T.",
      "max": "4",
      "min": "0",
      "name": "interp",
      "typing": "int"
    },
    {
      "alias": [
        "eof_action"
      ],
      "choices": [
        {
          "flags": "..FV.......",
          "help": "Repeat the previous frame.",
          "name": "repeat",
          "value": "0"
        },
        {
          "flags": "..FV.......",
          "help": "End both streams.",
          "name": "endall",
          "value": "1"
        },
        {
          "flags": "..FV.......",
          "help": "Pass through the main input.",
          "name": "pass",
          "value": "2"
        }
      ],
      "default": "repeat",
      "description": "Action to take when encountering EOF from secondary input  (from 0 to 2) (default repeat)",
      "flags": "..FV.......",
      "max": "2",
      "min": "0",
      "name": "eof_action",
      "typing": "int"
    },
    {
      "alias": [
        "shortest"
      ],
      "choices": [],
      "default": false,
      "description": "force termination when the shortest input terminates (default false)",
      "flags": "..FV.......",
      "max": null,
      "min": null,
      "name": "shortest",
      "typing": "boolean"
    },
    {
      "alias": [
        "repeatlast"
      ],
      "choices": [],
      "default": true,
      "description": "extend last frame of secondary streams beyond EOF (default true)",
      "flags": "..FV.......",
      "max": null,
      "min": null,
      "name": "repeatlast",
      "typing": "boolean"
    },
    {
      "alias": [
        "ts_sync_mode"
      ],
      "choices": [
        {
          "flags": "..FV.......",
          "help": "Frame from secondary input with the nearest lower or equal timestamp to the primary input frame",
          "name": "default",
          "value": "0"
        },
        {
          "flags": "..FV.......",
          "help": "Frame from secondary input with the absolute nearest timestamp to the primary input frame",
          "name": "nearest",
          "value": "1"
        }
      ],
      "default": "default",
      "description": "How strictly to sync streams based on secondary input timestamps (from 0 to 1) (default default)",
      "flags": "..FV.......",
      "max": "1",
      "min": "0",
      "name": "ts_sync_mode",
      "typing": "int"
    }
  ],
  "output_types": [
    {
      "name": "default",
      "type": "video"
    }
  ]
}
