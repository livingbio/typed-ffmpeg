description: "18.34 zmq, azmq\nReceive commands sent through a libzmq client, and\
  \ forward them to\nfilters in the filtergraph.\n\nzmq and azmq work as a pass-through\
  \ filters. zmq\nmust be inserted between two video filters, azmq between two\naudio\
  \ filters. Both are capable to send messages to any filter type.\n\nTo enable these\
  \ filters you need to install the libzmq library and\nheaders and configure FFmpeg\
  \ with --enable-libzmq.\n\nFor more information about libzmq see:\nhttp://www.zeromq.org/\n\
  \nThe zmq and azmq filters work as a libzmq server, which\nreceives messages sent\
  \ through a network interface defined by the\nbind_address (or the abbreviation\
  \ \"b\") option.\nDefault value of this option is tcp://localhost:5555. You may\n\
  want to alter this value to your needs, but do not forget to escape any\n\u2019\
  :\u2019 signs (see filtergraph escaping).\n\nThe received message must be in the\
  \ form:\n\nTARGET COMMAND [ARG]\n\nTARGET specifies the target of the command, usually\
  \ the name of\nthe filter class or a specific filter instance name. The default\n\
  filter instance name uses the pattern \u2018Parsed_<filter_name>_<index>\u2019,\n\
  but you can override this by using the \u2018filter_name@id\u2019 syntax\n(see Filtergraph\
  \ syntax).\n\nCOMMAND specifies the name of the command for the target filter.\n\
  \nARG is optional and specifies the optional argument list for the\ngiven COMMAND.\n\
  \nUpon reception, the message is processed and the corresponding command\nis injected\
  \ into the filtergraph. Depending on the result, the filter\nwill send a reply to\
  \ the client, adopting the format:\n\nERROR_CODE ERROR_REASON\nMESSAGE\n\nMESSAGE\
  \ is optional."
name: azmq
parameters: []
ref: https://ffmpeg.org/ffmpeg-filters.html#zmq_002c
source: '<h3 class="section"><a href="#toc-zmq_002c-azmq">18.34 zmq, azmq</a></h3>


  <p>Receive commands sent through a libzmq client, and forward them to

  filters in the filtergraph.

  </p>

  <p><code>zmq</code> and <code>azmq</code> work as a pass-through filters. <code>zmq</code>

  must be inserted between two video filters, <code>azmq</code> between two

  audio filters. Both are capable to send messages to any filter type.

  </p>

  <p>To enable these filters you need to install the libzmq library and

  headers and configure FFmpeg with <code>--enable-libzmq</code>.

  </p>

  <p>For more information about libzmq see:

  <a href="http://www.zeromq.org/">http://www.zeromq.org/</a>

  </p>

  <p>The <code>zmq</code> and <code>azmq</code> filters work as a libzmq server, which

  receives messages sent through a network interface defined by the

  <samp>bind_address</samp> (or the abbreviation &quot;<samp>b</samp>&quot;) option.

  Default value of this option is <samp>tcp://localhost:5555</samp>. You may

  want to alter this value to your needs, but do not forget to escape any

  &rsquo;:&rsquo; signs (see <a href="#filtergraph-escaping">filtergraph escaping</a>).

  </p>

  <p>The received message must be in the form:

  </p><div class="example">

  <pre class="example"><var>TARGET</var> <var>COMMAND</var> [<var>ARG</var>]

  </pre></div>


  <p><var>TARGET</var> specifies the target of the command, usually the name of

  the filter class or a specific filter instance name. The default

  filter instance name uses the pattern &lsquo;<samp>Parsed_&lt;filter_name&gt;_&lt;index&gt;</samp>&rsquo;,

  but you can override this by using the &lsquo;<samp>filter_name@id</samp>&rsquo;
  syntax

  (see <a href="#Filtergraph-syntax">Filtergraph syntax</a>).

  </p>

  <p><var>COMMAND</var> specifies the name of the command for the target filter.

  </p>

  <p><var>ARG</var> is optional and specifies the optional argument list for the

  given <var>COMMAND</var>.

  </p>

  <p>Upon reception, the message is processed and the corresponding command

  is injected into the filtergraph. Depending on the result, the filter

  will send a reply to the client, adopting the format:

  </p><div class="example">

  <pre class="example"><var>ERROR_CODE</var> <var>ERROR_REASON</var>

  <var>MESSAGE</var>

  </pre></div>


  <p><var>MESSAGE</var> is optional.

  </p>

  '
