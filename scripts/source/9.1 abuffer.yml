description: '9.1 abuffer

  Buffer audio frames, and make them available to the filter chain.


  This source is mainly intended for a programmatic use, in particular

  through the interface defined in libavfilter/buffersrc.h.


  It accepts the following parameters:'
name: abuffer
parameters:
- description: '<dd><p>The timebase which will be used for timestamps of submitted
    frames. It must be

    either a floating-point number or in <var>numerator</var>/<var>denominator</var>
    form.

    </p>

    </dd>'
  name: time_base
- description: '<dd><p>The sample rate of the incoming audio buffers.

    </p>

    </dd>'
  name: sample_rate
- description: '<dd><p>The sample format of the incoming audio buffers.

    Either a sample format name or its corresponding integer representation from

    the enum AVSampleFormat in <samp>libavutil/samplefmt.h</samp>

    </p>

    </dd>'
  name: sample_fmt
- description: '<dd><p>The channel layout of the incoming audio buffers.

    Either a channel layout name from channel_layout_map in

    <samp>libavutil/channel_layout.c</samp> or its corresponding integer representation

    from the AV_CH_LAYOUT_* macros in <samp>libavutil/channel_layout.h</samp>

    </p>

    </dd>'
  name: channel_layout
- description: '<dd><p>The number of channels of the incoming audio buffers.

    If both <var>channels</var> and <var>channel_layout</var> are specified, then
    they

    must be consistent.

    </p>

    </dd>'
  name: channels
ref: https://ffmpeg.org/ffmpeg-filters.html#abuffer
source: '<h3 class="section"><a href="#toc-abuffer">9.1 abuffer</a></h3>


  <p>Buffer audio frames, and make them available to the filter chain.

  </p>

  <p>This source is mainly intended for a programmatic use, in particular

  through the interface defined in <samp>libavfilter/buffersrc.h</samp>.

  </p>

  <p>It accepts the following parameters:

  </p><dl compact="compact">

  <dt><samp>time_base</samp></dt>

  <dd><p>The timebase which will be used for timestamps of submitted frames. It must
  be

  either a floating-point number or in <var>numerator</var>/<var>denominator</var>
  form.

  </p>

  </dd>

  <dt><samp>sample_rate</samp></dt>

  <dd><p>The sample rate of the incoming audio buffers.

  </p>

  </dd>

  <dt><samp>sample_fmt</samp></dt>

  <dd><p>The sample format of the incoming audio buffers.

  Either a sample format name or its corresponding integer representation from

  the enum AVSampleFormat in <samp>libavutil/samplefmt.h</samp>

  </p>

  </dd>

  <dt><samp>channel_layout</samp></dt>

  <dd><p>The channel layout of the incoming audio buffers.

  Either a channel layout name from channel_layout_map in

  <samp>libavutil/channel_layout.c</samp> or its corresponding integer representation

  from the AV_CH_LAYOUT_* macros in <samp>libavutil/channel_layout.h</samp>

  </p>

  </dd>

  <dt><samp>channels</samp></dt>

  <dd><p>The number of channels of the incoming audio buffers.

  If both <var>channels</var> and <var>channel_layout</var> are specified, then they

  must be consistent.

  </p>

  </dd>

  </dl>


  '
