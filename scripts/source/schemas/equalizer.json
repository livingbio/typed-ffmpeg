{
  "description": "8.87 equalizer\nApply a two-pole peaking equalisation (EQ) filter. With this\nfilter, the signal-level at and around a selected frequency can\nbe increased or decreased, whilst (unlike bandpass and bandreject\nfilters) that at all other frequencies is unchanged.\n\nIn order to produce complex equalisation curves, this filter can\nbe given several times, each with a different central frequency.\n\nThe filter accepts the following options:",
  "json_schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": {
      "block_size": {
        "description": "Set block size used for reverse IIR processing.",
        "type": "number"
      },
      "channels": {
        "description": "Specify which channels to filter, by default all available are filtered.",
        "type": "string"
      },
      "frequency": {
        "description": "Set the filter's central frequency in Hz.",
        "type": "number"
      },
      "gain": {
        "description": "Set the required gain or attenuation in dB.",
        "type": "number"
      },
      "mix": {
        "description": "How much to use filtered signal in output. Default is 1.",
        "maximum": 1,
        "minimum": 0,
        "type": "number"
      },
      "normalize": {
        "description": "Normalize biquad coefficients, by default is disabled.",
        "type": "boolean"
      },
      "precision": {
        "description": "Set precision of filtering.",
        "enum": [
          "auto",
          "s16",
          "s32",
          "f32",
          "f64"
        ],
        "type": "string"
      },
      "transform": {
        "description": "Set transform type of IIR filter.",
        "enum": [
          "di",
          "dii",
          "tdi",
          "tdii",
          "latt",
          "svf",
          "zdf"
        ],
        "type": "string"
      },
      "width": {
        "description": "Specify the band-width of a filter in width_type units.",
        "type": "number"
      },
      "width_type": {
        "description": "Set method to specify band-width of filter.",
        "enum": [
          "h",
          "q",
          "o",
          "s",
          "k"
        ],
        "type": "string"
      }
    },
    "required": [
      "frequency"
    ],
    "title": "equalizer options",
    "type": "object"
  },
  "name": "equalizer",
  "parameters": [
    {
      "description": "<dd><p>Set the filter\u2019s central frequency in Hz.\n</p>\n</dd>",
      "name": "frequency, f"
    },
    {
      "description": "<dd><p>Set method to specify band-width of filter.\n</p><dl compact=\"compact\">\n<dt><samp>h</samp></dt>\n<dd><p>Hz\n</p></dd>\n<dt><samp>q</samp></dt>\n<dd><p>Q-Factor\n</p></dd>\n<dt><samp>o</samp></dt>\n<dd><p>octave\n</p></dd>\n<dt><samp>s</samp></dt>\n<dd><p>slope\n</p></dd>\n<dt><samp>k</samp></dt>\n<dd><p>kHz\n</p></dd>\n</dl>\n</dd>",
      "name": "width_type, t"
    },
    {
      "description": "<dd><p>Specify the band-width of a filter in width_type units.\n</p>\n</dd>",
      "name": "width, w"
    },
    {
      "description": "<dd><p>Set the required gain or attenuation in dB.\nBeware of clipping when using a positive gain.\n</p>\n</dd>",
      "name": "gain, g"
    },
    {
      "description": "<dd><p>How much to use filtered signal in output. Default is 1.\nRange is between 0 and 1.\n</p>\n</dd>",
      "name": "mix, m"
    },
    {
      "description": "<dd><p>Specify which channels to filter, by default all available are filtered.\n</p>\n</dd>",
      "name": "channels, c"
    },
    {
      "description": "<dd><p>Normalize biquad coefficients, by default is disabled.\nEnabling it will normalize magnitude response at DC to 0dB.\n</p>\n</dd>",
      "name": "normalize, n"
    },
    {
      "description": "<dd><p>Set transform type of IIR filter.\n</p><dl compact=\"compact\">\n<dt><samp>di</samp></dt>\n<dt><samp>dii</samp></dt>\n<dt><samp>tdi</samp></dt>\n<dt><samp>tdii</samp></dt>\n<dt><samp>latt</samp></dt>\n<dt><samp>svf</samp></dt>\n<dt><samp>zdf</samp></dt>\n</dl>\n</dd>",
      "name": "transform, a"
    },
    {
      "description": "<dd><p>Set precision of filtering.\n</p><dl compact=\"compact\">\n<dt><samp>auto</samp></dt>\n<dd><p>Pick automatic sample format depending on surround filters.\n</p></dd>\n<dt><samp>s16</samp></dt>\n<dd><p>Always use signed 16-bit.\n</p></dd>\n<dt><samp>s32</samp></dt>\n<dd><p>Always use signed 32-bit.\n</p></dd>\n<dt><samp>f32</samp></dt>\n<dd><p>Always use float 32-bit.\n</p></dd>\n<dt><samp>f64</samp></dt>\n<dd><p>Always use float 64-bit.\n</p></dd>\n</dl>\n</dd>",
      "name": "precision, r"
    },
    {
      "description": "<dd><p>Set block size used for reverse IIR processing. If this value is set to high enough\nvalue (higher than impulse response length truncated when reaches near zero values) filtering\nwill become linear phase otherwise if not big enough it will just produce nasty artifacts.\n</p>\n<p>Note that filter delay will be exactly this many samples when set to non-zero value.\n</p></dd>",
      "name": "block_size, b"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#equalizer",
  "source": "<h3 class=\"section\"><a href=\"#toc-equalizer\">8.87 equalizer</a></h3>\n\n<p>Apply a two-pole peaking equalisation (EQ) filter. With this\nfilter, the signal-level at and around a selected frequency can\nbe increased or decreased, whilst (unlike bandpass and bandreject\nfilters) that at all other frequencies is unchanged.\n</p>\n<p>In order to produce complex equalisation curves, this filter can\nbe given several times, each with a different central frequency.\n</p>\n<p>The filter accepts the following options:\n</p>\n<dl compact=\"compact\">\n<dt><samp>frequency, f</samp></dt>\n<dd><p>Set the filter&rsquo;s central frequency in Hz.\n</p>\n</dd>\n<dt><samp>width_type, t</samp></dt>\n<dd><p>Set method to specify band-width of filter.\n</p><dl compact=\"compact\">\n<dt><samp>h</samp></dt>\n<dd><p>Hz\n</p></dd>\n<dt><samp>q</samp></dt>\n<dd><p>Q-Factor\n</p></dd>\n<dt><samp>o</samp></dt>\n<dd><p>octave\n</p></dd>\n<dt><samp>s</samp></dt>\n<dd><p>slope\n</p></dd>\n<dt><samp>k</samp></dt>\n<dd><p>kHz\n</p></dd>\n</dl>\n\n</dd>\n<dt><samp>width, w</samp></dt>\n<dd><p>Specify the band-width of a filter in width_type units.\n</p>\n</dd>\n<dt><samp>gain, g</samp></dt>\n<dd><p>Set the required gain or attenuation in dB.\nBeware of clipping when using a positive gain.\n</p>\n</dd>\n<dt><samp>mix, m</samp></dt>\n<dd><p>How much to use filtered signal in output. Default is 1.\nRange is between 0 and 1.\n</p>\n</dd>\n<dt><samp>channels, c</samp></dt>\n<dd><p>Specify which channels to filter, by default all available are filtered.\n</p>\n</dd>\n<dt><samp>normalize, n</samp></dt>\n<dd><p>Normalize biquad coefficients, by default is disabled.\nEnabling it will normalize magnitude response at DC to 0dB.\n</p>\n</dd>\n<dt><samp>transform, a</samp></dt>\n<dd><p>Set transform type of IIR filter.\n</p><dl compact=\"compact\">\n<dt><samp>di</samp></dt>\n<dt><samp>dii</samp></dt>\n<dt><samp>tdi</samp></dt>\n<dt><samp>tdii</samp></dt>\n<dt><samp>latt</samp></dt>\n<dt><samp>svf</samp></dt>\n<dt><samp>zdf</samp></dt>\n</dl>\n\n</dd>\n<dt><samp>precision, r</samp></dt>\n<dd><p>Set precision of filtering.\n</p><dl compact=\"compact\">\n<dt><samp>auto</samp></dt>\n<dd><p>Pick automatic sample format depending on surround filters.\n</p></dd>\n<dt><samp>s16</samp></dt>\n<dd><p>Always use signed 16-bit.\n</p></dd>\n<dt><samp>s32</samp></dt>\n<dd><p>Always use signed 32-bit.\n</p></dd>\n<dt><samp>f32</samp></dt>\n<dd><p>Always use float 32-bit.\n</p></dd>\n<dt><samp>f64</samp></dt>\n<dd><p>Always use float 64-bit.\n</p></dd>\n</dl>\n\n</dd>\n<dt><samp>block_size, b</samp></dt>\n<dd><p>Set block size used for reverse IIR processing. If this value is set to high enough\nvalue (higher than impulse response length truncated when reaches near zero values) filtering\nwill become linear phase otherwise if not big enough it will just produce nasty artifacts.\n</p>\n<p>Note that filter delay will be exactly this many samples when set to non-zero value.\n</p></dd>\n</dl>\n\n"
}
