{
  "description": "11.3 alphamerge\nAdd or replace the alpha component of the primary input with the\ngrayscale value of a second input. This is intended for use with\nalphaextract to allow the transmission or storage of frame\nsequences that have alpha in a format that doesn\u2019t support an alpha\nchannel.\n\nFor example, to reconstruct full frames from a normal YUV-encoded video\nand a separate video created with alphaextract, you might use:\n\nmovie=in_alpha.mkv [alpha]; [in][alpha] alphamerge [out]",
  "json_schema": {},
  "name": "alphamerge",
  "parameters": [],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#alphamerge",
  "source": "<h3 class=\"section\"><a href=\"#toc-alphamerge\">11.3 alphamerge</a></h3>\n\n<p>Add or replace the alpha component of the primary input with the\ngrayscale value of a second input. This is intended for use with\n<var>alphaextract</var> to allow the transmission or storage of frame\nsequences that have alpha in a format that doesn&rsquo;t support an alpha\nchannel.\n</p>\n<p>For example, to reconstruct full frames from a normal YUV-encoded video\nand a separate video created with <var>alphaextract</var>, you might use:\n</p><div class=\"example\">\n<pre class=\"example\">movie=in_alpha.mkv [alpha]; [in][alpha] alphamerge [out]\n</pre></div>\n\n"
}
