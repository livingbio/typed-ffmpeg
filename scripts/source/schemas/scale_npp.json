{
  "description": "11.217 scale_npp\nUse the NVIDIA Performance Primitives (libnpp) to perform scaling and/or pixel\nformat conversion on CUDA video frames. Setting the output width and height\nworks in the same way as for the scale filter.\n\nThe following additional options are accepted:\n\nThe values of the w and h options are expressions\ncontaining the following constants:",
  "json_schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": {
      "eval": {
        "enum": [
          "init",
          "frame"
        ],
        "type": "string"
      },
      "force_divisible_by": {
        "type": "integer"
      },
      "force_original_aspect_ratio": {
        "enum": [
          "disable",
          "decrease",
          "increase"
        ],
        "type": "string"
      },
      "format": {
        "enum": [
          "same"
        ],
        "type": "string"
      },
      "interp_algo": {
        "enum": [
          "nn",
          "linear",
          "cubic",
          "cubic2p_bspline",
          "cubic2p_catmullrom",
          "cubic2p_b05c03",
          "super",
          "lanczos"
        ],
        "type": "string"
      }
    },
    "title": "scale_npp options",
    "type": "object"
  },
  "name": "scale_npp",
  "parameters": [
    {
      "description": "<dd><p>The pixel format of the output CUDA frames. If set to the string \"same\" (the\ndefault), the input format will be kept. Note that automatic format negotiation\nand conversion is not yet supported for hardware frames\n</p>\n</dd>",
      "name": "format"
    },
    {
      "description": "<dd><p>The interpolation algorithm used for resizing. One of the following:\n</p><dl compact=\"compact\">\n<dt><samp>nn</samp></dt>\n<dd><p>Nearest neighbour.\n</p>\n</dd>\n<dt><samp>linear</samp></dt>\n<dt><samp>cubic</samp></dt>\n<dt><samp>cubic2p_bspline</samp></dt>\n<dd><p>2-parameter cubic (B=1, C=0)\n</p>\n</dd>\n<dt><samp>cubic2p_catmullrom</samp></dt>\n<dd><p>2-parameter cubic (B=0, C=1/2)\n</p>\n</dd>\n<dt><samp>cubic2p_b05c03</samp></dt>\n<dd><p>2-parameter cubic (B=1/2, C=3/10)\n</p>\n</dd>\n<dt><samp>super</samp></dt>\n<dd><p>Supersampling\n</p>\n</dd>\n<dt><samp>lanczos</samp></dt>\n</dl>\n</dd>",
      "name": "interp_algo"
    },
    {
      "description": "<dd><p>Enable decreasing or increasing output video width or height if necessary to\nkeep the original aspect ratio. Possible values:\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>disable</samp>\u2019</dt>\n<dd><p>Scale the video as specified and disable this feature.\n</p>\n</dd>\n<dt>\u2018<samp>decrease</samp>\u2019</dt>\n<dd><p>The output video dimensions will automatically be decreased if needed.\n</p>\n</dd>\n<dt>\u2018<samp>increase</samp>\u2019</dt>\n<dd><p>The output video dimensions will automatically be increased if needed.\n</p>\n</dd>\n</dl>\n<p>One useful instance of this option is that when you know a specific device\u2019s\nmaximum allowed resolution, you can use this to limit the output video to\nthat, while retaining the aspect ratio. For example, device A allows\n1280x720 playback, and your video is 1920x800. Using this option (set it to\ndecrease) and specifying 1280x720 to the command line makes the output\n1280x533.\n</p>\n<p>Please note that this is a different thing than specifying -1 for <samp>w</samp>\nor <samp>h</samp>, you still need to specify the output resolution for this option\nto work.\n</p>\n</dd>",
      "name": "force_original_aspect_ratio"
    },
    {
      "description": "<dd><p>Ensures that both the output dimensions, width and height, are divisible by the\ngiven integer when used together with <samp>force_original_aspect_ratio</samp>. This\nworks similar to using <code>-n</code> in the <samp>w</samp> and <samp>h</samp> options.\n</p>\n<p>This option respects the value set for <samp>force_original_aspect_ratio</samp>,\nincreasing or decreasing the resolution accordingly. The video\u2019s aspect ratio\nmay be slightly modified.\n</p>\n<p>This option can be handy if you need to have a video fit within or exceed\na defined resolution using <samp>force_original_aspect_ratio</samp> but also have\nencoder restrictions on width or height divisibility.\n</p>\n</dd>",
      "name": "force_divisible_by"
    },
    {
      "description": "<dd><p>Specify when to evaluate <var>width</var> and <var>height</var> expression. It accepts the following values:\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>init</samp>\u2019</dt>\n<dd><p>Only evaluate expressions once during the filter initialization or when a command is processed.\n</p>\n</dd>\n<dt>\u2018<samp>frame</samp>\u2019</dt>\n<dd><p>Evaluate expressions for each incoming frame.\n</p>\n</dd>\n</dl>\n</dd>",
      "name": "eval"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#scale_005fnpp",
  "source": "<h3 class=\"section\"><a href=\"#toc-scale_005fnpp-1\">11.217 scale_npp</a></h3>\n\n<p>Use the NVIDIA Performance Primitives (libnpp) to perform scaling and/or pixel\nformat conversion on CUDA video frames. Setting the output width and height\nworks in the same way as for the <var>scale</var> filter.\n</p>\n<p>The following additional options are accepted:\n</p><dl compact=\"compact\">\n<dt><samp>format</samp></dt>\n<dd><p>The pixel format of the output CUDA frames. If set to the string &quot;same&quot; (the\ndefault), the input format will be kept. Note that automatic format negotiation\nand conversion is not yet supported for hardware frames\n</p>\n</dd>\n<dt><samp>interp_algo</samp></dt>\n<dd><p>The interpolation algorithm used for resizing. One of the following:\n</p><dl compact=\"compact\">\n<dt><samp>nn</samp></dt>\n<dd><p>Nearest neighbour.\n</p>\n</dd>\n<dt><samp>linear</samp></dt>\n<dt><samp>cubic</samp></dt>\n<dt><samp>cubic2p_bspline</samp></dt>\n<dd><p>2-parameter cubic (B=1, C=0)\n</p>\n</dd>\n<dt><samp>cubic2p_catmullrom</samp></dt>\n<dd><p>2-parameter cubic (B=0, C=1/2)\n</p>\n</dd>\n<dt><samp>cubic2p_b05c03</samp></dt>\n<dd><p>2-parameter cubic (B=1/2, C=3/10)\n</p>\n</dd>\n<dt><samp>super</samp></dt>\n<dd><p>Supersampling\n</p>\n</dd>\n<dt><samp>lanczos</samp></dt>\n</dl>\n\n</dd>\n<dt><samp>force_original_aspect_ratio</samp></dt>\n<dd><p>Enable decreasing or increasing output video width or height if necessary to\nkeep the original aspect ratio. Possible values:\n</p>\n<dl compact=\"compact\">\n<dt>&lsquo;<samp>disable</samp>&rsquo;</dt>\n<dd><p>Scale the video as specified and disable this feature.\n</p>\n</dd>\n<dt>&lsquo;<samp>decrease</samp>&rsquo;</dt>\n<dd><p>The output video dimensions will automatically be decreased if needed.\n</p>\n</dd>\n<dt>&lsquo;<samp>increase</samp>&rsquo;</dt>\n<dd><p>The output video dimensions will automatically be increased if needed.\n</p>\n</dd>\n</dl>\n\n<p>One useful instance of this option is that when you know a specific device&rsquo;s\nmaximum allowed resolution, you can use this to limit the output video to\nthat, while retaining the aspect ratio. For example, device A allows\n1280x720 playback, and your video is 1920x800. Using this option (set it to\ndecrease) and specifying 1280x720 to the command line makes the output\n1280x533.\n</p>\n<p>Please note that this is a different thing than specifying -1 for <samp>w</samp>\nor <samp>h</samp>, you still need to specify the output resolution for this option\nto work.\n</p>\n</dd>\n<dt><samp>force_divisible_by</samp></dt>\n<dd><p>Ensures that both the output dimensions, width and height, are divisible by the\ngiven integer when used together with <samp>force_original_aspect_ratio</samp>. This\nworks similar to using <code>-n</code> in the <samp>w</samp> and <samp>h</samp> options.\n</p>\n<p>This option respects the value set for <samp>force_original_aspect_ratio</samp>,\nincreasing or decreasing the resolution accordingly. The video&rsquo;s aspect ratio\nmay be slightly modified.\n</p>\n<p>This option can be handy if you need to have a video fit within or exceed\na defined resolution using <samp>force_original_aspect_ratio</samp> but also have\nencoder restrictions on width or height divisibility.\n</p>\n</dd>\n<dt><samp>eval</samp></dt>\n<dd><p>Specify when to evaluate <var>width</var> and <var>height</var> expression. It accepts the following values:\n</p>\n<dl compact=\"compact\">\n<dt>&lsquo;<samp>init</samp>&rsquo;</dt>\n<dd><p>Only evaluate expressions once during the filter initialization or when a command is processed.\n</p>\n</dd>\n<dt>&lsquo;<samp>frame</samp>&rsquo;</dt>\n<dd><p>Evaluate expressions for each incoming frame.\n</p>\n</dd>\n</dl>\n\n</dd>\n</dl>\n\n<p>The values of the <samp>w</samp> and <samp>h</samp> options are expressions\ncontaining the following constants:\n</p>\n<dl compact=\"compact\">\n<dt><var>in_w</var></dt>\n<dt><var>in_h</var></dt>\n<dd><p>The input width and height\n</p>\n</dd>\n<dt><var>iw</var></dt>\n<dt><var>ih</var></dt>\n<dd><p>These are the same as <var>in_w</var> and <var>in_h</var>.\n</p>\n</dd>\n<dt><var>out_w</var></dt>\n<dt><var>out_h</var></dt>\n<dd><p>The output (scaled) width and height\n</p>\n</dd>\n<dt><var>ow</var></dt>\n<dt><var>oh</var></dt>\n<dd><p>These are the same as <var>out_w</var> and <var>out_h</var>\n</p>\n</dd>\n<dt><var>a</var></dt>\n<dd><p>The same as <var>iw</var> / <var>ih</var>\n</p>\n</dd>\n<dt><var>sar</var></dt>\n<dd><p>input sample aspect ratio\n</p>\n</dd>\n<dt><var>dar</var></dt>\n<dd><p>The input display aspect ratio. Calculated from <code>(iw / ih) * sar</code>.\n</p>\n</dd>\n<dt><var>n</var></dt>\n<dd><p>The (sequential) number of the input frame, starting from 0.\nOnly available with <code>eval=frame</code>.\n</p>\n</dd>\n<dt><var>t</var></dt>\n<dd><p>The presentation timestamp of the input frame, expressed as a number of\nseconds. Only available with <code>eval=frame</code>.\n</p>\n</dd>\n<dt><var>pos</var></dt>\n<dd><p>The position (byte offset) of the frame in the input stream, or NaN if\nthis information is unavailable and/or meaningless (for example in case of synthetic video).\nOnly available with <code>eval=frame</code>.\nDeprecated, do not use.\n</p></dd>\n</dl>\n\n"
}
