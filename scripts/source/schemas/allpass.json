{
  "description": "8.32 allpass\nApply a two-pole all-pass filter with central frequency (in Hz)\nfrequency, and filter-width width.\nAn all-pass filter changes the audio\u2019s frequency to phase relationship\nwithout changing its frequency to amplitude relationship.\n\nThe filter accepts the following options:",
  "json_schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": {
      "channels": {
        "description": "Specify which channels to filter, by default all available are filtered.",
        "type": "string"
      },
      "frequency": {
        "description": "Set frequency in Hz.",
        "type": "number"
      },
      "mix": {
        "default": 1,
        "description": "How much to use filtered signal in output. Range is between 0 and 1.",
        "maximum": 1,
        "minimum": 0,
        "type": "number"
      },
      "normalize": {
        "default": false,
        "description": "Normalize biquad coefficients. Enabling it will normalize magnitude response at DC to 0dB.",
        "type": "boolean"
      },
      "order": {
        "default": 2,
        "description": "Set the filter order, can be 1 or 2.",
        "enum": [
          1,
          2
        ],
        "type": "integer"
      },
      "precision": {
        "description": "Set precision of filtering.",
        "enum": [
          "auto",
          "s16",
          "s32",
          "f32",
          "f64"
        ],
        "type": "string"
      },
      "transform": {
        "description": "Set transform type of IIR filter.",
        "enum": [
          "di",
          "dii",
          "tdi",
          "tdii",
          "latt",
          "svf",
          "zdf"
        ],
        "type": "string"
      },
      "width": {
        "description": "Specify the band-width of a filter in width_type units.",
        "type": "number"
      },
      "width_type": {
        "description": "Set method to specify band-width of filter.",
        "enum": [
          "h",
          "q",
          "o",
          "s",
          "k"
        ],
        "type": "string"
      }
    },
    "required": [
      "frequency",
      "width_type",
      "width"
    ],
    "title": "allpass options",
    "type": "object"
  },
  "name": "allpass",
  "parameters": [
    {
      "description": "<dd><p>Set frequency in Hz.\n</p>\n</dd>",
      "name": "frequency, f"
    },
    {
      "description": "<dd><p>Set method to specify band-width of filter.\n</p><dl compact=\"compact\">\n<dt><samp>h</samp></dt>\n<dd><p>Hz\n</p></dd>\n<dt><samp>q</samp></dt>\n<dd><p>Q-Factor\n</p></dd>\n<dt><samp>o</samp></dt>\n<dd><p>octave\n</p></dd>\n<dt><samp>s</samp></dt>\n<dd><p>slope\n</p></dd>\n<dt><samp>k</samp></dt>\n<dd><p>kHz\n</p></dd>\n</dl>\n</dd>",
      "name": "width_type, t"
    },
    {
      "description": "<dd><p>Specify the band-width of a filter in width_type units.\n</p>\n</dd>",
      "name": "width, w"
    },
    {
      "description": "<dd><p>How much to use filtered signal in output. Default is 1.\nRange is between 0 and 1.\n</p>\n</dd>",
      "name": "mix, m"
    },
    {
      "description": "<dd><p>Specify which channels to filter, by default all available are filtered.\n</p>\n</dd>",
      "name": "channels, c"
    },
    {
      "description": "<dd><p>Normalize biquad coefficients, by default is disabled.\nEnabling it will normalize magnitude response at DC to 0dB.\n</p>\n</dd>",
      "name": "normalize, n"
    },
    {
      "description": "<dd><p>Set the filter order, can be 1 or 2. Default is 2.\n</p>\n</dd>",
      "name": "order, o"
    },
    {
      "description": "<dd><p>Set transform type of IIR filter.\n</p><dl compact=\"compact\">\n<dt><samp>di</samp></dt>\n<dt><samp>dii</samp></dt>\n<dt><samp>tdi</samp></dt>\n<dt><samp>tdii</samp></dt>\n<dt><samp>latt</samp></dt>\n<dt><samp>svf</samp></dt>\n<dt><samp>zdf</samp></dt>\n</dl>\n</dd>",
      "name": "transform, a"
    },
    {
      "description": "<dd><p>Set precision of filtering.\n</p><dl compact=\"compact\">\n<dt><samp>auto</samp></dt>\n<dd><p>Pick automatic sample format depending on surround filters.\n</p></dd>\n<dt><samp>s16</samp></dt>\n<dd><p>Always use signed 16-bit.\n</p></dd>\n<dt><samp>s32</samp></dt>\n<dd><p>Always use signed 32-bit.\n</p></dd>\n<dt><samp>f32</samp></dt>\n<dd><p>Always use float 32-bit.\n</p></dd>\n<dt><samp>f64</samp></dt>\n<dd><p>Always use float 64-bit.\n</p></dd>\n</dl>\n</dd>",
      "name": "precision, r"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#allpass",
  "source": "<h3 class=\"section\"><a href=\"#toc-allpass\">8.32 allpass</a></h3>\n\n<p>Apply a two-pole all-pass filter with central frequency (in Hz)\n<var>frequency</var>, and filter-width <var>width</var>.\nAn all-pass filter changes the audio&rsquo;s frequency to phase relationship\nwithout changing its frequency to amplitude relationship.\n</p>\n<p>The filter accepts the following options:\n</p>\n<dl compact=\"compact\">\n<dt><samp>frequency, f</samp></dt>\n<dd><p>Set frequency in Hz.\n</p>\n</dd>\n<dt><samp>width_type, t</samp></dt>\n<dd><p>Set method to specify band-width of filter.\n</p><dl compact=\"compact\">\n<dt><samp>h</samp></dt>\n<dd><p>Hz\n</p></dd>\n<dt><samp>q</samp></dt>\n<dd><p>Q-Factor\n</p></dd>\n<dt><samp>o</samp></dt>\n<dd><p>octave\n</p></dd>\n<dt><samp>s</samp></dt>\n<dd><p>slope\n</p></dd>\n<dt><samp>k</samp></dt>\n<dd><p>kHz\n</p></dd>\n</dl>\n\n</dd>\n<dt><samp>width, w</samp></dt>\n<dd><p>Specify the band-width of a filter in width_type units.\n</p>\n</dd>\n<dt><samp>mix, m</samp></dt>\n<dd><p>How much to use filtered signal in output. Default is 1.\nRange is between 0 and 1.\n</p>\n</dd>\n<dt><samp>channels, c</samp></dt>\n<dd><p>Specify which channels to filter, by default all available are filtered.\n</p>\n</dd>\n<dt><samp>normalize, n</samp></dt>\n<dd><p>Normalize biquad coefficients, by default is disabled.\nEnabling it will normalize magnitude response at DC to 0dB.\n</p>\n</dd>\n<dt><samp>order, o</samp></dt>\n<dd><p>Set the filter order, can be 1 or 2. Default is 2.\n</p>\n</dd>\n<dt><samp>transform, a</samp></dt>\n<dd><p>Set transform type of IIR filter.\n</p><dl compact=\"compact\">\n<dt><samp>di</samp></dt>\n<dt><samp>dii</samp></dt>\n<dt><samp>tdi</samp></dt>\n<dt><samp>tdii</samp></dt>\n<dt><samp>latt</samp></dt>\n<dt><samp>svf</samp></dt>\n<dt><samp>zdf</samp></dt>\n</dl>\n\n</dd>\n<dt><samp>precision, r</samp></dt>\n<dd><p>Set precision of filtering.\n</p><dl compact=\"compact\">\n<dt><samp>auto</samp></dt>\n<dd><p>Pick automatic sample format depending on surround filters.\n</p></dd>\n<dt><samp>s16</samp></dt>\n<dd><p>Always use signed 16-bit.\n</p></dd>\n<dt><samp>s32</samp></dt>\n<dd><p>Always use signed 32-bit.\n</p></dd>\n<dt><samp>f32</samp></dt>\n<dd><p>Always use float 32-bit.\n</p></dd>\n<dt><samp>f64</samp></dt>\n<dd><p>Always use float 64-bit.\n</p></dd>\n</dl>\n</dd>\n</dl>\n\n"
}
