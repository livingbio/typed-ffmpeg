description: '11.265 unpremultiply

  Apply alpha unpremultiply effect to input video stream using first plane

  of second stream as alpha.


  Both streams must have same dimensions and same pixel format.


  The filter accepts the following option:'
name: unpremultiply
parameters:
- description: '<dd><p>Set which planes will be processed, unprocessed planes will
    be copied.

    By default value 0xf, all planes will be processed.

    </p>

    <p>If the format has 1 or 2 components, then luma is bit 0.

    If the format has 3 or 4 components:

    for RGB formats bit 0 is green, bit 1 is blue and bit 2 is red;

    for YUV formats bit 0 is luma, bit 1 is chroma-U and bit 2 is chroma-V.

    If present, the alpha channel is always the last bit.

    </p>

    </dd>'
  name: planes
- description: '<dd><p>Do not require 2nd input for processing, instead use alpha
    plane from input stream.

    </p></dd>'
  name: inplace
ref: https://ffmpeg.org/ffmpeg-filters.html#unpremultiply
source: '<h3 class="section"><a href="#toc-unpremultiply">11.265 unpremultiply</a></h3>

  <p>Apply alpha unpremultiply effect to input video stream using first plane

  of second stream as alpha.

  </p>

  <p>Both streams must have same dimensions and same pixel format.

  </p>

  <p>The filter accepts the following option:

  </p>

  <dl compact="compact">

  <dt><samp>planes</samp></dt>

  <dd><p>Set which planes will be processed, unprocessed planes will be copied.

  By default value 0xf, all planes will be processed.

  </p>

  <p>If the format has 1 or 2 components, then luma is bit 0.

  If the format has 3 or 4 components:

  for RGB formats bit 0 is green, bit 1 is blue and bit 2 is red;

  for YUV formats bit 0 is luma, bit 1 is chroma-U and bit 2 is chroma-V.

  If present, the alpha channel is always the last bit.

  </p>

  </dd>

  <dt><samp>inplace</samp></dt>

  <dd><p>Do not require 2nd input for processing, instead use alpha plane from input
  stream.

  </p></dd>

  </dl>


  '
