{
  "init": "static __attribute__((cold)) int init(AVFilterContext *ctx)\n{\n    AudioIIRContext *s = ctx->priv;\n    AVFilterPad pad, vpad;\n    int ret;\n\n    if (!s->a_str || !s->b_str || !s->g_str) {\n        av_log(ctx, 16, \"Valid coefficients are mandatory.\\n\");\n        return (-(22));\n    }\n\n    switch (s->precision) {\n    case 0: s->sample_format = AV_SAMPLE_FMT_DBLP; break;\n    case 1: s->sample_format = AV_SAMPLE_FMT_FLTP; break;\n    case 2: s->sample_format = AV_SAMPLE_FMT_S32P; break;\n    case 3: s->sample_format = AV_SAMPLE_FMT_S16P; break;\n    default: return (-(int)(('B') | (('U') << 8) | (('G') << 16) | ((unsigned)('!') << 24)));\n    }\n\n    pad = (AVFilterPad){\n        .name = \"default\",\n        .type = AVMEDIA_TYPE_AUDIO,\n        .config_props = config_output,\n    };\n\n    ret = ff_append_outpad(ctx, &pad);\n    if (ret < 0)\n        return ret;\n\n    if (s->response) {\n        vpad = (AVFilterPad){\n            .name = \"filter_response\",\n            .type = AVMEDIA_TYPE_VIDEO,\n            .config_props = config_video,\n        };\n\n        ret = ff_append_outpad(ctx, &vpad);\n        if (ret < 0)\n            return ret;\n    }\n\n    return 0;\n}"
}
