{
  "description": "### 16.4 ddagrab\n\nCaptures the Windows Desktop via Desktop Duplication API.\n\nThe filter exclusively returns D3D11 Hardware Frames, for on-gpu encoding or\nprocessing. So an explicit hwdownload is needed for any kind of software\nprocessing.\n\nIt accepts the following options:\n\n**output_idx**\n\n    DXGI Output Index to capture. Usually corresponds to the index Windows has given the screen minus one, so it\u2019s starting at 0. Defaults to output 0. \n\n**draw_mouse**\n\n    Whether to draw the mouse cursor. Defaults to true. Only affects hardware cursors. If a game or application renders its own cursor, it\u2019ll always be captured. \n\n**framerate**\n\n    Maximum framerate at which the desktop will be captured - the interval between successive frames will not be smaller than the inverse of the framerate. When the desktop is not being updated often enough, the filter will duplicate a previous frame. Note that there is no background buffering going on, so when the filter is not polled often enough then the actual inter-frame interval may be significantly larger. Defaults to 30 FPS. \n\n**video_size**\n\n    Specify the size of the captured video. Defaults to the full size of the screen. Cropped from the bottom/right if smaller than screen size. \n\n**offset_x**\n\n    Horizontal offset of the captured video. \n\n**offset_y**\n\n    Vertical offset of the captured video. \n\n**output_fmt**\n\n    Desired filter output format. Defaults to 8 Bit BGRA. It accepts the following values: \u2018auto\u2019 Passes all supported output formats to DDA and returns what DDA decides to use. \u20188bit\u2019 \u2018bgra\u2019 8 Bit formats always work, and DDA will convert to them if necessary. \u201810bit\u2019 \u2018x2bgr10\u2019 Filter initialization will fail if 10 bit format is requested but unavailable. \n\n",
  "filter_type": "vsrc",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vsrc_ddagrab",
  "input_stream_typings": [],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "ddagrab",
  "options": [
    {
      "alias": [
        "output_idx"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>DXGI Output Index to capture.\n</p>\n<p>Usually corresponds to the index Windows has given the screen minus one,\nso it\u2019s starting at 0.\n</p>\n<p>Defaults to output 0.\n</p>\n</dd>",
      "name": "output_idx",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "draw_mouse"
      ],
      "choices": [],
      "default": 1,
      "description": "<dd><p>Whether to draw the mouse cursor.\n</p>\n<p>Defaults to true.\n</p>\n<p>Only affects hardware cursors. If a game or application renders its own cursor,\nit\u2019ll always be captured.\n</p>\n</dd>",
      "name": "draw_mouse",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [
        "framerate"
      ],
      "choices": [],
      "default": "30",
      "description": "<dd><p>Maximum framerate at which the desktop will be captured - the interval between\nsuccessive frames will not be smaller than the inverse of the framerate. When\nthe desktop is not being updated often enough, the filter will duplicate\na previous frame. Note that there is no background buffering going on, so when\nthe filter is not polled often enough then the actual inter-frame interval may\nbe significantly larger.\n</p>\n<p>Defaults to 30 FPS.\n</p>\n</dd>",
      "name": "framerate",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "video_size"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Specify the size of the captured video.\n</p>\n<p>Defaults to the full size of the screen.\n</p>\n<p>Cropped from the bottom/right if smaller than screen size.\n</p>\n</dd>",
      "name": "video_size",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "offset_x"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>Horizontal offset of the captured video.\n</p>\n</dd>",
      "name": "offset_x",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "offset_y"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>Vertical offset of the captured video.\n</p>\n</dd>",
      "name": "offset_y",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "output_fmt"
      ],
      "choices": [
        {
          "help": "let dda pick its preferred format",
          "name": "auto",
          "value": 0
        },
        {
          "help": "only output default 8 Bit format",
          "name": "8bit",
          "value": "DXGI_FORMAT_B8G8R8A8_UNORM"
        },
        {
          "help": "only output 8 Bit BGRA",
          "name": "bgra",
          "value": "DXGI_FORMAT_B8G8R8A8_UNORM"
        },
        {
          "help": "only output default 10 Bit format",
          "name": "10bit",
          "value": "DXGI_FORMAT_R10G10B10A2_UNORM"
        },
        {
          "help": "only output 10 Bit X2BGR10",
          "name": "x2bgr10",
          "value": "DXGI_FORMAT_R10G10B10A2_UNORM"
        },
        {
          "help": "only output default 16 Bit format",
          "name": "16bit",
          "value": "DXGI_FORMAT_R16G16B16A16_FLOAT"
        },
        {
          "help": "only output 16 Bit RGBAF16",
          "name": "rgbaf16",
          "value": "DXGI_FORMAT_R16G16B16A16_FLOAT"
        }
      ],
      "default": "DXGI_FORMAT_B8G8R8A8_UNORM",
      "description": "<dd><p>Desired filter output format.\nDefaults to 8 Bit BGRA.\n</p>\n<p>It accepts the following values:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>auto</samp>\u2019</dt>\n<dd><p>Passes all supported output formats to DDA and returns what DDA decides to use.\n</p></dd>\n<dt>\u2018<samp>8bit</samp>\u2019</dt>\n<dt>\u2018<samp>bgra</samp>\u2019</dt>\n<dd><p>8 Bit formats always work, and DDA will convert to them if necessary.\n</p></dd>\n<dt>\u2018<samp>10bit</samp>\u2019</dt>\n<dt>\u2018<samp>x2bgr10</samp>\u2019</dt>\n<dd><p>Filter initialization will fail if 10 bit format is requested but unavailable.\n</p></dd>\n</dl>\n</dd>",
      "name": "output_fmt",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "allow_fallback"
      ],
      "choices": [],
      "default": 0,
      "description": null,
      "name": "allow_fallback",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [
        "force_fmt"
      ],
      "choices": [],
      "default": 0,
      "description": null,
      "name": "force_fmt",
      "required": false,
      "typing": "bool"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#ddagrab"
}
