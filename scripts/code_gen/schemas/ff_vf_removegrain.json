{
  "description": "### 11.207 removegrain\n\nThe removegrain filter is a spatial denoiser for progressive video.\n\n\n- **`m0`**\n  - Set mode for the first plane.\n- **`m1`**\n  - Set mode for the second plane.\n- **`m2`**\n  - Set mode for the third plane.\n- **`m3`**\n  - Set mode for the fourth plane.\nSet mode for the first plane.\n\n\nSet mode for the second plane.\n\n\nSet mode for the third plane.\n\n\nSet mode for the fourth plane.\n\n\nRange of mode is from 0 to 24. Description of each mode follows:\n\n\n- **`0`**\n  - Leave input plane unchanged. Default.\n- **`1`**\n  - Clips the pixel with the minimum and maximum of the 8 neighbour pixels.\n- **`2`**\n  - Clips the pixel with the second minimum and maximum of the 8 neighbour pixels.\n- **`3`**\n  - Clips the pixel with the third minimum and maximum of the 8 neighbour pixels.\n- **`4`**\n  - Clips the pixel with the fourth minimum and maximum of the 8 neighbour pixels.\nThis is equivalent to a median filter.\n- **`5`**\n  - Line-sensitive clipping giving the minimal change.\n- **`6`**\n  - Line-sensitive clipping, intermediate.\n- **`7`**\n  - Line-sensitive clipping, intermediate.\n- **`8`**\n  - Line-sensitive clipping, intermediate.\n- **`9`**\n  - Line-sensitive clipping on a line where the neighbours pixels are the closest.\n- **`10`**\n  - Replaces the target pixel with the closest neighbour.\n- **`11`**\n  - [1 2 1] horizontal and vertical kernel blur.\n- **`12`**\n  - Same as mode 11.\n- **`13`**\n  - Bob mode, interpolates top field from the line where the neighbours\npixels are the closest.\n- **`14`**\n  - Bob mode, interpolates bottom field from the line where the neighbours\npixels are the closest.\n- **`15`**\n  - Bob mode, interpolates top field. Same as 13 but with a more complicated\ninterpolation formula.\n- **`16`**\n  - Bob mode, interpolates bottom field. Same as 14 but with a more complicated\ninterpolation formula.\n- **`17`**\n  - Clips the pixel with the minimum and maximum of respectively the maximum and\nminimum of each pair of opposite neighbour pixels.\n- **`18`**\n  - Line-sensitive clipping using opposite neighbours whose greatest distance from\nthe current pixel is minimal.\n- **`19`**\n  - Replaces the pixel with the average of its 8 neighbours.\n- **`20`**\n  - Averages the 9 pixels ([1 1 1] horizontal and vertical blur).\n- **`21`**\n  - Clips pixels using the averages of opposite neighbour.\n- **`22`**\n  - Same as mode 21 but simpler and faster.\n- **`23`**\n  - Small edge and halo removal, but reputed useless.\n- **`24`**\n  - Similar as 23.\nLeave input plane unchanged. Default.\n\n\nClips the pixel with the minimum and maximum of the 8 neighbour pixels.\n\n\nClips the pixel with the second minimum and maximum of the 8 neighbour pixels.\n\n\nClips the pixel with the third minimum and maximum of the 8 neighbour pixels.\n\n\nClips the pixel with the fourth minimum and maximum of the 8 neighbour pixels.\nThis is equivalent to a median filter.\n\n\nLine-sensitive clipping giving the minimal change.\n\n\nLine-sensitive clipping, intermediate.\n\n\nLine-sensitive clipping, intermediate.\n\n\nLine-sensitive clipping, intermediate.\n\n\nLine-sensitive clipping on a line where the neighbours pixels are the closest.\n\n\nReplaces the target pixel with the closest neighbour.\n\n\n[1 2 1] horizontal and vertical kernel blur.\n\n\nSame as mode 11.\n\n\nBob mode, interpolates top field from the line where the neighbours\npixels are the closest.\n\n\nBob mode, interpolates bottom field from the line where the neighbours\npixels are the closest.\n\n\nBob mode, interpolates top field. Same as 13 but with a more complicated\ninterpolation formula.\n\n\nBob mode, interpolates bottom field. Same as 14 but with a more complicated\ninterpolation formula.\n\n\nClips the pixel with the minimum and maximum of respectively the maximum and\nminimum of each pair of opposite neighbour pixels.\n\n\nLine-sensitive clipping using opposite neighbours whose greatest distance from\nthe current pixel is minimal.\n\n\nReplaces the pixel with the average of its 8 neighbours.\n\n\nAverages the 9 pixels ([1 1 1] horizontal and vertical blur).\n\n\nClips pixels using the averages of opposite neighbour.\n\n\nSame as mode 21 but simpler and faster.\n\n\nSmall edge and halo removal, but reputed useless.\n\n\nSimilar as 23.\n\n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_removegrain",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "removegrain",
  "options": [
    {
      "alias": [
        "m0"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>Set mode for the first plane.\n</p>\n</dd>",
      "name": "m0",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "m1"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>Set mode for the second plane.\n</p>\n</dd>",
      "name": "m1",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "m2"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>Set mode for the third plane.\n</p>\n</dd>",
      "name": "m2",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "m3"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>Set mode for the fourth plane.\n</p></dd>",
      "name": "m3",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#removegrain"
}
