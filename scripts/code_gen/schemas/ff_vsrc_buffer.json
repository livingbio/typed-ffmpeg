{
  "description": "### 16.1 buffer\n\nBuffer video frames, and make them available to the filter chain.\n\nThis source is mainly intended for a programmatic use, in particular through\nthe interface defined in libavfilter/buffersrc.h.\n\nIt accepts the following parameters:\n\n**video_size**\n\n    Specify the size (width and height) of the buffered video frames. For the syntax of this option, check the (ffmpeg-utils)\"Video size\" section in the ffmpeg-utils manual. \n\n**width**\n\n    The input video width. \n\n**height**\n\n    The input video height. \n\n**pix_fmt**\n\n    A string representing the pixel format of the buffered video frames. It may be a number corresponding to a pixel format, or a pixel format name. \n\n**time_base**\n\n    Specify the timebase assumed by the timestamps of the buffered frames. \n\n**frame_rate**\n\n    Specify the frame rate expected for the video stream. \n\n**pixel_aspect, sar**\n\n    The sample (pixel) aspect ratio of the input video. \n\n**hw_frames_ctx**\n\n    When using a hardware pixel format, this should be a reference to an AVHWFramesContext describing input frames. \n\nFor example:\n\n    \n    \n    buffer=width=320:height=240:pix_fmt=yuv410p:time_base=1/24:sar=1\n    \n\nwill instruct the source to accept video frames with size 320x240 and with\nformat \"yuv410p\", assuming 1/24 as the timestamps timebase and square pixels\n(1:1 sample aspect ratio). Since the pixel format with name \"yuv410p\"\ncorresponds to the number 6 (check the enum AVPixelFormat definition in\nlibavutil/pixfmt.h), this example corresponds to:\n\n    \n    \n    buffer=size=320x240:pixfmt=6:time_base=1/24:pixel_aspect=1/1\n    \n\nAlternatively, the options can be specified as a flat string, but this syntax\nis deprecated:\n\nwidth:height:pix_fmt:time_base.num:time_base.den:pixel_aspect.num:pixel_aspect.den\n\n",
  "filter_type": "vsrc",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vsrc_buffer",
  "input_stream_typings": [],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "is_support_timeline": false,
  "name": "buffer",
  "options": [
    {
      "alias": [
        "width",
        "video_size"
      ],
      "choices": [],
      "default": 0,
      "description": "((void*)0)",
      "name": "width",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "height"
      ],
      "choices": [],
      "default": 0,
      "description": "((void*)0)",
      "name": "height",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "pix_fmt"
      ],
      "choices": [],
      "default": "AV_PIX_FMT_NONE",
      "description": "((void*)0)",
      "name": "pix_fmt",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "sar",
        "pixel_aspect"
      ],
      "choices": [],
      "default": 0.0,
      "description": "sample aspect ratio",
      "name": "sar",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "time_base"
      ],
      "choices": [],
      "default": 0.0,
      "description": "((void*)0)",
      "name": "time_base",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "frame_rate"
      ],
      "choices": [],
      "default": 0.0,
      "description": "((void*)0)",
      "name": "frame_rate",
      "required": false,
      "typing": "float"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#buffer"
}
