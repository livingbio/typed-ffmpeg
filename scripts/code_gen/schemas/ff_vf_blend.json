{
  "description": "11.15 blend\nBlend two video frames into each other.\n\nThe blend filter takes two input streams and outputs one\nstream, the first input is the \"top\" layer and second input is\n\"bottom\" layer.  By default, the output terminates when the longest input terminates.\n\nThe tblend (time blend) filter takes two consecutive frames\nfrom one single stream, and outputs the result obtained by blending\nthe new frame on top of the old frame.\n\nA description of the accepted options follows.\n\n\nThe blend filter also supports the framesync options.",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_blend",
  "input_stream_typings": [
    {
      "name": "top",
      "type": "AVMEDIA_TYPE_VIDEO"
    },
    {
      "name": "bottom",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "blend",
  "options": [
    {
      "alias": [
        "c0_mode"
      ],
      "choices": [
        {
          "help": "",
          "name": "addition",
          "value": "BLEND_ADDITION"
        },
        {
          "help": "",
          "name": "addition128",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "grainmerge",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "and",
          "value": "BLEND_AND"
        },
        {
          "help": "",
          "name": "average",
          "value": "BLEND_AVERAGE"
        },
        {
          "help": "",
          "name": "burn",
          "value": "BLEND_BURN"
        },
        {
          "help": "",
          "name": "darken",
          "value": "BLEND_DARKEN"
        },
        {
          "help": "",
          "name": "difference",
          "value": "BLEND_DIFFERENCE"
        },
        {
          "help": "",
          "name": "difference128",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "grainextract",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "divide",
          "value": "BLEND_DIVIDE"
        },
        {
          "help": "",
          "name": "dodge",
          "value": "BLEND_DODGE"
        },
        {
          "help": "",
          "name": "exclusion",
          "value": "BLEND_EXCLUSION"
        },
        {
          "help": "",
          "name": "extremity",
          "value": "BLEND_EXTREMITY"
        },
        {
          "help": "",
          "name": "freeze",
          "value": "BLEND_FREEZE"
        },
        {
          "help": "",
          "name": "glow",
          "value": "BLEND_GLOW"
        },
        {
          "help": "",
          "name": "hardlight",
          "value": "BLEND_HARDLIGHT"
        },
        {
          "help": "",
          "name": "hardmix",
          "value": "BLEND_HARDMIX"
        },
        {
          "help": "",
          "name": "heat",
          "value": "BLEND_HEAT"
        },
        {
          "help": "",
          "name": "lighten",
          "value": "BLEND_LIGHTEN"
        },
        {
          "help": "",
          "name": "linearlight",
          "value": "BLEND_LINEARLIGHT"
        },
        {
          "help": "",
          "name": "multiply",
          "value": "BLEND_MULTIPLY"
        },
        {
          "help": "",
          "name": "multiply128",
          "value": "BLEND_MULTIPLY128"
        },
        {
          "help": "",
          "name": "negation",
          "value": "BLEND_NEGATION"
        },
        {
          "help": "",
          "name": "normal",
          "value": "BLEND_NORMAL"
        },
        {
          "help": "",
          "name": "or",
          "value": "BLEND_OR"
        },
        {
          "help": "",
          "name": "overlay",
          "value": "BLEND_OVERLAY"
        },
        {
          "help": "",
          "name": "phoenix",
          "value": "BLEND_PHOENIX"
        },
        {
          "help": "",
          "name": "pinlight",
          "value": "BLEND_PINLIGHT"
        },
        {
          "help": "",
          "name": "reflect",
          "value": "BLEND_REFLECT"
        },
        {
          "help": "",
          "name": "screen",
          "value": "BLEND_SCREEN"
        },
        {
          "help": "",
          "name": "softlight",
          "value": "BLEND_SOFTLIGHT"
        },
        {
          "help": "",
          "name": "subtract",
          "value": "BLEND_SUBTRACT"
        },
        {
          "help": "",
          "name": "vividlight",
          "value": "BLEND_VIVIDLIGHT"
        },
        {
          "help": "",
          "name": "xor",
          "value": "BLEND_XOR"
        },
        {
          "help": "",
          "name": "softdifference",
          "value": "BLEND_SOFTDIFFERENCE"
        },
        {
          "help": "",
          "name": "geometric",
          "value": "BLEND_GEOMETRIC"
        },
        {
          "help": "",
          "name": "harmonic",
          "value": "BLEND_HARMONIC"
        },
        {
          "help": "",
          "name": "bleach",
          "value": "BLEND_BLEACH"
        },
        {
          "help": "",
          "name": "stain",
          "value": "BLEND_STAIN"
        },
        {
          "help": "",
          "name": "interpolate",
          "value": "BLEND_INTERPOLATE"
        },
        {
          "help": "",
          "name": "hardoverlay",
          "value": "BLEND_HARDOVERLAY"
        }
      ],
      "default": 0,
      "description": "<dd><p>Set blend mode for specific pixel component or all pixel components in case\nof <var>all_mode</var>. Default value is <code>normal</code>.\n</p>\n<p>Available values for component modes are:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>addition</samp>\u2019</dt>\n<dt>\u2018<samp>and</samp>\u2019</dt>\n<dt>\u2018<samp>average</samp>\u2019</dt>\n<dt>\u2018<samp>bleach</samp>\u2019</dt>\n<dt>\u2018<samp>burn</samp>\u2019</dt>\n<dt>\u2018<samp>darken</samp>\u2019</dt>\n<dt>\u2018<samp>difference</samp>\u2019</dt>\n<dt>\u2018<samp>divide</samp>\u2019</dt>\n<dt>\u2018<samp>dodge</samp>\u2019</dt>\n<dt>\u2018<samp>exclusion</samp>\u2019</dt>\n<dt>\u2018<samp>extremity</samp>\u2019</dt>\n<dt>\u2018<samp>freeze</samp>\u2019</dt>\n<dt>\u2018<samp>geometric</samp>\u2019</dt>\n<dt>\u2018<samp>glow</samp>\u2019</dt>\n<dt>\u2018<samp>grainextract</samp>\u2019</dt>\n<dt>\u2018<samp>grainmerge</samp>\u2019</dt>\n<dt>\u2018<samp>hardlight</samp>\u2019</dt>\n<dt>\u2018<samp>hardmix</samp>\u2019</dt>\n<dt>\u2018<samp>hardoverlay</samp>\u2019</dt>\n<dt>\u2018<samp>harmonic</samp>\u2019</dt>\n<dt>\u2018<samp>heat</samp>\u2019</dt>\n<dt>\u2018<samp>interpolate</samp>\u2019</dt>\n<dt>\u2018<samp>lighten</samp>\u2019</dt>\n<dt>\u2018<samp>linearlight</samp>\u2019</dt>\n<dt>\u2018<samp>multiply</samp>\u2019</dt>\n<dt>\u2018<samp>multiply128</samp>\u2019</dt>\n<dt>\u2018<samp>negation</samp>\u2019</dt>\n<dt>\u2018<samp>normal</samp>\u2019</dt>\n<dt>\u2018<samp>or</samp>\u2019</dt>\n<dt>\u2018<samp>overlay</samp>\u2019</dt>\n<dt>\u2018<samp>phoenix</samp>\u2019</dt>\n<dt>\u2018<samp>pinlight</samp>\u2019</dt>\n<dt>\u2018<samp>reflect</samp>\u2019</dt>\n<dt>\u2018<samp>screen</samp>\u2019</dt>\n<dt>\u2018<samp>softdifference</samp>\u2019</dt>\n<dt>\u2018<samp>softlight</samp>\u2019</dt>\n<dt>\u2018<samp>stain</samp>\u2019</dt>\n<dt>\u2018<samp>subtract</samp>\u2019</dt>\n<dt>\u2018<samp>vividlight</samp>\u2019</dt>\n<dt>\u2018<samp>xor</samp>\u2019</dt>\n</dl>\n</dd>",
      "name": "c0_mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "c1_mode"
      ],
      "choices": [
        {
          "help": "",
          "name": "addition",
          "value": "BLEND_ADDITION"
        },
        {
          "help": "",
          "name": "addition128",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "grainmerge",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "and",
          "value": "BLEND_AND"
        },
        {
          "help": "",
          "name": "average",
          "value": "BLEND_AVERAGE"
        },
        {
          "help": "",
          "name": "burn",
          "value": "BLEND_BURN"
        },
        {
          "help": "",
          "name": "darken",
          "value": "BLEND_DARKEN"
        },
        {
          "help": "",
          "name": "difference",
          "value": "BLEND_DIFFERENCE"
        },
        {
          "help": "",
          "name": "difference128",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "grainextract",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "divide",
          "value": "BLEND_DIVIDE"
        },
        {
          "help": "",
          "name": "dodge",
          "value": "BLEND_DODGE"
        },
        {
          "help": "",
          "name": "exclusion",
          "value": "BLEND_EXCLUSION"
        },
        {
          "help": "",
          "name": "extremity",
          "value": "BLEND_EXTREMITY"
        },
        {
          "help": "",
          "name": "freeze",
          "value": "BLEND_FREEZE"
        },
        {
          "help": "",
          "name": "glow",
          "value": "BLEND_GLOW"
        },
        {
          "help": "",
          "name": "hardlight",
          "value": "BLEND_HARDLIGHT"
        },
        {
          "help": "",
          "name": "hardmix",
          "value": "BLEND_HARDMIX"
        },
        {
          "help": "",
          "name": "heat",
          "value": "BLEND_HEAT"
        },
        {
          "help": "",
          "name": "lighten",
          "value": "BLEND_LIGHTEN"
        },
        {
          "help": "",
          "name": "linearlight",
          "value": "BLEND_LINEARLIGHT"
        },
        {
          "help": "",
          "name": "multiply",
          "value": "BLEND_MULTIPLY"
        },
        {
          "help": "",
          "name": "multiply128",
          "value": "BLEND_MULTIPLY128"
        },
        {
          "help": "",
          "name": "negation",
          "value": "BLEND_NEGATION"
        },
        {
          "help": "",
          "name": "normal",
          "value": "BLEND_NORMAL"
        },
        {
          "help": "",
          "name": "or",
          "value": "BLEND_OR"
        },
        {
          "help": "",
          "name": "overlay",
          "value": "BLEND_OVERLAY"
        },
        {
          "help": "",
          "name": "phoenix",
          "value": "BLEND_PHOENIX"
        },
        {
          "help": "",
          "name": "pinlight",
          "value": "BLEND_PINLIGHT"
        },
        {
          "help": "",
          "name": "reflect",
          "value": "BLEND_REFLECT"
        },
        {
          "help": "",
          "name": "screen",
          "value": "BLEND_SCREEN"
        },
        {
          "help": "",
          "name": "softlight",
          "value": "BLEND_SOFTLIGHT"
        },
        {
          "help": "",
          "name": "subtract",
          "value": "BLEND_SUBTRACT"
        },
        {
          "help": "",
          "name": "vividlight",
          "value": "BLEND_VIVIDLIGHT"
        },
        {
          "help": "",
          "name": "xor",
          "value": "BLEND_XOR"
        },
        {
          "help": "",
          "name": "softdifference",
          "value": "BLEND_SOFTDIFFERENCE"
        },
        {
          "help": "",
          "name": "geometric",
          "value": "BLEND_GEOMETRIC"
        },
        {
          "help": "",
          "name": "harmonic",
          "value": "BLEND_HARMONIC"
        },
        {
          "help": "",
          "name": "bleach",
          "value": "BLEND_BLEACH"
        },
        {
          "help": "",
          "name": "stain",
          "value": "BLEND_STAIN"
        },
        {
          "help": "",
          "name": "interpolate",
          "value": "BLEND_INTERPOLATE"
        },
        {
          "help": "",
          "name": "hardoverlay",
          "value": "BLEND_HARDOVERLAY"
        }
      ],
      "default": 0,
      "description": "<dd><p>Set blend mode for specific pixel component or all pixel components in case\nof <var>all_mode</var>. Default value is <code>normal</code>.\n</p>\n<p>Available values for component modes are:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>addition</samp>\u2019</dt>\n<dt>\u2018<samp>and</samp>\u2019</dt>\n<dt>\u2018<samp>average</samp>\u2019</dt>\n<dt>\u2018<samp>bleach</samp>\u2019</dt>\n<dt>\u2018<samp>burn</samp>\u2019</dt>\n<dt>\u2018<samp>darken</samp>\u2019</dt>\n<dt>\u2018<samp>difference</samp>\u2019</dt>\n<dt>\u2018<samp>divide</samp>\u2019</dt>\n<dt>\u2018<samp>dodge</samp>\u2019</dt>\n<dt>\u2018<samp>exclusion</samp>\u2019</dt>\n<dt>\u2018<samp>extremity</samp>\u2019</dt>\n<dt>\u2018<samp>freeze</samp>\u2019</dt>\n<dt>\u2018<samp>geometric</samp>\u2019</dt>\n<dt>\u2018<samp>glow</samp>\u2019</dt>\n<dt>\u2018<samp>grainextract</samp>\u2019</dt>\n<dt>\u2018<samp>grainmerge</samp>\u2019</dt>\n<dt>\u2018<samp>hardlight</samp>\u2019</dt>\n<dt>\u2018<samp>hardmix</samp>\u2019</dt>\n<dt>\u2018<samp>hardoverlay</samp>\u2019</dt>\n<dt>\u2018<samp>harmonic</samp>\u2019</dt>\n<dt>\u2018<samp>heat</samp>\u2019</dt>\n<dt>\u2018<samp>interpolate</samp>\u2019</dt>\n<dt>\u2018<samp>lighten</samp>\u2019</dt>\n<dt>\u2018<samp>linearlight</samp>\u2019</dt>\n<dt>\u2018<samp>multiply</samp>\u2019</dt>\n<dt>\u2018<samp>multiply128</samp>\u2019</dt>\n<dt>\u2018<samp>negation</samp>\u2019</dt>\n<dt>\u2018<samp>normal</samp>\u2019</dt>\n<dt>\u2018<samp>or</samp>\u2019</dt>\n<dt>\u2018<samp>overlay</samp>\u2019</dt>\n<dt>\u2018<samp>phoenix</samp>\u2019</dt>\n<dt>\u2018<samp>pinlight</samp>\u2019</dt>\n<dt>\u2018<samp>reflect</samp>\u2019</dt>\n<dt>\u2018<samp>screen</samp>\u2019</dt>\n<dt>\u2018<samp>softdifference</samp>\u2019</dt>\n<dt>\u2018<samp>softlight</samp>\u2019</dt>\n<dt>\u2018<samp>stain</samp>\u2019</dt>\n<dt>\u2018<samp>subtract</samp>\u2019</dt>\n<dt>\u2018<samp>vividlight</samp>\u2019</dt>\n<dt>\u2018<samp>xor</samp>\u2019</dt>\n</dl>\n</dd>",
      "name": "c1_mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "c2_mode"
      ],
      "choices": [
        {
          "help": "",
          "name": "addition",
          "value": "BLEND_ADDITION"
        },
        {
          "help": "",
          "name": "addition128",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "grainmerge",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "and",
          "value": "BLEND_AND"
        },
        {
          "help": "",
          "name": "average",
          "value": "BLEND_AVERAGE"
        },
        {
          "help": "",
          "name": "burn",
          "value": "BLEND_BURN"
        },
        {
          "help": "",
          "name": "darken",
          "value": "BLEND_DARKEN"
        },
        {
          "help": "",
          "name": "difference",
          "value": "BLEND_DIFFERENCE"
        },
        {
          "help": "",
          "name": "difference128",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "grainextract",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "divide",
          "value": "BLEND_DIVIDE"
        },
        {
          "help": "",
          "name": "dodge",
          "value": "BLEND_DODGE"
        },
        {
          "help": "",
          "name": "exclusion",
          "value": "BLEND_EXCLUSION"
        },
        {
          "help": "",
          "name": "extremity",
          "value": "BLEND_EXTREMITY"
        },
        {
          "help": "",
          "name": "freeze",
          "value": "BLEND_FREEZE"
        },
        {
          "help": "",
          "name": "glow",
          "value": "BLEND_GLOW"
        },
        {
          "help": "",
          "name": "hardlight",
          "value": "BLEND_HARDLIGHT"
        },
        {
          "help": "",
          "name": "hardmix",
          "value": "BLEND_HARDMIX"
        },
        {
          "help": "",
          "name": "heat",
          "value": "BLEND_HEAT"
        },
        {
          "help": "",
          "name": "lighten",
          "value": "BLEND_LIGHTEN"
        },
        {
          "help": "",
          "name": "linearlight",
          "value": "BLEND_LINEARLIGHT"
        },
        {
          "help": "",
          "name": "multiply",
          "value": "BLEND_MULTIPLY"
        },
        {
          "help": "",
          "name": "multiply128",
          "value": "BLEND_MULTIPLY128"
        },
        {
          "help": "",
          "name": "negation",
          "value": "BLEND_NEGATION"
        },
        {
          "help": "",
          "name": "normal",
          "value": "BLEND_NORMAL"
        },
        {
          "help": "",
          "name": "or",
          "value": "BLEND_OR"
        },
        {
          "help": "",
          "name": "overlay",
          "value": "BLEND_OVERLAY"
        },
        {
          "help": "",
          "name": "phoenix",
          "value": "BLEND_PHOENIX"
        },
        {
          "help": "",
          "name": "pinlight",
          "value": "BLEND_PINLIGHT"
        },
        {
          "help": "",
          "name": "reflect",
          "value": "BLEND_REFLECT"
        },
        {
          "help": "",
          "name": "screen",
          "value": "BLEND_SCREEN"
        },
        {
          "help": "",
          "name": "softlight",
          "value": "BLEND_SOFTLIGHT"
        },
        {
          "help": "",
          "name": "subtract",
          "value": "BLEND_SUBTRACT"
        },
        {
          "help": "",
          "name": "vividlight",
          "value": "BLEND_VIVIDLIGHT"
        },
        {
          "help": "",
          "name": "xor",
          "value": "BLEND_XOR"
        },
        {
          "help": "",
          "name": "softdifference",
          "value": "BLEND_SOFTDIFFERENCE"
        },
        {
          "help": "",
          "name": "geometric",
          "value": "BLEND_GEOMETRIC"
        },
        {
          "help": "",
          "name": "harmonic",
          "value": "BLEND_HARMONIC"
        },
        {
          "help": "",
          "name": "bleach",
          "value": "BLEND_BLEACH"
        },
        {
          "help": "",
          "name": "stain",
          "value": "BLEND_STAIN"
        },
        {
          "help": "",
          "name": "interpolate",
          "value": "BLEND_INTERPOLATE"
        },
        {
          "help": "",
          "name": "hardoverlay",
          "value": "BLEND_HARDOVERLAY"
        }
      ],
      "default": 0,
      "description": "<dd><p>Set blend mode for specific pixel component or all pixel components in case\nof <var>all_mode</var>. Default value is <code>normal</code>.\n</p>\n<p>Available values for component modes are:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>addition</samp>\u2019</dt>\n<dt>\u2018<samp>and</samp>\u2019</dt>\n<dt>\u2018<samp>average</samp>\u2019</dt>\n<dt>\u2018<samp>bleach</samp>\u2019</dt>\n<dt>\u2018<samp>burn</samp>\u2019</dt>\n<dt>\u2018<samp>darken</samp>\u2019</dt>\n<dt>\u2018<samp>difference</samp>\u2019</dt>\n<dt>\u2018<samp>divide</samp>\u2019</dt>\n<dt>\u2018<samp>dodge</samp>\u2019</dt>\n<dt>\u2018<samp>exclusion</samp>\u2019</dt>\n<dt>\u2018<samp>extremity</samp>\u2019</dt>\n<dt>\u2018<samp>freeze</samp>\u2019</dt>\n<dt>\u2018<samp>geometric</samp>\u2019</dt>\n<dt>\u2018<samp>glow</samp>\u2019</dt>\n<dt>\u2018<samp>grainextract</samp>\u2019</dt>\n<dt>\u2018<samp>grainmerge</samp>\u2019</dt>\n<dt>\u2018<samp>hardlight</samp>\u2019</dt>\n<dt>\u2018<samp>hardmix</samp>\u2019</dt>\n<dt>\u2018<samp>hardoverlay</samp>\u2019</dt>\n<dt>\u2018<samp>harmonic</samp>\u2019</dt>\n<dt>\u2018<samp>heat</samp>\u2019</dt>\n<dt>\u2018<samp>interpolate</samp>\u2019</dt>\n<dt>\u2018<samp>lighten</samp>\u2019</dt>\n<dt>\u2018<samp>linearlight</samp>\u2019</dt>\n<dt>\u2018<samp>multiply</samp>\u2019</dt>\n<dt>\u2018<samp>multiply128</samp>\u2019</dt>\n<dt>\u2018<samp>negation</samp>\u2019</dt>\n<dt>\u2018<samp>normal</samp>\u2019</dt>\n<dt>\u2018<samp>or</samp>\u2019</dt>\n<dt>\u2018<samp>overlay</samp>\u2019</dt>\n<dt>\u2018<samp>phoenix</samp>\u2019</dt>\n<dt>\u2018<samp>pinlight</samp>\u2019</dt>\n<dt>\u2018<samp>reflect</samp>\u2019</dt>\n<dt>\u2018<samp>screen</samp>\u2019</dt>\n<dt>\u2018<samp>softdifference</samp>\u2019</dt>\n<dt>\u2018<samp>softlight</samp>\u2019</dt>\n<dt>\u2018<samp>stain</samp>\u2019</dt>\n<dt>\u2018<samp>subtract</samp>\u2019</dt>\n<dt>\u2018<samp>vividlight</samp>\u2019</dt>\n<dt>\u2018<samp>xor</samp>\u2019</dt>\n</dl>\n</dd>",
      "name": "c2_mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "c3_mode"
      ],
      "choices": [
        {
          "help": "",
          "name": "addition",
          "value": "BLEND_ADDITION"
        },
        {
          "help": "",
          "name": "addition128",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "grainmerge",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "and",
          "value": "BLEND_AND"
        },
        {
          "help": "",
          "name": "average",
          "value": "BLEND_AVERAGE"
        },
        {
          "help": "",
          "name": "burn",
          "value": "BLEND_BURN"
        },
        {
          "help": "",
          "name": "darken",
          "value": "BLEND_DARKEN"
        },
        {
          "help": "",
          "name": "difference",
          "value": "BLEND_DIFFERENCE"
        },
        {
          "help": "",
          "name": "difference128",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "grainextract",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "divide",
          "value": "BLEND_DIVIDE"
        },
        {
          "help": "",
          "name": "dodge",
          "value": "BLEND_DODGE"
        },
        {
          "help": "",
          "name": "exclusion",
          "value": "BLEND_EXCLUSION"
        },
        {
          "help": "",
          "name": "extremity",
          "value": "BLEND_EXTREMITY"
        },
        {
          "help": "",
          "name": "freeze",
          "value": "BLEND_FREEZE"
        },
        {
          "help": "",
          "name": "glow",
          "value": "BLEND_GLOW"
        },
        {
          "help": "",
          "name": "hardlight",
          "value": "BLEND_HARDLIGHT"
        },
        {
          "help": "",
          "name": "hardmix",
          "value": "BLEND_HARDMIX"
        },
        {
          "help": "",
          "name": "heat",
          "value": "BLEND_HEAT"
        },
        {
          "help": "",
          "name": "lighten",
          "value": "BLEND_LIGHTEN"
        },
        {
          "help": "",
          "name": "linearlight",
          "value": "BLEND_LINEARLIGHT"
        },
        {
          "help": "",
          "name": "multiply",
          "value": "BLEND_MULTIPLY"
        },
        {
          "help": "",
          "name": "multiply128",
          "value": "BLEND_MULTIPLY128"
        },
        {
          "help": "",
          "name": "negation",
          "value": "BLEND_NEGATION"
        },
        {
          "help": "",
          "name": "normal",
          "value": "BLEND_NORMAL"
        },
        {
          "help": "",
          "name": "or",
          "value": "BLEND_OR"
        },
        {
          "help": "",
          "name": "overlay",
          "value": "BLEND_OVERLAY"
        },
        {
          "help": "",
          "name": "phoenix",
          "value": "BLEND_PHOENIX"
        },
        {
          "help": "",
          "name": "pinlight",
          "value": "BLEND_PINLIGHT"
        },
        {
          "help": "",
          "name": "reflect",
          "value": "BLEND_REFLECT"
        },
        {
          "help": "",
          "name": "screen",
          "value": "BLEND_SCREEN"
        },
        {
          "help": "",
          "name": "softlight",
          "value": "BLEND_SOFTLIGHT"
        },
        {
          "help": "",
          "name": "subtract",
          "value": "BLEND_SUBTRACT"
        },
        {
          "help": "",
          "name": "vividlight",
          "value": "BLEND_VIVIDLIGHT"
        },
        {
          "help": "",
          "name": "xor",
          "value": "BLEND_XOR"
        },
        {
          "help": "",
          "name": "softdifference",
          "value": "BLEND_SOFTDIFFERENCE"
        },
        {
          "help": "",
          "name": "geometric",
          "value": "BLEND_GEOMETRIC"
        },
        {
          "help": "",
          "name": "harmonic",
          "value": "BLEND_HARMONIC"
        },
        {
          "help": "",
          "name": "bleach",
          "value": "BLEND_BLEACH"
        },
        {
          "help": "",
          "name": "stain",
          "value": "BLEND_STAIN"
        },
        {
          "help": "",
          "name": "interpolate",
          "value": "BLEND_INTERPOLATE"
        },
        {
          "help": "",
          "name": "hardoverlay",
          "value": "BLEND_HARDOVERLAY"
        }
      ],
      "default": 0,
      "description": "<dd><p>Set blend mode for specific pixel component or all pixel components in case\nof <var>all_mode</var>. Default value is <code>normal</code>.\n</p>\n<p>Available values for component modes are:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>addition</samp>\u2019</dt>\n<dt>\u2018<samp>and</samp>\u2019</dt>\n<dt>\u2018<samp>average</samp>\u2019</dt>\n<dt>\u2018<samp>bleach</samp>\u2019</dt>\n<dt>\u2018<samp>burn</samp>\u2019</dt>\n<dt>\u2018<samp>darken</samp>\u2019</dt>\n<dt>\u2018<samp>difference</samp>\u2019</dt>\n<dt>\u2018<samp>divide</samp>\u2019</dt>\n<dt>\u2018<samp>dodge</samp>\u2019</dt>\n<dt>\u2018<samp>exclusion</samp>\u2019</dt>\n<dt>\u2018<samp>extremity</samp>\u2019</dt>\n<dt>\u2018<samp>freeze</samp>\u2019</dt>\n<dt>\u2018<samp>geometric</samp>\u2019</dt>\n<dt>\u2018<samp>glow</samp>\u2019</dt>\n<dt>\u2018<samp>grainextract</samp>\u2019</dt>\n<dt>\u2018<samp>grainmerge</samp>\u2019</dt>\n<dt>\u2018<samp>hardlight</samp>\u2019</dt>\n<dt>\u2018<samp>hardmix</samp>\u2019</dt>\n<dt>\u2018<samp>hardoverlay</samp>\u2019</dt>\n<dt>\u2018<samp>harmonic</samp>\u2019</dt>\n<dt>\u2018<samp>heat</samp>\u2019</dt>\n<dt>\u2018<samp>interpolate</samp>\u2019</dt>\n<dt>\u2018<samp>lighten</samp>\u2019</dt>\n<dt>\u2018<samp>linearlight</samp>\u2019</dt>\n<dt>\u2018<samp>multiply</samp>\u2019</dt>\n<dt>\u2018<samp>multiply128</samp>\u2019</dt>\n<dt>\u2018<samp>negation</samp>\u2019</dt>\n<dt>\u2018<samp>normal</samp>\u2019</dt>\n<dt>\u2018<samp>or</samp>\u2019</dt>\n<dt>\u2018<samp>overlay</samp>\u2019</dt>\n<dt>\u2018<samp>phoenix</samp>\u2019</dt>\n<dt>\u2018<samp>pinlight</samp>\u2019</dt>\n<dt>\u2018<samp>reflect</samp>\u2019</dt>\n<dt>\u2018<samp>screen</samp>\u2019</dt>\n<dt>\u2018<samp>softdifference</samp>\u2019</dt>\n<dt>\u2018<samp>softlight</samp>\u2019</dt>\n<dt>\u2018<samp>stain</samp>\u2019</dt>\n<dt>\u2018<samp>subtract</samp>\u2019</dt>\n<dt>\u2018<samp>vividlight</samp>\u2019</dt>\n<dt>\u2018<samp>xor</samp>\u2019</dt>\n</dl>\n</dd>",
      "name": "c3_mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "all_mode"
      ],
      "choices": [
        {
          "help": "",
          "name": "addition",
          "value": "BLEND_ADDITION"
        },
        {
          "help": "",
          "name": "addition128",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "grainmerge",
          "value": "BLEND_GRAINMERGE"
        },
        {
          "help": "",
          "name": "and",
          "value": "BLEND_AND"
        },
        {
          "help": "",
          "name": "average",
          "value": "BLEND_AVERAGE"
        },
        {
          "help": "",
          "name": "burn",
          "value": "BLEND_BURN"
        },
        {
          "help": "",
          "name": "darken",
          "value": "BLEND_DARKEN"
        },
        {
          "help": "",
          "name": "difference",
          "value": "BLEND_DIFFERENCE"
        },
        {
          "help": "",
          "name": "difference128",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "grainextract",
          "value": "BLEND_GRAINEXTRACT"
        },
        {
          "help": "",
          "name": "divide",
          "value": "BLEND_DIVIDE"
        },
        {
          "help": "",
          "name": "dodge",
          "value": "BLEND_DODGE"
        },
        {
          "help": "",
          "name": "exclusion",
          "value": "BLEND_EXCLUSION"
        },
        {
          "help": "",
          "name": "extremity",
          "value": "BLEND_EXTREMITY"
        },
        {
          "help": "",
          "name": "freeze",
          "value": "BLEND_FREEZE"
        },
        {
          "help": "",
          "name": "glow",
          "value": "BLEND_GLOW"
        },
        {
          "help": "",
          "name": "hardlight",
          "value": "BLEND_HARDLIGHT"
        },
        {
          "help": "",
          "name": "hardmix",
          "value": "BLEND_HARDMIX"
        },
        {
          "help": "",
          "name": "heat",
          "value": "BLEND_HEAT"
        },
        {
          "help": "",
          "name": "lighten",
          "value": "BLEND_LIGHTEN"
        },
        {
          "help": "",
          "name": "linearlight",
          "value": "BLEND_LINEARLIGHT"
        },
        {
          "help": "",
          "name": "multiply",
          "value": "BLEND_MULTIPLY"
        },
        {
          "help": "",
          "name": "multiply128",
          "value": "BLEND_MULTIPLY128"
        },
        {
          "help": "",
          "name": "negation",
          "value": "BLEND_NEGATION"
        },
        {
          "help": "",
          "name": "normal",
          "value": "BLEND_NORMAL"
        },
        {
          "help": "",
          "name": "or",
          "value": "BLEND_OR"
        },
        {
          "help": "",
          "name": "overlay",
          "value": "BLEND_OVERLAY"
        },
        {
          "help": "",
          "name": "phoenix",
          "value": "BLEND_PHOENIX"
        },
        {
          "help": "",
          "name": "pinlight",
          "value": "BLEND_PINLIGHT"
        },
        {
          "help": "",
          "name": "reflect",
          "value": "BLEND_REFLECT"
        },
        {
          "help": "",
          "name": "screen",
          "value": "BLEND_SCREEN"
        },
        {
          "help": "",
          "name": "softlight",
          "value": "BLEND_SOFTLIGHT"
        },
        {
          "help": "",
          "name": "subtract",
          "value": "BLEND_SUBTRACT"
        },
        {
          "help": "",
          "name": "vividlight",
          "value": "BLEND_VIVIDLIGHT"
        },
        {
          "help": "",
          "name": "xor",
          "value": "BLEND_XOR"
        },
        {
          "help": "",
          "name": "softdifference",
          "value": "BLEND_SOFTDIFFERENCE"
        },
        {
          "help": "",
          "name": "geometric",
          "value": "BLEND_GEOMETRIC"
        },
        {
          "help": "",
          "name": "harmonic",
          "value": "BLEND_HARMONIC"
        },
        {
          "help": "",
          "name": "bleach",
          "value": "BLEND_BLEACH"
        },
        {
          "help": "",
          "name": "stain",
          "value": "BLEND_STAIN"
        },
        {
          "help": "",
          "name": "interpolate",
          "value": "BLEND_INTERPOLATE"
        },
        {
          "help": "",
          "name": "hardoverlay",
          "value": "BLEND_HARDOVERLAY"
        }
      ],
      "default": -1,
      "description": "<dd><p>Set blend mode for specific pixel component or all pixel components in case\nof <var>all_mode</var>. Default value is <code>normal</code>.\n</p>\n<p>Available values for component modes are:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>addition</samp>\u2019</dt>\n<dt>\u2018<samp>and</samp>\u2019</dt>\n<dt>\u2018<samp>average</samp>\u2019</dt>\n<dt>\u2018<samp>bleach</samp>\u2019</dt>\n<dt>\u2018<samp>burn</samp>\u2019</dt>\n<dt>\u2018<samp>darken</samp>\u2019</dt>\n<dt>\u2018<samp>difference</samp>\u2019</dt>\n<dt>\u2018<samp>divide</samp>\u2019</dt>\n<dt>\u2018<samp>dodge</samp>\u2019</dt>\n<dt>\u2018<samp>exclusion</samp>\u2019</dt>\n<dt>\u2018<samp>extremity</samp>\u2019</dt>\n<dt>\u2018<samp>freeze</samp>\u2019</dt>\n<dt>\u2018<samp>geometric</samp>\u2019</dt>\n<dt>\u2018<samp>glow</samp>\u2019</dt>\n<dt>\u2018<samp>grainextract</samp>\u2019</dt>\n<dt>\u2018<samp>grainmerge</samp>\u2019</dt>\n<dt>\u2018<samp>hardlight</samp>\u2019</dt>\n<dt>\u2018<samp>hardmix</samp>\u2019</dt>\n<dt>\u2018<samp>hardoverlay</samp>\u2019</dt>\n<dt>\u2018<samp>harmonic</samp>\u2019</dt>\n<dt>\u2018<samp>heat</samp>\u2019</dt>\n<dt>\u2018<samp>interpolate</samp>\u2019</dt>\n<dt>\u2018<samp>lighten</samp>\u2019</dt>\n<dt>\u2018<samp>linearlight</samp>\u2019</dt>\n<dt>\u2018<samp>multiply</samp>\u2019</dt>\n<dt>\u2018<samp>multiply128</samp>\u2019</dt>\n<dt>\u2018<samp>negation</samp>\u2019</dt>\n<dt>\u2018<samp>normal</samp>\u2019</dt>\n<dt>\u2018<samp>or</samp>\u2019</dt>\n<dt>\u2018<samp>overlay</samp>\u2019</dt>\n<dt>\u2018<samp>phoenix</samp>\u2019</dt>\n<dt>\u2018<samp>pinlight</samp>\u2019</dt>\n<dt>\u2018<samp>reflect</samp>\u2019</dt>\n<dt>\u2018<samp>screen</samp>\u2019</dt>\n<dt>\u2018<samp>softdifference</samp>\u2019</dt>\n<dt>\u2018<samp>softlight</samp>\u2019</dt>\n<dt>\u2018<samp>stain</samp>\u2019</dt>\n<dt>\u2018<samp>subtract</samp>\u2019</dt>\n<dt>\u2018<samp>vividlight</samp>\u2019</dt>\n<dt>\u2018<samp>xor</samp>\u2019</dt>\n</dl>\n</dd>",
      "name": "all_mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "c0_expr"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Set blend expression for specific pixel component or all pixel components in case\nof <var>all_expr</var>. Note that related mode options will be ignored if those are set.\n</p>\n<p>The expressions can use the following variables:\n</p>\n<dl compact=\"compact\">\n<dt><samp>N</samp></dt>\n<dd><p>The sequential number of the filtered frame, starting from <code>0</code>.\n</p>\n</dd>\n<dt><samp>X</samp></dt>\n<dt><samp>Y</samp></dt>\n<dd><p>the coordinates of the current sample\n</p>\n</dd>\n<dt><samp>W</samp></dt>\n<dt><samp>H</samp></dt>\n<dd><p>the width and height of currently filtered plane\n</p>\n</dd>\n<dt><samp>SW</samp></dt>\n<dt><samp>SH</samp></dt>\n<dd><p>Width and height scale for the plane being filtered. It is the\nratio between the dimensions of the current plane to the luma plane,\ne.g. for a <code>yuv420p</code> frame, the values are <code>1,1</code> for\nthe luma plane and <code>0.5,0.5</code> for the chroma planes.\n</p>\n</dd>\n<dt><samp>T</samp></dt>\n<dd><p>Time of the current frame, expressed in seconds.\n</p>\n</dd>\n<dt><samp>TOP, A</samp></dt>\n<dd><p>Value of pixel component at current location for first video frame (top layer).\n</p>\n</dd>\n<dt><samp>BOTTOM, B</samp></dt>\n<dd><p>Value of pixel component at current location for second video frame (bottom layer).\n</p></dd>\n</dl>\n</dd>",
      "name": "c0_expr",
      "required": true,
      "typing": "str"
    },
    {
      "alias": [
        "c1_expr"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Set blend expression for specific pixel component or all pixel components in case\nof <var>all_expr</var>. Note that related mode options will be ignored if those are set.\n</p>\n<p>The expressions can use the following variables:\n</p>\n<dl compact=\"compact\">\n<dt><samp>N</samp></dt>\n<dd><p>The sequential number of the filtered frame, starting from <code>0</code>.\n</p>\n</dd>\n<dt><samp>X</samp></dt>\n<dt><samp>Y</samp></dt>\n<dd><p>the coordinates of the current sample\n</p>\n</dd>\n<dt><samp>W</samp></dt>\n<dt><samp>H</samp></dt>\n<dd><p>the width and height of currently filtered plane\n</p>\n</dd>\n<dt><samp>SW</samp></dt>\n<dt><samp>SH</samp></dt>\n<dd><p>Width and height scale for the plane being filtered. It is the\nratio between the dimensions of the current plane to the luma plane,\ne.g. for a <code>yuv420p</code> frame, the values are <code>1,1</code> for\nthe luma plane and <code>0.5,0.5</code> for the chroma planes.\n</p>\n</dd>\n<dt><samp>T</samp></dt>\n<dd><p>Time of the current frame, expressed in seconds.\n</p>\n</dd>\n<dt><samp>TOP, A</samp></dt>\n<dd><p>Value of pixel component at current location for first video frame (top layer).\n</p>\n</dd>\n<dt><samp>BOTTOM, B</samp></dt>\n<dd><p>Value of pixel component at current location for second video frame (bottom layer).\n</p></dd>\n</dl>\n</dd>",
      "name": "c1_expr",
      "required": true,
      "typing": "str"
    },
    {
      "alias": [
        "c2_expr"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Set blend expression for specific pixel component or all pixel components in case\nof <var>all_expr</var>. Note that related mode options will be ignored if those are set.\n</p>\n<p>The expressions can use the following variables:\n</p>\n<dl compact=\"compact\">\n<dt><samp>N</samp></dt>\n<dd><p>The sequential number of the filtered frame, starting from <code>0</code>.\n</p>\n</dd>\n<dt><samp>X</samp></dt>\n<dt><samp>Y</samp></dt>\n<dd><p>the coordinates of the current sample\n</p>\n</dd>\n<dt><samp>W</samp></dt>\n<dt><samp>H</samp></dt>\n<dd><p>the width and height of currently filtered plane\n</p>\n</dd>\n<dt><samp>SW</samp></dt>\n<dt><samp>SH</samp></dt>\n<dd><p>Width and height scale for the plane being filtered. It is the\nratio between the dimensions of the current plane to the luma plane,\ne.g. for a <code>yuv420p</code> frame, the values are <code>1,1</code> for\nthe luma plane and <code>0.5,0.5</code> for the chroma planes.\n</p>\n</dd>\n<dt><samp>T</samp></dt>\n<dd><p>Time of the current frame, expressed in seconds.\n</p>\n</dd>\n<dt><samp>TOP, A</samp></dt>\n<dd><p>Value of pixel component at current location for first video frame (top layer).\n</p>\n</dd>\n<dt><samp>BOTTOM, B</samp></dt>\n<dd><p>Value of pixel component at current location for second video frame (bottom layer).\n</p></dd>\n</dl>\n</dd>",
      "name": "c2_expr",
      "required": true,
      "typing": "str"
    },
    {
      "alias": [
        "c3_expr"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Set blend expression for specific pixel component or all pixel components in case\nof <var>all_expr</var>. Note that related mode options will be ignored if those are set.\n</p>\n<p>The expressions can use the following variables:\n</p>\n<dl compact=\"compact\">\n<dt><samp>N</samp></dt>\n<dd><p>The sequential number of the filtered frame, starting from <code>0</code>.\n</p>\n</dd>\n<dt><samp>X</samp></dt>\n<dt><samp>Y</samp></dt>\n<dd><p>the coordinates of the current sample\n</p>\n</dd>\n<dt><samp>W</samp></dt>\n<dt><samp>H</samp></dt>\n<dd><p>the width and height of currently filtered plane\n</p>\n</dd>\n<dt><samp>SW</samp></dt>\n<dt><samp>SH</samp></dt>\n<dd><p>Width and height scale for the plane being filtered. It is the\nratio between the dimensions of the current plane to the luma plane,\ne.g. for a <code>yuv420p</code> frame, the values are <code>1,1</code> for\nthe luma plane and <code>0.5,0.5</code> for the chroma planes.\n</p>\n</dd>\n<dt><samp>T</samp></dt>\n<dd><p>Time of the current frame, expressed in seconds.\n</p>\n</dd>\n<dt><samp>TOP, A</samp></dt>\n<dd><p>Value of pixel component at current location for first video frame (top layer).\n</p>\n</dd>\n<dt><samp>BOTTOM, B</samp></dt>\n<dd><p>Value of pixel component at current location for second video frame (bottom layer).\n</p></dd>\n</dl>\n</dd>",
      "name": "c3_expr",
      "required": true,
      "typing": "str"
    },
    {
      "alias": [
        "all_expr"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Set blend expression for specific pixel component or all pixel components in case\nof <var>all_expr</var>. Note that related mode options will be ignored if those are set.\n</p>\n<p>The expressions can use the following variables:\n</p>\n<dl compact=\"compact\">\n<dt><samp>N</samp></dt>\n<dd><p>The sequential number of the filtered frame, starting from <code>0</code>.\n</p>\n</dd>\n<dt><samp>X</samp></dt>\n<dt><samp>Y</samp></dt>\n<dd><p>the coordinates of the current sample\n</p>\n</dd>\n<dt><samp>W</samp></dt>\n<dt><samp>H</samp></dt>\n<dd><p>the width and height of currently filtered plane\n</p>\n</dd>\n<dt><samp>SW</samp></dt>\n<dt><samp>SH</samp></dt>\n<dd><p>Width and height scale for the plane being filtered. It is the\nratio between the dimensions of the current plane to the luma plane,\ne.g. for a <code>yuv420p</code> frame, the values are <code>1,1</code> for\nthe luma plane and <code>0.5,0.5</code> for the chroma planes.\n</p>\n</dd>\n<dt><samp>T</samp></dt>\n<dd><p>Time of the current frame, expressed in seconds.\n</p>\n</dd>\n<dt><samp>TOP, A</samp></dt>\n<dd><p>Value of pixel component at current location for first video frame (top layer).\n</p>\n</dd>\n<dt><samp>BOTTOM, B</samp></dt>\n<dd><p>Value of pixel component at current location for second video frame (bottom layer).\n</p></dd>\n</dl>\n</dd>",
      "name": "all_expr",
      "required": true,
      "typing": "str"
    },
    {
      "alias": [
        "c0_opacity"
      ],
      "choices": [],
      "default": 1.0,
      "description": "<dd><p>Set blend opacity for specific pixel component or all pixel components in case\nof <var>all_opacity</var>. Only used in combination with pixel component blend modes.\n</p>\n</dd>",
      "name": "c0_opacity",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "c1_opacity"
      ],
      "choices": [],
      "default": 1.0,
      "description": "<dd><p>Set blend opacity for specific pixel component or all pixel components in case\nof <var>all_opacity</var>. Only used in combination with pixel component blend modes.\n</p>\n</dd>",
      "name": "c1_opacity",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "c2_opacity"
      ],
      "choices": [],
      "default": 1.0,
      "description": "<dd><p>Set blend opacity for specific pixel component or all pixel components in case\nof <var>all_opacity</var>. Only used in combination with pixel component blend modes.\n</p>\n</dd>",
      "name": "c2_opacity",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "c3_opacity"
      ],
      "choices": [],
      "default": 1.0,
      "description": "<dd><p>Set blend opacity for specific pixel component or all pixel components in case\nof <var>all_opacity</var>. Only used in combination with pixel component blend modes.\n</p>\n</dd>",
      "name": "c3_opacity",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "all_opacity"
      ],
      "choices": [],
      "default": 1.0,
      "description": "<dd><p>Set blend opacity for specific pixel component or all pixel components in case\nof <var>all_opacity</var>. Only used in combination with pixel component blend modes.\n</p>\n</dd>",
      "name": "all_opacity",
      "required": false,
      "typing": "float"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#blend"
}
