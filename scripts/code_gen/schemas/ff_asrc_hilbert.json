{
  "description": "9.9 hilbert\nGenerate odd-tap Hilbert transform FIR coefficients.\n\nThe resulting stream can be used with afir filter for phase-shifting\nthe signal by 90 degrees.\n\nThis is used in many matrix coding schemes and for analytic signal generation.\nThe process is often written as a multiplication by i (or j), the imaginary unit.\n\nThe filter accepts the following options:",
  "filter_type": "asrc",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_asrc_hilbert",
  "input_stream_typings": [],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "hilbert",
  "options": [
    {
      "alias": [
        "sample_rate",
        "r"
      ],
      "default": 44100,
      "description": "<dd><p>Set sample rate, default is 44100.\n</p>\n</dd>",
      "name": "sample_rate",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "taps",
        "t"
      ],
      "default": 22051,
      "description": "<dd><p>Set length of FIR filter, default is 22051.\n</p>\n</dd>",
      "name": "taps",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "nb_samples",
        "n"
      ],
      "default": 1024,
      "description": "<dd><p>Set number of samples per each frame.\n</p>\n</dd>",
      "name": "nb_samples",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "win_func",
        "w"
      ],
      "default": "WFUNC_BLACKMAN",
      "description": "<dd><p>Set window function to be used when generating FIR coefficients.\n</p></dd>",
      "name": "win_func",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_AUDIO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#hilbert"
}
