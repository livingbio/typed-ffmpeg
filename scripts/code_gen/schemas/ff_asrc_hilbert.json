{
  "description": "### 9.9 hilbert\n\nGenerate odd-tap Hilbert transform FIR coefficients.\n\nThe resulting stream can be used with afir filter for phase-shifting the\nsignal by 90 degrees.\n\nThis is used in many matrix coding schemes and for analytic signal generation.\nThe process is often written as a multiplication by i (or j), the imaginary\nunit.\n\nThe filter accepts the following options:\n\n**sample_rate, s**\n\n    Set sample rate, default is 44100. \n\n**taps, t**\n\n    Set length of FIR filter, default is 22051. \n\n**nb_samples, n**\n\n    Set number of samples per each frame. \n\n**win_func, w**\n\n    Set window function to be used when generating FIR coefficients. \n\n",
  "filter_type": "asrc",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_asrc_hilbert",
  "input_stream_typings": [],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "hilbert",
  "options": [
    {
      "alias": [
        "sample_rate",
        "r"
      ],
      "choices": [],
      "default": 44100,
      "description": "<dd><p>Set sample rate, default is 44100.\n</p>\n</dd>",
      "name": "sample_rate",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "taps",
        "t"
      ],
      "choices": [],
      "default": 22051,
      "description": "<dd><p>Set length of FIR filter, default is 22051.\n</p>\n</dd>",
      "name": "taps",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "nb_samples",
        "n"
      ],
      "choices": [],
      "default": 1024,
      "description": "<dd><p>Set number of samples per each frame.\n</p>\n</dd>",
      "name": "nb_samples",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "win_func",
        "w"
      ],
      "choices": [
        {
          "help": "Rectangular",
          "name": "rect",
          "value": "WFUNC_RECT"
        },
        {
          "help": "Bartlett",
          "name": "bartlett",
          "value": "WFUNC_BARTLETT"
        },
        {
          "help": "Hann",
          "name": "hann",
          "value": "WFUNC_HANNING"
        },
        {
          "help": "Hanning",
          "name": "hanning",
          "value": "WFUNC_HANNING"
        },
        {
          "help": "Hamming",
          "name": "hamming",
          "value": "WFUNC_HAMMING"
        },
        {
          "help": "Blackman",
          "name": "blackman",
          "value": "WFUNC_BLACKMAN"
        },
        {
          "help": "Welch",
          "name": "welch",
          "value": "WFUNC_WELCH"
        },
        {
          "help": "Flat-top",
          "name": "flattop",
          "value": "WFUNC_FLATTOP"
        },
        {
          "help": "Blackman-Harris",
          "name": "bharris",
          "value": "WFUNC_BHARRIS"
        },
        {
          "help": "Blackman-Nuttall",
          "name": "bnuttall",
          "value": "WFUNC_BNUTTALL"
        },
        {
          "help": "Bartlett-Hann",
          "name": "bhann",
          "value": "WFUNC_BHANN"
        },
        {
          "help": "Sine",
          "name": "sine",
          "value": "WFUNC_SINE"
        },
        {
          "help": "Nuttall",
          "name": "nuttall",
          "value": "WFUNC_NUTTALL"
        },
        {
          "help": "Lanczos",
          "name": "lanczos",
          "value": "WFUNC_LANCZOS"
        },
        {
          "help": "Gauss",
          "name": "gauss",
          "value": "WFUNC_GAUSS"
        },
        {
          "help": "Tukey",
          "name": "tukey",
          "value": "WFUNC_TUKEY"
        },
        {
          "help": "Dolph-Chebyshev",
          "name": "dolph",
          "value": "WFUNC_DOLPH"
        },
        {
          "help": "Cauchy",
          "name": "cauchy",
          "value": "WFUNC_CAUCHY"
        },
        {
          "help": "Parzen",
          "name": "parzen",
          "value": "WFUNC_PARZEN"
        },
        {
          "help": "Poisson",
          "name": "poisson",
          "value": "WFUNC_POISSON"
        },
        {
          "help": "Bohman",
          "name": "bohman",
          "value": "WFUNC_BOHMAN"
        },
        {
          "help": "Kaiser",
          "name": "kaiser",
          "value": "WFUNC_KAISER"
        },
        {
          "help": "Rectangular",
          "name": "rect",
          "value": "WFUNC_RECT"
        },
        {
          "help": "Bartlett",
          "name": "bartlett",
          "value": "WFUNC_BARTLETT"
        },
        {
          "help": "Hann",
          "name": "hann",
          "value": "WFUNC_HANNING"
        },
        {
          "help": "Hanning",
          "name": "hanning",
          "value": "WFUNC_HANNING"
        },
        {
          "help": "Hamming",
          "name": "hamming",
          "value": "WFUNC_HAMMING"
        },
        {
          "help": "Blackman",
          "name": "blackman",
          "value": "WFUNC_BLACKMAN"
        },
        {
          "help": "Welch",
          "name": "welch",
          "value": "WFUNC_WELCH"
        },
        {
          "help": "Flat-top",
          "name": "flattop",
          "value": "WFUNC_FLATTOP"
        },
        {
          "help": "Blackman-Harris",
          "name": "bharris",
          "value": "WFUNC_BHARRIS"
        },
        {
          "help": "Blackman-Nuttall",
          "name": "bnuttall",
          "value": "WFUNC_BNUTTALL"
        },
        {
          "help": "Bartlett-Hann",
          "name": "bhann",
          "value": "WFUNC_BHANN"
        },
        {
          "help": "Sine",
          "name": "sine",
          "value": "WFUNC_SINE"
        },
        {
          "help": "Nuttall",
          "name": "nuttall",
          "value": "WFUNC_NUTTALL"
        },
        {
          "help": "Lanczos",
          "name": "lanczos",
          "value": "WFUNC_LANCZOS"
        },
        {
          "help": "Gauss",
          "name": "gauss",
          "value": "WFUNC_GAUSS"
        },
        {
          "help": "Tukey",
          "name": "tukey",
          "value": "WFUNC_TUKEY"
        },
        {
          "help": "Dolph-Chebyshev",
          "name": "dolph",
          "value": "WFUNC_DOLPH"
        },
        {
          "help": "Cauchy",
          "name": "cauchy",
          "value": "WFUNC_CAUCHY"
        },
        {
          "help": "Parzen",
          "name": "parzen",
          "value": "WFUNC_PARZEN"
        },
        {
          "help": "Poisson",
          "name": "poisson",
          "value": "WFUNC_POISSON"
        },
        {
          "help": "Bohman",
          "name": "bohman",
          "value": "WFUNC_BOHMAN"
        },
        {
          "help": "Kaiser",
          "name": "kaiser",
          "value": "WFUNC_KAISER"
        }
      ],
      "default": "WFUNC_BLACKMAN",
      "description": "<dd><p>Set window function to be used when generating FIR coefficients.\n</p></dd>",
      "name": "win_func",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_AUDIO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#hilbert"
}
