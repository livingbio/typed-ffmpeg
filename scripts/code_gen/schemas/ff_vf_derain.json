{
  "description": "### 11.66 derain\n\nRemove the rain in the input image/video by applying the derain methods based on\nconvolutional neural networks. Supported models:\n\n\nTraining as well as model generation scripts are provided in\nthe repository at https://github.com/XueweiMeng/derain_filter.git.\n\n\nThe filter accepts the following options:\n\n\n- **`filter_type`**\n  - Specify which filter to use. This option accepts the following values:\n\u2018\nderain\n\u2019\nDerain filter. To conduct derain filter, you need to use a derain model.\n\u2018\ndehaze\n\u2019\nDehaze filter. To conduct dehaze filter, you need to use a dehaze model.\nDefault value is \u2018\nderain\n\u2019.\n- **`dnn_backend`**\n  - Specify which DNN backend to use for model loading and execution. This option accepts\nthe following values:\n\u2018\ntensorflow\n\u2019\nTensorFlow backend. To enable this backend you\nneed to install the TensorFlow for C library (see\nhttps://www.tensorflow.org/install/lang_c\n) and configure FFmpeg with\n--enable-libtensorflow\n- **`model`**\n  - Set path to model file specifying network architecture and its parameters.\nNote that different backends use different file formats. TensorFlow can load files for only its format.\nSpecify which filter to use. This option accepts the following values:\n\n\n- **`\u2018derain\u2019`**\n  - Derain filter. To conduct derain filter, you need to use a derain model.\n- **`\u2018dehaze\u2019`**\n  - Dehaze filter. To conduct dehaze filter, you need to use a dehaze model.\nDerain filter. To conduct derain filter, you need to use a derain model.\n\n\nDehaze filter. To conduct dehaze filter, you need to use a dehaze model.\n\n\nDefault value is \u2018derain\u2019.\n\n\nSpecify which DNN backend to use for model loading and execution. This option accepts\nthe following values:\n\n\n- **`\u2018tensorflow\u2019`**\n  - TensorFlow backend. To enable this backend you\nneed to install the TensorFlow for C library (see\nhttps://www.tensorflow.org/install/lang_c\n) and configure FFmpeg with\n--enable-libtensorflow\nTensorFlow backend. To enable this backend you\nneed to install the TensorFlow for C library (see\nhttps://www.tensorflow.org/install/lang_c) and configure FFmpeg with\n--enable-libtensorflow\n\n\nSet path to model file specifying network architecture and its parameters.\nNote that different backends use different file formats. TensorFlow can load files for only its format.\n\n\nTo get full functionality (such as async execution), please use the dnn_processing filter.\n\n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_derain",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "derain",
  "options": [
    {
      "alias": [
        "filter_type"
      ],
      "choices": [
        {
          "help": "derain filter flag",
          "name": "derain",
          "value": 0
        },
        {
          "help": "dehaze filter flag",
          "name": "dehaze",
          "value": 1
        }
      ],
      "default": 0,
      "description": "<dd><p>Specify which filter to use. This option accepts the following values:\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>derain</samp>\u2019</dt>\n<dd><p>Derain filter. To conduct derain filter, you need to use a derain model.\n</p>\n</dd>\n<dt>\u2018<samp>dehaze</samp>\u2019</dt>\n<dd><p>Dehaze filter. To conduct dehaze filter, you need to use a dehaze model.\n</p></dd>\n</dl>\n<p>Default value is \u2018<samp>derain</samp>\u2019.\n</p>\n</dd>",
      "name": "filter_type",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "dnn_backend"
      ],
      "choices": [],
      "default": 1,
      "description": "<dd><p>Specify which DNN backend to use for model loading and execution. This option accepts\nthe following values:\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>tensorflow</samp>\u2019</dt>\n<dd><p>TensorFlow backend. To enable this backend you\nneed to install the TensorFlow for C library (see\n<a href=\"https://www.tensorflow.org/install/lang_c\">https://www.tensorflow.org/install/lang_c</a>) and configure FFmpeg with\n<code>--enable-libtensorflow</code>\n</p></dd>\n</dl>\n</dd>",
      "name": "dnn_backend",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "model"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Set path to model file specifying network architecture and its parameters.\nNote that different backends use different file formats. TensorFlow can load files for only its format.\n</p></dd>",
      "name": "model",
      "required": true,
      "typing": "str"
    },
    {
      "alias": [
        "input"
      ],
      "choices": [],
      "default": "x",
      "description": null,
      "name": "input",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "output"
      ],
      "choices": [],
      "default": "y",
      "description": null,
      "name": "output",
      "required": false,
      "typing": "str"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#derain"
}
