{
  "description": "### 11.66 derain\n\nRemove the rain in the input image/video by applying the derain methods based\non convolutional neural networks. Supported models:\n\n  * Recurrent Squeeze-and-Excitation Context Aggregation Net (RESCAN). See <http://openaccess.thecvf.com/content_ECCV_2018/papers/Xia_Li_Recurrent_Squeeze-and-Excitation_Context_ECCV_2018_paper.pdf>. \n\nTraining as well as model generation scripts are provided in the repository at\n<https://github.com/XueweiMeng/derain_filter.git>.\n\nThe filter accepts the following options:\n\n**filter_type**\n\n    Specify which filter to use. This option accepts the following values: \u2018derain\u2019 Derain filter. To conduct derain filter, you need to use a derain model. \u2018dehaze\u2019 Dehaze filter. To conduct dehaze filter, you need to use a dehaze model. Default value is \u2018derain\u2019. \n\n**dnn_backend**\n\n    Specify which DNN backend to use for model loading and execution. This option accepts the following values: \u2018tensorflow\u2019 TensorFlow backend. To enable this backend you need to install the TensorFlow for C library (see https://www.tensorflow.org/install/lang_c) and configure FFmpeg with --enable-libtensorflow \n\n**model**\n\n    Set path to model file specifying network architecture and its parameters. Note that different backends use different file formats. TensorFlow can load files for only its format. \n\nTo get full functionality (such as async execution), please use the\ndnn_processing filter.\n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_derain",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "is_support_timeline": true,
  "name": "derain",
  "options": [
    {
      "alias": [
        "filter_type"
      ],
      "choices": [
        {
          "help": "derain filter flag",
          "name": "derain",
          "value": 0
        },
        {
          "help": "dehaze filter flag",
          "name": "dehaze",
          "value": 1
        }
      ],
      "default": 0,
      "description": "<dd><p>Specify which filter to use. This option accepts the following values:\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>derain</samp>\u2019</dt>\n<dd><p>Derain filter. To conduct derain filter, you need to use a derain model.\n</p>\n</dd>\n<dt>\u2018<samp>dehaze</samp>\u2019</dt>\n<dd><p>Dehaze filter. To conduct dehaze filter, you need to use a dehaze model.\n</p></dd>\n</dl>\n<p>Default value is \u2018<samp>derain</samp>\u2019.\n</p>\n</dd>",
      "name": "filter_type",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "dnn_backend"
      ],
      "choices": [],
      "default": 1,
      "description": "<dd><p>Specify which DNN backend to use for model loading and execution. This option accepts\nthe following values:\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>tensorflow</samp>\u2019</dt>\n<dd><p>TensorFlow backend. To enable this backend you\nneed to install the TensorFlow for C library (see\n<a href=\"https://www.tensorflow.org/install/lang_c\">https://www.tensorflow.org/install/lang_c</a>) and configure FFmpeg with\n<code>--enable-libtensorflow</code>\n</p></dd>\n</dl>\n</dd>",
      "name": "dnn_backend",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "model"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Set path to model file specifying network architecture and its parameters.\nNote that different backends use different file formats. TensorFlow can load files for only its format.\n</p></dd>",
      "name": "model",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "input"
      ],
      "choices": [],
      "default": "x",
      "description": "input name of the model",
      "name": "input",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "output"
      ],
      "choices": [],
      "default": "y",
      "description": "output name of the model",
      "name": "output",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [],
      "choices": [],
      "default": null,
      "description": "timeline editing",
      "name": "enable",
      "required": false,
      "typing": "str"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#derain"
}
