{
  "description": "### 11.166 minterpolate\n\nConvert the video to specified frame rate using motion interpolation.\n\n\nThis filter accepts the following options:\n\n\n- **`fps`**\n  - Specify the output frame rate. This can be rational e.g.\n60000/1001\n. Frames are dropped if\nfps\nis lower than source fps. Default\n60\n.\n- **`mi_mode`**\n  - Motion interpolation mode. Following values are accepted:\n\u2018\ndup\n\u2019\nDuplicate previous or next frame for interpolating new ones.\n\u2018\nblend\n\u2019\nBlend source frames. Interpolated frame is mean of previous and next frames.\n\u2018\nmci\n\u2019\nMotion compensated interpolation. Following options are effective when this mode is selected:\n\u2018\nmc_mode\n\u2019\nMotion compensation mode. Following values are accepted:\n\u2018\nobmc\n\u2019\nOverlapped block motion compensation.\n\u2018\naobmc\n\u2019\nAdaptive overlapped block motion compensation. Window weighting coefficients are controlled adaptively according to the reliabilities of the neighboring motion vectors to reduce oversmoothing.\nDefault mode is \u2018\nobmc\n\u2019.\n\u2018\nme_mode\n\u2019\nMotion estimation mode. Following values are accepted:\n\u2018\nbidir\n\u2019\nBidirectional motion estimation. Motion vectors are estimated for each source frame in both forward and backward directions.\n\u2018\nbilat\n\u2019\nBilateral motion estimation. Motion vectors are estimated directly for interpolated frame.\nDefault mode is \u2018\nbilat\n\u2019.\n\u2018\nme\n\u2019\nThe algorithm to be used for motion estimation. Following values are accepted:\n\u2018\nesa\n\u2019\nExhaustive search algorithm.\n\u2018\ntss\n\u2019\nThree step search algorithm.\n\u2018\ntdls\n\u2019\nTwo dimensional logarithmic search algorithm.\n\u2018\nntss\n\u2019\nNew three step search algorithm.\n\u2018\nfss\n\u2019\nFour step search algorithm.\n\u2018\nds\n\u2019\nDiamond search algorithm.\n\u2018\nhexbs\n\u2019\nHexagon-based search algorithm.\n\u2018\nepzs\n\u2019\nEnhanced predictive zonal search algorithm.\n\u2018\numh\n\u2019\nUneven multi-hexagon search algorithm.\nDefault algorithm is \u2018\nepzs\n\u2019.\n\u2018\nmb_size\n\u2019\nMacroblock size. Default\n16\n.\n\u2018\nsearch_param\n\u2019\nMotion estimation search parameter. Default\n32\n.\n\u2018\nvsbmc\n\u2019\nEnable variable-size block motion compensation. Motion estimation is applied with smaller block sizes at object boundaries in order to make the them less blur. Default is\n0\n(disabled).\n- **`scd`**\n  - Scene change detection method. Scene change leads motion vectors to be in random direction. Scene change detection replace interpolated frames by duplicate ones. May not be needed for other modes. Following values are accepted:\n\u2018\nnone\n\u2019\nDisable scene change detection.\n\u2018\nfdiff\n\u2019\nFrame difference. Corresponding pixel values are compared and if it satisfies\nscd_threshold\nscene change is detected.\nDefault method is \u2018\nfdiff\n\u2019.\n- **`scd_threshold`**\n  - Scene change detection threshold. Default is\n10.\n.\nSpecify the output frame rate. This can be rational e.g. 60000/1001. Frames are dropped if fps is lower than source fps. Default 60.\n\n\nMotion interpolation mode. Following values are accepted:\n\n\n- **`\u2018dup\u2019`**\n  - Duplicate previous or next frame for interpolating new ones.\n- **`\u2018blend\u2019`**\n  - Blend source frames. Interpolated frame is mean of previous and next frames.\n- **`\u2018mci\u2019`**\n  - Motion compensated interpolation. Following options are effective when this mode is selected:\n\u2018\nmc_mode\n\u2019\nMotion compensation mode. Following values are accepted:\n\u2018\nobmc\n\u2019\nOverlapped block motion compensation.\n\u2018\naobmc\n\u2019\nAdaptive overlapped block motion compensation. Window weighting coefficients are controlled adaptively according to the reliabilities of the neighboring motion vectors to reduce oversmoothing.\nDefault mode is \u2018\nobmc\n\u2019.\n\u2018\nme_mode\n\u2019\nMotion estimation mode. Following values are accepted:\n\u2018\nbidir\n\u2019\nBidirectional motion estimation. Motion vectors are estimated for each source frame in both forward and backward directions.\n\u2018\nbilat\n\u2019\nBilateral motion estimation. Motion vectors are estimated directly for interpolated frame.\nDefault mode is \u2018\nbilat\n\u2019.\n\u2018\nme\n\u2019\nThe algorithm to be used for motion estimation. Following values are accepted:\n\u2018\nesa\n\u2019\nExhaustive search algorithm.\n\u2018\ntss\n\u2019\nThree step search algorithm.\n\u2018\ntdls\n\u2019\nTwo dimensional logarithmic search algorithm.\n\u2018\nntss\n\u2019\nNew three step search algorithm.\n\u2018\nfss\n\u2019\nFour step search algorithm.\n\u2018\nds\n\u2019\nDiamond search algorithm.\n\u2018\nhexbs\n\u2019\nHexagon-based search algorithm.\n\u2018\nepzs\n\u2019\nEnhanced predictive zonal search algorithm.\n\u2018\numh\n\u2019\nUneven multi-hexagon search algorithm.\nDefault algorithm is \u2018\nepzs\n\u2019.\n\u2018\nmb_size\n\u2019\nMacroblock size. Default\n16\n.\n\u2018\nsearch_param\n\u2019\nMotion estimation search parameter. Default\n32\n.\n\u2018\nvsbmc\n\u2019\nEnable variable-size block motion compensation. Motion estimation is applied with smaller block sizes at object boundaries in order to make the them less blur. Default is\n0\n(disabled).\nDuplicate previous or next frame for interpolating new ones.\n\n\nBlend source frames. Interpolated frame is mean of previous and next frames.\n\n\nMotion compensated interpolation. Following options are effective when this mode is selected:\n\n\n- **`\u2018mc_mode\u2019`**\n  - Motion compensation mode. Following values are accepted:\n\u2018\nobmc\n\u2019\nOverlapped block motion compensation.\n\u2018\naobmc\n\u2019\nAdaptive overlapped block motion compensation. Window weighting coefficients are controlled adaptively according to the reliabilities of the neighboring motion vectors to reduce oversmoothing.\nDefault mode is \u2018\nobmc\n\u2019.\n- **`\u2018me_mode\u2019`**\n  - Motion estimation mode. Following values are accepted:\n\u2018\nbidir\n\u2019\nBidirectional motion estimation. Motion vectors are estimated for each source frame in both forward and backward directions.\n\u2018\nbilat\n\u2019\nBilateral motion estimation. Motion vectors are estimated directly for interpolated frame.\nDefault mode is \u2018\nbilat\n\u2019.\n- **`\u2018me\u2019`**\n  - The algorithm to be used for motion estimation. Following values are accepted:\n\u2018\nesa\n\u2019\nExhaustive search algorithm.\n\u2018\ntss\n\u2019\nThree step search algorithm.\n\u2018\ntdls\n\u2019\nTwo dimensional logarithmic search algorithm.\n\u2018\nntss\n\u2019\nNew three step search algorithm.\n\u2018\nfss\n\u2019\nFour step search algorithm.\n\u2018\nds\n\u2019\nDiamond search algorithm.\n\u2018\nhexbs\n\u2019\nHexagon-based search algorithm.\n\u2018\nepzs\n\u2019\nEnhanced predictive zonal search algorithm.\n\u2018\numh\n\u2019\nUneven multi-hexagon search algorithm.\nDefault algorithm is \u2018\nepzs\n\u2019.\n- **`\u2018mb_size\u2019`**\n  - Macroblock size. Default\n16\n.\n- **`\u2018search_param\u2019`**\n  - Motion estimation search parameter. Default\n32\n.\n- **`\u2018vsbmc\u2019`**\n  - Enable variable-size block motion compensation. Motion estimation is applied with smaller block sizes at object boundaries in order to make the them less blur. Default is\n0\n(disabled).\nMotion compensation mode. Following values are accepted:\n\n\n- **`\u2018obmc\u2019`**\n  - Overlapped block motion compensation.\n- **`\u2018aobmc\u2019`**\n  - Adaptive overlapped block motion compensation. Window weighting coefficients are controlled adaptively according to the reliabilities of the neighboring motion vectors to reduce oversmoothing.\nOverlapped block motion compensation.\n\n\nAdaptive overlapped block motion compensation. Window weighting coefficients are controlled adaptively according to the reliabilities of the neighboring motion vectors to reduce oversmoothing.\n\n\nDefault mode is \u2018obmc\u2019.\n\n\nMotion estimation mode. Following values are accepted:\n\n\n- **`\u2018bidir\u2019`**\n  - Bidirectional motion estimation. Motion vectors are estimated for each source frame in both forward and backward directions.\n- **`\u2018bilat\u2019`**\n  - Bilateral motion estimation. Motion vectors are estimated directly for interpolated frame.\nBidirectional motion estimation. Motion vectors are estimated for each source frame in both forward and backward directions.\n\n\nBilateral motion estimation. Motion vectors are estimated directly for interpolated frame.\n\n\nDefault mode is \u2018bilat\u2019.\n\n\nThe algorithm to be used for motion estimation. Following values are accepted:\n\n\n- **`\u2018esa\u2019`**\n  - Exhaustive search algorithm.\n- **`\u2018tss\u2019`**\n  - Three step search algorithm.\n- **`\u2018tdls\u2019`**\n  - Two dimensional logarithmic search algorithm.\n- **`\u2018ntss\u2019`**\n  - New three step search algorithm.\n- **`\u2018fss\u2019`**\n  - Four step search algorithm.\n- **`\u2018ds\u2019`**\n  - Diamond search algorithm.\n- **`\u2018hexbs\u2019`**\n  - Hexagon-based search algorithm.\n- **`\u2018epzs\u2019`**\n  - Enhanced predictive zonal search algorithm.\n- **`\u2018umh\u2019`**\n  - Uneven multi-hexagon search algorithm.\nExhaustive search algorithm.\n\n\nThree step search algorithm.\n\n\nTwo dimensional logarithmic search algorithm.\n\n\nNew three step search algorithm.\n\n\nFour step search algorithm.\n\n\nDiamond search algorithm.\n\n\nHexagon-based search algorithm.\n\n\nEnhanced predictive zonal search algorithm.\n\n\nUneven multi-hexagon search algorithm.\n\n\nDefault algorithm is \u2018epzs\u2019.\n\n\nMacroblock size. Default 16.\n\n\nMotion estimation search parameter. Default 32.\n\n\nEnable variable-size block motion compensation. Motion estimation is applied with smaller block sizes at object boundaries in order to make the them less blur. Default is 0 (disabled).\n\n\nScene change detection method. Scene change leads motion vectors to be in random direction. Scene change detection replace interpolated frames by duplicate ones. May not be needed for other modes. Following values are accepted:\n\n\n- **`\u2018none\u2019`**\n  - Disable scene change detection.\n- **`\u2018fdiff\u2019`**\n  - Frame difference. Corresponding pixel values are compared and if it satisfies\nscd_threshold\nscene change is detected.\nDisable scene change detection.\n\n\nFrame difference. Corresponding pixel values are compared and if it satisfies scd_threshold scene change is detected.\n\n\nDefault method is \u2018fdiff\u2019.\n\n\nScene change detection threshold. Default is 10..\n\n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_minterpolate",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "minterpolate",
  "options": [
    {
      "alias": [
        "fps"
      ],
      "choices": [],
      "default": "60",
      "description": "<dd><p>Specify the output frame rate. This can be rational e.g. <code>60000/1001</code>. Frames are dropped if <var>fps</var> is lower than source fps. Default <code>60</code>.\n</p>\n</dd>",
      "name": "fps",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "mi_mode"
      ],
      "choices": [
        {
          "help": "duplicate frames",
          "name": "dup",
          "value": "MI_MODE_DUP"
        },
        {
          "help": "blend frames",
          "name": "blend",
          "value": "MI_MODE_BLEND"
        },
        {
          "help": "motion compensated interpolation",
          "name": "mci",
          "value": "MI_MODE_MCI"
        }
      ],
      "default": "MI_MODE_MCI",
      "description": "<dd><p>Motion interpolation mode. Following values are accepted:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>dup</samp>\u2019</dt>\n<dd><p>Duplicate previous or next frame for interpolating new ones.\n</p></dd>\n<dt>\u2018<samp>blend</samp>\u2019</dt>\n<dd><p>Blend source frames. Interpolated frame is mean of previous and next frames.\n</p></dd>\n<dt>\u2018<samp>mci</samp>\u2019</dt>\n<dd><p>Motion compensated interpolation. Following options are effective when this mode is selected:\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>mc_mode</samp>\u2019</dt>\n<dd><p>Motion compensation mode. Following values are accepted:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>obmc</samp>\u2019</dt>\n<dd><p>Overlapped block motion compensation.\n</p></dd>\n<dt>\u2018<samp>aobmc</samp>\u2019</dt>\n<dd><p>Adaptive overlapped block motion compensation. Window weighting coefficients are controlled adaptively according to the reliabilities of the neighboring motion vectors to reduce oversmoothing.\n</p></dd>\n</dl>\n<p>Default mode is \u2018<samp>obmc</samp>\u2019.\n</p>\n</dd>\n<dt>\u2018<samp>me_mode</samp>\u2019</dt>\n<dd><p>Motion estimation mode. Following values are accepted:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>bidir</samp>\u2019</dt>\n<dd><p>Bidirectional motion estimation. Motion vectors are estimated for each source frame in both forward and backward directions.\n</p></dd>\n<dt>\u2018<samp>bilat</samp>\u2019</dt>\n<dd><p>Bilateral motion estimation. Motion vectors are estimated directly for interpolated frame.\n</p></dd>\n</dl>\n<p>Default mode is \u2018<samp>bilat</samp>\u2019.\n</p>\n</dd>\n<dt>\u2018<samp>me</samp>\u2019</dt>\n<dd><p>The algorithm to be used for motion estimation. Following values are accepted:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>esa</samp>\u2019</dt>\n<dd><p>Exhaustive search algorithm.\n</p></dd>\n<dt>\u2018<samp>tss</samp>\u2019</dt>\n<dd><p>Three step search algorithm.\n</p></dd>\n<dt>\u2018<samp>tdls</samp>\u2019</dt>\n<dd><p>Two dimensional logarithmic search algorithm.\n</p></dd>\n<dt>\u2018<samp>ntss</samp>\u2019</dt>\n<dd><p>New three step search algorithm.\n</p></dd>\n<dt>\u2018<samp>fss</samp>\u2019</dt>\n<dd><p>Four step search algorithm.\n</p></dd>\n<dt>\u2018<samp>ds</samp>\u2019</dt>\n<dd><p>Diamond search algorithm.\n</p></dd>\n<dt>\u2018<samp>hexbs</samp>\u2019</dt>\n<dd><p>Hexagon-based search algorithm.\n</p></dd>\n<dt>\u2018<samp>epzs</samp>\u2019</dt>\n<dd><p>Enhanced predictive zonal search algorithm.\n</p></dd>\n<dt>\u2018<samp>umh</samp>\u2019</dt>\n<dd><p>Uneven multi-hexagon search algorithm.\n</p></dd>\n</dl>\n<p>Default algorithm is \u2018<samp>epzs</samp>\u2019.\n</p>\n</dd>\n<dt>\u2018<samp>mb_size</samp>\u2019</dt>\n<dd><p>Macroblock size. Default <code>16</code>.\n</p>\n</dd>\n<dt>\u2018<samp>search_param</samp>\u2019</dt>\n<dd><p>Motion estimation search parameter. Default <code>32</code>.\n</p>\n</dd>\n<dt>\u2018<samp>vsbmc</samp>\u2019</dt>\n<dd><p>Enable variable-size block motion compensation. Motion estimation is applied with smaller block sizes at object boundaries in order to make the them less blur. Default is <code>0</code> (disabled).\n</p></dd>\n</dl>\n</dd>\n</dl>\n</dd>",
      "name": "mi_mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "mc_mode"
      ],
      "choices": [
        {
          "help": "overlapped block motion compensation",
          "name": "obmc",
          "value": 0
        },
        {
          "help": "adaptive overlapped block motion compensation",
          "name": "aobmc",
          "value": 1
        }
      ],
      "default": 0,
      "description": null,
      "name": "mc_mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "me_mode"
      ],
      "choices": [
        {
          "help": "bidirectional motion estimation",
          "name": "bidir",
          "value": 0
        },
        {
          "help": "bilateral motion estimation",
          "name": "bilat",
          "value": 1
        }
      ],
      "default": 1,
      "description": null,
      "name": "me_mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "me"
      ],
      "choices": [
        {
          "help": "exhaustive search",
          "name": "esa",
          "value": 1
        },
        {
          "help": "three step search",
          "name": "tss",
          "value": 2
        },
        {
          "help": "two dimensional logarithmic search",
          "name": "tdls",
          "value": 3
        },
        {
          "help": "new three step search",
          "name": "ntss",
          "value": 4
        },
        {
          "help": "four step search",
          "name": "fss",
          "value": 5
        },
        {
          "help": "diamond search",
          "name": "ds",
          "value": 6
        },
        {
          "help": "hexagon-based search",
          "name": "hexbs",
          "value": 7
        },
        {
          "help": "enhanced predictive zonal search",
          "name": "epzs",
          "value": 8
        },
        {
          "help": "uneven multi-hexagon search",
          "name": "umh",
          "value": 9
        }
      ],
      "default": 8,
      "description": null,
      "name": "me",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "mb_size"
      ],
      "choices": [],
      "default": 16,
      "description": null,
      "name": "mb_size",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "search_param"
      ],
      "choices": [],
      "default": 32,
      "description": null,
      "name": "search_param",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "vsbmc"
      ],
      "choices": [],
      "default": 0,
      "description": null,
      "name": "vsbmc",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "scd"
      ],
      "choices": [
        {
          "help": "disable detection",
          "name": "none",
          "value": 0
        },
        {
          "help": "frame difference",
          "name": "fdiff",
          "value": 1
        }
      ],
      "default": 1,
      "description": "<dd><p>Scene change detection method. Scene change leads motion vectors to be in random direction. Scene change detection replace interpolated frames by duplicate ones. May not be needed for other modes. Following values are accepted:\n</p><dl compact=\"compact\">\n<dt>\u2018<samp>none</samp>\u2019</dt>\n<dd><p>Disable scene change detection.\n</p></dd>\n<dt>\u2018<samp>fdiff</samp>\u2019</dt>\n<dd><p>Frame difference. Corresponding pixel values are compared and if it satisfies <var>scd_threshold</var> scene change is detected.\n</p></dd>\n</dl>\n<p>Default method is \u2018<samp>fdiff</samp>\u2019.\n</p>\n</dd>",
      "name": "scd",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "scd_threshold"
      ],
      "choices": [],
      "default": 10.0,
      "description": "<dd><p>Scene change detection threshold. Default is <code>10.</code>.\n</p></dd>",
      "name": "scd_threshold",
      "required": false,
      "typing": "float"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#minterpolate"
}
