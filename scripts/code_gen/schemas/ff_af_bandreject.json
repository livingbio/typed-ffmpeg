{
  "description": "### 8.70 bandreject\n\nApply a two-pole Butterworth band-reject filter with central frequency\nfrequency, and (3dB-point) band-width width. The filter roll off at 6dB per\noctave (20dB per decade).\n\nThe filter accepts the following options:\n\n**frequency, f**\n\n    Set the filter\u2019s central frequency. Default is 3000. \n\n**width_type, t**\n\n    Set method to specify band-width of filter. h Hz q Q-Factor o octave s slope k kHz \n\n**width, w**\n\n    Specify the band-width of a filter in width_type units. \n\n**mix, m**\n\n    How much to use filtered signal in output. Default is 1. Range is between 0 and 1. \n\n**channels, c**\n\n    Specify which channels to filter, by default all available are filtered. \n\n**normalize, n**\n\n    Normalize biquad coefficients, by default is disabled. Enabling it will normalize magnitude response at DC to 0dB. \n\n**transform, a**\n\n    Set transform type of IIR filter. di dii tdi tdii latt svf zdf \n\n**precision, r**\n\n    Set precision of filtering. auto Pick automatic sample format depending on surround filters. s16 Always use signed 16-bit. s32 Always use signed 32-bit. f32 Always use float 32-bit. f64 Always use float 64-bit. \n\n**block_size, b**\n\n    Set block size used for reverse IIR processing. If this value is set to high enough value (higher than impulse response length truncated when reaches near zero values) filtering will become linear phase otherwise if not big enough it will just produce nasty artifacts. Note that filter delay will be exactly this many samples when set to non-zero value. \n\n",
  "filter_type": "af",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_af_bandreject",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_AUDIO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "bandreject",
  "options": [
    {
      "alias": [
        "frequency",
        "f"
      ],
      "choices": [],
      "default": 3000.0,
      "description": "<dd><p>Set the filter\u2019s central frequency. Default is <code>3000</code>.\n</p>\n</dd>",
      "name": "frequency",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "width_type",
        "t"
      ],
      "choices": [
        {
          "help": "Hz",
          "name": "h",
          "value": "HERTZ"
        },
        {
          "help": "Q-Factor",
          "name": "q",
          "value": "QFACTOR"
        },
        {
          "help": "octave",
          "name": "o",
          "value": "OCTAVE"
        },
        {
          "help": "slope",
          "name": "s",
          "value": "SLOPE"
        },
        {
          "help": "kHz",
          "name": "k",
          "value": "KHERTZ"
        }
      ],
      "default": "QFACTOR",
      "description": "<dd><p>Set method to specify band-width of filter.\n</p><dl compact=\"compact\">\n<dt><samp>h</samp></dt>\n<dd><p>Hz\n</p></dd>\n<dt><samp>q</samp></dt>\n<dd><p>Q-Factor\n</p></dd>\n<dt><samp>o</samp></dt>\n<dd><p>octave\n</p></dd>\n<dt><samp>s</samp></dt>\n<dd><p>slope\n</p></dd>\n<dt><samp>k</samp></dt>\n<dd><p>kHz\n</p></dd>\n</dl>\n</dd>",
      "name": "width_type",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "width",
        "w"
      ],
      "choices": [],
      "default": 0.5,
      "description": "<dd><p>Specify the band-width of a filter in width_type units.\n</p>\n</dd>",
      "name": "width",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "mix",
        "m"
      ],
      "choices": [],
      "default": 1.0,
      "description": "<dd><p>How much to use filtered signal in output. Default is 1.\nRange is between 0 and 1.\n</p>\n</dd>",
      "name": "mix",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "channels",
        "c"
      ],
      "choices": [],
      "default": "all",
      "description": "<dd><p>Specify which channels to filter, by default all available are filtered.\n</p>\n</dd>",
      "name": "channels",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "normalize",
        "n"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>Normalize biquad coefficients, by default is disabled.\nEnabling it will normalize magnitude response at DC to 0dB.\n</p>\n</dd>",
      "name": "normalize",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [
        "transform",
        "a"
      ],
      "choices": [
        {
          "help": "direct form I",
          "name": "di",
          "value": "DI"
        },
        {
          "help": "direct form II",
          "name": "dii",
          "value": "DII"
        },
        {
          "help": "transposed direct form I",
          "name": "tdi",
          "value": "TDI"
        },
        {
          "help": "transposed direct form II",
          "name": "tdii",
          "value": "TDII"
        },
        {
          "help": "lattice-ladder form",
          "name": "latt",
          "value": "LATT"
        },
        {
          "help": "state variable filter form",
          "name": "svf",
          "value": "SVF"
        },
        {
          "help": "zero-delay filter form",
          "name": "zdf",
          "value": "ZDF"
        }
      ],
      "default": "DI",
      "description": "<dd><p>Set transform type of IIR filter.\n</p><dl compact=\"compact\">\n<dt><samp>di</samp></dt>\n<dt><samp>dii</samp></dt>\n<dt><samp>tdi</samp></dt>\n<dt><samp>tdii</samp></dt>\n<dt><samp>latt</samp></dt>\n<dt><samp>svf</samp></dt>\n<dt><samp>zdf</samp></dt>\n</dl>\n</dd>",
      "name": "transform",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "precision",
        "r"
      ],
      "choices": [
        {
          "help": "automatic",
          "name": "auto",
          "value": -1
        },
        {
          "help": "signed 16-bit",
          "name": "s16",
          "value": 0
        },
        {
          "help": "signed 32-bit",
          "name": "s32",
          "value": 1
        },
        {
          "help": "floating-point single",
          "name": "f32",
          "value": 2
        },
        {
          "help": "floating-point double",
          "name": "f64",
          "value": 3
        }
      ],
      "default": -1,
      "description": "<dd><p>Set precision of filtering.\n</p><dl compact=\"compact\">\n<dt><samp>auto</samp></dt>\n<dd><p>Pick automatic sample format depending on surround filters.\n</p></dd>\n<dt><samp>s16</samp></dt>\n<dd><p>Always use signed 16-bit.\n</p></dd>\n<dt><samp>s32</samp></dt>\n<dd><p>Always use signed 32-bit.\n</p></dd>\n<dt><samp>f32</samp></dt>\n<dd><p>Always use float 32-bit.\n</p></dd>\n<dt><samp>f64</samp></dt>\n<dd><p>Always use float 64-bit.\n</p></dd>\n</dl>\n</dd>",
      "name": "precision",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "blocksize",
        "b"
      ],
      "choices": [],
      "default": 0,
      "description": null,
      "name": "blocksize",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_AUDIO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#bandreject"
}
