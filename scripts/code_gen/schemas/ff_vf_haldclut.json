{
  "description": "### 11.116 haldclut\n\nApply a Hald CLUT to a video stream.\n\nFirst input is the video stream to process, and second one is the Hald CLUT.\nThe Hald CLUT input can be a simple picture or a complete video stream.\n\nThe filter accepts the following options:\n\n**clut**\n\n    Set which CLUT video frames will be processed from second input stream, can be first or all. Default is all. \n\n**shortest**\n\n    Force termination when the shortest input terminates. Default is 0. \n\n**repeatlast**\n\n    Continue applying the last CLUT after the end of the stream. A value of 0 disable the filter after the last frame of the CLUT is reached. Default is 1. \n\n`haldclut` also has the same interpolation options as lut3d (both filters\nshare the same internals).\n\nThis filter also supports the framesync options.\n\nMore information about the Hald CLUT can be found on Eskil Steenberg\u2019s website\n(Hald CLUT author) at <http://www.quelsolaar.com/technology/clut.html>.\n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_haldclut",
  "input_stream_typings": [
    {
      "name": "main",
      "type": "AVMEDIA_TYPE_VIDEO"
    },
    {
      "name": "clut",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "is_support_framesync": true,
  "is_support_timeline": true,
  "name": "haldclut",
  "options": [
    {
      "alias": [
        "clut"
      ],
      "choices": [
        {
          "help": "process only first CLUT, ignore rest",
          "name": "first",
          "value": 0
        },
        {
          "help": "process all CLUTs",
          "name": "all",
          "value": 1
        }
      ],
      "default": 1,
      "description": "<dd><p>Set which CLUT video frames will be processed from second input stream,\ncan be <var>first</var> or <var>all</var>. Default is <var>all</var>.\n</p>\n</dd>",
      "name": "clut",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "interp"
      ],
      "choices": [
        {
          "help": "use values from the nearest defined points",
          "name": "nearest",
          "value": "INTERPOLATE_NEAREST"
        },
        {
          "help": "interpolate values using the 8 points defining a cube",
          "name": "trilinear",
          "value": "INTERPOLATE_TRILINEAR"
        },
        {
          "help": "interpolate values using a tetrahedron",
          "name": "tetrahedral",
          "value": "INTERPOLATE_TETRAHEDRAL"
        },
        {
          "help": "interpolate values using a pyramid",
          "name": "pyramid",
          "value": "INTERPOLATE_PYRAMID"
        },
        {
          "help": "interpolate values using a prism",
          "name": "prism",
          "value": "INTERPOLATE_PRISM"
        }
      ],
      "default": "INTERPOLATE_TETRAHEDRAL",
      "description": "select interpolation mode",
      "name": "interp",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [],
      "choices": [],
      "default": null,
      "description": "timeline editing",
      "name": "enable",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [],
      "choices": [
        {
          "help": "Repeat the last frame.",
          "name": "repeat",
          "value": "repeat"
        },
        {
          "help": "End both streams.",
          "name": "endall",
          "value": "endall"
        },
        {
          "help": "Pass the main input through.",
          "name": "pass",
          "value": "pass"
        }
      ],
      "default": "repeat",
      "description": "The action to take when EOF is encountered on the secondary input; it accepts one of the following values",
      "name": "eof_action",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [],
      "choices": [],
      "default": 0,
      "description": "Force the output to terminate when the shortest input terminates.",
      "name": "shortest",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [],
      "choices": [],
      "default": 1,
      "description": "force the filter to extend the last frame of secondary streams until the end of the primary stream.",
      "name": "repeatlast",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [],
      "choices": [
        {
          "help": "Frame from secondary input with the nearest lower or equal timestamp to the primary input frame.",
          "name": "default",
          "value": "default"
        },
        {
          "help": "Frame from secondary input with the absolute nearest timestamp to the primary input frame.",
          "name": "nearest",
          "value": "nearest"
        }
      ],
      "default": "default",
      "description": "How strictly to sync streams based on secondary input timestamps; it accepts one of the following values:",
      "name": "ts_sync_mode",
      "required": false,
      "typing": "str"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#haldclut"
}
