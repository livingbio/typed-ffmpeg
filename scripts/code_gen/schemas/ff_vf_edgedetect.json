{
  "description": "### 11.79 edgedetect\n\nDetect and draw edges. The filter uses the Canny Edge Detection algorithm.\n\nThe filter accepts the following options:\n\n**low**\n\n**high**\n\n    Set low and high threshold values used by the Canny thresholding algorithm. The high threshold selects the \"strong\" edge pixels, which are then connected through 8-connectivity with the \"weak\" edge pixels selected by the low threshold. low and high threshold values must be chosen in the range [0,1], and low should be lesser or equal to high. Default value for low is 20/255, and default value for high is 50/255. \n\n**mode**\n\n    Define the drawing mode. \u2018wires\u2019 Draw white/gray wires on black background. \u2018colormix\u2019 Mix the colors to create a paint/cartoon effect. \u2018canny\u2019 Apply Canny edge detector on all selected planes. Default value is wires. \n\n**planes**\n\n    Select planes for filtering. By default all available planes are filtered. \n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_edgedetect",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "edgedetect",
  "options": [
    {
      "alias": [
        "high"
      ],
      "choices": [],
      "default": "50/255.",
      "description": "<dd><p>Set low and high threshold values used by the Canny thresholding\nalgorithm.\n</p>\n<p>The high threshold selects the \"strong\" edge pixels, which are then\nconnected through 8-connectivity with the \"weak\" edge pixels selected\nby the low threshold.\n</p>\n<p><var>low</var> and <var>high</var> threshold values must be chosen in the range\n[0,1], and <var>low</var> should be lesser or equal to <var>high</var>.\n</p>\n<p>Default value for <var>low</var> is <code>20/255</code>, and default value for <var>high</var>\nis <code>50/255</code>.\n</p>\n</dd>",
      "name": "high",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "low"
      ],
      "choices": [],
      "default": "20/255.",
      "description": "<dd><p>Set low and high threshold values used by the Canny thresholding\nalgorithm.\n</p>\n<p>The high threshold selects the \"strong\" edge pixels, which are then\nconnected through 8-connectivity with the \"weak\" edge pixels selected\nby the low threshold.\n</p>\n<p><var>low</var> and <var>high</var> threshold values must be chosen in the range\n[0,1], and <var>low</var> should be lesser or equal to <var>high</var>.\n</p>\n<p>Default value for <var>low</var> is <code>20/255</code>, and default value for <var>high</var>\nis <code>50/255</code>.\n</p>\n</dd>",
      "name": "low",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "mode"
      ],
      "choices": [
        {
          "help": "white/gray wires on black",
          "name": "wires",
          "value": "MODE_WIRES"
        },
        {
          "help": "mix colors",
          "name": "colormix",
          "value": "MODE_COLORMIX"
        },
        {
          "help": "detect edges on planes",
          "name": "canny",
          "value": "MODE_CANNY"
        }
      ],
      "default": "MODE_WIRES",
      "description": "<dd><p>Define the drawing mode.\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>wires</samp>\u2019</dt>\n<dd><p>Draw white/gray wires on black background.\n</p>\n</dd>\n<dt>\u2018<samp>colormix</samp>\u2019</dt>\n<dd><p>Mix the colors to create a paint/cartoon effect.\n</p>\n</dd>\n<dt>\u2018<samp>canny</samp>\u2019</dt>\n<dd><p>Apply Canny edge detector on all selected planes.\n</p></dd>\n</dl>\n<p>Default value is <var>wires</var>.\n</p>\n</dd>",
      "name": "mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "planes"
      ],
      "choices": [
        {
          "help": "filter luma plane",
          "name": "y",
          "value": "0x1"
        },
        {
          "help": "filter u plane",
          "name": "u",
          "value": "0x2"
        },
        {
          "help": "filter v plane",
          "name": "v",
          "value": "0x4"
        },
        {
          "help": "filter red plane",
          "name": "r",
          "value": "0x4"
        },
        {
          "help": "filter green plane",
          "name": "g",
          "value": "0x1"
        },
        {
          "help": "filter blue plane",
          "name": "b",
          "value": "0x2"
        }
      ],
      "default": 7,
      "description": "<dd><p>Select planes for filtering. By default all available planes are filtered.\n</p></dd>",
      "name": "planes",
      "required": false,
      "typing": "str"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#edgedetect"
}
