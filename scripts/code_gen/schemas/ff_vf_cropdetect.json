{
  "description": "11.51 cropdetect\nAuto-detect the crop size.\n\nIt calculates the necessary cropping parameters and prints the\nrecommended parameters via the logging system. The detected dimensions\ncorrespond to the non-black or video area of the input video according to mode.\n\nIt accepts the following parameters:",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_cropdetect",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "cropdetect",
  "options": [
    {
      "alias": [
        "limit"
      ],
      "choices": [],
      "default": "24.0/255",
      "description": "<dd><p>Set higher black value threshold, which can be optionally specified\nfrom nothing (0) to everything (255 for 8-bit based formats). An intensity\nvalue greater to the set value is considered non-black. It defaults to 24.\nYou can also specify a value between 0.0 and 1.0 which will be scaled depending\non the bitdepth of the pixel format.\n</p>\n</dd>",
      "name": "limit",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "round"
      ],
      "choices": [],
      "default": 16,
      "description": "<dd><p>The value which the width/height should be divisible by. It defaults to\n16. The offset is automatically adjusted to center the video. Use 2 to\nget only even dimensions (needed for 4:2:2 video). 16 is best when\nencoding to most video codecs.\n</p>\n</dd>",
      "name": "round",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "reset",
        "reset_count"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>Set the counter that determines after how many frames cropdetect will\nreset the previously detected largest video area and start over to\ndetect the current optimal crop area. Default value is 0.\n</p>\n<p>This can be useful when channel logos distort the video area. 0\nindicates \u2019never reset\u2019, and returns the largest area encountered during\nplayback.\n</p>\n</dd>",
      "name": "reset",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "skip"
      ],
      "choices": [],
      "default": 2,
      "description": "<dd><p>Set the number of initial frames for which evaluation is skipped.\nDefault is 2. Range is 0 to INT_MAX.\n</p>\n</dd>",
      "name": "skip",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "max_outliers"
      ],
      "choices": [],
      "default": 0,
      "description": null,
      "name": "max_outliers",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "mode"
      ],
      "choices": [
        {
          "help": "detect black pixels surrounding the video",
          "name": "black",
          "value": "MODE_BLACK"
        },
        {
          "help": "detect motion and edged surrounding the video",
          "name": "mvedges",
          "value": "MODE_MV_EDGES"
        }
      ],
      "default": "MODE_BLACK",
      "description": "<dd><p>Depending on <var>mode</var> crop detection is based on either the mere black value of surrounding pixels or a combination of motion vectors and edge pixels.\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>black</samp>\u2019</dt>\n<dd><p>Detect black pixels surrounding the playing video. For fine control use option <var>limit</var>.\n</p>\n</dd>\n<dt>\u2018<samp>mvedges</samp>\u2019</dt>\n<dd><p>Detect the playing video by the motion vectors inside the video and scanning for edge pixels typically forming the border of a playing video.\n</p></dd>\n</dl>\n</dd>",
      "name": "mode",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "high"
      ],
      "choices": [],
      "default": "25/255.",
      "description": "<dd><p>Set low and high threshold values used by the Canny thresholding\nalgorithm.\n</p>\n<p>The high threshold selects the \"strong\" edge pixels, which are then\nconnected through 8-connectivity with the \"weak\" edge pixels selected\nby the low threshold.\n</p>\n<p><var>low</var> and <var>high</var> threshold values must be chosen in the range\n[0,1], and <var>low</var> should be lesser or equal to <var>high</var>.\n</p>\n<p>Default value for <var>low</var> is <code>5/255</code>, and default value for <var>high</var>\nis <code>15/255</code>.\n</p></dd>",
      "name": "high",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "low"
      ],
      "choices": [],
      "default": "15/255.",
      "description": "<dd><p>Set low and high threshold values used by the Canny thresholding\nalgorithm.\n</p>\n<p>The high threshold selects the \"strong\" edge pixels, which are then\nconnected through 8-connectivity with the \"weak\" edge pixels selected\nby the low threshold.\n</p>\n<p><var>low</var> and <var>high</var> threshold values must be chosen in the range\n[0,1], and <var>low</var> should be lesser or equal to <var>high</var>.\n</p>\n<p>Default value for <var>low</var> is <code>5/255</code>, and default value for <var>high</var>\nis <code>15/255</code>.\n</p></dd>",
      "name": "low",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "mv_threshold"
      ],
      "choices": [],
      "default": 8,
      "description": "<dd><p>Set motion in pixel units as threshold for motion detection. It defaults to 8.\n</p>\n</dd>",
      "name": "mv_threshold",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#cropdetect"
}
