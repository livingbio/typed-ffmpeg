{
  "description": "### 11.145 libvmaf\n\nCalculate the VMAF (Video Multi-Method Assessment Fusion) score for a\nreference/distorted pair of input videos.\n\nThe first input is the distorted video, and the second input is the reference\nvideo.\n\nThe obtained VMAF score is printed through the logging system.\n\nIt requires Netflix\u2019s vmaf library (libvmaf) as a pre-requisite. After\ninstalling the library it can be enabled using: `./configure --enable-\nlibvmaf`.\n\nThe filter has following options:\n\n**model**\n\n    A \u2018|\u2018 delimited list of vmaf models. Each model can be configured with a number of parameters. Default value: \"version=vmaf_v0.6.1\" \n\n**feature**\n\n    A \u2018|\u2018 delimited list of features. Each feature can be configured with a number of parameters. \n\n**log_path**\n\n    Set the file path to be used to store log files. \n\n**log_fmt**\n\n    Set the format of the log file (xml, json, csv, or sub). \n\n**pool**\n\n    Set the pool method to be used for computing vmaf. Options are min, harmonic_mean or mean (default). \n\n**n_threads**\n\n    Set number of threads to be used when initializing libvmaf. Default value: 0, no threads. \n\n**n_subsample**\n\n    Set frame subsampling interval to be used. \n\nThis filter also supports the framesync options.\n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_libvmaf",
  "input_stream_typings": [
    {
      "name": "main",
      "type": "AVMEDIA_TYPE_VIDEO"
    },
    {
      "name": "reference",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "is_support_framesync": true,
  "is_support_timeline": false,
  "name": "libvmaf",
  "options": [
    {
      "alias": [
        "log_path"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Set the file path to be used to store log files.\n</p>\n</dd>",
      "name": "log_path",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "log_fmt"
      ],
      "choices": [],
      "default": "xml",
      "description": "<dd><p>Set the format of the log file (xml, json, csv, or sub).\n</p>\n</dd>",
      "name": "log_fmt",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "pool"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>Set the pool method to be used for computing vmaf.\nOptions are <code>min</code>, <code>harmonic_mean</code> or <code>mean</code> (default).\n</p>\n</dd>",
      "name": "pool",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "n_threads"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>Set number of threads to be used when initializing libvmaf.\nDefault value: <code>0</code>, no threads.\n</p>\n</dd>",
      "name": "n_threads",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "n_subsample"
      ],
      "choices": [],
      "default": 1,
      "description": "<dd><p>Set frame subsampling interval to be used.\n</p></dd>",
      "name": "n_subsample",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "model"
      ],
      "choices": [],
      "default": "version=vmaf_v0.6.1",
      "description": "<dd><p>A \u2018|\u2018 delimited list of vmaf models. Each model can be configured with a number of parameters.\nDefault value: <code>\"version=vmaf_v0.6.1\"</code>\n</p>\n</dd>",
      "name": "model",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "feature"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "<dd><p>A \u2018|\u2018 delimited list of features. Each feature can be configured with a number of parameters.\n</p>\n</dd>",
      "name": "feature",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [],
      "choices": [
        {
          "help": "Repeat the last frame.",
          "name": "repeat",
          "value": "repeat"
        },
        {
          "help": "End both streams.",
          "name": "endall",
          "value": "endall"
        },
        {
          "help": "Pass the main input through.",
          "name": "pass",
          "value": "pass"
        }
      ],
      "default": "repeat",
      "description": "The action to take when EOF is encountered on the secondary input; it accepts one of the following values",
      "name": "eof_action",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [],
      "choices": [],
      "default": 0,
      "description": "Force the output to terminate when the shortest input terminates.",
      "name": "shortest",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [],
      "choices": [],
      "default": 1,
      "description": "force the filter to extend the last frame of secondary streams until the end of the primary stream.",
      "name": "repeatlast",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [],
      "choices": [
        {
          "help": "Frame from secondary input with the nearest lower or equal timestamp to the primary input frame.",
          "name": "default",
          "value": "default"
        },
        {
          "help": "Frame from secondary input with the absolute nearest timestamp to the primary input frame.",
          "name": "nearest",
          "value": "nearest"
        }
      ],
      "default": "default",
      "description": "How strictly to sync streams based on secondary input timestamps; it accepts one of the following values:",
      "name": "ts_sync_mode",
      "required": false,
      "typing": "str"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#libvmaf"
}
