{
  "description": "### 11.146 libvmaf_cuda\n\nThis is the CUDA variant of the libvmaf filter. It only accepts CUDA frames.\n\nIt requires Netflix\u2019s vmaf library (libvmaf) as a pre-requisite. After\ninstalling the library it can be enabled using: `./configure --enable-nonfree\n--enable-ffnvcodec --enable-libvmaf`.\n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_libvmaf_cuda",
  "input_stream_typings": [
    {
      "name": "main",
      "type": "AVMEDIA_TYPE_VIDEO"
    },
    {
      "name": "reference",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "is_support_framesync": true,
  "is_support_timeline": false,
  "name": "libvmaf_cuda",
  "options": [
    {
      "alias": [
        "log_path"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "Set the file path to be used to write log.",
      "name": "log_path",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "log_fmt"
      ],
      "choices": [],
      "default": "xml",
      "description": "Set the format of the log (csv, json, xml, or sub).",
      "name": "log_fmt",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "pool"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "Set the pool method to be used for computing vmaf.",
      "name": "pool",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "n_threads"
      ],
      "choices": [],
      "default": 0,
      "description": "Set number of threads to be used when computing vmaf.",
      "name": "n_threads",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "n_subsample"
      ],
      "choices": [],
      "default": 1,
      "description": "Set interval for frame subsampling used when computing vmaf.",
      "name": "n_subsample",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "model"
      ],
      "choices": [],
      "default": "version=vmaf_v0.6.1",
      "description": "Set the model to be used for computing vmaf.",
      "name": "model",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "feature"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "Set the feature to be used for computing vmaf.",
      "name": "feature",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [],
      "choices": [
        {
          "help": "Repeat the last frame.",
          "name": "repeat",
          "value": "repeat"
        },
        {
          "help": "End both streams.",
          "name": "endall",
          "value": "endall"
        },
        {
          "help": "Pass the main input through.",
          "name": "pass",
          "value": "pass"
        }
      ],
      "default": "repeat",
      "description": "The action to take when EOF is encountered on the secondary input; it accepts one of the following values",
      "name": "eof_action",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [],
      "choices": [],
      "default": 0,
      "description": "Force the output to terminate when the shortest input terminates.",
      "name": "shortest",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [],
      "choices": [],
      "default": 1,
      "description": "force the filter to extend the last frame of secondary streams until the end of the primary stream.",
      "name": "repeatlast",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [],
      "choices": [
        {
          "help": "Frame from secondary input with the nearest lower or equal timestamp to the primary input frame.",
          "name": "default",
          "value": "default"
        },
        {
          "help": "Frame from secondary input with the absolute nearest timestamp to the primary input frame.",
          "name": "nearest",
          "value": "nearest"
        }
      ],
      "default": "default",
      "description": "How strictly to sync streams based on secondary input timestamps; it accepts one of the following values:",
      "name": "ts_sync_mode",
      "required": false,
      "typing": "str"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#libvmaf_005fcuda"
}
