{
  "description": "8.67 atrim\nTrim the input so that the output contains one continuous subpart of the input.\n\nIt accepts the following parameters:\n\nstart, end, and duration are expressed as time\nduration specifications; see\n(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual.\n\nNote that the first two sets of the start/end options and the duration\noption look at the frame timestamp, while the _sample options simply count the\nsamples that pass through the filter. So start/end_pts and start/end_sample will\ngive different results when the timestamps are wrong, inexact or do not start at\nzero. Also note that this filter does not modify the timestamps. If you wish\nto have the output timestamps start at zero, insert the asetpts filter after the\natrim filter.\n\nIf multiple start or end options are set, this filter tries to be greedy and\nkeep all samples that match at least one of the specified constraints. To keep\nonly the part that matches all the constraints at once, chain multiple atrim\nfilters.\n\nThe defaults are such that all the input is kept. So it is possible to set e.g.\njust the end values to keep everything before the specified time.\n\nExamples:\n\n Drop everything except the second minute of input:\n\nffmpeg -i INPUT -af atrim=60:120\n\n Keep only the first 1000 samples:\n\nffmpeg -i INPUT -af atrim=end_sample=1000",
  "filter_type": "af",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_af_atrim",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_AUDIO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "atrim",
  "options": [
    {
      "alias": [
        "start",
        "starti"
      ],
      "default": "9223372036854775807LL",
      "description": null,
      "name": "start",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "end",
        "endi"
      ],
      "default": "9223372036854775807LL",
      "description": null,
      "name": "end",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "start_pts"
      ],
      "default": "((int64_t)(0x8000000000000000ULL))",
      "description": null,
      "name": "start_pts",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "end_pts"
      ],
      "default": "((int64_t)(0x8000000000000000ULL))",
      "description": null,
      "name": "end_pts",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "duration",
        "durationi"
      ],
      "default": 0,
      "description": null,
      "name": "duration",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "start_sample"
      ],
      "default": -1,
      "description": null,
      "name": "start_sample",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "end_sample"
      ],
      "default": "9223372036854775807LL",
      "description": null,
      "name": "end_sample",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_AUDIO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#atrim"
}
