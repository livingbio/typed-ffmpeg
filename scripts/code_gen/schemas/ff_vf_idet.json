{
  "description": "### 11.135 idet\n\nDetect video interlacing type.\n\n\nThis filter tries to detect if the input frames are interlaced, progressive,\ntop or bottom field first. It will also try to detect fields that are\nrepeated between adjacent frames (a sign of telecine).\n\n\nSingle frame detection considers only immediately adjacent frames when classifying each frame.\nMultiple frame detection incorporates the classification history of previous frames.\n\n\nThe filter will log these metadata values:\n\n\n- **`single.current_frame`**\n  - Detected type of current frame using single-frame detection. One of:\n\u201ctff\u201d (top field first), \u201cbff\u201d (bottom field first),\n\u201cprogressive\u201d, or \u201cundetermined\u201d\n- **`single.tff`**\n  - Cumulative number of frames detected as top field first using single-frame detection.\n- **`multiple.tff`**\n  - Cumulative number of frames detected as top field first using multiple-frame detection.\n- **`single.bff`**\n  - Cumulative number of frames detected as bottom field first using single-frame detection.\n- **`multiple.current_frame`**\n  - Detected type of current frame using multiple-frame detection. One of:\n\u201ctff\u201d (top field first), \u201cbff\u201d (bottom field first),\n\u201cprogressive\u201d, or \u201cundetermined\u201d\n- **`multiple.bff`**\n  - Cumulative number of frames detected as bottom field first using multiple-frame detection.\n- **`single.progressive`**\n  - Cumulative number of frames detected as progressive using single-frame detection.\n- **`multiple.progressive`**\n  - Cumulative number of frames detected as progressive using multiple-frame detection.\n- **`single.undetermined`**\n  - Cumulative number of frames that could not be classified using single-frame detection.\n- **`multiple.undetermined`**\n  - Cumulative number of frames that could not be classified using multiple-frame detection.\n- **`repeated.current_frame`**\n  - Which field in the current frame is repeated from the last. One of \u201cneither\u201d, \u201ctop\u201d, or \u201cbottom\u201d.\n- **`repeated.neither`**\n  - Cumulative number of frames with no repeated field.\n- **`repeated.top`**\n  - Cumulative number of frames with the top field repeated from the previous frame\u2019s top field.\n- **`repeated.bottom`**\n  - Cumulative number of frames with the bottom field repeated from the previous frame\u2019s bottom field.\nDetected type of current frame using single-frame detection. One of:\n\u201ctff\u201d (top field first), \u201cbff\u201d (bottom field first),\n\u201cprogressive\u201d, or \u201cundetermined\u201d\n\n\nCumulative number of frames detected as top field first using single-frame detection.\n\n\nCumulative number of frames detected as top field first using multiple-frame detection.\n\n\nCumulative number of frames detected as bottom field first using single-frame detection.\n\n\nDetected type of current frame using multiple-frame detection. One of:\n\u201ctff\u201d (top field first), \u201cbff\u201d (bottom field first),\n\u201cprogressive\u201d, or \u201cundetermined\u201d\n\n\nCumulative number of frames detected as bottom field first using multiple-frame detection.\n\n\nCumulative number of frames detected as progressive using single-frame detection.\n\n\nCumulative number of frames detected as progressive using multiple-frame detection.\n\n\nCumulative number of frames that could not be classified using single-frame detection.\n\n\nCumulative number of frames that could not be classified using multiple-frame detection.\n\n\nWhich field in the current frame is repeated from the last. One of \u201cneither\u201d, \u201ctop\u201d, or \u201cbottom\u201d.\n\n\nCumulative number of frames with no repeated field.\n\n\nCumulative number of frames with the top field repeated from the previous frame\u2019s top field.\n\n\nCumulative number of frames with the bottom field repeated from the previous frame\u2019s bottom field.\n\n\nThe filter accepts the following options:\n\n\n- **`intl_thres`**\n  - Set interlacing threshold.\n- **`prog_thres`**\n  - Set progressive threshold.\n- **`rep_thres`**\n  - Threshold for repeated field detection.\n- **`half_life`**\n  - Number of frames after which a given frame\u2019s contribution to the\nstatistics is halved (i.e., it contributes only 0.5 to its\nclassification). The default of 0 means that all frames seen are given\nfull weight of 1.0 forever.\n- **`analyze_interlaced_flag`**\n  - When this is not 0 then idet will use the specified number of frames to determine\nif the interlaced flag is accurate, it will not count undetermined frames.\nIf the flag is found to be accurate it will be used without any further\ncomputations, if it is found to be inaccurate it will be cleared without any\nfurther computations. This allows inserting the idet filter as a low computational\nmethod to clean up the interlaced flag\nSet interlacing threshold.\n\n\nSet progressive threshold.\n\n\nThreshold for repeated field detection.\n\n\nNumber of frames after which a given frame\u2019s contribution to the\nstatistics is halved (i.e., it contributes only 0.5 to its\nclassification). The default of 0 means that all frames seen are given\nfull weight of 1.0 forever.\n\n\nWhen this is not 0 then idet will use the specified number of frames to determine\nif the interlaced flag is accurate, it will not count undetermined frames.\nIf the flag is found to be accurate it will be used without any further\ncomputations, if it is found to be inaccurate it will be cleared without any\nfurther computations. This allows inserting the idet filter as a low computational\nmethod to clean up the interlaced flag\n\n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_idet",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "idet",
  "options": [
    {
      "alias": [
        "intl_thres"
      ],
      "choices": [],
      "default": 1.04,
      "description": "<dd><p>Set interlacing threshold.\n</p></dd>",
      "name": "intl_thres",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "prog_thres"
      ],
      "choices": [],
      "default": 1.5,
      "description": "<dd><p>Set progressive threshold.\n</p></dd>",
      "name": "prog_thres",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "rep_thres"
      ],
      "choices": [],
      "default": 3.0,
      "description": "<dd><p>Threshold for repeated field detection.\n</p></dd>",
      "name": "rep_thres",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "half_life"
      ],
      "choices": [],
      "default": 0.0,
      "description": "<dd><p>Number of frames after which a given frame\u2019s contribution to the\nstatistics is halved (i.e., it contributes only 0.5 to its\nclassification). The default of 0 means that all frames seen are given\nfull weight of 1.0 forever.\n</p></dd>",
      "name": "half_life",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "analyze_interlaced_flag"
      ],
      "choices": [],
      "default": 0,
      "description": "<dd><p>When this is not 0 then idet will use the specified number of frames to determine\nif the interlaced flag is accurate, it will not count undetermined frames.\nIf the flag is found to be accurate it will be used without any further\ncomputations, if it is found to be inaccurate it will be cleared without any\nfurther computations. This allows inserting the idet filter as a low computational\nmethod to clean up the interlaced flag\n</p></dd>",
      "name": "analyze_interlaced_flag",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#idet"
}
