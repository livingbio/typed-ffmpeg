{
  "description": "19.3 movie\nRead audio and/or video stream(s) from a movie container.\n\nIt accepts the following parameters:\n\n\nIt allows overlaying a second video on top of the main input of\na filtergraph, as shown in this graph:\n\ninput -----------> deltapts0 --> overlay --> output\n                                    ^\n                                    |\nmovie --> scale--> deltapts1 -------+",
  "filter_type": "avsrc",
  "formula_input_typings": "[StreamType.video] * len(streams.split('+'))",
  "formula_output_typings": "[StreamType.video] * len(streams.split('+'))",
  "id": "ff_avsrc_movie",
  "input_stream_typings": [],
  "is_input_dynamic": false,
  "is_output_dynamic": true,
  "name": "movie",
  "options": [
    {
      "alias": [
        "filename"
      ],
      "default": null,
      "description": "<dd><p>The name of the resource to read (not necessarily a file; it can also be a\ndevice or a stream accessed through some protocol).\n</p>\n</dd>",
      "name": "filename",
      "required": true,
      "typing": "str"
    },
    {
      "alias": [
        "format_name",
        "f"
      ],
      "default": null,
      "description": "<dd><p>Specifies the format assumed for the movie to read, and can be either\nthe name of a container or an input device. If not specified, the\nformat is guessed from <var>movie_name</var> or by probing.\n</p>\n</dd>",
      "name": "format_name",
      "required": true,
      "typing": "str"
    },
    {
      "alias": [
        "stream_index",
        "si"
      ],
      "default": -1,
      "description": "<dd><p>Specifies the index of the video stream to read. If the value is -1,\nthe most suitable video stream will be automatically selected. The default\nvalue is \"-1\". Deprecated. If the filter is called \"amovie\", it will select\naudio instead of video.\n</p>\n</dd>",
      "name": "stream_index",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "seek_point",
        "sp"
      ],
      "default": 0.0,
      "description": "<dd><p>Specifies the seek point in seconds. The frames will be output\nstarting from this seek point. The parameter is evaluated with\n<code>av_strtod</code>, so the numerical value may be suffixed by an IS\npostfix. The default value is \"0\".\n</p>\n</dd>",
      "name": "seek_point",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "streams",
        "s"
      ],
      "default": "0",
      "description": "<dd><p>Specifies the streams to read. Several streams can be specified,\nseparated by \"+\". The source will then have as many outputs, in the\nsame order. The syntax is explained in the <a href=\"ffmpeg.html#Stream-specifiers\">(ffmpeg)\"Stream specifiers\"\nsection in the ffmpeg manual</a>. Two special names, \"dv\" and \"da\" specify\nrespectively the default (best suited) video and audio stream. Default\nis \"dv\", or \"da\" if the filter is called as \"amovie\".\n</p>\n</dd>",
      "name": "streams",
      "required": true,
      "typing": "str"
    },
    {
      "alias": [
        "loop"
      ],
      "default": 1,
      "description": "<dd><p>Specifies how many times to read the stream in sequence.\nIf the value is 0, the stream will be looped infinitely.\nDefault value is \"1\".\n</p>\n<p>Note that when the movie is looped the source timestamps are not\nchanged, so it will generate non monotonically increasing timestamps.\n</p>\n</dd>",
      "name": "loop",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "discontinuity"
      ],
      "default": 0,
      "description": "<dd><p>Specifies the time difference between frames above which the point is\nconsidered a timestamp discontinuity which is removed by adjusting the later\ntimestamps.\n</p>\n</dd>",
      "name": "discontinuity",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "dec_threads"
      ],
      "default": 0,
      "description": "<dd><p>Specifies the number of threads for decoding\n</p>\n</dd>",
      "name": "dec_threads",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "format_opts"
      ],
      "default": "((void*)0)",
      "description": "<dd><p>Specify format options for the opened file. Format options can be specified\nas a list of <var>key</var>=<var>value</var> pairs separated by \u2019:\u2019. The following example\nshows how to add protocol_whitelist and protocol_blacklist options:\n</p><div class=\"example\">\n<pre class=\"example\">ffplay -f lavfi\n\"movie=filename='1.sdp':format_opts='protocol_whitelist=file,rtp,udp\\:protocol_blacklist=http'\"\n</pre></div>\n</dd>",
      "name": "format_opts",
      "required": true,
      "typing": "str"
    }
  ],
  "output_stream_typings": [],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#movie"
}
