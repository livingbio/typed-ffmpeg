{
  "description": "11.101 fps\nConvert the video to specified constant frame rate by duplicating or dropping\nframes as necessary.\n\nIt accepts the following parameters:\n\nAlternatively, the options can be specified as a flat string:\nfps[:start_time[:round]].\n\nSee also the setpts filter.",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_fps",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "fps",
  "options": [
    {
      "alias": [
        "fps"
      ],
      "default": "25",
      "description": "<dd><p>The desired output frame rate. It accepts expressions containing the following\nconstants:\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>source_fps</samp>\u2019</dt>\n<dd><p>The input\u2019s frame rate\n</p>\n</dd>\n<dt>\u2018<samp>ntsc</samp>\u2019</dt>\n<dd><p>NTSC frame rate of <code>30000/1001</code>\n</p>\n</dd>\n<dt>\u2018<samp>pal</samp>\u2019</dt>\n<dd><p>PAL frame rate of <code>25.0</code>\n</p>\n</dd>\n<dt>\u2018<samp>film</samp>\u2019</dt>\n<dd><p>Film frame rate of <code>24.0</code>\n</p>\n</dd>\n<dt>\u2018<samp>ntsc_film</samp>\u2019</dt>\n<dd><p>NTSC-film frame rate of <code>24000/1001</code>\n</p></dd>\n</dl>\n<p>The default is <code>25</code>.\n</p>\n</dd>",
      "name": "fps",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "start_time"
      ],
      "default": 1.7976931348623157e+308,
      "description": "<dd><p>Assume the first PTS should be the given value, in seconds. This allows for\npadding/trimming at the start of stream. By default, no assumption is made\nabout the first frame\u2019s expected PTS, so no padding or trimming is done.\nFor example, this could be set to 0 to pad the beginning with duplicates of\nthe first frame if a video stream starts after the audio stream or to trim any\nframes with a negative PTS.\n</p>\n</dd>",
      "name": "start_time",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "round"
      ],
      "default": "AV_ROUND_NEAR_INF",
      "description": "<dd><p>Timestamp (PTS) rounding method.\n</p>\n<p>Possible values are:\n</p><dl compact=\"compact\">\n<dt><samp>zero</samp></dt>\n<dd><p>round towards 0\n</p></dd>\n<dt><samp>inf</samp></dt>\n<dd><p>round away from 0\n</p></dd>\n<dt><samp>down</samp></dt>\n<dd><p>round towards -infinity\n</p></dd>\n<dt><samp>up</samp></dt>\n<dd><p>round towards +infinity\n</p></dd>\n<dt><samp>near</samp></dt>\n<dd><p>round to nearest\n</p></dd>\n</dl>\n<p>The default is <code>near</code>.\n</p>\n</dd>",
      "name": "round",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "eof_action"
      ],
      "default": "EOF_ACTION_ROUND",
      "description": "<dd><p>Action performed when reading the last frame.\n</p>\n<p>Possible values are:\n</p><dl compact=\"compact\">\n<dt><samp>round</samp></dt>\n<dd><p>Use same timestamp rounding method as used for other frames.\n</p></dd>\n<dt><samp>pass</samp></dt>\n<dd><p>Pass through last frame if input duration has not been reached yet.\n</p></dd>\n</dl>\n<p>The default is <code>round</code>.\n</p>\n</dd>",
      "name": "eof_action",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#fps"
}
