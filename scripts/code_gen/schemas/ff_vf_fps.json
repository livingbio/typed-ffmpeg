{
  "description": "### 11.101 fps\n\nConvert the video to specified constant frame rate by duplicating or dropping\nframes as necessary.\n\n\nIt accepts the following parameters:\n\n\n- **`fps`**\n  - The desired output frame rate. It accepts expressions containing the following\nconstants:\n\u2018\nsource_fps\n\u2019\nThe input\u2019s frame rate\n\u2018\nntsc\n\u2019\nNTSC frame rate of\n30000/1001\n\u2018\npal\n\u2019\nPAL frame rate of\n25.0\n\u2018\nfilm\n\u2019\nFilm frame rate of\n24.0\n\u2018\nntsc_film\n\u2019\nNTSC-film frame rate of\n24000/1001\nThe default is\n25\n.\n- **`start_time`**\n  - Assume the first PTS should be the given value, in seconds. This allows for\npadding/trimming at the start of stream. By default, no assumption is made\nabout the first frame\u2019s expected PTS, so no padding or trimming is done.\nFor example, this could be set to 0 to pad the beginning with duplicates of\nthe first frame if a video stream starts after the audio stream or to trim any\nframes with a negative PTS.\n- **`round`**\n  - Timestamp (PTS) rounding method.\nPossible values are:\nzero\nround towards 0\ninf\nround away from 0\ndown\nround towards -infinity\nup\nround towards +infinity\nnear\nround to nearest\nThe default is\nnear\n.\n- **`eof_action`**\n  - Action performed when reading the last frame.\nPossible values are:\nround\nUse same timestamp rounding method as used for other frames.\npass\nPass through last frame if input duration has not been reached yet.\nThe default is\nround\n.\nThe desired output frame rate. It accepts expressions containing the following\nconstants:\n\n\n- **`\u2018source_fps\u2019`**\n  - The input\u2019s frame rate\n- **`\u2018ntsc\u2019`**\n  - NTSC frame rate of\n30000/1001\n- **`\u2018pal\u2019`**\n  - PAL frame rate of\n25.0\n- **`\u2018film\u2019`**\n  - Film frame rate of\n24.0\n- **`\u2018ntsc_film\u2019`**\n  - NTSC-film frame rate of\n24000/1001\nThe input\u2019s frame rate\n\n\nNTSC frame rate of 30000/1001\n\n\nPAL frame rate of 25.0\n\n\nFilm frame rate of 24.0\n\n\nNTSC-film frame rate of 24000/1001\n\n\nThe default is 25.\n\n\nAssume the first PTS should be the given value, in seconds. This allows for\npadding/trimming at the start of stream. By default, no assumption is made\nabout the first frame\u2019s expected PTS, so no padding or trimming is done.\nFor example, this could be set to 0 to pad the beginning with duplicates of\nthe first frame if a video stream starts after the audio stream or to trim any\nframes with a negative PTS.\n\n\nTimestamp (PTS) rounding method.\n\n\nPossible values are:\n\n\n- **`zero`**\n  - round towards 0\n- **`inf`**\n  - round away from 0\n- **`down`**\n  - round towards -infinity\n- **`up`**\n  - round towards +infinity\n- **`near`**\n  - round to nearest\nround towards 0\n\n\nround away from 0\n\n\nround towards -infinity\n\n\nround towards +infinity\n\n\nround to nearest\n\n\nThe default is near.\n\n\nAction performed when reading the last frame.\n\n\nPossible values are:\n\n\n- **`round`**\n  - Use same timestamp rounding method as used for other frames.\n- **`pass`**\n  - Pass through last frame if input duration has not been reached yet.\nUse same timestamp rounding method as used for other frames.\n\n\nPass through last frame if input duration has not been reached yet.\n\n\nThe default is round.\n\n\nAlternatively, the options can be specified as a flat string:\nfps[:start_time[:round]].\n\n\nSee also the setpts filter.\n\n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_fps",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "fps",
  "options": [
    {
      "alias": [
        "fps"
      ],
      "choices": [],
      "default": "25",
      "description": "<dd><p>The desired output frame rate. It accepts expressions containing the following\nconstants:\n</p>\n<dl compact=\"compact\">\n<dt>\u2018<samp>source_fps</samp>\u2019</dt>\n<dd><p>The input\u2019s frame rate\n</p>\n</dd>\n<dt>\u2018<samp>ntsc</samp>\u2019</dt>\n<dd><p>NTSC frame rate of <code>30000/1001</code>\n</p>\n</dd>\n<dt>\u2018<samp>pal</samp>\u2019</dt>\n<dd><p>PAL frame rate of <code>25.0</code>\n</p>\n</dd>\n<dt>\u2018<samp>film</samp>\u2019</dt>\n<dd><p>Film frame rate of <code>24.0</code>\n</p>\n</dd>\n<dt>\u2018<samp>ntsc_film</samp>\u2019</dt>\n<dd><p>NTSC-film frame rate of <code>24000/1001</code>\n</p></dd>\n</dl>\n<p>The default is <code>25</code>.\n</p>\n</dd>",
      "name": "fps",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "start_time"
      ],
      "choices": [],
      "default": 1.7976931348623157e+308,
      "description": "<dd><p>Assume the first PTS should be the given value, in seconds. This allows for\npadding/trimming at the start of stream. By default, no assumption is made\nabout the first frame\u2019s expected PTS, so no padding or trimming is done.\nFor example, this could be set to 0 to pad the beginning with duplicates of\nthe first frame if a video stream starts after the audio stream or to trim any\nframes with a negative PTS.\n</p>\n</dd>",
      "name": "start_time",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "round"
      ],
      "choices": [
        {
          "help": "round towards 0",
          "name": "zero",
          "value": "AV_ROUND_ZERO"
        },
        {
          "help": "round away from 0",
          "name": "inf",
          "value": "AV_ROUND_INF"
        },
        {
          "help": "round towards -infty",
          "name": "down",
          "value": "AV_ROUND_DOWN"
        },
        {
          "help": "round towards +infty",
          "name": "up",
          "value": "AV_ROUND_UP"
        },
        {
          "help": "round to nearest",
          "name": "near",
          "value": "AV_ROUND_NEAR_INF"
        }
      ],
      "default": "AV_ROUND_NEAR_INF",
      "description": "<dd><p>Timestamp (PTS) rounding method.\n</p>\n<p>Possible values are:\n</p><dl compact=\"compact\">\n<dt><samp>zero</samp></dt>\n<dd><p>round towards 0\n</p></dd>\n<dt><samp>inf</samp></dt>\n<dd><p>round away from 0\n</p></dd>\n<dt><samp>down</samp></dt>\n<dd><p>round towards -infinity\n</p></dd>\n<dt><samp>up</samp></dt>\n<dd><p>round towards +infinity\n</p></dd>\n<dt><samp>near</samp></dt>\n<dd><p>round to nearest\n</p></dd>\n</dl>\n<p>The default is <code>near</code>.\n</p>\n</dd>",
      "name": "round",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "eof_action"
      ],
      "choices": [
        {
          "help": "round similar to other frames",
          "name": "round",
          "value": "EOF_ACTION_ROUND"
        },
        {
          "help": "pass through last frame",
          "name": "pass",
          "value": "EOF_ACTION_PASS"
        }
      ],
      "default": "EOF_ACTION_ROUND",
      "description": "<dd><p>Action performed when reading the last frame.\n</p>\n<p>Possible values are:\n</p><dl compact=\"compact\">\n<dt><samp>round</samp></dt>\n<dd><p>Use same timestamp rounding method as used for other frames.\n</p></dd>\n<dt><samp>pass</samp></dt>\n<dd><p>Pass through last frame if input duration has not been reached yet.\n</p></dd>\n</dl>\n<p>The default is <code>round</code>.\n</p>\n</dd>",
      "name": "eof_action",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#fps"
}
