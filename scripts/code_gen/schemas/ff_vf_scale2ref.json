{
  "description": "### 11.218 scale2ref\n\nScale (resize) the input video, based on a reference video.\n\nSee the scale filter for available options, scale2ref supports the same but\nuses the reference video instead of the main input as basis. scale2ref also\nsupports the following additional constants for the w and h options:\n\n**main_w**\n\n**main_h**\n\n    The main input video\u2019s width and height \n\n**main_a**\n\n    The same as main_w / main_h \n\n**main_sar**\n\n    The main input video\u2019s sample aspect ratio \n\n**main_dar, mdar**\n\n    The main input video\u2019s display aspect ratio. Calculated from (main_w / main_h) * main_sar. \n\n**main_hsub**\n\n**main_vsub**\n\n    The main input video\u2019s horizontal and vertical chroma subsample values. For example for the pixel format \"yuv422p\" hsub is 2 and vsub is 1. \n\n**main_n**\n\n    The (sequential) number of the main input frame, starting from 0. Only available with eval=frame. \n\n**main_t**\n\n    The presentation timestamp of the main input frame, expressed as a number of seconds. Only available with eval=frame. \n\n**main_pos**\n\n    The position (byte offset) of the frame in the main input stream, or NaN if this information is unavailable and/or meaningless (for example in case of synthetic video). Only available with eval=frame. \n\n",
  "filter_type": "vf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vf_scale2ref",
  "input_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    },
    {
      "name": "ref",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "name": "scale2ref",
  "options": [
    {
      "alias": [
        "w",
        "width"
      ],
      "choices": [],
      "default": null,
      "description": "Output video width",
      "name": "w",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "h",
        "height"
      ],
      "choices": [],
      "default": null,
      "description": "Output video height",
      "name": "h",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "flags"
      ],
      "choices": [],
      "default": "",
      "description": "Flags to pass to libswscale",
      "name": "flags",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "interl"
      ],
      "choices": [],
      "default": 0,
      "description": "set interlacing",
      "name": "interl",
      "required": false,
      "typing": "bool"
    },
    {
      "alias": [
        "size",
        "s"
      ],
      "choices": [],
      "default": "((void*)0)",
      "description": "set video size",
      "name": "size",
      "required": false,
      "typing": "str"
    },
    {
      "alias": [
        "in_color_matrix"
      ],
      "choices": [
        {
          "help": "((void*)0)",
          "name": "auto",
          "value": -1
        },
        {
          "help": "((void*)0)",
          "name": "bt601",
          "value": "AVCOL_SPC_BT470BG"
        },
        {
          "help": "((void*)0)",
          "name": "bt470",
          "value": "AVCOL_SPC_BT470BG"
        },
        {
          "help": "((void*)0)",
          "name": "smpte170m",
          "value": "AVCOL_SPC_BT470BG"
        },
        {
          "help": "((void*)0)",
          "name": "bt709",
          "value": "AVCOL_SPC_BT709"
        },
        {
          "help": "((void*)0)",
          "name": "fcc",
          "value": "AVCOL_SPC_FCC"
        },
        {
          "help": "((void*)0)",
          "name": "smpte240m",
          "value": "AVCOL_SPC_SMPTE240M"
        },
        {
          "help": "((void*)0)",
          "name": "bt2020",
          "value": "AVCOL_SPC_BT2020_NCL"
        }
      ],
      "default": -1,
      "description": "set input YCbCr type",
      "name": "in_color_matrix",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "out_color_matrix"
      ],
      "choices": [
        {
          "help": "((void*)0)",
          "name": "auto",
          "value": -1
        },
        {
          "help": "((void*)0)",
          "name": "bt601",
          "value": "AVCOL_SPC_BT470BG"
        },
        {
          "help": "((void*)0)",
          "name": "bt470",
          "value": "AVCOL_SPC_BT470BG"
        },
        {
          "help": "((void*)0)",
          "name": "smpte170m",
          "value": "AVCOL_SPC_BT470BG"
        },
        {
          "help": "((void*)0)",
          "name": "bt709",
          "value": "AVCOL_SPC_BT709"
        },
        {
          "help": "((void*)0)",
          "name": "fcc",
          "value": "AVCOL_SPC_FCC"
        },
        {
          "help": "((void*)0)",
          "name": "smpte240m",
          "value": "AVCOL_SPC_SMPTE240M"
        },
        {
          "help": "((void*)0)",
          "name": "bt2020",
          "value": "AVCOL_SPC_BT2020_NCL"
        }
      ],
      "default": "AVCOL_SPC_UNSPECIFIED",
      "description": "set output YCbCr type",
      "name": "out_color_matrix",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "in_range"
      ],
      "choices": [
        {
          "help": "((void*)0)",
          "name": "auto",
          "value": "AVCOL_RANGE_UNSPECIFIED"
        },
        {
          "help": "((void*)0)",
          "name": "unknown",
          "value": "AVCOL_RANGE_UNSPECIFIED"
        },
        {
          "help": "((void*)0)",
          "name": "full",
          "value": "AVCOL_RANGE_JPEG"
        },
        {
          "help": "((void*)0)",
          "name": "limited",
          "value": "AVCOL_RANGE_MPEG"
        },
        {
          "help": "((void*)0)",
          "name": "jpeg",
          "value": "AVCOL_RANGE_JPEG"
        },
        {
          "help": "((void*)0)",
          "name": "mpeg",
          "value": "AVCOL_RANGE_MPEG"
        },
        {
          "help": "((void*)0)",
          "name": "tv",
          "value": "AVCOL_RANGE_MPEG"
        },
        {
          "help": "((void*)0)",
          "name": "pc",
          "value": "AVCOL_RANGE_JPEG"
        }
      ],
      "default": "AVCOL_RANGE_UNSPECIFIED",
      "description": "set input color range",
      "name": "in_range",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "out_range"
      ],
      "choices": [
        {
          "help": "((void*)0)",
          "name": "auto",
          "value": "AVCOL_RANGE_UNSPECIFIED"
        },
        {
          "help": "((void*)0)",
          "name": "unknown",
          "value": "AVCOL_RANGE_UNSPECIFIED"
        },
        {
          "help": "((void*)0)",
          "name": "full",
          "value": "AVCOL_RANGE_JPEG"
        },
        {
          "help": "((void*)0)",
          "name": "limited",
          "value": "AVCOL_RANGE_MPEG"
        },
        {
          "help": "((void*)0)",
          "name": "jpeg",
          "value": "AVCOL_RANGE_JPEG"
        },
        {
          "help": "((void*)0)",
          "name": "mpeg",
          "value": "AVCOL_RANGE_MPEG"
        },
        {
          "help": "((void*)0)",
          "name": "tv",
          "value": "AVCOL_RANGE_MPEG"
        },
        {
          "help": "((void*)0)",
          "name": "pc",
          "value": "AVCOL_RANGE_JPEG"
        }
      ],
      "default": "AVCOL_RANGE_UNSPECIFIED",
      "description": "set output color range",
      "name": "out_range",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "in_v_chr_pos"
      ],
      "choices": [],
      "default": -513,
      "description": "input vertical chroma position in luma grid/256",
      "name": "in_v_chr_pos",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "in_h_chr_pos"
      ],
      "choices": [],
      "default": -513,
      "description": "input horizontal chroma position in luma grid/256",
      "name": "in_h_chr_pos",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "out_v_chr_pos"
      ],
      "choices": [],
      "default": -513,
      "description": "output vertical chroma position in luma grid/256",
      "name": "out_v_chr_pos",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "out_h_chr_pos"
      ],
      "choices": [],
      "default": -513,
      "description": "output horizontal chroma position in luma grid/256",
      "name": "out_h_chr_pos",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "force_original_aspect_ratio"
      ],
      "choices": [
        {
          "help": "((void*)0)",
          "name": "disable",
          "value": 0
        },
        {
          "help": "((void*)0)",
          "name": "decrease",
          "value": 1
        },
        {
          "help": "((void*)0)",
          "name": "increase",
          "value": 2
        }
      ],
      "default": 0,
      "description": "decrease or increase w/h if necessary to keep the original AR",
      "name": "force_original_aspect_ratio",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "force_divisible_by"
      ],
      "choices": [],
      "default": 1,
      "description": "enforce that the output resolution is divisible by a defined integer when force_original_aspect_ratio is used",
      "name": "force_divisible_by",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "param0"
      ],
      "choices": [],
      "default": 1.7976931348623157e+308,
      "description": "Scaler param 0",
      "name": "param0",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "param1"
      ],
      "choices": [],
      "default": 1.7976931348623157e+308,
      "description": "Scaler param 1",
      "name": "param1",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "eval"
      ],
      "choices": [],
      "default": "EVAL_MODE_INIT",
      "description": "specify when to evaluate expressions",
      "name": "eval",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_VIDEO"
    },
    {
      "name": "ref",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#scale2ref"
}
