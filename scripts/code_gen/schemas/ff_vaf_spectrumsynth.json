{
  "description": "### 18.32 spectrumsynth\n\nSynthesize audio from 2 input video spectrums, first input stream represents\nmagnitude across time and second represents phase across time. The filter will\ntransform from frequency domain as displayed in videos back to time domain as\npresented in audio output.\n\nThis filter is primarily created for reversing processed showspectrum filter\noutputs, but can synthesize sound from other spectrograms too. But in such\ncase results are going to be poor if the phase data is not available, because\nin such cases phase data need to be recreated, usually it\u2019s just recreated\nfrom random noise. For best results use gray only output (`channel` color mode\nin showspectrum filter) and `log` scale for magnitude video and `lin` scale\nfor phase video. To produce phase, for 2nd video, use `data` option. Inputs\nvideos should generally use `fullframe` slide mode as that saves resources\nneeded for decoding video.\n\nThe filter accepts the following options:\n\n**sample_rate**\n\n    Specify sample rate of output audio, the sample rate of audio from which spectrum was generated may differ. \n\n**channels**\n\n    Set number of channels represented in input video spectrums. \n\n**scale**\n\n    Set scale which was used when generating magnitude input spectrum. Can be lin or log. Default is log. \n\n**slide**\n\n    Set slide which was used when generating inputs spectrums. Can be replace, scroll, fullframe or rscroll. Default is fullframe. \n\n**win_func**\n\n    Set window function used for resynthesis. \n\n**overlap**\n\n    Set window overlap. In range [0, 1]. Default is 1, which means optimal overlap for selected window function will be picked. \n\n**orientation**\n\n    Set orientation of input videos. Can be vertical or horizontal. Default is vertical. \n\n",
  "filter_type": "vaf",
  "formula_input_typings": null,
  "formula_output_typings": null,
  "id": "ff_vaf_spectrumsynth",
  "input_stream_typings": [
    {
      "name": "magnitude",
      "type": "AVMEDIA_TYPE_VIDEO"
    },
    {
      "name": "phase",
      "type": "AVMEDIA_TYPE_VIDEO"
    }
  ],
  "is_input_dynamic": false,
  "is_output_dynamic": false,
  "is_support_framesync": false,
  "is_support_timeline": false,
  "name": "spectrumsynth",
  "options": [
    {
      "alias": [
        "sample_rate"
      ],
      "choices": [],
      "default": 44100,
      "description": "<dd><p>Specify sample rate of output audio, the sample rate of audio from which\nspectrum was generated may differ.\n</p>\n</dd>",
      "name": "sample_rate",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "channels"
      ],
      "choices": [],
      "default": 1,
      "description": "<dd><p>Set number of channels represented in input video spectrums.\n</p>\n</dd>",
      "name": "channels",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "scale"
      ],
      "choices": [
        {
          "help": "linear",
          "name": "lin",
          "value": "LINEAR"
        },
        {
          "help": "logarithmic",
          "name": "log",
          "value": "LOG"
        }
      ],
      "default": "LOG",
      "description": "<dd><p>Set scale which was used when generating magnitude input spectrum.\nCan be <code>lin</code> or <code>log</code>. Default is <code>log</code>.\n</p>\n</dd>",
      "name": "scale",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "slide"
      ],
      "choices": [
        {
          "help": "consume old columns with new",
          "name": "replace",
          "value": "REPLACE"
        },
        {
          "help": "consume only most right column",
          "name": "scroll",
          "value": "SCROLL"
        },
        {
          "help": "consume full frames",
          "name": "fullframe",
          "value": "FULLFRAME"
        },
        {
          "help": "consume only most left column",
          "name": "rscroll",
          "value": "RSCROLL"
        }
      ],
      "default": "FULLFRAME",
      "description": "<dd><p>Set slide which was used when generating inputs spectrums.\nCan be <code>replace</code>, <code>scroll</code>, <code>fullframe</code> or <code>rscroll</code>.\nDefault is <code>fullframe</code>.\n</p>\n</dd>",
      "name": "slide",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "win_func"
      ],
      "choices": [
        {
          "help": "Rectangular",
          "name": "rect",
          "value": "WFUNC_RECT"
        },
        {
          "help": "Bartlett",
          "name": "bartlett",
          "value": "WFUNC_BARTLETT"
        },
        {
          "help": "Hann",
          "name": "hann",
          "value": "WFUNC_HANNING"
        },
        {
          "help": "Hanning",
          "name": "hanning",
          "value": "WFUNC_HANNING"
        },
        {
          "help": "Hamming",
          "name": "hamming",
          "value": "WFUNC_HAMMING"
        },
        {
          "help": "Blackman",
          "name": "blackman",
          "value": "WFUNC_BLACKMAN"
        },
        {
          "help": "Welch",
          "name": "welch",
          "value": "WFUNC_WELCH"
        },
        {
          "help": "Flat-top",
          "name": "flattop",
          "value": "WFUNC_FLATTOP"
        },
        {
          "help": "Blackman-Harris",
          "name": "bharris",
          "value": "WFUNC_BHARRIS"
        },
        {
          "help": "Blackman-Nuttall",
          "name": "bnuttall",
          "value": "WFUNC_BNUTTALL"
        },
        {
          "help": "Bartlett-Hann",
          "name": "bhann",
          "value": "WFUNC_BHANN"
        },
        {
          "help": "Sine",
          "name": "sine",
          "value": "WFUNC_SINE"
        },
        {
          "help": "Nuttall",
          "name": "nuttall",
          "value": "WFUNC_NUTTALL"
        },
        {
          "help": "Lanczos",
          "name": "lanczos",
          "value": "WFUNC_LANCZOS"
        },
        {
          "help": "Gauss",
          "name": "gauss",
          "value": "WFUNC_GAUSS"
        },
        {
          "help": "Tukey",
          "name": "tukey",
          "value": "WFUNC_TUKEY"
        },
        {
          "help": "Dolph-Chebyshev",
          "name": "dolph",
          "value": "WFUNC_DOLPH"
        },
        {
          "help": "Cauchy",
          "name": "cauchy",
          "value": "WFUNC_CAUCHY"
        },
        {
          "help": "Parzen",
          "name": "parzen",
          "value": "WFUNC_PARZEN"
        },
        {
          "help": "Poisson",
          "name": "poisson",
          "value": "WFUNC_POISSON"
        },
        {
          "help": "Bohman",
          "name": "bohman",
          "value": "WFUNC_BOHMAN"
        },
        {
          "help": "Kaiser",
          "name": "kaiser",
          "value": "WFUNC_KAISER"
        }
      ],
      "default": 0,
      "description": "<dd><p>Set window function used for resynthesis.\n</p>\n</dd>",
      "name": "win_func",
      "required": false,
      "typing": "int"
    },
    {
      "alias": [
        "overlap"
      ],
      "choices": [],
      "default": 1.0,
      "description": "<dd><p>Set window overlap. In range <code>[0, 1]</code>. Default is <code>1</code>,\nwhich means optimal overlap for selected window function will be picked.\n</p>\n</dd>",
      "name": "overlap",
      "required": false,
      "typing": "float"
    },
    {
      "alias": [
        "orientation"
      ],
      "choices": [
        {
          "help": "((void*)0)",
          "name": "vertical",
          "value": "VERTICAL"
        },
        {
          "help": "((void*)0)",
          "name": "horizontal",
          "value": "HORIZONTAL"
        }
      ],
      "default": "VERTICAL",
      "description": "<dd><p>Set orientation of input videos. Can be <code>vertical</code> or <code>horizontal</code>.\nDefault is <code>vertical</code>.\n</p></dd>",
      "name": "orientation",
      "required": false,
      "typing": "int"
    }
  ],
  "output_stream_typings": [
    {
      "name": "default",
      "type": "AVMEDIA_TYPE_AUDIO"
    }
  ],
  "ref": "https://ffmpeg.org/ffmpeg-filters.html#spectrumsynth"
}
