

from typing import Any
import re

from .base import FilterNode, FilterableStream

from .schema import Default, DefaultInt, DefaultStr, DefaultFloat


class AudioStream(FilterableStream):
    
        
    
    def aap(
    
    self,


    
        
        
    
        
        _desired: "AudioStream",
        
    


    *,
    

    
        order: int 

| DefaultStr = DefaultStr(None)

,
    

    
        projection: int 

| DefaultStr = DefaultStr(None)

,
    


    **kwargs: Any
    )-> "AudioStream":
        """
        
description

Parameters:
----------

:param int order: set the filter order
:param int projection: set the filter projection

Ref: None

        """
        filter_node = FilterNode(
            name="aap",
            input_typings=['audio', 'audio'],
            output_typings=['audio'],
            inputs=[
                
            self,


            
                
                
            
                
                _desired,
                
            


            ],
            kwargs={
                
                "order": order,
                
                "projection": projection,
                
            } | kwargs,
        )
        return filter_node.audio(0)


        
    


class VideoStream(FilterableStream):
    
        
    