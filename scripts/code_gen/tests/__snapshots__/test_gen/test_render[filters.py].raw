from typing import Any, Literal

from .nodes.nodes import FilterNode, FilterableStream
from .schema import Default, DefaultInt, DefaultStr, DefaultFloat, StreamType
from .streams.video import VideoStream
from .streams.audio import AudioStream
from .streams.av import AVStream
from .streams.channel_layout import CHANNEL_LAYOUT

import re




    

def aap(
    

    
        
        _input: "AudioStream",
        
    
        
        _desired: "AudioStream",
        
    


    *,
    

    
        order: int 

| DefaultStr = DefaultStr(None)

,
    

    
        projection: int 

| DefaultStr = DefaultStr(None)

,
    


    **kwargs: Any
)-> "AudioStream":
    """
    
description

Parameters:
----------

:param int order: set the filter order
:param int projection: set the filter projection

Ref: None

    """
    filter_node = FilterNode(
        name="aap",
        input_typings=[StreamType.audio, StreamType.audio],
        output_typings=[StreamType.audio],
        inputs=[
            

        
            
            _input,
            
        
            
            _desired,
            
        


        ],
        kwargs={
            
            "order": order,
            
            "projection": projection,
            
        } | kwargs,
    )
    return filter_node.audio(0)


    
